<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Graphics.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac586cf101ca8adcd29b4d106ff6e8a61264722043b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86cf101ca8adcd29b4d106ff6e8a61264722043b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Encapsulates a GDI+ drawing surface.</source>
          <target state="translated">Encapsula uma superfície de desenho GDI+.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> class provides methods for drawing objects to the display device.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> classe fornece métodos para desenhar objetos para o dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> is associated with a specific device context.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> está associado um contexto de dispositivo específico.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>You can obtain a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType&gt;</ph> method on an object that inherits from <ph id="ph3">&lt;xref:System.Windows.Forms.Control?displayProperty=nameWithType&gt;</ph>, or by handling a control's <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType&gt;</ph> event and accessing the <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs.Graphics%2A&gt;</ph> property of the <ph id="ph6">&lt;xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Você pode obter um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto chamando o <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType&gt;</ph> método em um objeto que herda de <ph id="ph3">&lt;xref:System.Windows.Forms.Control?displayProperty=nameWithType&gt;</ph>, ou manipulando um controle <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType&gt;</ph> eventos e acessar o <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs.Graphics%2A&gt;</ph> propriedade o <ph id="ph6">&lt;xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>You can also create a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object from an image by using the <ph id="ph2">&lt;xref:System.Drawing.Graphics.FromImage%2A&gt;</ph> method.</source>
          <target state="translated">Você também pode criar um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto a partir de uma imagem usando o <ph id="ph2">&lt;xref:System.Drawing.Graphics.FromImage%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object, see <bpt id="p1">[</bpt>How to: Create Graphics Objects for Drawing<ept id="p1">](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como criar um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> de objeto, consulte <bpt id="p1">[</bpt>como: criar objetos gráficos para desenho<ept id="p1">](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>You can draw many different shapes and lines by using a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Você pode desenhar muitas formas diferentes e linhas usando um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>For more information about how to draw lines and shapes, see the specific <ph id="ph1">`Draw`</ph><bpt id="p1">*</bpt>GraphicalElement<ept id="p1">*</ept> method for the line or shape you want to draw.</source>
          <target state="translated">Para obter mais informações sobre como desenhar linhas e formas, consulte específico <ph id="ph1">`Draw`</ph> <bpt id="p1">*</bpt>GraphicalElement<ept id="p1">*</ept> método para a linha ou de forma que você deseja desenhar.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>These methods include <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawArc%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Graphics.DrawClosedCurve%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawPolygon%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph>.</source>
          <target state="translated">Esses métodos incluem <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawLine%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawArc%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Graphics.DrawClosedCurve%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawPolygon%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>For more information about how to draw lines and shapes, see <bpt id="p1">[</bpt>Using a Pen to Draw Lines and Shapes<ept id="p1">](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md)</ept> and <bpt id="p2">[</bpt>Using a Brush to Fill Shapes<ept id="p2">](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como desenhar linhas e formas, consulte <bpt id="p1">[</bpt>usando uma caneta para desenhar linhas e formas<ept id="p1">](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md)</ept> e <bpt id="p2">[</bpt>usando um pincel para preencher formas<ept id="p2">](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>You can also draw images and icons by using the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawIcon%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Você também pode desenhar ícones e imagens usando o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawIcon%2A&gt;</ph> métodos, respectivamente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>To perform a bit-block transfer of color data from the screen to the drawing surface of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph>.</source>
          <target state="translated">Para realizar uma transferência de bloco de bits de dados de cor da tela para a superfície de desenho do <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> de objeto, consulte <ph id="ph2">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>For more information about how to draw images with a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object, see <bpt id="p1">[</bpt>Working with Images, Bitmaps, Icons, and Metafiles<ept id="p1">](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como desenhar imagens com um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> de objeto, consulte <bpt id="p1">[</bpt>trabalhando com imagens, Bitmaps, ícones e metarquivos<ept id="p1">](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>In addition, you can manipulate the coordinate system used by the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Além disso, você pode manipular o sistema de coordenadas usado pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>For more information on the coordinate system and how to manipulate it, see <bpt id="p1">[</bpt>Coordinate Systems and Transformations<ept id="p1">](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o sistema de coordenadas e como manipulá-los, consulte <bpt id="p1">[</bpt>sistemas de coordenadas e transformações<ept id="p1">](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>The following code example is designed for use with Windows Forms and requires a <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer um <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> object is named <ph id="ph2">`e`</ph> and is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> objeto é nomeado <ph id="ph2">`e`</ph> e é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>Creates an image from a JPEG file.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>The file is named SampImag.jpg and is located in the folder of the example.</source>
          <target state="translated">O arquivo é denominado SampImag.jpg e está localizado na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>Creates a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Graphics">
          <source>Draws the unscaled image to the screen by using a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Desenha a imagem fora de escala para a tela usando um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Array of bytes that contains the comment.</source>
          <target state="translated">Matriz de bytes que contém o comentário.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Adds a comment to the current <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>.</source>
          <target state="translated">Adiciona um comentário ao <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>This method is valid only if this <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> is associated with a <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>.</source>
          <target state="translated">Este método é válido somente se essa <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> está associado com um <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler, as well as <ph id="ph4">`thisForm`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> for the example.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos, bem como <ph id="ph4">`thisForm`</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> para o exemplo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Creates a temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> for creating the metafile and gets an <ph id="ph2">`hdc`</ph>, a handle to its device context.</source>
          <target state="translated">Cria um temporário <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para criar o metarquivo e obtém um <ph id="ph2">`hdc`</ph>, um identificador para o contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Creates a new metafile using the <ph id="ph1">`hdc`</ph>.</source>
          <target state="translated">Cria um novo metarquivo usando o <ph id="ph1">`hdc`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> for display of the metafile from the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para a exibição de metarquivo do <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Draws a rectangle to the metafile.</source>
          <target state="translated">Desenha um retângulo para o metarquivo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Adds a comment to the metafile.</source>
          <target state="translated">Adiciona um comentário para o metarquivo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Disposes the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> for the metafile-which closes the metafile.</source>
          <target state="translated">Descarta o <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para metarquivo, que fecha o metarquivo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Disposes the metafile.</source>
          <target state="translated">Descarta o metarquivo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Releases the temporary <ph id="ph1">`hdc`</ph>.</source>
          <target state="translated">Libera temporárias <ph id="ph1">`hdc`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Disposes the temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Descarta temporárias <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Creates a second metafile from the previously created file.</source>
          <target state="translated">Cria um segunda meta-arquivo do arquivo criado anteriormente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Draws the metafile to the screen.</source>
          <target state="translated">Desenha o metarquivo na tela.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
          <source>Disposes the metafile.</source>
          <target state="translated">Descarta o metarquivo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Saves a graphics container with the current state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and opens and uses a new graphics container.</source>
          <target state="translated">Salva um contêiner de elementos gráficos com o estado atual deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e abre e usa um novo contêiner de elementos gráficos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Saves a graphics container with the current state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and opens and uses a new graphics container.</source>
          <target state="translated">Salva um contêiner de elementos gráficos com o estado atual deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e abre e usa um novo contêiner de elementos gráficos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> that represents the state of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> at the time of the method call.</source>
          <target state="translated">Esse método retorna um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> que representa o estado deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> no momento da chamada de método.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method to create nested graphics containers.</source>
          <target state="translated">Use esse método com o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método para criar contêineres de elementos gráficos aninhados.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</source>
          <target state="translated">Contêineres de gráficos retêm estado de gráficos, como transformação, região de recorte e propriedades de processamento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, an information block that holds the state of the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> is put on a stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, um bloco de informações que mantém o estado do <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> é colocada em uma pilha.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> that identifies that information block.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> que identifica esse bloco de informações.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>When you pass the identifying object to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the information block is removed from the stack and is used to restore the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call.</source>
          <target state="translated">Quando você passa o objeto de identificação para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o bloco de informações é removido da pilha e é usado para restaurar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Containers can be nested; that is, you can call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method several times before you call the <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method.</source>
          <target state="translated">Contêineres podem ser aninhados. ou seja, você pode chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método várias vezes antes de chamar o <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Each time you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method, an information block is put on the stack, and you receive a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> for the information block.</source>
          <target state="translated">Cada vez que você chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método, um bloco de informações é colocado na pilha, e você recebe um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> para o bloco de informações.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>When you pass one of those objects to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is returned to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call that returned that particular <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</source>
          <target state="translated">Quando você passa um desses objetos para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é retornado para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método retornado que determinado <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>The information block placed on the stack by that <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call is removed from the stack, and all information blocks placed on that stack after that <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call are also removed.</source>
          <target state="translated">O bloco de informações é colocado na pilha de por que <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método é removida da pilha e todos os blocos de informações é colocado na pilha depois disso <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método também serão removidos.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method place information blocks on the same stack as calls to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> blocos de informações de local do método na mesma pilha de chamadas para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Just as an <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method call is paired with a <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call, a <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method call is paired with a <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call.</source>
          <target state="translated">Assim como um <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método, uma <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Likewise, when you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Da mesma forma, quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>The graphics state established by the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</source>
          <target state="translated">O estado dos gráficos estabelecidos pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método inclui as qualidades de renderização do estado de gráfico padrão, qualquer alteração de estado de qualidade de renderização existente quando o método é chamado é redefinidas para os valores padrão.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Opens a new graphics container and saves the old container.</source>
          <target state="translated">Abre um novo contêiner de elementos gráficos e salva o recipiente antigo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Translates the world coordinates in the container.</source>
          <target state="translated">Converte as coordenadas do mundo no contêiner.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Fills a red rectangle in the (translated coordinates of the) new container.</source>
          <target state="translated">Preenche um retângulo vermelho a (convertido coordenadas do) novo contêiner.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Closes the new container and restores the saved container.</source>
          <target state="translated">Fecha o novo contêiner e restaura o contêiner salvo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>Fills a green rectangle (to the untranslated coordinates) of the saved container.</source>
          <target state="translated">Preenche um retângulo verde (para as coordenadas não traduzidos) do contêiner salvo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer">
          <source>The result is a green rectangle that overlies a red rectangle of the same size.</source>
          <target state="translated">O resultado é um retângulo verde que overlies um retângulo vermelho do mesmo tamanho.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that, together with the <bpt id="p1">&lt;c&gt;</bpt>srcrect<ept id="p1">&lt;/c&gt;</ept> parameter, specifies a scale transformation for the container.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que, juntamente com o parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcrect<ept id="p1">&lt;/c&gt;</ept>, especifica uma transformação de escala para o contêiner.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that, together with the <bpt id="p1">&lt;c&gt;</bpt>dstrect<ept id="p1">&lt;/c&gt;</ept> parameter, specifies a scale transformation for the container.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que, juntamente com o parâmetro <bpt id="p1">&lt;c&gt;</bpt>dstrect<ept id="p1">&lt;/c&gt;</ept>, especifica uma transformação de escala para o contêiner.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure for the container.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida para o contêiner.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Saves a graphics container with the current state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and opens and uses a new graphics container with the specified scale transformation.</source>
          <target state="translated">Salva um contêiner gráfico com o estado atual deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e abre e usa um novo contêiner gráfico com a transformação de escala especificada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> that represents the state of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> at the time of the method call.</source>
          <target state="translated">Esse método retorna um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> que representa o estado deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> no momento da chamada de método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method to create nested graphics containers.</source>
          <target state="translated">Use esse método com o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método para criar contêineres de elementos gráficos aninhados.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</source>
          <target state="translated">Contêineres de gráficos retêm estado de gráficos, como transformação, região de recorte e propriedades de processamento.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, an information block that holds the state of the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> is put on a stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, um bloco de informações que mantém o estado do <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> é colocada em uma pilha.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> that identifies that information block.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> que identifica esse bloco de informações.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>When you pass the identifying object to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the information block is removed from the stack and is used to restore the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call.</source>
          <target state="translated">Quando você passa o objeto de identificação para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o bloco de informações é removido da pilha e é usado para restaurar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Containers can be nested; that is, you can call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method several times before you call the <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method.</source>
          <target state="translated">Contêineres podem ser aninhados. ou seja, você pode chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método várias vezes antes de chamar o <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Each time you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method, an information block is put on the stack, and you receive a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> for the information block.</source>
          <target state="translated">Cada vez que você chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método, um bloco de informações é colocado na pilha, e você recebe um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> para o bloco de informações.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>When you pass one of those objects to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is returned to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call that returned that particular <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</source>
          <target state="translated">Quando você passa um desses objetos para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é retornado para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método retornado que determinado <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The information block placed on the stack by that <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call is removed from the stack, and all information blocks placed on that stack after that <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call are also removed.</source>
          <target state="translated">O bloco de informações é colocado na pilha de por que <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método é removida da pilha e todos os blocos de informações é colocado na pilha depois disso <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método também serão removidos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method place information blocks on the same stack as calls to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> blocos de informações de local do método na mesma pilha de chamadas para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Just as an <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method call is paired with a <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call, a <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method call is paired with a <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call.</source>
          <target state="translated">Assim como um <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método, uma <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Likewise, when you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Da mesma forma, quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>This method specifies a scale transformation for the new graphics container with the <ph id="ph1">`dstrect`</ph> and <ph id="ph2">`srcrect`</ph> parameters.</source>
          <target state="translated">Esse método Especifica uma transformação de escala para o novo contêiner de elementos gráficos com o <ph id="ph1">`dstrect`</ph> e <ph id="ph2">`srcrect`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The scale is equal to the transformation that, when applied to <ph id="ph1">`srcrect`</ph>, results in <ph id="ph2">`dstrect`</ph>.</source>
          <target state="translated">A escala é igual para a transformação que, quando aplicado a <ph id="ph1">`srcrect`</ph>, resulta em <ph id="ph2">`dstrect`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The graphics state established by the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</source>
          <target state="translated">O estado dos gráficos estabelecidos pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método inclui as qualidades de renderização do estado de gráfico padrão, qualquer alteração de estado de qualidade de renderização existente quando o método é chamado é redefinidas para os valores padrão.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates two rectangles to specify a scale transformation for the new container.</source>
          <target state="translated">Cria dois retângulos para especificar uma transformação de escala para o novo contêiner.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Opens the new graphics container and saves the old container.</source>
          <target state="translated">Abre o novo contêiner de elementos gráficos e salva o recipiente antigo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Fills a red rectangle in the (scaled coordinates of the) new container.</source>
          <target state="translated">Preenche um retângulo vermelho a (dimensionada coordenadas do) novo contêiner.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Closes the new container and restores the saved container.</source>
          <target state="translated">Fecha o novo contêiner e restaura o contêiner salvo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Fills a green rectangle (to the unscaled coordinates) of the saved container.</source>
          <target state="translated">Preenche o retângulo verde (com as coordenadas da escala) do contêiner salvo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The result is a green rectangle that overlies a smaller red rectangle.</source>
          <target state="translated">O resultado é um retângulo verde que overlies um retângulo vermelho menor.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that, together with the <bpt id="p1">&lt;c&gt;</bpt>srcrect<ept id="p1">&lt;/c&gt;</ept> parameter, specifies a scale transformation for the new graphics container.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que, juntamente com o parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcrect<ept id="p1">&lt;/c&gt;</ept>, especifica uma transformação de escala para o novo contêiner de elementos gráficos.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that, together with the <bpt id="p1">&lt;c&gt;</bpt>dstrect<ept id="p1">&lt;/c&gt;</ept> parameter, specifies a scale transformation for the new graphics container.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que, juntamente com o parâmetro <bpt id="p1">&lt;c&gt;</bpt>dstrect<ept id="p1">&lt;/c&gt;</ept>, especifica uma transformação de escala para o novo contêiner de elementos gráficos.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure for the container.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida para o contêiner.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Saves a graphics container with the current state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and opens and uses a new graphics container with the specified scale transformation.</source>
          <target state="translated">Salva um contêiner gráfico com o estado atual deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e abre e usa um novo contêiner gráfico com a transformação de escala especificada.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> that represents the state of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> at the time of the method call.</source>
          <target state="translated">Esse método retorna um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> que representa o estado deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> no momento da chamada de método.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method to create nested graphics containers.</source>
          <target state="translated">Use esse método com o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método para criar contêineres de elementos gráficos aninhados.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</source>
          <target state="translated">Contêineres de gráficos retêm estado de gráficos, como transformação, região de recorte e propriedades de processamento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, an information block that holds the state of the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> is put on a stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, um bloco de informações que mantém o estado do <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> é colocada em uma pilha.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> that identifies that information block.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> que identifica esse bloco de informações.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>When you pass the identifying object to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the information block is removed from the stack and is used to restore the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call.</source>
          <target state="translated">Quando você passa o objeto de identificação para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o bloco de informações é removido da pilha e é usado para restaurar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Containers can be nested; that is, you can call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method several times before you call the <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method.</source>
          <target state="translated">Contêineres podem ser aninhados. ou seja, você pode chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método várias vezes antes de chamar o <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Each time you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method, an information block is put on the stack, and you receive a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> for the information block.</source>
          <target state="translated">Cada vez que você chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método, um bloco de informações é colocado na pilha, e você recebe um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> para o bloco de informações.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>When you pass one of those objects to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is returned to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call that returned that particular <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</source>
          <target state="translated">Quando você passa um desses objetos para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é retornado para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método retornado que determinado <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The information block placed on the stack by that <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call is removed from the stack, and all information blocks placed on that stack after that <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call are also removed.</source>
          <target state="translated">O bloco de informações é colocado na pilha de por que <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método é removida da pilha e todos os blocos de informações é colocado na pilha depois disso <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método também serão removidos.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method place information blocks on the same stack as calls to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> blocos de informações de local do método na mesma pilha de chamadas para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Just as an <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method call is paired with a <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call, a <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method call is paired with a <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call.</source>
          <target state="translated">Assim como um <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método, uma <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">`Save`</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">`Save`</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Likewise, when you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Da mesma forma, quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>This method specifies a scale transformation for the new graphics container with the <ph id="ph1">`dstrect`</ph> and <ph id="ph2">`srcrect`</ph> parameters.</source>
          <target state="translated">Esse método Especifica uma transformação de escala para o novo contêiner de elementos gráficos com o <ph id="ph1">`dstrect`</ph> e <ph id="ph2">`srcrect`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The scale is equal to the transformation that, when applied to <ph id="ph1">`srcrect`</ph>, results in <ph id="ph2">`dstrect`</ph>.</source>
          <target state="translated">A escala é igual para a transformação que, quando aplicado a <ph id="ph1">`srcrect`</ph>, resulta em <ph id="ph2">`dstrect`</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The graphics state established by the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</source>
          <target state="translated">O estado dos gráficos estabelecidos pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método inclui as qualidades de renderização do estado de gráfico padrão, qualquer alteração de estado de qualidade de renderização existente quando o método é chamado é redefinidas para os valores padrão.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates two rectangles to specify a scale transformation for the new container.</source>
          <target state="translated">Cria dois retângulos para especificar uma transformação de escala para o novo contêiner.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Opens the new graphics container and saves the old container.</source>
          <target state="translated">Abre o novo contêiner de elementos gráficos e salva o recipiente antigo.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Fills a red rectangle in the (scaled coordinates of the) new container.</source>
          <target state="translated">Preenche um retângulo vermelho a (dimensionada coordenadas do) novo contêiner.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Closes the new container and restores the saved container.</source>
          <target state="translated">Fecha o novo contêiner e restaura o contêiner salvo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Fills a green rectangle (to the unscaled coordinates) of the saved container.</source>
          <target state="translated">Preenche o retângulo verde (com as coordenadas da escala) do contêiner salvo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The result is a green rectangle that overlies a smaller red rectangle.</source>
          <target state="translated">O resultado é um retângulo verde que overlies um retângulo vermelho menor.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the background color of the drawing surface.</source>
          <target state="translated">Estrutura de <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> que representa a cor da tela de fundo da superfície de desenho.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
          <source>Clears the entire drawing surface and fills it with the specified background color.</source>
          <target state="translated">Limpa toda a superfície de desenho e a preenche com a cor da tela de fundo especificada.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clear%2A&gt;</ph> method clears the state of the graphics object and should not be called when the graphics object cannot be updated.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clear%2A&gt;</ph> método limpa o estado do objeto graphics e não deve ser chamado quando o objeto graphics não pode ser atualizado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clear%2A&gt;</ph> method is called on a secure desktop in a terminal server session, an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph> may occur, leaving the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> object in an inconsistent state.</source>
          <target state="translated">Por exemplo, se o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clear%2A&gt;</ph> método é chamado em uma área de trabalho segura em uma sessão do terminal server, um <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ExternalException&gt;</ph> poderão ocorrer, deixando o <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto em um estado inconsistente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
          <source>The code clears the drawing surface of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> and sets the background color to the system-defined teal color.</source>
          <target state="translated">O código limpa a superfície de desenho do <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> e define a cor de plano de fundo para a cor azul petróleo definidas pelo sistema.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.Clip">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> that limits the drawing region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define um <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> que limita a região desenho desse <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> that limits the portion of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> that is currently available for drawing.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> que limita a parte desse <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> que está atualmente disponível para o desenho.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>Modifying the <ph id="ph1">&lt;xref:System.Drawing.Region&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property does not affect subsequent drawing with the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Modificando o <ph id="ph1">&lt;xref:System.Drawing.Region&gt;</ph> objeto retornado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade não afeta o desenho subsequente com o <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>To change the clip region, replace the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property value with a new <ph id="ph2">&lt;xref:System.Drawing.Region&gt;</ph> object.</source>
          <target state="translated">Para alterar a região de corte, substitua o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> com um novo valor da propriedade <ph id="ph2">&lt;xref:System.Drawing.Region&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>To determine whether the clipping region is infinite, retrieve the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property and call its <ph id="ph2">&lt;xref:System.Drawing.Region.IsInfinite%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar se a região de recorte é infinita, recuperar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade e chame seu <ph id="ph2">&lt;xref:System.Drawing.Region.IsInfinite%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Clip">
          <source>Paste the code into a form and call the <ph id="ph1">`SetAndFillClip`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o código em um formulário e uma chamada a <ph id="ph1">`SetAndFillClip`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that bounds the clipping region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que delimita a área de recorte desse <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents a bounding rectangle for the clipping region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa um retângulo delimitador para a área de recorte desse <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>The unit for resulting rectangle is designated by the <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">A unidade para o retângulo resultante é designada pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>The default unit is pixels.</source>
          <target state="translated">A unidade padrão é pixels.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> é geralmente associado um controle e a origem do retângulo serão relativas à área do cliente do controle.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>If the clipping region is infinite, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.ClipBounds%2A&gt;</ph> property returns a meaningless large rectangle.</source>
          <target state="translated">Se a região de recorte for infinita, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.ClipBounds%2A&gt;</ph> propriedade retorna um retângulo grande sem sentido.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.ClipBounds">
          <source>To determine whether the clipping region is infinite, retrieve the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property and call its <ph id="ph2">&lt;xref:System.Drawing.Region.IsInfinite%2A&gt;</ph> method.</source>
          <target state="translated">Para determinar se a região de recorte é infinita, recuperar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade e chame seu <ph id="ph2">&lt;xref:System.Drawing.Region.IsInfinite%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.CompositingMode">
          <source>Gets a value that specifies how composited images are drawn to this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que especifica como imagens compostas são desenhadas para este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingMode">
          <source>This property specifies a member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CompositingMode" /&gt;</ph> enumeration.</source>
          <target state="translated">Esta propriedade especifica um membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CompositingMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingMode">
          <source>The compositing mode determines whether pixels from a source image overwrite or are combined with background pixels.</source>
          <target state="translated">O modo de composição determina se os pixels a partir de uma imagem de origem substituam ou são combinados com plano de fundo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingMode">
          <source>You should not use a <ph id="ph1">&lt;xref:System.Drawing.Graphics.CompositingMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy&gt;</ph> when the <ph id="ph3">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit&gt;</ph>.</source>
          <target state="translated">Você não deve usar um <ph id="ph1">&lt;xref:System.Drawing.Graphics.CompositingMode%2A&gt;</ph> valor da propriedade <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy&gt;</ph> quando o <ph id="ph3">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> está definida como <ph id="ph4">&lt;xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingMode">
          <source>An exception could occur or the image may not render correctly.</source>
          <target state="translated">Uma exceção pode ocorrer ou a imagem talvez não sejam renderizadas corretamente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.CompositingQuality">
          <source>Gets or sets the rendering quality of composited images drawn to this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define a qualidade de renderização de imagens compostas desenhadas para este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingQuality">
          <source>This property specifies a member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CompositingQuality" /&gt;</ph> enumeration.</source>
          <target state="translated">Esta propriedade especifica um membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CompositingQuality" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingQuality">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.CompositingQuality">
          <source>The compositing quality determines the rendering quality level of composited images.</source>
          <target state="translated">A qualidade de composição determina o nível de qualidade de renderização de imagens compostos.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Performs a bit-block transfer of color data from the screen to the drawing surface of the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Executa uma transferência de bloco de bits dos dados de cores da tela até a superfície de desenho do <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>The point at the upper-left corner of the source rectangle.</source>
          <target state="translated">O ponto no canto superior esquerdo do retângulo de origem.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>The point at the upper-left corner of the destination rectangle.</source>
          <target state="translated">O ponto no canto superior esquerdo do retângulo de destino.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>The size of the area to be transferred.</source>
          <target state="translated">O tamanho da área a ser transferida.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Executa uma transferência de bloco de bits dos dados de cores, correspondendo a um retângulo de pixels, da tela até a superfície de desenho do <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> methods are useful for layering one image on top of another.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> métodos são úteis para uma imagem em camadas sobre o outro.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>To specify how the source and destination colors are blended, use one of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> methods that takes a <ph id="ph2">&lt;xref:System.Drawing.CopyPixelOperation&gt;</ph> parameter.</source>
          <target state="translated">Para especificar como as cores de origem e destino são mescladas, use um do <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> métodos que leva um <ph id="ph2">&lt;xref:System.Drawing.CopyPixelOperation&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`CopyPixels1`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`CopyPixels1`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>The operation failed.</source>
          <target state="translated">A operação falhou.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>for access to all windows.</source>
          <target state="translated">para acessar todas as janelas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The point at the upper-left corner of the source rectangle.</source>
          <target state="translated">O ponto no canto superior esquerdo do retângulo de origem.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The point at the upper-left corner of the destination rectangle.</source>
          <target state="translated">O ponto no canto superior esquerdo do retângulo de destino.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The size of the area to be transferred.</source>
          <target state="translated">O tamanho da área a ser transferida.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Executa uma transferência de bloco de bits dos dados de cores, correspondendo a um retângulo de pixels, da tela até a superfície de desenho do <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> methods are useful for layering one image on top of another.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> métodos são úteis para uma imagem em camadas sobre o outro.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The <ph id="ph1">`copyPixelOperation`</ph> parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</source>
          <target state="translated">O <ph id="ph1">`copyPixelOperation`</ph> parâmetro permite que você especifique se e como as cores de fonte devem ser combinadas com as cores na área de destino.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`CopyPixels2`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`CopyPixels2`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source><ph id="ph1">&lt;paramref name="copyPixelOperation" /&gt;</ph> is not a member of <ph id="ph2">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="copyPixelOperation" /&gt;</ph> não é membro de <ph id="ph2">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The operation failed.</source>
          <target state="translated">A operação falhou.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>for access to all windows.</source>
          <target state="translated">para acessar todas as janelas.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The x-coordinate of the point at the upper-left corner of the source rectangle.</source>
          <target state="translated">A coordenada X do ponto no canto superior esquerdo do retângulo de origem.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The y-coordinate of the point at the upper-left corner of the source rectangle.</source>
          <target state="translated">A coordenada y do ponto no canto superior esquerdo do retângulo de origem.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The x-coordinate of the point at the upper-left corner of the destination rectangle.</source>
          <target state="translated">A coordenada X do ponto no canto superior esquerdo do retângulo de destino.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The y-coordinate of the point at the upper-left corner of the destination rectangle.</source>
          <target state="translated">A coordenada y do ponto no canto superior esquerdo do retângulo de destino.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The size of the area to be transferred.</source>
          <target state="translated">O tamanho da área a ser transferida.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Executa uma transferência de bloco de bits dos dados de cores, correspondente a um retângulo de pixels, da tela à superfície de desenho do <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> methods are useful for layering one image on top of another.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> métodos são úteis para uma imagem em camadas sobre o outro.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>To specify how the source and destination colors are blended, use one of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> methods that takes a <ph id="ph2">&lt;xref:System.Drawing.CopyPixelOperation&gt;</ph> parameter.</source>
          <target state="translated">Para especificar como as cores de origem e destino são mescladas, use um do <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> métodos que leva um <ph id="ph2">&lt;xref:System.Drawing.CopyPixelOperation&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> for printing a copy of the current form.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> para imprimir uma cópia do formulário atual.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>The operation failed.</source>
          <target state="translated">A operação falhou.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>for access to all windows.</source>
          <target state="translated">para acessar todas as janelas.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The x-coordinate of the point at the upper-left corner of the source rectangle.</source>
          <target state="translated">A coordenada X do ponto no canto superior esquerdo do retângulo de origem.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The y-coordinate of the point at the upper-left corner of the source rectangle</source>
          <target state="translated">A coordenada y do ponto no canto superior esquerdo do retângulo de origem</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The x-coordinate of the point at the upper-left corner of the destination rectangle.</source>
          <target state="translated">A coordenada X do ponto no canto superior esquerdo do retângulo de destino.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The y-coordinate of the point at the upper-left corner of the destination rectangle.</source>
          <target state="translated">A coordenada y do ponto no canto superior esquerdo do retângulo de destino.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The size of the area to be transferred.</source>
          <target state="translated">O tamanho da área a ser transferida.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Executa uma transferência de bloco de bits dos dados de cores, correspondente a um retângulo de pixels, da tela à superfície de desenho do <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> methods are useful for layering one image on top of another.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> métodos são úteis para uma imagem em camadas sobre o outro.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The <ph id="ph1">`copyPixelOperation`</ph> parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</source>
          <target state="translated">O <ph id="ph1">`copyPixelOperation`</ph> parâmetro permite que você especifique se e como as cores de fonte devem ser combinadas com as cores na área de destino.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.CopyFromScreen%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`CopyPixels4`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`CopyPixels4`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source><ph id="ph1">&lt;paramref name="copyPixelOperation" /&gt;</ph> is not a member of <ph id="ph2">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="copyPixelOperation" /&gt;</ph> não é membro de <ph id="ph2">&lt;see cref="T:System.Drawing.CopyPixelOperation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>The operation failed.</source>
          <target state="translated">A operação falhou.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>for access to all windows.</source>
          <target state="translated">para acessar todas as janelas.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados por este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> permite que os recursos usados por este <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> sejam realocadas para outras finalidades.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>Creates an <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> from a graphics file SampImag.jpg in the example directory.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> de um gráfico de arquivos SampImag.jpg no diretório de exemplo.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> from the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> do <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>Alters the image by filling a rectangle within it.</source>
          <target state="translated">Altera a imagem, preenchendo um retângulo dentro dele.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>Draws the <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> to the screen.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> na tela.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Dispose">
          <source>Releases the created <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Libera o criado <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.DpiX">
          <source>Gets the horizontal resolution of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém a resolução horizontal deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiX">
          <source>The value, in dots per inch, for the horizontal resolution supported by this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">O valor, em pontos por polegada, para a resolução horizontal com suporte por este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiX">
          <source>For more information about creating high-resolution applications, see</source>
          <target state="translated">Para obter mais informações sobre como criar aplicativos de alta resolução, consulte</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiX">
          <source><bpt id="p1">[</bpt>High DPI<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=159804)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Alto DPI<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=159804)</ept>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiX">
          <source>The following method shows the use of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DpiX%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.DpiY%2A&gt;</ph> properties.</source>
          <target state="translated">O método a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DpiX%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.DpiY%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiX">
          <source>This example is designed for use with a Windows Form.</source>
          <target state="translated">Este exemplo é projetado para uso com um Windows Form.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiX">
          <source>To run this example, paste it into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> named listBox1 and call this method from the form's constructor.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominado listBox1 e chamar esse método de construtor do formulário.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.DpiY">
          <source>Gets the vertical resolution of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém a resolução vertical deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiY">
          <source>The value, in dots per inch, for the vertical resolution supported by this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">O valor, em pontos por polegada, da resolução vertical com suporte por este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiY">
          <source>For more information about creating high-resolution applications, see</source>
          <target state="translated">Para obter mais informações sobre como criar aplicativos de alta resolução, consulte</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiY">
          <source><bpt id="p1">[</bpt>High DPI<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=159804)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Alto DPI<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=159804)</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiY">
          <source>The following method shows the use of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DpiX%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.DpiY%2A&gt;</ph> properties.</source>
          <target state="translated">O método a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DpiX%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.DpiY%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiY">
          <source>This example is designed for use with a Windows Form.</source>
          <target state="translated">Este exemplo é projetado para uso com um Windows Form.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.DpiY">
          <source>To run this example, paste it into a form that contains a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> named listBox1 and call this method from the form's constructor.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário que contém um <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> denominado listBox1 e chamar esse método de construtor do formulário.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Desenha um arco que representa uma parte de uma elipse especificada por um par de coordenadas, uma largura ou uma altura.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the arc.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do arco.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that defines the boundaries of the ellipse.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que define os limites da elipse.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x ao ponto de partida do arco.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to ending point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> ao ponto de término do arco.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws an arc representing a portion of an ellipse specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Desenha um arco que representa uma parte de uma elipse especificada por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>This method draws an arc that is a portion of the perimeter of an ellipse.</source>
          <target state="translated">Esse método desenha um arco que é uma parte do perímetro de uma elipse.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The ellipse is defined by the boundaries of a rectangle.</source>
          <target state="translated">Elipse é definida pelos limites de um retângulo.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The arc is the portion of the perimeter of the ellipse between the <ph id="ph1">`startAngle`</ph> parameter and the <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph> parameters.</source>
          <target state="translated">O arco é a parte do perímetro da elipse entre o <ph id="ph1">`startAngle`</ph> parâmetro e o <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle to bound an ellipse.</source>
          <target state="translated">Cria um retângulo de limite de uma elipse.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines the start (45 degrees) and sweep (270 degrees) angles.</source>
          <target state="translated">Define o início (45 graus) e os ângulos de varredura (270 graus).</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws the elliptical arc to the screen.</source>
          <target state="translated">Desenha o arco elíptico para a tela.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</source>
          <target state="translated">O resultado é uma elipse parcial tem um segmento entre + e - 45 graus do eixo x.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the arc.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do arco.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that defines the boundaries of the ellipse.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que define os limites da elipse.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x ao ponto de partida do arco.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to ending point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> ao ponto de término do arco.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Draws an arc representing a portion of an ellipse specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure.</source>
          <target state="translated">Desenha um arco que representa uma parte de uma elipse especificada por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>This method draws an arc that is a portion of the perimeter of an ellipse.</source>
          <target state="translated">Esse método desenha um arco que é uma parte do perímetro de uma elipse.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The ellipse is defined by the boundaries of a rectangle.</source>
          <target state="translated">Elipse é definida pelos limites de um retângulo.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The arc is the portion of the perimeter of the ellipse between the <ph id="ph1">`startAngle`</ph> parameter and the <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph> parameters.</source>
          <target state="translated">O arco é a parte do perímetro da elipse entre o <ph id="ph1">`startAngle`</ph> parâmetro e o <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Creates a rectangle to bound an ellipse.</source>
          <target state="translated">Cria um retângulo de limite de uma elipse.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Defines the start (45 degrees) and sweep (270 degrees) angles.</source>
          <target state="translated">Define o início (45 graus) e os ângulos de varredura (270 graus).</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Draws the elliptical arc to the screen.</source>
          <target state="translated">Desenha o arco elíptico para a tela.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</source>
          <target state="translated">O resultado é uma elipse parcial tem um segmento entre + e - 45 graus do eixo x.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the arc.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do arco.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the rectangle that defines the ellipse.</source>
          <target state="translated">Largura do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the rectangle that defines the ellipse.</source>
          <target state="translated">Altura do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x ao ponto de partida do arco.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to ending point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> ao ponto de término do arco.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Desenha um arco que representa uma parte de uma elipse especificada por um par de coordenadas, uma largura ou uma altura.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method draws an arc that is a portion of the perimeter of an ellipse.</source>
          <target state="translated">Esse método desenha um arco que é uma parte do perímetro de uma elipse.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The ellipse is defined by the boundaries of a rectangle.</source>
          <target state="translated">Elipse é definida pelos limites de um retângulo.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The arc is the portion of the perimeter of the ellipse between the <ph id="ph1">`startAngle`</ph> parameter and the <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph> parameters.</source>
          <target state="translated">O arco é a parte do perímetro da elipse entre o <ph id="ph1">`startAngle`</ph> parâmetro e o <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the position and size of a rectangle to bound an ellipse.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo associado uma elipse.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Defines the start (45 degrees) and sweep (270 degrees) angles.</source>
          <target state="translated">Define o início (45 graus) e os ângulos de varredura (270 graus).</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the elliptical arc to the screen.</source>
          <target state="translated">Desenha o arco elíptico para a tela.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</source>
          <target state="translated">O resultado é uma elipse parcial tem um segmento entre + e - 45 graus do eixo x.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is a zero-length array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é uma matriz de tamanho zero.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the arc.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do arco.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the rectangle that defines the ellipse.</source>
          <target state="translated">Largura do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the rectangle that defines the ellipse.</source>
          <target state="translated">Altura do retângulo que define a elipse.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x ao ponto de partida do arco.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to ending point of the arc.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> ao ponto de término do arco.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Desenha um arco que representa uma parte de uma elipse especificada por um par de coordenadas, uma largura ou uma altura.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>This method draws an arc that is a portion of the perimeter of an ellipse.</source>
          <target state="translated">Esse método desenha um arco que é uma parte do perímetro de uma elipse.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The ellipse is defined by the boundaries of a rectangle.</source>
          <target state="translated">Elipse é definida pelos limites de um retângulo.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The arc is the portion of the perimeter of the ellipse between the <ph id="ph1">`startAngle`</ph> parameter and the <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph> parameters.</source>
          <target state="translated">O arco é a parte do perímetro da elipse entre o <ph id="ph1">`startAngle`</ph> parâmetro e o <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the position and size of a rectangle to bound an ellipse.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo associado uma elipse.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Defines the start (45 degrees) and sweep (270 degrees) angles.</source>
          <target state="translated">Define o início (45 graus) e os ângulos de varredura (270 graus).</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the elliptical arc to the screen.</source>
          <target state="translated">Desenha o arco elíptico para a tela.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</source>
          <target state="translated">O resultado é uma elipse parcial tem um segmento entre + e - 45 graus do eixo x.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a Bézier spline defined by four <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma spline de Bézier definida por quatro estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> structure that determines the color, width, and style of the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the starting point of the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto inicial da curva.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the first control point for the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the second control point for the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the ending point of the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto final da curva.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Draws a Bézier spline defined by four <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma spline de Bézier definida por quatro estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The Bézier curve is drawn from the first point to the fourth point.</source>
          <target state="translated">A curva de Bézier é desenhada no primeiro ponto até o quarto ponto.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The second and third points are control points that determine the shape of the curve.</source>
          <target state="translated">Os segundo e terceiro pontos são pontos de controle que determina a forma da curva.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Creates the start, end, and two control points for the curve.</source>
          <target state="translated">Cria o início, fim e dois pontos de controle da curva.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Draws the Bézier curve to the screen.</source>
          <target state="translated">Desenha a curva de Bézier na tela.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the starting point of the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto inicial da curva.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the first control point for the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the second control point for the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the ending point of the curve.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto final da curva.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Draws a Bézier spline defined by four <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma spline de Bézier definida por quatro estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The Bézier spline is drawn from the first point to the fourth point.</source>
          <target state="translated">O spline de Bézier é desenhado no primeiro ponto até o quarto ponto.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The second and third points are control points that determine the shape of the curve.</source>
          <target state="translated">Os segundo e terceiro pontos são pontos de controle que determina a forma da curva.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Creates the start, end, and two control points for the curve.</source>
          <target state="translated">Cria o início, fim e dois pontos de controle da curva.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Draws the Bézier curve to the screen.</source>
          <target state="translated">Desenha a curva de Bézier na tela.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">A coordenada X do ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">A coordenada Y do ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the first control point of the curve.</source>
          <target state="translated">A coordenada X do primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the first control point of the curve.</source>
          <target state="translated">A coordenada Y do primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the second control point of the curve.</source>
          <target state="translated">A coordenada X do segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the second control point of the curve.</source>
          <target state="translated">A coordenada Y do segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the ending point of the curve.</source>
          <target state="translated">A coordenada X do ponto de término da curva.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the ending point of the curve.</source>
          <target state="translated">A coordenada Y do ponto de término da curva.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</source>
          <target state="translated">Desenha um spline de Bézier definida por quatro pares de coordenadas ordenados que representam pontos.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The Bézier spline is drawn from the first point to the fourth point.</source>
          <target state="translated">O spline de Bézier é desenhado no primeiro ponto até o quarto ponto.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The second and third points are control points that determine the shape of the curve.</source>
          <target state="translated">Os segundo e terceiro pontos são pontos de controle que determina a forma da curva.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the coordinates of the start, end, and two control points for the curve.</source>
          <target state="translated">Cria as coordenadas de início, fim e dois pontos de controle da curva.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the Bézier curve to the screen.</source>
          <target state="translated">Desenha a curva de Bézier na tela.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a series of Bézier splines from an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de splines de Bézier de uma matriz de estruturas de <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da linha.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represent the points that determine the curve.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que determinam a curva.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</source>
          <target state="translated">O número de pontos da matriz deve ser um múltiplo de 3 mais 1, como 4, 7 ou 10.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws a series of Bézier splines from an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de splines de Bézier de uma matriz de estruturas de <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</source>
          <target state="translated">O número de pontos da matriz deve ser um múltiplo de 1 mais de 3 porque o spline primeiro requer 4 pontos e qualquer outras splines requerem 3 pontos.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The first Bézier spline is drawn from the first point to the fourth point in the point array.</source>
          <target state="translated">O primeira spline de Bézier é desenhado do primeiro ponto o quarto ponto na matriz de ponto.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The second and third points are control points that determine the shape of the curve.</source>
          <target state="translated">Os segundo e terceiro pontos são pontos de controle que determina a forma da curva.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Each subsequent curve needs exactly three more points: two more control points and an ending point.</source>
          <target state="translated">Cada curva subsequente precisa exatamente três pontos mais: mais de dois pontos e um ponto final de controle.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The ending point of the previous curve is used as the starting point for each additional curve.</source>
          <target state="translated">O ponto final da curva anterior é usado como o ponto de partida para cada curva adicional.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</source>
          <target state="translated">Cria o início, fim e dois pontos de controle para uma curva primeiro e o ponto de extremidade e dois pontos de controle para a segunda curva.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws the successive Bézier curves to the screen.</source>
          <target state="translated">Desenha curvas de Bézier sucessivas para a tela.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the points that determine the curve.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que determinam a curva.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</source>
          <target state="translated">O número de pontos da matriz deve ser um múltiplo de 3 mais 1, como 4, 7 ou 10.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws a series of Bézier splines from an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de splines de Bézier de uma matriz de estruturas de <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</source>
          <target state="translated">O número de pontos da matriz deve ser um múltiplo de 1 mais de 3 porque o spline primeiro requer 4 pontos e qualquer outras splines requerem 3 pontos.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The first Bézier curve is drawn from the first point to the fourth point in the point array.</source>
          <target state="translated">A primeira curva de Bézier é desenhada do primeiro ponto para o quarto ponto na matriz de ponto.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The second and third points are control points that determine the shape of the curve.</source>
          <target state="translated">Os segundo e terceiro pontos são pontos de controle que determina a forma da curva.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Each subsequent curve needs exactly three more points: two more control points and an ending point.</source>
          <target state="translated">Cada curva subsequente precisa exatamente três pontos mais: mais de dois pontos e um ponto final de controle.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The ending point of the previous curve is used as the starting point for each additional curve.</source>
          <target state="translated">O ponto final da curva anterior é usado como o ponto de partida para cada curva adicional.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</source>
          <target state="translated">Cria o início, fim e dois pontos de controle para uma curva primeiro e o ponto de extremidade e dois pontos de controle para a segunda curva.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws the successive Bézier curves to the screen.</source>
          <target state="translated">Desenha curvas de Bézier sucessivas para a tela.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a closed cardinal spline defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal fechado definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and height of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, largura e altura da curva.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws a closed cardinal spline defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal fechado definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>This method draws a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha uma spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close the figure.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechar a figura.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws seven red straight lines between the seven points to form a closed polygon.</source>
          <target state="translated">Desenha sete linhas retas vermelhas entre os sete pontos para formar um polígono fechado.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws a green closed curve through the seven points.</source>
          <target state="translated">Desenha uma curva fechada verde por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The method uses a default tension of 0.5.</source>
          <target state="translated">O método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and height of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, largura e altura da curva.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws a closed cardinal spline defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal fechado definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>This method draws a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha uma spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws seven red straight lines between the seven points to form a closed polygon.</source>
          <target state="translated">Desenha sete linhas retas vermelhas entre os sete pontos para formar um polígono fechado.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws a green closed curve through the seven points.</source>
          <target state="translated">Desenha uma curva fechada verde por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The method uses a default tension of 0.5.</source>
          <target state="translated">O método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and height of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, largura e altura da curva.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the curve is filled.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como a curva é preenchida.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>This parameter is required but ignored.</source>
          <target state="translated">Este parâmetro é necessário, mas é ignorado.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Draws a closed cardinal spline defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures using a specified tension.</source>
          <target state="translated">Desenha um spline cardinal fechado definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> usando uma tensão especificada.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>This method draws a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha uma spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Creates seven points to define the curve.</source>
          <target state="translated">Cria a sete pontos para definir a curva.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Draws seven red straight lines between the seven points to form a polygon.</source>
          <target state="translated">Desenha sete linhas retas vermelhas entre os sete pontos para formar um polígono.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Creates tension and fill mode settings.</source>
          <target state="translated">Cria as configurações do modo de tensão e preenchimento.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Draws a green closed curve through the seven points.</source>
          <target state="translated">Desenha uma curva fechada verde por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The method uses a tension of 1.0 and sets the fill mode to <ph id="ph1">`FillMode.Alternate`</ph>.</source>
          <target state="translated">O método usa uma tensão de 1,0 e define o modo de preenchimento para <ph id="ph1">`FillMode.Alternate`</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and height of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, largura e altura da curva.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the curve is filled.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como a curva é preenchida.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>This parameter is required but is ignored.</source>
          <target state="translated">Este parâmetro é necessário, mas é ignorado.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Draws a closed cardinal spline defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures using a specified tension.</source>
          <target state="translated">Desenha um spline cardinal fechado definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> usando uma tensão especificada.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>This method draws a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha uma spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Creates seven points to define the curve.</source>
          <target state="translated">Cria a sete pontos para definir a curva.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Draws seven red straight lines between the seven points to form a polygon.</source>
          <target state="translated">Desenha sete linhas retas vermelhas entre os sete pontos para formar um polígono.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Creates tension and fill mode settings.</source>
          <target state="translated">Cria as configurações do modo de tensão e preenchimento.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>Draws a green closed curve through the seven points.</source>
          <target state="translated">Desenha uma curva fechada verde por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>The method uses a tension of 1.0 and sets the fill mode to <ph id="ph1">`FillMode.Alternate`</ph>.</source>
          <target state="translated">O método usa uma tensão de 1,0 e define o modo de preenchimento para <ph id="ph1">`FillMode.Alternate`</ph>.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and height of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, largura e altura da curva.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures for a curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas para desenhar uma curva.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws an open green curve through the seven points.</source>
          <target state="translated">Desenha uma curva verde aberta por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The method uses a default tension of 0.5.</source>
          <target state="translated">O método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures for a curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas para desenhar uma curva.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws an open green curve through the seven points.</source>
          <target state="translated">Desenha uma curva verde aberta por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The method uses a default tension of 0.5.</source>
          <target state="translated">O método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem a spline.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures using a specified tension.</source>
          <target state="translated">Desenha uma spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> usando uma tensão especificada.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures for a curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas para desenhar uma curva.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Creates seven points to define the curve.</source>
          <target state="translated">Cria a sete pontos para definir a curva.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Creates a tension setting.</source>
          <target state="translated">Cria uma configuração de tensão.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>Draws an open green closed curve through the seven points.</source>
          <target state="translated">Desenha uma curva fechada em verde aberta por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>The method uses a tension of 1.0.</source>
          <target state="translated">O método usa uma tensão de 1.0.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the points that define the curve.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representam os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures using a specified tension.</source>
          <target state="translated">Desenha uma spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> usando uma tensão especificada.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures for a curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas para desenhar uma curva.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Creates seven points to define the curve.</source>
          <target state="translated">Cria a sete pontos para definir a curva.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Creates a tension setting.</source>
          <target state="translated">Cria uma configuração de tensão.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>Draws an open green closed curve through the seven points.</source>
          <target state="translated">Desenha uma curva fechada em verde aberta por meio de sete pontos.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>The method uses a tension of 1.0.</source>
          <target state="translated">O método usa uma tensão de 1.0.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Offset from the first element in the array of the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> parameter to the starting point in the curve.</source>
          <target state="translated">Deslocamento do primeiro elemento na matriz do parâmetro <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> para o ponto inicial na curva.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Number of segments after the starting point to include in the curve.</source>
          <target state="translated">Número de segmentos após o ponto inicial a serem incluídos na curva.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The drawing begins offset from the beginning of the array.</source>
          <target state="translated">O desenho começa deslocado em relação ao início da matriz.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures for a curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas para desenhar uma curva.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">`offset`</ph> parameter specifies the number of elements to skip in the array.</source>
          <target state="translated">O valor de <ph id="ph1">`offset`</ph> parâmetro especifica o número de elementos a serem ignorados na matriz.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The first element after the skipped elements represents the starting point of the curve.</source>
          <target state="translated">O primeiro elemento após os elementos ignorados representa o ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">`numberOfSegments`</ph> parameter specifies the number of segments, after the starting point, to draw in the curve.</source>
          <target state="translated">O valor de <ph id="ph1">`numberOfSegments`</ph> parâmetro especifica o número de segmentos, após o ponto de partida para desenhar na curva.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">`numberOfSegments`</ph> parameter must be at least 1.</source>
          <target state="translated">O valor de <ph id="ph1">`numberOfSegments`</ph> parâmetro deve ser pelo menos 1.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">`offset`</ph> parameter plus the value of the <ph id="ph2">`numberOfSegments`</ph> parameter must be less than the number of elements in the array of the <ph id="ph3">`points`</ph> parameter.</source>
          <target state="translated">O valor da <ph id="ph1">`offset`</ph> parâmetro mais o valor da <ph id="ph2">`numberOfSegments`</ph> parâmetro deve ser menor que o número de elementos na matriz do <ph id="ph3">`points`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Defines the starting point offset and number of segments.</source>
          <target state="translated">Define o deslocamento do ponto de partida e o número de segmentos.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>Draws an open green curve (starting at the third point) through the last five points.</source>
          <target state="translated">Desenha uma verde curva aberta (começando no terceiro ponto) através dos últimos cinco pontos.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>The method uses a default tension of 0.5.</source>
          <target state="translated">O método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Offset from the first element in the array of the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> parameter to the starting point in the curve.</source>
          <target state="translated">Deslocamento do primeiro elemento na matriz do parâmetro <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> para o ponto inicial na curva.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Number of segments after the starting point to include in the curve.</source>
          <target state="translated">Número de segmentos após o ponto inicial a serem incluídos na curva.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures using a specified tension.</source>
          <target state="translated">Desenha uma spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> usando uma tensão especificada.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures for a curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas para desenhar uma curva.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`offset`</ph> parameter specifies the number of elements to skip in the array.</source>
          <target state="translated">O valor de <ph id="ph1">`offset`</ph> parâmetro especifica o número de elementos a serem ignorados na matriz.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The first element after the skipped elements represents the starting point of the curve.</source>
          <target state="translated">O primeiro elemento após os elementos ignorados representa o ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`numberOfSegments`</ph> parameter specifies the number of segments, after the starting point, to draw in the curve.</source>
          <target state="translated">O valor de <ph id="ph1">`numberOfSegments`</ph> parâmetro especifica o número de segmentos, após o ponto de partida para desenhar na curva.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`numberOfSegments`</ph> parameter must be at least 1.</source>
          <target state="translated">O valor de <ph id="ph1">`numberOfSegments`</ph> parâmetro deve ser pelo menos 1.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`offset`</ph> parameter plus the value of the <ph id="ph2">`numberOfSegments`</ph> parameter must be less than the number of elements in the array of the <ph id="ph3">`points`</ph> parameter.</source>
          <target state="translated">O valor da <ph id="ph1">`offset`</ph> parâmetro mais o valor da <ph id="ph2">`numberOfSegments`</ph> parâmetro deve ser menor que o número de elementos na matriz do <ph id="ph3">`points`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Defines the starting point offset and number of segments.</source>
          <target state="translated">Define o deslocamento do ponto de partida e o número de segmentos.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Defines the tension.</source>
          <target state="translated">Define a tensão.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws an open green curve (starting at the third point) through the last five points.</source>
          <target state="translated">Desenha uma verde curva aberta (começando no terceiro ponto) através dos últimos cinco pontos.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The method sets the tension to 1.0.</source>
          <target state="translated">O método define a tensão 1.0.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the curve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da curva.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Offset from the first element in the array of the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> parameter to the starting point in the curve.</source>
          <target state="translated">Deslocamento do primeiro elemento na matriz do parâmetro <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> para o ponto inicial na curva.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Number of segments after the starting point to include in the curve.</source>
          <target state="translated">Número de segmentos após o ponto inicial a serem incluídos na curva.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Draws a cardinal spline through a specified array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures using a specified tension.</source>
          <target state="translated">Desenha uma spline cardinal por meio de uma matriz especificada de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> usando uma tensão especificada.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The drawing begins offset from the beginning of the array.</source>
          <target state="translated">O desenho começa deslocado em relação ao início da matriz.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>This method draws a cardinal spline that passes through each point in the array.</source>
          <target state="translated">Esse método desenha um spline cardinal que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The array of points must contain at least three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures for curve to be drawn.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas para a curva a ser desenhada.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`offset`</ph> parameter specifies the number of elements to skip in the array.</source>
          <target state="translated">O valor de <ph id="ph1">`offset`</ph> parâmetro especifica o número de elementos a serem ignorados na matriz.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The first element after the skipped elements represents the starting point of the curve.</source>
          <target state="translated">O primeiro elemento após os elementos ignorados representa o ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`numberOfSegments`</ph> parameter specifies the number of segments, after the starting point, to draw in the curve.</source>
          <target state="translated">O valor de <ph id="ph1">`numberOfSegments`</ph> parâmetro especifica o número de segmentos, após o ponto de partida para desenhar na curva.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`numberOfSegments`</ph> parameter must be at least 1.</source>
          <target state="translated">O valor de <ph id="ph1">`numberOfSegments`</ph> parâmetro deve ser pelo menos 1.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The value of the <ph id="ph1">`offset`</ph> parameter plus the value of the <ph id="ph2">`numberOfSegments`</ph> parameter must be less than the number of elements in the array of the <ph id="ph3">`points`</ph> parameter.</source>
          <target state="translated">O valor da <ph id="ph1">`offset`</ph> parâmetro mais o valor da <ph id="ph2">`numberOfSegments`</ph> parâmetro deve ser menor que o número de elementos na matriz do <ph id="ph3">`points`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Creates red and green pens.</source>
          <target state="translated">Cria canetas vermelhas e verdes.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Creates seven points to define a curve.</source>
          <target state="translated">Cria a sete pontos para definir uma curva.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Draws six red straight lines between the seven points to form an incomplete polygon.</source>
          <target state="translated">Desenha seis linhas retas vermelhas entre os sete pontos para formar um polígono incompleto.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Defines the starting point offset and number of segments.</source>
          <target state="translated">Define o deslocamento do ponto de partida e o número de segmentos.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Defines the tension.</source>
          <target state="translated">Define a tensão.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Draws an open green curve (starting at the third point) through the last five points.</source>
          <target state="translated">Desenha uma verde curva aberta (começando no terceiro ponto) através dos últimos cinco pontos.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The method sets the tension to 1.0.</source>
          <target state="translated">O método define a tensão 1.0.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</source>
          <target state="translated">Desenha uma elipse definida por um retângulo delimitador especificado por um par de coordenadas, uma altura e uma largura.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the ellipse.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da elipse.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that defines the boundaries of the ellipse.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que define os limites da elipse.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Draws an ellipse specified by a bounding <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Desenha uma elipse especificada por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> delimitadora.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>This method draws an ellipse that is defined by the bounding rectangle specified by the <ph id="ph1">`rect`</ph> parameter.</source>
          <target state="translated">Esse método desenha uma elipse que é definida pelo retângulo delimitador especificado pelo <ph id="ph1">`rect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Creates a rectangle to bound an ellipse.</source>
          <target state="translated">Cria um retângulo de limite de uma elipse.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Draws the ellipse to the screen.</source>
          <target state="translated">Desenha a elipse na tela.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the ellipse.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da elipse.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that defines the boundaries of the ellipse.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que define os limites da elipse.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>Draws an ellipse defined by a bounding <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</source>
          <target state="translated">Desenha uma elipse definida por um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> delimitador.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>This method draws an ellipse that is defined by the bounding rectangle specified by the <ph id="ph1">`rect`</ph> parameter.</source>
          <target state="translated">Esse método desenha uma elipse que é definida pelo retângulo delimitador especificado pelo <ph id="ph1">`rect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>Creates a rectangle to bound an ellipse.</source>
          <target state="translated">Cria um retângulo de limite de uma elipse.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source>Draws the ellipse to the screen.</source>
          <target state="translated">Desenha a elipse na tela.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the ellipse.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da elipse.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Largura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Altura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</source>
          <target state="translated">Desenha uma elipse definida por um retângulo delimitador especificado pelas coordenadas do canto superior esquerdo do retângulo, uma altura e uma largura.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method draws an ellipse that is defined by the bounding rectangle described by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma elipse que é definida pelo retângulo delimitador descrito pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the position and size of a rectangle to bound an ellipse.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo associado uma elipse.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the ellipse to the screen.</source>
          <target state="translated">Desenha a elipse na tela.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the ellipse.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da elipse.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Largura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Altura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</source>
          <target state="translated">Desenha uma elipse definida por um retângulo delimitador especificado por um par de coordenadas, uma altura e uma largura.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>This method draws an ellipse that is defined by the bounding rectangle described by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma elipse que é definida pelo retângulo delimitador descrito pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the position and size of a rectangle to bound an ellipse.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo associado uma elipse.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the ellipse to the screen.</source>
          <target state="translated">Desenha a elipse na tela.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws the image represented by the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> at the specified coordinates.</source>
          <target state="translated">Desenha a imagem representada pelo <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> especificado nas coordenadas especificadas.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the resulting image on the display surface.</source>
          <target state="translated">Estrutura de <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem resultante na superfície de exibição.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The image contained in the <bpt id="p1">&lt;c&gt;</bpt>icon<ept id="p1">&lt;/c&gt;</ept> parameter is scaled to the dimensions of this rectangular area.</source>
          <target state="translated">A imagem contida no parâmetro <bpt id="p1">&lt;c&gt;</bpt>icon<ept id="p1">&lt;/c&gt;</ept> é dimensionada para as dimensões desta área retangular.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Draws the image represented by the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> within the area specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Desenha a imagem representada pelo <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> especificado, dentro da área especificada por uma estrutura de <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</source>
          <target state="translated">Cria um ícone de um arquivo de ícone padrão do Windows SampIcon.ico na pasta example.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Creates a rectangle in which to draw the icon.</source>
          <target state="translated">Cria um retângulo na qual desenhar o ícone.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Draws the icon to the screen.</source>
          <target state="translated">Desenha o ícone para a tela.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.</source>
          <target state="translated">A posição do retângulo localiza o ícone na tela e o tamanho do retângulo determina o dimensionamento do ícone desenhado.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="icon" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="icon" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>Draws the image represented by the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> at the specified coordinates.</source>
          <target state="translated">Desenha a imagem representada pelo <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> especificado nas coordenadas especificadas.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</source>
          <target state="translated">Cria um ícone de um arquivo de ícone padrão do Windows SampIcon.ico na pasta example.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>Creates the coordinates of the upper-left corner at which to draw the icon.</source>
          <target state="translated">Cria as coordenadas do canto superior esquerdo no qual desenhar o ícone.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>Draws the icon to the screen.</source>
          <target state="translated">Desenha o ícone para a tela.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source>The drawn icon is unscaled.</source>
          <target state="translated">O ícone desenhado está fora de escala.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="icon" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="icon" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the resulting image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem resultante.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The image is not scaled to fit this rectangle, but retains its original size.</source>
          <target state="translated">A imagem não é dimensionada para se ajustar a esse retângulo, mas mantém seu tamanho original.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>If the image is larger than the rectangle, it is clipped to fit inside it.</source>
          <target state="translated">Se a imagem for maior do que o retângulo, ela será recortada para caber dentro dele.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Draws the image represented by the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> without scaling the image.</source>
          <target state="translated">Desenha a imagem representada pelo <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> sem dimensionar a imagem.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</source>
          <target state="translated">Cria um ícone de um arquivo de ícone padrão do Windows SampIcon.ico na pasta example.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Creates a rectangle in which to draw the icon.</source>
          <target state="translated">Cria um retângulo na qual desenhar o ícone.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>Draws the icon to the screen.</source>
          <target state="translated">Desenha o ícone para a tela.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source>The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.</source>
          <target state="translated">A posição do retângulo localiza o ícone na tela, e o ícone de desenho fora de escala e específico sem corte.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="icon" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="icon" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the original size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho original.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the location of the upper-left corner of the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> estrutura que representa o local do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>, using its original physical size, at the specified location.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado, usando seu tamanho físico original, no local especificado.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">Esse método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar este método para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>Creates a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source>Draws the unscaled image to the screen.</source>
          <target state="translated">Desenha a imagem fora de escala para a tela.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified shape and size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho e forma especificados.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The image represented by the <ph id="ph1">`image`</ph> parameter is scaled and sheared to fit the shape of the parallelogram specified by the <ph id="ph2">`destPoints`</ph> parameters.</source>
          <target state="translated">A imagem representada pelo <ph id="ph1">`image`</ph> parâmetro é dimensionado e distorcido para ajustar a forma do paralelogramo especificada pelo <ph id="ph2">`destPoints`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source>The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">A posição do paralelogramo localiza a imagem em tela e o tamanho da imagem original e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the upper-left corner of the drawn image.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>, using its original physical size, at the specified location.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado, usando seu tamanho físico original, no local especificado.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">Esse método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar este método para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>Creates a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source>Draws the unscaled image to the screen.</source>
          <target state="translated">Desenha a imagem fora de escala para a tela.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified shape and size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho e forma especificados.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The image represented by the <ph id="ph1">`image`</ph> object is scaled and sheared to fit the shape of the parallelogram specified by the <ph id="ph2">`destPoints`</ph> parameter.</source>
          <target state="translated">A imagem representada pelo <ph id="ph1">`image`</ph> o objeto é dimensionado e distorcido para ajustar a forma do paralelogramo especificada pelo <ph id="ph2">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source>The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">A posição do paralelogramo localiza a imagem em tela e o tamanho da imagem original e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The image represented by the <ph id="ph1">`image`</ph> object is scaled to the dimensions of the <ph id="ph2">`rect`</ph> rectangle.</source>
          <target state="translated">A imagem representada pelo <ph id="ph1">`image`</ph> objeto é dimensionado para as dimensões do <ph id="ph2">`rect`</ph> retângulo.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Creates a rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo na qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</source>
          <target state="translated">A posição do retângulo localiza a imagem em tela e o tamanho da imagem original e o tamanho do retângulo determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>The image represented by the <ph id="ph1">`image`</ph> object is scaled to the dimensions of the <ph id="ph2">`rect`</ph> rectangle.</source>
          <target state="translated">A imagem representada pelo <ph id="ph1">`image`</ph> objeto é dimensionado para as dimensões do <ph id="ph2">`rect`</ph> retângulo.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>Creates a rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo na qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source>The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.</source>
          <target state="translated">A posição do retângulo localiza a imagem em tela e o tamanho original da imagem e o tamanho do retângulo determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</source>
          <target state="translated">Desenha a imagem especificada usando seu tamanho físico original na localização especificada por um par de coordenadas.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Creates the coordinates of a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria as coordenadas de um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Draws the unscaled image.</source>
          <target state="translated">Desenha a imagem fora de escala.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>, using its original physical size, at the specified location.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado, usando seu tamanho físico original, no local especificado.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">Esse método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar este método para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>Creates the coordinates of a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria as coordenadas de um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source>Draws the unscaled image to the screen.</source>
          <target state="translated">Desenha a imagem fora de escala para a tela.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates a rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">A posição do paralelogramo localiza a imagem em tela e o tamanho do retângulo e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates points that define a destination parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">A posição do paralelogramo destino localiza a imagem na tela, o tamanho do retângulo de origem e o tamanho e a forma de paralelogramo destino determinam o dimensionamento e distorção da imagem desenhada e determina o tamanho do retângulo qual parte da imagem original é desenhada na tela.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">A posição do retângulo de destino localiza a imagem na tela, os tamanhos dos retângulos de origem e destino determinam o dimensionamento da imagem emitida e o tamanho do retângulo de origem determina qual parte da imagem original é desenhada para o tela.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">A posição do retângulo de destino localiza a imagem na tela, os tamanhos dos retângulos de origem e destino determinam o dimensionamento da imagem emitida e o tamanho do retângulo de origem determina qual parte da imagem original é desenhada para o tela.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the<ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do<ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates a rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an additional parallelogram in which to draw an adjusted image.</source>
          <target state="translated">Cria um paralelogramo adicional para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">Para paralelogramo original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates points that define a destination parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an additional parallelogram in which to draw an adjusted image.</source>
          <target state="translated">Cria um paralelogramo adicional para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">Para paralelogramo destino original, não ajustado, a posição localiza a imagem na tela, o tamanho do retângulo de origem e o tamanho e forma do paralelogramo destino determina o dimensionamento e distorção da imagem desenhada e o tamanho das retângulo determina qual parte da imagem original é desenhada na tela.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Draws a portion of an image at a specified location.</source>
          <target state="translated">Desenha uma parte de uma imagem em um local especificado.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 360 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 5 polegadas.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">Esse método desenha uma parte de uma imagem usando seu tamanho físico, portanto, a parte de imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma parte da imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar este método para desenhar essa parte da imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura em pixels da parte da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates the coordinates at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria as coordenadas no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source>The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</source>
          <target state="translated">O tamanho do retângulo de origem determina qual parte da imagem original fora de escala é desenhada na tela.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the drawn image.</source>
          <target state="translated">Largura da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the drawn image.</source>
          <target state="translated">Altura da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The rectangle defined by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters determines the position and size of the drawn image.</source>
          <target state="translated">O retângulo definido pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros determina a posição e o tamanho da imagem desenhado.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the position and size of a rectangle in which to draw the image.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</source>
          <target state="translated">A posição do retângulo localiza a imagem em tela e o tamanho da imagem original e o tamanho do retângulo determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Draws a portion of an image at a specified location.</source>
          <target state="translated">Desenha uma parte de uma imagem em um local especificado.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 360 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 5 polegadas.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">Esse método desenha uma parte de uma imagem usando seu tamanho físico, portanto, a parte de imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma parte da imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar este método para desenhar essa parte da imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura em pixels da parte da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates the coordinates at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria as coordenadas no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source>The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</source>
          <target state="translated">O tamanho do retângulo de origem determina qual parte da imagem original fora de escala é desenhada na tela.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the drawn image.</source>
          <target state="translated">Largura da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the drawn image.</source>
          <target state="translated">Altura da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>The rectangle defined by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters determines the position and size of the drawn image.</source>
          <target state="translated">O retângulo definido pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros determina a posição e o tamanho da imagem desenhado.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the position and size of a rectangle in which to draw the image.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source>The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</source>
          <target state="translated">A posição do retângulo localiza a imagem em tela e o tamanho da imagem original e o tamanho do retângulo determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This overload with the <ph id="ph1">`callback`</ph> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> parâmetro fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method:</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada:</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates a rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an additional parallelogram in which to draw an adjusted image.</source>
          <target state="translated">Cria um paralelogramo adicional para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">Para paralelogramo original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Because this example uses an overload that does not pass a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`true`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que não passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`true`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método final e o código de tratamento de exceção incluídos no exemplo imprime o texto da exceção em vez de desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This overload with the <ph id="ph1">`callback`</ph> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> parâmetro fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates a rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an additional parallelogram in which to draw an adjusted image.</source>
          <target state="translated">Cria um paralelogramo adicional para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">Para paralelogramo original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Because this example uses an overload that does not pass a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`true`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que não passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`true`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método final e o código de tratamento de exceção incluídos no exemplo imprime o texto da exceção em vez de desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Value specifying additional data for the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate to use when checking whether to stop execution of the <ph id="ph2">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Valor que especifica os dados adicionais que o delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> usará para verificar se a execução do método <ph id="ph2">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> será interrompida.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>This overload with the <ph id="ph1">`callback`</ph> and <ph id="ph2">`callbackData`</ph> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> e <ph id="ph2">`callbackData`</ph> parâmetros fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios e dados determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates a rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates an additional parallelogram in which to draw an adjusted image.</source>
          <target state="translated">Cria um paralelogramo adicional para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">Para paralelogramo original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Because this example uses an overload that passes a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`false`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to continue, and the example draws the adjusted image to the screen.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`false`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método para continuar e o exemplo desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object to draw.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Value specifying additional data for the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate to use when checking whether to stop execution of the <ph id="ph2">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Valor que especifica os dados adicionais que o delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> usará para verificar se a execução do método <ph id="ph2">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /&gt;</ph> será interrompida.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The <ph id="ph1">`srcRect`</ph> parameter specifies a rectangular portion of the <ph id="ph2">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcRect`</ph> parâmetro especifica uma parte retangular do <ph id="ph2">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>This portion is scaled and sheared to fit inside the parallelogram specified by the <ph id="ph1">`destPoints`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionado e distorcido para paralelogramo especificado pelo se ajustam a <ph id="ph1">`destPoints`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>This overload with the <ph id="ph1">`callback`</ph> and <ph id="ph2">`callbackData`</ph> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> e <ph id="ph2">`callbackData`</ph> parâmetros fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios e dados determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">`Pa`</ph><ph id="ph4">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">`Pa`</ph> <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates points that define a parallelogram in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um paralelogramo no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates a rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates an additional parallelogram in which to draw an adjusted image.</source>
          <target state="translated">Cria um paralelogramo adicional para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</source>
          <target state="translated">Para paralelogramo original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo e o tamanho e a forma de paralelogramo determinam o dimensionamento e distorção da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source>Because this example uses an overload that passes a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`false`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to continue, and the example draws the adjusted image to the screen.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`false`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método para continuar e o exemplo desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Creates a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Creates the coordinates of a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria as coordenadas de um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source>The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">A posição do retângulo de destino localiza a imagem na tela e os tamanhos dos retângulos de origem e destino determinam o dimensionamento da imagem emitida e o tamanho do retângulo de origem determina qual parte da imagem original é desenhada para o tela.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Creates the coordinates of a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria as coordenadas de um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Creates a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>Draws the image to the screen.</source>
          <target state="translated">Desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source>The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">A posição do retângulo de destino localiza a imagem na tela, os tamanhos dos retângulos de origem e destino determinam o dimensionamento da imagem emitida e o tamanho do retângulo de origem determina qual parte da imagem original é desenhada para o tela.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates the coordinates of a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria as coordenadas de um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an additional rectangle in which to draw an adjusted image.</source>
          <target state="translated">Cria um retângulo adicional na qual desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">Para o retângulo de destino original, não ajustado, a posição localiza a imagem na tela e os tamanhos dos retângulos de origem e destino determinam o dimensionamento da imagem emitida e o tamanho do retângulo de origem determina qual parte das imagem original é desenhada na tela.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates the coordinates of a source rectangle from which to extract a portion of the image.</source>
          <target state="translated">Cria as coordenadas de um retângulo de origem do qual extrair uma parte da imagem.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Sets the unit of measure of the source rectangle to pixels.</source>
          <target state="translated">Define a unidade de medida do retângulo de origem em pixels.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates an additional rectangle in which to draw an adjusted image.</source>
          <target state="translated">Cria um retângulo adicional na qual desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</source>
          <target state="translated">Para o retângulo de destino original, não ajustado, a posição localiza a imagem na tela e os tamanhos dos retângulos de origem e destino determinam o dimensionamento da imagem emitida e o tamanho do retângulo de origem determina qual parte das imagem original é desenhada na tela.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> object.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This overload with the <ph id="ph1">`callback`</ph> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> parâmetro fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates points that define a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates a source rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo de origem para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an additional destination rectangle in which to draw an adjusted image.</source>
          <target state="translated">Cria um retângulo de destino adicionais para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</source>
          <target state="translated">Para o retângulo de destino original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo de origem e o tamanho e a forma de retângulo destino determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Because this example uses an overload that does not pass a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`true`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que não passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`true`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método final e o código de tratamento de exceção incluídos no exemplo imprime o texto da exceção em vez de desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>This overload with the <ph id="ph1">`callback`</ph> parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> parâmetro fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates points that define a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates a source rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo de origem para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates an additional destination rectangle in which to draw an adjusted image.</source>
          <target state="translated">Cria um retângulo de destino adicionais para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</source>
          <target state="translated">Para o retângulo de destino original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo de origem e o tamanho e a forma de retângulo destino determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source>Because this example uses an overload that does not pass a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`true`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que não passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`true`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método final e o código de tratamento de exceção incluídos no exemplo imprime o texto da exceção em vez de desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Value specifying additional data for the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate to use when checking whether to stop execution of the <ph id="ph2">&lt;see langword="DrawImage" /&gt;</ph> method.</source>
          <target state="translated">Valor que especifica os dados adicionais que o delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> usará para verificar se a execução do método <ph id="ph2">&lt;see langword="DrawImage" /&gt;</ph> será interrompida.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>This overload with the <ph id="ph1">`callback`</ph> and <ph id="ph2">`callbackData`</ph> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> e <ph id="ph2">`callbackData`</ph> parâmetros fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios e dados determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates points that define a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates a source rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo de origem para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates an additional destination rectangle in which to draw an adjusted image.</source>
          <target state="translated">Cria um retângulo de destino adicionais para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</source>
          <target state="translated">Para o retângulo de destino original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo de origem e o tamanho e a forma de retângulo destino determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Because this example uses an overload that passes a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`false`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to continue, and the example draws the adjusted image to the screen.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`false`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método para continuar e o exemplo desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn image.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The image is scaled to fit the rectangle.</source>
          <target state="translated">A imagem é dimensionada para se ajustar ao retângulo.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The x-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The y-coordinate of the upper-left corner of the portion of the source image to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Width of the portion of the source image to draw.</source>
          <target state="translated">Largura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Height of the portion of the source image to draw.</source>
          <target state="translated">Altura da parte da imagem de origem a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the units of measure used to determine the source rectangle.</source>
          <target state="translated">O membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica as unidades de medida usadas para determinar o retângulo de origem.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies recoloring and gamma information for the <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de gama e nova coloração para o objeto <bpt id="p1">&lt;c&gt;</bpt>image<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate that specifies a method to call during the drawing of the image.</source>
          <target state="translated">Delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> que especifica um método a ser chamado durante o desenho da imagem.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>This method is called frequently to check whether to stop execution of the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /&gt;</ph> method according to application-determined criteria.</source>
          <target state="translated">Esse método é invocado com frequência para verificar se a execução do método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /&gt;</ph> deve ser interrompida de acordo com os critérios determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Value specifying additional data for the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> delegate to use when checking whether to stop execution of the <ph id="ph2">&lt;see langword="DrawImage" /&gt;</ph> method.</source>
          <target state="translated">Valor que especifica os dados adicionais que o delegado <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.DrawImageAbort" /&gt;</ph> usará para verificar se a execução do método <ph id="ph2">&lt;see langword="DrawImage" /&gt;</ph> será interrompida.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Draws the specified portion of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> at the specified location and with the specified size.</source>
          <target state="translated">Desenha a parte especificada do <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado no local especificado e com o tamanho especificado.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, and <ph id="ph4">`srcHeight`</ph> parameters specify a rectangular portion, of the <ph id="ph5">`image`</ph> object to draw.</source>
          <target state="translated">O <ph id="ph1">`srcX`</ph>, <ph id="ph2">`srcY`</ph>, <ph id="ph3">`srcWidth`</ph>, e <ph id="ph4">`srcHeight`</ph> parâmetros especificam uma parte retangular do <ph id="ph5">`image`</ph> objeto ao desenhar.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The rectangle is relative to the upper-left corner of the source image.</source>
          <target state="translated">O retângulo é relativo ao canto superior esquerdo da imagem de origem.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>This portion is scaled to fit inside the rectangle specified by the <ph id="ph1">`destRect`</ph> parameter.</source>
          <target state="translated">Esta parte é dimensionada para caber dentro do retângulo especificado pelo <ph id="ph1">`destRect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>This overload with the <ph id="ph1">`callback`</ph> and <ph id="ph2">`callbackData`</ph> parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</source>
          <target state="translated">Essa sobrecarga com a <ph id="ph1">`callback`</ph> e <ph id="ph2">`callbackData`</ph> parâmetros fornece os meios para parar o desenho de uma imagem quando ele inicia de acordo com critérios e dados determinados pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</source>
          <target state="translated">Por exemplo, um aplicativo pode iniciar uma imagem grande de desenho e o usuário pode rolar a imagem da tela, nesse caso o aplicativo foi possível interromper o desenho.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The code first defines a callback method for the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegate; the definition is simplistic and merely tests to see whether the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method calls it with a null <ph id="ph3">`callBackData`</ph> parameter.</source>
          <target state="translated">O código primeiro define um método de retorno de chamada para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> delegar; a definição é simples e simplesmente verifica se o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método chamá-lo com um valor nulo <ph id="ph3">`callBackData`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>The main body of the example performs the following actions:</source>
          <target state="translated">O corpo principal do exemplo executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback method.</source>
          <target state="translated">Cria uma instância do <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates points that define a destination rectangle in which to draw the image.</source>
          <target state="translated">Cria pontos que definem um retângulo de destino no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates a source rectangle to select the portion of the image to draw.</source>
          <target state="translated">Cria um retângulo de origem para selecionar a parte da imagem para desenhar.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Sets the graphics drawing unit to pixel.</source>
          <target state="translated">Define os gráficos de unidade de desenho de pixel.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Draws the original image to the screen.</source>
          <target state="translated">Desenha a imagem original para a tela.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates an additional destination rectangle in which to draw an adjusted image.</source>
          <target state="translated">Cria um retângulo de destino adicionais para desenhar uma imagem ajustada.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</source>
          <target state="translated">Cria e define os atributos da imagem ajustada para ter um valor de gama maior do que o normal.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Draws the adjusted image to the screen.</source>
          <target state="translated">Desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</source>
          <target state="translated">Para o retângulo de destino original, não ajustado, a posição localiza a imagem em tela e o tamanho do retângulo de origem e o tamanho e a forma de retângulo destino determinam o dimensionamento da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source>Because this example uses an overload that passes a <ph id="ph1">`callBackData`</ph> parameter, the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> callback returns <ph id="ph3">`false`</ph>, which causes the <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> method to continue, and the example draws the adjusted image to the screen.</source>
          <target state="translated">Como este exemplo usa uma sobrecarga que passa um <ph id="ph1">`callBackData`</ph> parâmetro, o <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawImageAbort&gt;</ph> retorno <ph id="ph3">`false`</ph>, que faz com que o <ph id="ph4">&lt;xref:System.Drawing.Graphics.DrawImage%2A&gt;</ph> método para continuar e o exemplo desenha a imagem ajustada à tela.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws the specified image using its original physical size at the location specified by a coordinate pair.</source>
          <target state="translated">Desenha a imagem especificada usando seu tamanho físico original no local especificado por um par de coordenadas.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the upper-left corner of the drawn image.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>Draws a specified image using its original physical size at a specified location.</source>
          <target state="translated">Desenha uma imagem especificada usando seu tamanho físico original em um local especificado.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>If you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>Creates an image from a JPEG file SampImag.jpg in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG SampImag.jpg na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>Creates a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source>Draws the entire image using its physical size.</source>
          <target state="translated">Desenha a imagem inteira usando seu tamanho físico.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the upper-left corner of the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The X and Y properties of the rectangle specify the upper-left corner.</source>
          <target state="translated">As propriedades X e Y do retângulo especificam o canto superior esquerdo.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The Width and Height properties are ignored.</source>
          <target state="translated">As propriedades de Largura e Altura são ignoradas.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Draws a specified image using its original physical size at a specified location.</source>
          <target state="translated">Desenha uma imagem especificada usando seu tamanho físico original em um local especificado.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>If you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Draws the specified image using its original physical size at the location specified by a coordinate pair.</source>
          <target state="translated">Desenha a imagem especificada usando seu tamanho físico original no local especificado por um par de coordenadas.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.</source>
          <target state="translated">Cria uma imagem de um arquivo JPEG, SampImag.jpg, na pasta do exemplo.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Creates a point at which to draw the upper-left corner of the image.</source>
          <target state="translated">Cria um ponto no qual desenhar o canto superior esquerdo da imagem.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source>Draws the entire image using its physical size.</source>
          <target state="translated">Desenha a imagem inteira usando seu tamanho físico.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the drawn image.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da imagem desenhada.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">Não usado.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Not used.</source>
          <target state="translated">Não usado.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws a specified image using its original physical size at a specified location.</source>
          <target state="translated">Desenha uma imagem especificada usando seu tamanho físico original em um local especificado.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> stores a value for pixel width and a value for horizontal resolution (dots per inch).</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> armazena um valor para a largura em pixels e um valor para a resolução horizontal (pontos por polegada).</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</source>
          <target state="translated">A largura física, medida em polegadas, de uma imagem é a largura de pixel dividida pela resolução horizontal.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</source>
          <target state="translated">Por exemplo, uma imagem com uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada tem uma largura física de 3 polegadas.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Similar remarks apply to pixel height and physical height.</source>
          <target state="translated">Comentários semelhantes se aplicam a altura em pixels e altura física.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> método desenha uma imagem usando seu tamanho físico, portanto, a imagem terá seu tamanho correto em polegadas, independentemente da resolução (pontos por polegada) do dispositivo de vídeo.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</source>
          <target state="translated">Por exemplo, suponha que uma imagem tem uma largura de pixel de 216 e a resolução horizontal de 72 pontos por polegada.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)*96 = 288.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaled%2A&gt;</ph> para desenhar a imagem em um dispositivo com uma resolução de 96 pontos por polegada, a largura de pixel da imagem renderizada será (216/72) * 288 = 96.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> to draw.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> in which to draw the image.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> no qual desenhar a imagem.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</source>
          <target state="translated">Desenha a imagem especificada sem dimensionamento e recortes, caso necessários, para se ajustar no retângulo especificado.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>To run this example, paste it into a Windows Form.</source>
          <target state="translated">Para executar este exemplo, cole-o em um formulário do Windows.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source>Handle the form’s <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call the <ph id="ph2">`DrawImageUnscaled`</ph> method from the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar o formulário <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos e chamadas de <ph id="ph2">`DrawImageUnscaled`</ph> método do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de manipulação de eventos, passando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a line connecting the two points specified by the coordinate pairs.</source>
          <target state="translated">Desenha uma linha que conecta os dois pontos especificados por pares de coordenadas.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da linha.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the first point to connect.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o primeiro ponto de conexão.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the second point to connect.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o segundo ponto de conexão.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source>Draws a line connecting two <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma linha conectando duas estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source>Creates points for the endpoints of the line.</source>
          <target state="translated">Cria pontos de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source>Draws the line to the screen.</source>
          <target state="translated">Desenha a linha para a tela.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da linha.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the first point to connect.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o primeiro ponto de conexão.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the second point to connect.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o segundo ponto de conexão.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Draws a line connecting two <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma linha conectando duas estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>This method draws a line connecting the two points specified by the <ph id="ph1">`pt1`</ph> and p<ph id="ph2">`2`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma linha que conecta os dois pontos especificados pelo <ph id="ph1">`pt1`</ph> e p<ph id="ph2">`2`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Creates points for the endpoints of the line.</source>
          <target state="translated">Cria pontos de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Draws the line to the screen.</source>
          <target state="translated">Desenha a linha para a tela.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da linha.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the first point.</source>
          <target state="translated">A coordenada X do primeiro ponto.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the first point.</source>
          <target state="translated">A coordenada y do primeiro ponto.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the second point.</source>
          <target state="translated">A coordenada X do segundo ponto.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the second point.</source>
          <target state="translated">A coordenada y do segundo ponto.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws a line connecting the two points specified by the coordinate pairs.</source>
          <target state="translated">Desenha uma linha que conecta os dois pontos especificados por pares de coordenadas.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method draws a line connecting the two points specified by the <ph id="ph1">`x1`</ph>, <ph id="ph2">`y1`</ph>, <ph id="ph3">`x2`</ph>, and <ph id="ph4">`y2`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma linha que conecta os dois pontos especificados pelo <ph id="ph1">`x1`</ph>, <ph id="ph2">`y1`</ph>, <ph id="ph3">`x2`</ph>, e <ph id="ph4">`y2`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the coordinates of the endpoints of the line.</source>
          <target state="translated">Cria as coordenadas dos pontos de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the line to the screen.</source>
          <target state="translated">Desenha a linha para a tela.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the line.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da linha.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the first point.</source>
          <target state="translated">A coordenada X do primeiro ponto.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the first point.</source>
          <target state="translated">A coordenada y do primeiro ponto.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the second point.</source>
          <target state="translated">A coordenada X do segundo ponto.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the second point.</source>
          <target state="translated">A coordenada y do segundo ponto.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws a line connecting the two points specified by the coordinate pairs.</source>
          <target state="translated">Desenha uma linha que conecta os dois pontos especificados por pares de coordenadas.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>This method draws a line connecting the two points specified by the <ph id="ph1">`x1`</ph>, <ph id="ph2">`y1`</ph>, <ph id="ph3">`x2`</ph>, and <ph id="ph4">`y2`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma linha que conecta os dois pontos especificados pelo <ph id="ph1">`x1`</ph>, <ph id="ph2">`y1`</ph>, <ph id="ph3">`x2`</ph>, e <ph id="ph4">`y2`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the coordinates of the endpoints of the line.</source>
          <target state="translated">Cria as coordenadas dos pontos de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the line to the screen.</source>
          <target state="translated">Desenha a linha para a tela.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a series of line segments that connect an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de segmentos de linha que se conectam a uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the line segments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo dos segmentos de linha.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represent the points to connect.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representam os pontos de conexão.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws a series of line segments that connect an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de segmentos de linha que se conectam a uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>This method draws a series of lines connecting an array of ending points.</source>
          <target state="translated">Esse método desenha uma série de linhas que conectam a uma matriz de pontos finais.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The first two points in the array specify the first line.</source>
          <target state="translated">Os dois primeiros pontos na matriz especificam a primeira linha.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</source>
          <target state="translated">Cada ponto adicional que especifica o final de um segmento de linha cujo ponto de partida é o ponto final do segmento de linha anterior.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates an array of points of segments of the line.</source>
          <target state="translated">Cria uma matriz de pontos de segmentos de linha.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws the connected line segments to the screen.</source>
          <target state="translated">Desenha os segmentos de linha conectada à tela.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the line segments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo dos segmentos de linha.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the points to connect.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representam os pontos de conexão.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws a series of line segments that connect an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de segmentos de linha que se conectam a uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>This method draws a series of lines connecting an array of ending points.</source>
          <target state="translated">Esse método desenha uma série de linhas que conectam a uma matriz de pontos finais.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The first two points in the array specify the first line.</source>
          <target state="translated">Os dois primeiros pontos na matriz especificam a primeira linha.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</source>
          <target state="translated">Cada ponto adicional que especifica o final de um segmento de linha cujo ponto de partida é o ponto final do segmento de linha anterior.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Code creates a black pen.</source>
          <target state="translated">O código cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates an array of points of segments of the line.</source>
          <target state="translated">Cria uma matriz de pontos de segmentos de linha.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws the connected line segments to the screen.</source>
          <target state="translated">Desenha os segmentos de linha conectada à tela.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do caminho.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to draw.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Draws a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Desenha um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The current transformation in the graphic context is applied to the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> before it is drawn.</source>
          <target state="translated">A transformação atual no contexto de gráfico é aplicada para o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> antes de ele é desenhado.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a graphics path object and adds an ellipse to it.</source>
          <target state="translated">Cria um objeto de caminho de gráficos e adiciona uma elipse a ele.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Draws the graphics path to the screen.</source>
          <target state="translated">Desenha o caminho de gráficos para a tela.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</source>
          <target state="translated">Desenha uma forma de pizza definida por uma elipse especificada por um par de coordenadas, uma largura, uma altura e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the pie shape.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo delimitador que define a elipse da qual a fatia da pizza foi obtida.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do eixo x até o primeiro lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Angle measured in degrees clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> para o segundo lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws a pie shape defined by an ellipse specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure and two radial lines.</source>
          <target state="translated">Desenha uma forma de pizza definida por uma reticência especificada por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</source>
          <target state="translated">Esse método desenha uma forma de pizza definida por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The pie shape consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters, and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A forma de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle that bounds a complete ellipse.</source>
          <target state="translated">Cria um retângulo que circunda uma elipse concluída.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</source>
          <target state="translated">Define os ângulos no qual iniciar desenho (em relação ao eixo x) e por meio do qual desenhar (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws the pie segment to the screen.</source>
          <target state="translated">Desenha o segmento de pizza na tela.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the pie shape.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo delimitador que define a elipse da qual a fatia da pizza foi obtida.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do eixo x até o primeiro lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Angle measured in degrees clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> para o segundo lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Draws a pie shape defined by an ellipse specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure and two radial lines.</source>
          <target state="translated">Desenha uma forma de pizza definida por uma reticência especificada por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</source>
          <target state="translated">Esse método desenha uma forma de pizza definida por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The pie shape consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters, and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A forma de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Creates a rectangle that bounds a complete ellipse.</source>
          <target state="translated">Cria um retângulo que circunda uma elipse concluída.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</source>
          <target state="translated">Define os ângulos no qual iniciar desenho (em relação ao eixo x) e por meio do qual desenhar (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Draws the pie segment to the screen.</source>
          <target state="translated">Desenha o segmento de pizza na tela.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the pie shape.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse de onde vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse de onde vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse da qual vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse da qual vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do eixo x até o primeiro lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Angle measured in degrees clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> para o segundo lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</source>
          <target state="translated">Desenha uma forma de pizza definida por uma elipse especificada por um par de coordenadas, uma largura, uma altura e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma forma de pizza definida por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador descrito pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The pie shape consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters, and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A forma de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the position and size of a rectangle that bounds a complete ellipse.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo que circunda uma elipse concluída.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</source>
          <target state="translated">Define os ângulos no qual iniciar desenho (em relação ao eixo x) e por meio do qual desenhar (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the pie shape to the screen.</source>
          <target state="translated">Desenha a forma de pizza na tela.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the pie shape.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse de onde vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse de onde vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse da qual vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse da qual vem a forma de pizza.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do eixo x até o primeiro lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Angle measured in degrees clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie shape.</source>
          <target state="translated">Ângulo medido em graus no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> para o segundo lado da forma de pizza.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</source>
          <target state="translated">Desenha uma forma de pizza definida por uma elipse especificada por um par de coordenadas, uma largura, uma altura e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters.</source>
          <target state="translated">Esse método desenha uma forma de pizza definida por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador descrito pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The pie shape consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters, and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A forma de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the position and size of a rectangle that bounds a complete ellipse.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo que circunda uma elipse concluída.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</source>
          <target state="translated">Define os ângulos no qual iniciar desenho (em relação ao eixo x) e por meio do qual desenhar (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the pie segment to the screen.</source>
          <target state="translated">Desenha o segmento de pizza na tela.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a polygon defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um polígono definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the polygon.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do polígono.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represent the vertices of the polygon.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os vértices do polígono.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws a polygon defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um polígono definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Every pair of two consecutive points in the array specifies a side of the polygon.</source>
          <target state="translated">Cada par de dois pontos consecutivos na matriz Especifica um lado do polígono.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>In addition, if the last point and the first point of the array do not coincide, they specify the last side of the polygon.</source>
          <target state="translated">Além disso, se o último ponto e o primeiro ponto da matriz não coincidem, eles especificar o último lado do polígono.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Creates an array of seven points for the vertices of the polygon.</source>
          <target state="translated">Cria uma matriz de sete pontos para os vértices do polígono.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source>Draws the polygon to the screen.</source>
          <target state="translated">Desenha o polígono na tela.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the polygon.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do polígono.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the vertices of the polygon.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os vértices do polígono.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws a polygon defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha um polígono definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Every pair of two consecutive points in the array specifies a side of the polygon.</source>
          <target state="translated">Cada par de dois pontos consecutivos na matriz Especifica um lado do polígono.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>In addition, if the last point and the first of the array point do not coincide, they specify the last side of the polygon.</source>
          <target state="translated">Além disso, se o último ponto e o primeiro ponto de matriz não coincidem, eles especificar o último lado do polígono.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Creates an array of seven points for the vertices of the polygon.</source>
          <target state="translated">Cria uma matriz de sete pontos para os vértices do polígono.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>Draws the polygon to the screen.</source>
          <target state="translated">Desenha o polígono na tela.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a rectangle specified by a coordinate pair, a width, and a height.</source>
          <target state="translated">Desenha um retângulo especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the rectangle.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do retângulo.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the rectangle to draw.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Draws a rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Desenha um retângulo especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>For information about how to draw a <ph id="ph1">&lt;xref:System.Drawing.RectangleF&gt;</ph>, see <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para obter informações sobre como desenhar uma <ph id="ph1">&lt;xref:System.Drawing.RectangleF&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Creates a rectangle.</source>
          <target state="translated">Cria um retângulo.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source>Draws the rectangle to the screen.</source>
          <target state="translated">Desenha um retângulo para a tela.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the rectangle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do retângulo.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the rectangle to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the rectangle to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the rectangle to draw.</source>
          <target state="translated">A largura do retângulo a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the rectangle to draw.</source>
          <target state="translated">A altura do retângulo a ser desenhado.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws a rectangle specified by a coordinate pair, a width, and a height.</source>
          <target state="translated">Desenha um retângulo especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For information about how to draw a <ph id="ph1">&lt;xref:System.Drawing.RectangleF&gt;</ph>, see <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para obter informações sobre como desenhar uma <ph id="ph1">&lt;xref:System.Drawing.RectangleF&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the position and size of a rectangle.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the rectangle to the screen.</source>
          <target state="translated">Desenha um retângulo para a tela.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the rectangle.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo do retângulo.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangle to draw.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangle to draw.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the rectangle to draw.</source>
          <target state="translated">A largura do retângulo a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the rectangle to draw.</source>
          <target state="translated">A altura do retângulo a ser desenhada.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws a rectangle specified by a coordinate pair, a width, and a height.</source>
          <target state="translated">Desenha um retângulo especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>For information about how to draw a <ph id="ph1">&lt;xref:System.Drawing.RectangleF&gt;</ph>, see <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para obter informações sobre como desenhar uma <ph id="ph1">&lt;xref:System.Drawing.RectangleF&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the position and size of a rectangle.</source>
          <target state="translated">Cria a posição e tamanho de um retângulo.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source>Draws the rectangle to the screen.</source>
          <target state="translated">Desenha um retângulo para a tela.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws a series of rectangles specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de retângulos especificados por estruturas de <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the outlines of the rectangles.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo dos contornos dos retângulos.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures that represent the rectangles to draw.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa os retângulos a serem desenhados.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>Draws a series of rectangles specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de retângulos especificados por estruturas de <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>Creates an array of three rectangles.</source>
          <target state="translated">Cria uma matriz de três retângulos.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>Draws the rectangles to the screen.</source>
          <target state="translated">Desenha os retângulos para a tela.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is a zero-length array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é uma matriz de tamanho zero.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that determines the color, width, and style of the outlines of the rectangles.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que determina a cor, a largura e o estilo dos contornos dos retângulos.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that represent the rectangles to draw.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa os retângulos a serem desenhados.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>Draws a series of rectangles specified by <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures.</source>
          <target state="translated">Desenha uma série de retângulos especificados por estruturas de <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>Creates a black pen.</source>
          <target state="translated">Cria uma caneta preta.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>Creates an array of three rectangles.</source>
          <target state="translated">Cria uma matriz de três retângulos.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>Draws the rectangles to the screen.</source>
          <target state="translated">Desenha os retângulos para a tela.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pen" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is a zero-length array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é uma matriz de tamanho zero.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Draws the specified text string at the specified location with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects.</source>
          <target state="translated">Desenha a cadeia de texto especificada no local especificado com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>String to draw.</source>
          <target state="translated">Cadeia de caracteres a ser extraída.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the color and texture of the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina a cor e a textura do texto extraído.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the upper-left corner of the drawn text.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o canto superior esquerdo do texto desenhado.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>Draws the specified text string at the specified location with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects.</source>
          <target state="translated">Desenha a cadeia de texto especificada no local especificado com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>Creates a text string to draw.</source>
          <target state="translated">Cria uma cadeia de caracteres de texto para desenhar.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>Defines the font as Arial (16pt).</source>
          <target state="translated">Define a fonte Arial (16 pt).</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>Creates a solid, black brush to draw with.</source>
          <target state="translated">Cria um pincel sólido, preto para desenhar com.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>Creates a point for the upper-left corner at which to draw the text.</source>
          <target state="translated">Cria um ponto para o canto superior esquerdo no qual desenhar o texto.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>Draws the string to the screen using the font, brush, and destination point.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela com a fonte, o pincel e o ponto de destino.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>String to draw.</source>
          <target state="translated">Cadeia de caracteres a ser extraída.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the color and texture of the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina a cor e a textura do texto extraído.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location of the drawn text.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local do texto extraído.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Draws the specified text string in the specified rectangle with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects.</source>
          <target state="translated">Desenha a cadeia de texto especificada no retângulo especificado com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The text represented by the <ph id="ph1">`s`</ph> parameter is drawn inside the rectangle represented by the <ph id="ph2">`layoutRectangle`</ph> parameter.</source>
          <target state="translated">O texto representado pelo <ph id="ph1">`s`</ph> parâmetro é desenhado dentro do retângulo representado pelo <ph id="ph2">`layoutRectangle`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>If the text does not fit inside the rectangle, it is truncated at the nearest word.</source>
          <target state="translated">Se o texto não se ajustar dentro do retângulo, ele será truncado na palavra mais próxima.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>To further manipulate how the string is drawn inside the rectangle use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> overload that takes a <ph id="ph2">&lt;xref:System.Drawing.StringFormat&gt;</ph>.</source>
          <target state="translated">Para manipular mais como a cadeia de caracteres é desenhada dentro o uso do retângulo de <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> sobrecarga que utiliza um <ph id="ph2">&lt;xref:System.Drawing.StringFormat&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a text string to draw.</source>
          <target state="translated">Cria uma cadeia de caracteres de texto para desenhar.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Defines the font as Arial (16pt).</source>
          <target state="translated">Define a fonte Arial (16 pt).</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a solid, black brush to draw with.</source>
          <target state="translated">Cria um pincel sólido, preto para desenhar com.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a rectangle in which to draw the text.</source>
          <target state="translated">Cria um retângulo na qual desenhar o texto.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Draws the rectangle to the screen.</source>
          <target state="translated">Desenha um retângulo para a tela.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Draws the string to the screen using the font, brush, and destination rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela com a fonte, o pincel e o retângulo de destino.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>String to draw.</source>
          <target state="translated">Cadeia de caracteres a ser extraída.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the color and texture of the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina a cor e a textura do texto extraído.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the upper-left corner of the drawn text.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o canto superior esquerdo do texto desenhado.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica os atributos de formatação, como espaçamento de linha e alinhamento, que são aplicados ao texto desenhado.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Draws the specified text string at the specified location with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects using the formatting attributes of the specified <ph id="ph3">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Desenha a cadeia de texto especificada na localização com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados usando os atributos de formatação do <ph id="ph3">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a text string to draw.</source>
          <target state="translated">Cria uma cadeia de caracteres de texto para desenhar.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Defines the font as Arial (16pt).</source>
          <target state="translated">Define a fonte Arial (16 pt).</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a solid, black brush to draw with.</source>
          <target state="translated">Cria um pincel sólido, preto para desenhar com.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a point for the upper-left corner at which to draw the text.</source>
          <target state="translated">Cria um ponto para o canto superior esquerdo no qual desenhar o texto.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Sets the format of the string to draw vertically.</source>
          <target state="translated">Define o formato da cadeia de caracteres para desenhar verticalmente.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Draws the string to the screen using the font, brush, destination point, and format.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela com a fonte, o pincel, o ponto de destino e o formato.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>String to draw.</source>
          <target state="translated">Cadeia de caracteres a ser extraída.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the color and texture of the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina a cor e a textura do texto extraído.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location of the drawn text.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local do texto extraído.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica os atributos de formatação, como espaçamento de linha e alinhamento, que são aplicados ao texto desenhado.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Draws the specified text string in the specified rectangle with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects using the formatting attributes of the specified <ph id="ph3">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Desenha a cadeia de texto especificada no retângulo especificado com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados usando os atributos de formatação do <ph id="ph3">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The text represented by the <ph id="ph1">`s`</ph> parameter is drawn inside the rectangle represented by the <ph id="ph2">`layoutRectangle`</ph> parameter.</source>
          <target state="translated">O texto representado pelo <ph id="ph1">`s`</ph> parâmetro é desenhado dentro do retângulo representado pelo <ph id="ph2">`layoutRectangle`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>If the text does not fit inside the rectangle, it is truncated at the nearest word, unless otherwise specified with the <ph id="ph1">`format`</ph> parameter.</source>
          <target state="translated">Se o texto não se ajustar dentro do retângulo, ele será truncado na palavra mais próxima, a menos que especificado de outra forma com o <ph id="ph1">`format`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Creates a text string to draw.</source>
          <target state="translated">Cria uma cadeia de caracteres de texto para desenhar.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Defines the font as Arial (16pt).</source>
          <target state="translated">Define a fonte Arial (16 pt).</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Creates a solid, black brush to draw with.</source>
          <target state="translated">Cria um pincel sólido, preto para desenhar com.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Creates a rectangle in which to draw the text.</source>
          <target state="translated">Cria um retângulo na qual desenhar o texto.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Draws the rectangle to the screen.</source>
          <target state="translated">Desenha um retângulo para a tela.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Sets the format of the string to center it within the rectangle.</source>
          <target state="translated">Define o formato da cadeia de caracteres para centralizá-la dentro do retângulo.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Draws the string to the screen using the font, brush, and destination rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela com a fonte, o pincel e o retângulo de destino.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>String to draw.</source>
          <target state="translated">Cadeia de caracteres a ser extraída.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the color and texture of the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina a cor e a textura do texto extraído.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the drawn text.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do texto desenhado.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the drawn text.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do texto desenhado.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>Draws the specified text string at the specified location with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects.</source>
          <target state="translated">Desenha a cadeia de texto especificada no local especificado com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>Creates a text string to draw.</source>
          <target state="translated">Cria uma cadeia de caracteres de texto para desenhar.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>Defines the font as Arial (16pt).</source>
          <target state="translated">Define a fonte Arial (16 pt).</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>Creates a solid black brush to draw with.</source>
          <target state="translated">Cria um pincel sólido preto para desenhar com.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>Creates a point for the upper-left corner at which to draw the text.</source>
          <target state="translated">Cria um ponto para o canto superior esquerdo no qual desenhar o texto.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>Draws the string to the screen using the font, brush, and destination point.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela com a fonte, o pincel e o ponto de destino.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>String to draw.</source>
          <target state="translated">Cadeia de caracteres a ser extraída.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the color and texture of the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina a cor e a textura do texto extraído.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>The x-coordinate of the upper-left corner of the drawn text.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do texto desenhado.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>The y-coordinate of the upper-left corner of the drawn text.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do texto desenhado.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica os atributos de formatação, como espaçamento de linha e alinhamento, que são aplicados ao texto desenhado.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Draws the specified text string at the specified location with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> objects using the formatting attributes of the specified <ph id="ph3">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Desenha a cadeia de texto especificada na localização com os objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificados usando os atributos de formatação do <ph id="ph3">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Creates a text string to draw.</source>
          <target state="translated">Cria uma cadeia de caracteres de texto para desenhar.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Defines the font as Arial (16pt).</source>
          <target state="translated">Define a fonte Arial (16 pt).</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Creates a solid, black brush to draw with.</source>
          <target state="translated">Cria um pincel sólido, preto para desenhar com.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Creates the coordinates of a point for the upper-left corner at which to draw the text.</source>
          <target state="translated">Cria as coordenadas de um ponto para o canto superior esquerdo no qual desenhar o texto.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Sets the format of the string to draw vertically</source>
          <target state="translated">Define o formato da cadeia de caracteres para desenhar verticalmente</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>Draws the string to the screen using the font, brush, destination point, and format.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela com a fonte, o pincel, o ponto de destino e o formato.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> that represents the container this method restores.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /&gt;</ph> que representa o contêiner restaurado por esse método.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Closes the current graphics container and restores the state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the state saved by a call to the <ph id="ph2">&lt;see cref="M:System.Drawing.Graphics.BeginContainer" /&gt;</ph> method.</source>
          <target state="translated">Fecha o contêiner gráfico atual e restaura o estado deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o estado salvo por uma chamada ao método <ph id="ph2">&lt;see cref="M:System.Drawing.Graphics.BeginContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Use this method with the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method to create nested graphics containers.</source>
          <target state="translated">Use esse método com o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método para criar contêineres de elementos gráficos aninhados.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</source>
          <target state="translated">Contêineres de gráficos retêm estado de gráficos, como transformação, região de recorte e propriedades de processamento.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, an information block that holds the state of the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> is put on a stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, um bloco de informações que mantém o estado do <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> é colocada em uma pilha.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> that identifies that information block.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> que identifica esse bloco de informações.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>When you pass the identifying object to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the information block is removed from the stack and is used to restore the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call.</source>
          <target state="translated">Quando você passa o objeto de identificação para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o bloco de informações é removido da pilha e é usado para restaurar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Containers can be nested; that is, you can call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method several times before you call the <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method.</source>
          <target state="translated">Contêineres podem ser aninhados. ou seja, você pode chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método várias vezes antes de chamar o <ph id="ph2">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Each time you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method, an information block is put on the stack, and you receive a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> for the information block.</source>
          <target state="translated">Cada vez que você chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método, um bloco de informações é colocado na pilha, e você recebe um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph> para o bloco de informações.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>When you pass one of those objects to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is returned to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call that returned that particular <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</source>
          <target state="translated">Quando você passa um desses objetos para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é retornado para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método retornado que determinado <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>The information block placed on the stack by that <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call is removed from the stack, and all information blocks placed on that stack after that <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call are also removed.</source>
          <target state="translated">O bloco de informações é colocado na pilha de por que <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método é removida da pilha e todos os blocos de informações é colocado na pilha depois disso <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método também serão removidos.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method place information blocks on the same stack as calls to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> blocos de informações de local do método na mesma pilha de chamadas para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Just as an <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method call is paired with a <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call, a <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method call is paired with a <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call.</source>
          <target state="translated">Assim como um <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph2">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método, uma <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Likewise, when you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Da mesma forma, quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Opens a new graphics container and saves the old container.</source>
          <target state="translated">Abre um novo contêiner de elementos gráficos e salva o recipiente antigo.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Translates the world coordinates in the container.</source>
          <target state="translated">Converte as coordenadas do mundo no contêiner.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Fills a red rectangle in the (translated coordinates of the) new container.</source>
          <target state="translated">Preenche um retângulo vermelho a (convertido coordenadas do) novo contêiner.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Closes the new container and restores the saved container.</source>
          <target state="translated">Fecha o novo contêiner e restaura o contêiner salvo.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>Fills a green rectangle (to the untranslated coordinates) of the saved container.</source>
          <target state="translated">Preenche um retângulo verde (para as coordenadas não traduzidos) do contêiner salvo.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
          <source>The result is a green rectangle that overlies a red rectangle of the same size.</source>
          <target state="translated">O resultado é um retângulo verde que overlies um retângulo vermelho do mesmo tamanho.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The following code example creates a form that has a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> as one of its private members.</source>
          <target state="translated">O exemplo de código a seguir cria um formulário que possui um <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> como um de seus membros privados.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%2A&gt;</ph>, which calls the form's <ph id="ph3">`MetafileCallback`</ph> method for each record in the metafile.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> chamadas de método <ph id="ph2">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%2A&gt;</ph>, que chama o formulário <ph id="ph3">`MetafileCallback`</ph> método para cada registro de metarquivo.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The <ph id="ph1">`MetafileCallback`</ph> method calls the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">`MetafileCallback`</ph> chamadas de método de <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Notice that the <ph id="ph1">`MetafileCallback`</ph> method receives the record data as an <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method expects the record data to be a byte array.</source>
          <target state="translated">Observe que o <ph id="ph1">`MetafileCallback`</ph> método recebe os dados de registro como um <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph>, mas o <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método espera que os dados de registro para ser uma matriz de bytes.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The call to <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A&gt;</ph> copies the record data to a byte array so that it can be passed to <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>.</source>
          <target state="translated">A chamada para <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A&gt;</ph> copia os dados de registro para uma matriz de bytes, para que ele pode ser passado para <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um por vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um por vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%2A&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um por vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um por vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point using specified image attributes.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point using specified image attributes.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the method of the specific <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o método específico <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records of a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</source>
          <target state="translated">Envia os registros do <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> especificado, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Sends the records of a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records of a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Sends the records of a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle.</source>
          <target state="translated">Envia os registros em um retângulo selecionado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Each record is individually sent to a callback method specified by the<ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo<ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point using specified image attributes.</source>
          <target state="translated">Envia os registros em um retângulo especificado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</source>
          <target state="translated">Envia os registros em um retângulo especificado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that specifies the location of the upper-left corner of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local do canto superior esquerdo do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display at a specified point using specified image attributes.</source>
          <target state="translated">Envia os registros em um retângulo especificado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um ponto especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram that determines the size and location of the drawn metafile.</source>
          <target state="translated">Matriz de três estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo que determina o tamanho e o local do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records in a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</source>
          <target state="translated">Envia os registros em um retângulo especificado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um paralelogramo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The <ph id="ph1">`destPoints`</ph> parameter specifies three points of a parallelogram.</source>
          <target state="translated">O <ph id="ph1">`destPoints`</ph> parâmetro especifica três pontos de um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The three <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</source>
          <target state="translated">Os três <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas representam os cantos superior esquerdo, superior direito e inferior esquerdo do paralelogramo.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The fourth point is extrapolated from the first three to form a parallelogram.</source>
          <target state="translated">O quarto ponto é inferido das três primeiras para formar um paralelogramo.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The drawn metafile is scaled and sheared to fit the parallelogram.</source>
          <target state="translated">O metarquivo desenhado é dimensionado e distorcido para ajustar o paralelogramo.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records of a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</source>
          <target state="translated">Envia os registros em um retângulo especificado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> to enumerate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph> para enumerar.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the location and size of the drawn metafile.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o local e o tamanho do metarquivo desenhado.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica a parte do metarquivo, em relação ao seu canto superior esquerdo, a desenhar.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> parameter contains.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> que especifica a unidade de medida usada para determinar a parte do metarquivo contida no retângulo especificado pelo parâmetro <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> delegate that specifies the method to which the metafile records are sent.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /&gt;</ph> que especifica o método para o qual os registros de metarquivo são enviados.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Internal pointer that is required, but ignored.</source>
          <target state="translated">Ponteiro interno que é necessário, mas ignorado.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>You can pass <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> for this parameter.</source>
          <target state="translated">Você pode passar <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> that specifies image attribute information for the drawn image.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.ImageAttributes" /&gt;</ph> que especifica informações de atributo de imagem para a imagem desenhada.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Sends the records of a selected rectangle from a <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</source>
          <target state="translated">Envia os registros em um retângulo especificado de um <ph id="ph1">&lt;see cref="T:System.Drawing.Imaging.Metafile" /&gt;</ph>, um de cada vez, para um método de retorno de chamada para exibição em um retângulo especificado usando os atributos de imagem especificados.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>This method enumerates the records contained in the specified metafile.</source>
          <target state="translated">Esse método enumera os registros contidos o metarquivo especificado.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Each record is individually sent to a callback method specified by the <ph id="ph1">`callback`</ph> parameter.</source>
          <target state="translated">Cada registro individualmente é enviado a um método de retorno de chamada especificado pelo <ph id="ph1">`callback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Typically, the callback method calls the <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method to "play back", or draw, the record.</source>
          <target state="translated">Normalmente, as chamadas de método de retorno de chamada a <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método "reproduzir", ou desenho, o registro.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>If the callback method calls <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, it must do so by calling the <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> method of the specific <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> that is being enumerated.</source>
          <target state="translated">Se o método de retorno de chamada chama <ph id="ph1">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph>, ele deve fazer isso chamando o <ph id="ph2">&lt;xref:System.Drawing.Imaging.Metafile.PlayRecord%2A&gt;</ph> método específico <ph id="ph3">&lt;xref:System.Drawing.Imaging.Metafile&gt;</ph> que está sendo enumerada.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>Any drawing that takes place outside of the rectangle specified by the <ph id="ph1">`srcRect`</ph> parameter is ignored.</source>
          <target state="translated">Qualquer desenho ocorre fora do retângulo especificado pelo <ph id="ph1">`srcRect`</ph> parâmetro é ignorado.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>The image attributes specified by the <ph id="ph1">`imageAttr`</ph> parameter replace those specified when the metafile was written.</source>
          <target state="translated">Os atributos de imagem especificados pelo <ph id="ph1">`imageAttr`</ph> substituição de parâmetro especificados quando o metarquivo foi gravado.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</source>
          <target state="translated">Para obter um exemplo de código, consulte <ph id="ph1">&lt;xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to exclude the area specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para excluir a área especificada por um <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that specifies the rectangle to exclude from the clip region.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> estrutura que especifica o retângulo para excluir da região de recorte.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to exclude the area specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para excluir a área especificada por um <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>This method excludes the area specified by the <ph id="ph1">`rect`</ph> parameter from the current clip region and assigns the resulting area to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Este método exclui a área especificada pelo <ph id="ph1">`rect`</ph> parâmetro da região de clip atual e atribui a área resultante para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade deste <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</source>
          <target state="translated">Cria um pixel 100 retângulo 100 pixels cujo canto superior esquerdo é em coordenadas (100, 100).</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>Creates a region defined by the rectangle.</source>
          <target state="translated">Cria uma região definida pelo retângulo.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>Sets the clipping region to exclude the rectangular region.</source>
          <target state="translated">Define a região de recorte para excluir a região retangular.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</source>
          <target state="translated">Preenche um pixel 300, 300 retângulo de pixel cujo canto superior esquerdo é em coordenadas (0, 0) com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
          <source>The result is a blue rectangle with a square region toward its lower-right corner missing.</source>
          <target state="translated">O resultado é um retângulo azul com uma região quadrada para o canto inferior direito ausente.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> that specifies the region to exclude from the clip region.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> que especifica a região a ser excluída da região de recorte.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to exclude the area specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para excluir a área especificada por um <ph id="ph2">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>This method excludes the area specified by the <ph id="ph1">`region`</ph> parameter from the current clip region and assigns the resulting area to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Este método exclui a área especificada pelo <ph id="ph1">`region`</ph> parâmetro da região de clip atual e atribui a área resultante para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade deste <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</source>
          <target state="translated">Cria um pixel 100 retângulo 100 pixels cujo canto superior esquerdo é em coordenadas (100, 100).</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>Sets the clipping region to exclude the rectangle.</source>
          <target state="translated">Define a região de recorte para excluir o retângulo.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</source>
          <target state="translated">Preenche um pixel 300, 300 retângulo de pixel cujo canto superior esquerdo é em coordenadas (0, 0) com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
          <source>The result is a blue rectangle with a square area toward its lower-right corner missing.</source>
          <target state="translated">O resultado é um retângulo azul com uma área quadrado para o canto inferior direito ausente.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>This method fills the interior of a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Este método preenche o interior de um spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Creates an array of four points to define a spline.</source>
          <target state="translated">Cria uma matriz de quatro pontos para definir uma spline.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Fills the curve on the screen.</source>
          <target state="translated">Preenche a curva na tela.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>The curve has a default tension of 0.5.</source>
          <target state="translated">A curva tem uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>This method fills the interior of a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Este método preenche o interior de um spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.PointF&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Creates an array of four points to define a spline.</source>
          <target state="translated">Cria uma matriz de quatro pontos para definir uma spline.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Fills the curve on the screen.</source>
          <target state="translated">Preenche a curva na tela.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>The curve has a default tension of 0.5.</source>
          <target state="translated">A curva tem uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the curve is filled.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como a curva é preenchida.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures using the specified fill mode.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> usando o modo de preenchimento especificado.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>This method fills the interior of a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Este método preenche o interior de um spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates an array of four points to define a spline.</source>
          <target state="translated">Cria uma matriz de quatro pontos para definir uma spline.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Sets the fill mode to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</source>
          <target state="translated">Define o modo de preenchimento para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the curve on the screen.</source>
          <target state="translated">Preenche a curva na tela.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>The curve has a default tension of 0.5.</source>
          <target state="translated">A curva tem uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the curve is filled.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como a curva é preenchida.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures using the specified fill mode.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> usando o modo de preenchimento especificado.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>This method fills the interior of a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Este método preenche o interior de um spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>This method uses a default tension of 0.5.</source>
          <target state="translated">Esse método usa uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates an array of four points to define a spline.</source>
          <target state="translated">Cria uma matriz de quatro pontos para definir uma spline.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Sets the fill mode to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</source>
          <target state="translated">Define o modo de preenchimento para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the curve on the screen.</source>
          <target state="translated">Preenche a curva na tela.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>The curve has a default tension of 0.5.</source>
          <target state="translated">A curva tem uma tensão padrão de 0,5.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the curve is filled.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como a curva é preenchida.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures using the specified fill mode and tension.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> usando a tensão e o modo de preenchimento especificados.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>This method fills the interior of a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Este método preenche o interior de um spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Creates an array of four points to define a spline.</source>
          <target state="translated">Cria uma matriz de quatro pontos para definir uma spline.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Sets the fill mode to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</source>
          <target state="translated">Define o modo de preenchimento para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Sets the tension to 1.0.</source>
          <target state="translated">Define a tensão 1.0.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Fills the curve on the screen.</source>
          <target state="translated">Preenche a curva na tela.</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define the spline.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem o spline.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the curve is filled.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como a curva é preenchida.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Value greater than or equal to 0.0F that specifies the tension of the curve.</source>
          <target state="translated">Valor maior ou igual a 0.0F que especifica a tensão da curva.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Fills the interior of a closed cardinal spline curve defined by an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures using the specified fill mode and tension.</source>
          <target state="translated">Preenche o interior de uma curva spline cardinal fechada definido por uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> usando a tensão e o modo de preenchimento especificados.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>This method fills the interior of a closed cardinal spline that passes through each point in the array.</source>
          <target state="translated">Este método preenche o interior de um spline cardeal fechada que passam por cada ponto na matriz.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se o último ponto não coincide com o primeiro ponto, um segmento de curva adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The array of points must contain at least four <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> structures.</source>
          <target state="translated">A matriz de pontos deve conter pelo menos quatro <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> estruturas.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The <ph id="ph1">`tension`</ph> parameter determines the shape of the spline.</source>
          <target state="translated">O <ph id="ph1">`tension`</ph> parâmetro determina a forma de spline.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>If the value of the <ph id="ph1">`tension`</ph> parameter is 0.0F, this method draws straight line segments to connect the points.</source>
          <target state="translated">Se o valor da <ph id="ph1">`tension`</ph> parâmetro 0.0 f, esse método desenha segmentos de linha reta para se conectar os pontos.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Usually, the <ph id="ph1">`tension`</ph> parameter is less than or equal to 1.0F.</source>
          <target state="translated">Normalmente, o <ph id="ph1">`tension`</ph> parâmetro é menor ou igual a 1.0 f.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Values over 1.0F produce unusual results.</source>
          <target state="translated">Valores em 1.0 f produzem resultados incomuns.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Creates an array of four points to define a spline.</source>
          <target state="translated">Cria uma matriz de quatro pontos para definir uma spline.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Sets the fill mode to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</source>
          <target state="translated">Define o modo de preenchimento para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Sets the tension to 1.0.</source>
          <target state="translated">Define a tensão 1.0.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>Fills the curve on the screen.</source>
          <target state="translated">Preenche a curva na tela.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Preenche o interior de uma elipse definida por um retângulo delimitador especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Fills the interior of an ellipse defined by a bounding rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Preenche o interior de uma elipse definida por um retângulo delimitador especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>This method fills the interior of an ellipse with a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">Este método preenche o interior de uma elipse com um <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>The ellipse is defined by the bounding rectangle represented by the <ph id="ph1">`rect`</ph> parameter.</source>
          <target state="translated">Elipse é definida pelo retângulo delimitador representado pelo <ph id="ph1">`rect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Creates a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Fills the ellipse on the screen.</source>
          <target state="translated">Preenche a elipse na tela.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Fills the interior of an ellipse defined by a bounding rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure.</source>
          <target state="translated">Preenche o interior de uma elipse definida por um retângulo delimitador especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>This method fills the interior of an ellipse with a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">Este método preenche o interior de uma elipse com um <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The ellipse is defined by the bounding rectangle represented by the <ph id="ph1">`rect`</ph> parameter.</source>
          <target state="translated">Elipse é definida pelo retângulo delimitador representado pelo <ph id="ph1">`rect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Fills the ellipse on the screen.</source>
          <target state="translated">Preenche a elipse na tela.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Largura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Altura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Preenche o interior de uma elipse definida por um retângulo delimitador especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method fills the interior of an ellipse with a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">Este método preenche o interior de uma elipse com um <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The ellipse is defined by the bounding rectangle represented by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters.</source>
          <target state="translated">Elipse é definida pelo retângulo delimitador representado pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the location and size of a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria o local e o tamanho de um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Fills the ellipse on the screen.</source>
          <target state="translated">Preenche a elipse na tela.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Largura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Altura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Preenche o interior de uma elipse definida por um retângulo delimitador especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>This method fills the interior of an ellipse with a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">Este método preenche o interior de uma elipse com um <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The ellipse is defined by the bounding rectangle represented by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters.</source>
          <target state="translated">Elipse é definida pelo retângulo delimitador representado pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the location and size of a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria o local e o tamanho de um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Fills the ellipse on the screen.</source>
          <target state="translated">Preenche a elipse na tela.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> that represents the path to fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que representa o caminho a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Fills the interior of a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Preenche o interior de um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> consists of a series of line and curve segments.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> consiste em uma série de segmentos de linha e a curva.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If the path represented by the <ph id="ph1">`path`</ph> parameter is not closed, an additional segment is added from the last point to the first point to close the path.</source>
          <target state="translated">Se o caminho representado pelo <ph id="ph1">`path`</ph> parâmetro não for fechado, um segmento adicional é adicionado do último ponto até o primeiro ponto para fechar o caminho.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a graphics path object.</source>
          <target state="translated">Cria um objeto de caminho do gráfico.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Adds an ellipse to the graphics path.</source>
          <target state="translated">Adiciona uma elipse ao caminho de gráficos.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Fills the path on the screen.</source>
          <target state="translated">Preenche o caminho na tela.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</source>
          <target state="translated">Preenche o interior de uma fatia da pizza definida por uma elipse especificada por um par de coordenadas, uma largura, uma altura e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A estrutura de <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo delimitador que define a elipse de onde provém a fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x até o primeiro lado da fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie section.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> até o segundo lado da fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Fills the interior of a pie section defined by an ellipse specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure and two radial lines.</source>
          <target state="translated">Preenche o interior de uma fatia da pizza definida por uma elipse especificada por uma estrutura de <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</source>
          <target state="translated">Este método preenche o interior de uma fatia da pizza definido por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The pie section consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A seção de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</source>
          <target state="translated">Define o ângulo inicial (em relação ao eixo x) e o ângulo de flecha (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Fills the pie-shaped area of the ellipse on the screen.</source>
          <target state="translated">Preenche a área em forma de pizza da elipse na tela.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x até o primeiro lado da fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie section.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> até o segundo lado da fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</source>
          <target state="translated">Preenche o interior de uma fatia da pizza definida por uma elipse especificada por um par de coordenadas, uma largura, uma altura e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</source>
          <target state="translated">Este método preenche o interior de uma fatia da pizza definido por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The pie section consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A seção de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the location and size of a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria o local e o tamanho de um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</source>
          <target state="translated">Define o ângulo inicial (em relação ao eixo x) e o ângulo de flecha (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Fills the pie-shaped area of the ellipse on the screen.</source>
          <target state="translated">Preenche a área em forma de pizza da elipse na tela.</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the bounding rectangle that defines the ellipse from which the pie section comes.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse da qual a fatia da pizza é obtida.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do eixo x até o primeiro lado da fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Angle in degrees measured clockwise from the <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> parameter to the second side of the pie section.</source>
          <target state="translated">Ângulo em graus medido no sentido horário do parâmetro <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> até o segundo lado da fatia da pizza.</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</source>
          <target state="translated">Preenche o interior de uma fatia da pizza definida por uma elipse especificada por um par de coordenadas, uma largura, uma altura e duas linhas radiais.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</source>
          <target state="translated">Este método preenche o interior de uma fatia da pizza definido por um arco de elipse e as duas linhas radiais que se cruzam com os pontos de extremidade do arco. Elipse é definida pelo retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The pie section consists of the two radial lines defined by the <ph id="ph1">`startAngle`</ph> and <ph id="ph2">`sweepAngle`</ph> parameters, and the arc between the intersections of those radial lines with the ellipse.</source>
          <target state="translated">A seção de pizza consiste em duas linhas radiais definidas pelo <ph id="ph1">`startAngle`</ph> e <ph id="ph2">`sweepAngle`</ph> parâmetros e o arco entre as interseções dessas linhas radiais com elipse.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If the <ph id="ph1">`sweepAngle`</ph> parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o <ph id="ph1">`sweepAngle`</ph> parâmetro for maior que 360 graus ou menor que-360 graus, ele será tratado como se fosse 360 graus ou -360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a solid red brush.</source>
          <target state="translated">Cria um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the location and size of a rectangle that bounds an ellipse.</source>
          <target state="translated">Cria o local e o tamanho de um retângulo que circunda uma elipse.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</source>
          <target state="translated">Define o ângulo inicial (em relação ao eixo x) e o ângulo de flecha (tanto no sentido horário).</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Fills the pie-shaped area of the ellipse on the screen.</source>
          <target state="translated">Preenche a área em forma de pizza da elipse na tela.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Fills the interior of a polygon defined by an array of points specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Preenche o interior de um polígono definido por uma matriz de pontos especificada por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represent the vertices of the polygon to fill.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os vértices do polígono a serem preenchidos.</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Fills the interior of a polygon defined by an array of points specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures.</source>
          <target state="translated">Preenche o interior de um polígono definido por uma matriz de pontos especificada por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Every two consecutive points in the array specify a side of the polygon.</source>
          <target state="translated">Todos os dois pontos consecutivos na matriz especificam um lado do polígono.</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</source>
          <target state="translated">Além disso, se o último ponto e o primeiro ponto não coincidirem, eles especificar lado do fechamento do polígono.</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Creates an array of seven points to define a polygon.</source>
          <target state="translated">Cria uma matriz de sete pontos para definir um polígono.</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>Fills the polygonal area on the screen.</source>
          <target state="translated">Preenche a área poligonal na tela.</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the vertices of the polygon to fill.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os vértices do polígono a serem preenchidos.</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Fills the interior of a polygon defined by an array of points specified by <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures.</source>
          <target state="translated">Preenche o interior de um polígono definido por uma matriz de pontos especificada por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Every two consecutive points in the array specify a side of the polygon.</source>
          <target state="translated">Todos os dois pontos consecutivos na matriz especificam um lado do polígono.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</source>
          <target state="translated">Além disso, se o último ponto e o primeiro ponto não coincidirem, eles especificar lado do fechamento do polígono.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Creates an array of seven points to define a polygon.</source>
          <target state="translated">Cria uma matriz de sete pontos para definir um polígono.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>Fills the polygonal area on the screen.</source>
          <target state="translated">Preenche a área poligonal na tela.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represent the vertices of the polygon to fill.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os vértices do polígono a serem preenchidos.</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines the style of the fill.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina o estilo do preenchimento.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the interior of a polygon defined by an array of points specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures using the specified fill mode.</source>
          <target state="translated">Preenche o interior de um polígono definido por uma matriz de pontos especificada por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> usando o modo de preenchimento especificado.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Every two consecutive points in the array specify a side of the polygon.</source>
          <target state="translated">Todos os dois pontos consecutivos na matriz especificam um lado do polígono.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</source>
          <target state="translated">Além disso, se o último ponto e o primeiro ponto não coincidirem, eles especificar lado do fechamento do polígono.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates an array of seven points to define a polygon.</source>
          <target state="translated">Cria uma matriz de sete pontos para definir um polígono.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Sets the fill mode to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</source>
          <target state="translated">Define o modo de preenchimento para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the polygonal area on the screen.</source>
          <target state="translated">Preenche a área poligonal na tela.</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the vertices of the polygon to fill.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os vértices do polígono a serem preenchidos.</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines the style of the fill.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina o estilo do preenchimento.</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the interior of a polygon defined by an array of points specified by <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures using the specified fill mode.</source>
          <target state="translated">Preenche o interior de um polígono definido por uma matriz de pontos especificada por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> usando o modo de preenchimento especificado.</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Every two consecutive points in the array specify a side of the polygon.</source>
          <target state="translated">Todos os dois pontos consecutivos na matriz especificam um lado do polígono.</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</source>
          <target state="translated">Além disso, se o último ponto e o primeiro ponto não coincidirem, eles especificar lado do fechamento do polígono.</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Creates an array of seven points to define a polygon.</source>
          <target state="translated">Cria uma matriz de sete pontos para definir um polígono.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Sets the fill mode to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</source>
          <target state="translated">Define o modo de preenchimento para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FillMode.Winding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>Fills the polygonal area on the screen.</source>
          <target state="translated">Preenche a área poligonal na tela.</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
          <source><ph id="ph1">&lt;paramref name="points" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="points" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Preenche o interior de um retângulo especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the rectangle to fill.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Fills the interior of a rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Preenche o interior de um retângulo especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>This method fills the interior of the rectangle defined by the <ph id="ph1">`rect`</ph> parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</source>
          <target state="translated">Este método preenche o interior do retângulo definido pelo <ph id="ph1">`rect`</ph> parâmetro, incluindo o canto superior esquerdo especificado de canto e até calculada inferior e inferior.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Creates a rectangle.</source>
          <target state="translated">Cria um retângulo.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source>Fills the rectangular area on the screen.</source>
          <target state="translated">Preenche a área retangular na tela.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents the rectangle to fill.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Fills the interior of a rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure.</source>
          <target state="translated">Preenche o interior de um retângulo especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>This method fills the interior of the rectangle defined by the <ph id="ph1">`rect`</ph> parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</source>
          <target state="translated">Este método preenche o interior do retângulo definido pelo <ph id="ph1">`rect`</ph> parâmetro, incluindo o canto superior esquerdo especificado de canto e até calculada inferior e inferior.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Creates a rectangle.</source>
          <target state="translated">Cria um retângulo.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source>Fills the rectangular area on the screen.</source>
          <target state="translated">Preenche a área retangular na tela.</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the rectangle to fill.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the rectangle to fill.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the rectangle to fill.</source>
          <target state="translated">Largura do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the rectangle to fill.</source>
          <target state="translated">Altura do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Preenche o interior de um retângulo especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method fills the interior of the rectangle defined by the<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</source>
          <target state="translated">Este método preenche o interior do retângulo definido pelo<ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros, incluindo o canto superior esquerdo especificado de canto e até calculada inferior e inferior.</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the location and size of a rectangle.</source>
          <target state="translated">Cria o local e o tamanho de um retângulo.</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Fills the rectangular area on the screen.</source>
          <target state="translated">Preenche a área retangular na tela.</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangle to fill.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangle to fill.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the rectangle to fill.</source>
          <target state="translated">Largura do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the rectangle to fill.</source>
          <target state="translated">Altura do retângulo a ser preenchido.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</source>
          <target state="translated">Preenche o interior de um retângulo especificado por um par de coordenadas, uma largura e uma altura.</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>This method fills the interior of the rectangle defined by the <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, and <ph id="ph4">`height`</ph> parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</source>
          <target state="translated">Este método preenche o interior do retângulo definido pelo <ph id="ph1">`x`</ph>, <ph id="ph2">`y`</ph>, <ph id="ph3">`width`</ph>, e <ph id="ph4">`height`</ph> parâmetros, incluindo o canto superior esquerdo especificado de canto e até calculada inferior e inferior.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the location and size of a rectangle.</source>
          <target state="translated">Cria o local e o tamanho de um retângulo.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source>Fills the rectangular area on the screen.</source>
          <target state="translated">Preenche a área retangular na tela.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Fills the interiors of a series of rectangles specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures.</source>
          <target state="translated">Preenche os interiores de uma série de retângulos especificados por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures that represent the rectangles to fill.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa os retângulos a serem preenchidos.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>Fills the interiors of a series of rectangles specified by <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures.</source>
          <target state="translated">Preenche os interiores de uma série de retângulos especificados por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>Creates an array of three rectangles.</source>
          <target state="translated">Cria uma matriz de três retângulos.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>Fills the three rectangular areas on the screen.</source>
          <target state="translated">Preenche as três áreas retangulares na tela.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is a zero-length array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é uma matriz de tamanho zero.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that represent the rectangles to fill.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa os retângulos a serem preenchidos.</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>Fills the interiors of a series of rectangles specified by <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures.</source>
          <target state="translated">Preenche os interiores de uma série de retângulos especificados por estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>Creates an array of three rectangles.</source>
          <target state="translated">Cria uma matriz de três retângulos.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>Fills the three rectangular areas on the screen.</source>
          <target state="translated">Preenche as três áreas retangulares na tela.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rects" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
          <source><ph id="ph1">&lt;paramref name="Rects" /&gt;</ph> is a zero-length array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Rects" /&gt;</ph> é uma matriz de tamanho zero.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of the fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> que determina as características do preenchimento.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> that represents the area to fill.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> que representa a área a ser preenchida.</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>Fills the interior of a <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>.</source>
          <target state="translated">Preenche o interior de um <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Region&gt;</ph> is composed of rectangles and paths.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Region&gt;</ph> é composto de retângulos e caminhos.</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>If the region is not closed, an additional segment is added from the last point to the first point to close it.</source>
          <target state="translated">Se a região não estiver fechada, um segmento adicional é adicionado do último ponto até o primeiro ponto para fechá-la.</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>Creates a solid blue brush.</source>
          <target state="translated">Cria um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>Creates a rectangle.</source>
          <target state="translated">Cria um retângulo.</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>Creates a rectangular region.</source>
          <target state="translated">Cria uma região retangular.</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>Fills the rectangular region on the screen.</source>
          <target state="translated">Preenche a área retangular na tela.</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
          <source><ph id="ph1">&lt;paramref name="region" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="region" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</source>
          <target state="translated">Força a execução de todas as operações de gráfico pendentes e retorna imediatamente sem esperar as operações serem finalizadas.</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Flush">
          <source>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</source>
          <target state="translated">Força a execução de todas as operações de gráfico pendentes e retorna imediatamente sem esperar as operações serem finalizadas.</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Flush">
          <source>This method starts a flush and returns immediately without waiting for any currently executing graphics operation to finish.</source>
          <target state="translated">Esse método inicia uma liberação e retorna imediatamente sem esperar que qualquer operação de elementos gráficos em execução no momento concluir.</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FlushIntention" /&gt;</ph> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FlushIntention" /&gt;</ph> que especifica se o método retorna imediatamente ou aguarda a conclusão de eventuais operações existentes.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
          <source>Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</source>
          <target state="translated">Força a execução de todas as operações gráficas pendentes, com ou sem espera do método para retornar antes da conclusão das operações, conforme especificado.</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FlushIntention.Flush&gt;</ph> for the <ph id="ph2">`intention`</ph> parameter specifies that the method return immediately after beginning the flush, while a value of <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.FlushIntention.Sync&gt;</ph> specifies that the method wait before returning until any existing operations finish.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.FlushIntention.Flush&gt;</ph> para o <ph id="ph2">`intention`</ph> parâmetro especifica que o método retornará imediatamente após iniciar a limpeza, enquanto um valor de <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.FlushIntention.Sync&gt;</ph> Especifica que o método esperar antes de retornar concluir todas as operações existentes.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> from the specified handle to a device context.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do identificador especificado para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Handle to a device context.</source>
          <target state="translated">Identificador para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> from the specified handle to a device context.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do identificador especificado para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>This method returns a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified device context.</source>
          <target state="translated">Esse método retorna um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o contexto de dispositivo especificado.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>You should always call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> method to release the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> and related resources created by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> method.</source>
          <target state="translated">Você sempre deve chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> método para liberar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> e recursos criados pelo relacionados a <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Even if the display device has an associated ICM color profile, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> will not use that profile by default.</source>
          <target state="translated">Mesmo se o dispositivo de vídeo tem um perfil de cor ICM associado, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> não usará esse perfil por padrão.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>To enable ICM for a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>, construct the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> from an HDC after you pass the HDC (and ICM_ON) to the <ph id="ph3">`SetICMMode`</ph> function.</source>
          <target state="translated">Para habilitar ICM para um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>, construir o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> de um HDC depois de passar HDC (e ICM_ON) para o <ph id="ph3">`SetICMMode`</ph> função.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Then any drawing done by the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> will be adjusted according to the ICM profile associated with the display device.</source>
          <target state="translated">Em seguida, qualquer desenho feito pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> será ajustada de acordo com o perfil ICM associado com o dispositivo de exibição.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Enabling ICM will result in slower performance.</source>
          <target state="translated">Habilitar ICM resultará em desempenho mais lento.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>The state of the device context (mapping mode, logical unit, and the like) at the time you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> can affect rendering done by the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">O estado do contexto do dispositivo (modo de mapeamento, unidade lógica e assim por diante) no momento em que você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> podem afetar o processamento feito pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Creates an internal pointer type variable <ph id="ph1">`hdc`</ph> and sets it to the handle to the device context of the graphics object of the form.</source>
          <target state="translated">Cria uma variável de tipo de ponteiro interno <ph id="ph1">`hdc`</ph> e o define como o identificador para o contexto do objeto de gráfico do formulário.</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Creates a new graphics object using <ph id="ph1">`hdc`</ph>.</source>
          <target state="translated">Cria um novo objeto de gráfico usando <ph id="ph1">`hdc`</ph>.</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Draws a rectangle with the new graphics object (on the screen).</source>
          <target state="translated">Desenha um retângulo com o novo objeto de gráfico (na tela).</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
          <source>Releases the new graphics object using <ph id="ph1">`hdc`</ph>.</source>
          <target state="translated">Libera o objeto graphics novo usando <ph id="ph1">`hdc`</ph>.</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Handle to a device context.</source>
          <target state="translated">Identificador para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Handle to a device.</source>
          <target state="translated">Identificador de um dispositivo.</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> from the specified handle to a device context and handle to a device.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do identificador especificado para um contexto de dispositivo e identificador de um dispositivo.</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>This method returns a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified device context and device.</source>
          <target state="translated">Esse método retorna um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o dispositivo e contexto de dispositivo especificados.</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>You should always call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> method to release the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> and related resources created by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> method.</source>
          <target state="translated">Você sempre deve chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> método para liberar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> e recursos criados pelo relacionados a <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Even if the display device has an associated ICM color profile, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> will not use that profile by default.</source>
          <target state="translated">Mesmo se o dispositivo de vídeo tem um perfil de cor ICM associado, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> não usará esse perfil por padrão.</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>To enable ICM for a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>, construct the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> from an HDC after you pass the HDC (and ICM_ON) to the <ph id="ph3">`SetICMMode`</ph> function.</source>
          <target state="translated">Para habilitar ICM para um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>, construir o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> de um HDC depois de passar HDC (e ICM_ON) para o <ph id="ph3">`SetICMMode`</ph> função.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Then any drawing done by the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> will be adjusted according to the ICM profile associated with the display device.</source>
          <target state="translated">Em seguida, qualquer desenho feito pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> será ajustada de acordo com o perfil ICM associado com o dispositivo de exibição.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Enabling ICM will result in slower performance.</source>
          <target state="translated">Habilitar ICM resultará em desempenho mais lento.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>The state of the device context (mapping mode, logical unit, and the like) at the time you call <ph id="ph1">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> can affect rendering done by the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">O estado do contexto do dispositivo (modo de mapeamento, unidade lógica e assim por diante) no momento em que você chamar <ph id="ph1">&lt;xref:System.Drawing.Graphics.FromHdc%2A&gt;</ph> podem afetar o processamento feito pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>The device handle is typically used to query specific printer capabilities.</source>
          <target state="translated">O identificador do dispositivo é normalmente usado para capacidades da impressora específica de consulta.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
          <source>Handle to a device context.</source>
          <target state="translated">Identificador para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified device context.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o contexto de dispositivo especificado.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified device context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o contexto de dispositivo especificado.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
          <source>This method should not be used.</source>
          <target state="translated">Esse método não deve ser usado.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Handle to a window.</source>
          <target state="translated">Identificador para uma janela.</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> from the specified handle to a window.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do identificador especificado para a janela.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>This method returns a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified window handle.</source>
          <target state="translated">Esse método retorna um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o identificador de janela especificado.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>You should always call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> method to release the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> and related resources created by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromHwnd%2A&gt;</ph> method.</source>
          <target state="translated">Você sempre deve chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> método para liberar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> e recursos criados pelo relacionados a <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromHwnd%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler, as well as <ph id="ph4">`thisForm`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> for the example.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos, bem como <ph id="ph4">`thisForm`</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> para o exemplo.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Creates a new internal pointer variable <ph id="ph1">`hwnd`</ph> and sets it to the handle of the example's form.</source>
          <target state="translated">Cria uma nova variável de ponteiro interno <ph id="ph1">`hwnd`</ph> e o define como o identificador do formulário de exemplo.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> from the handle.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> do identificador.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Draws a rectangle to the new <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> using a red pen.</source>
          <target state="translated">Desenha um retângulo para o novo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> usando uma caneta vermelha.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Disposes the new <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Descarta o novo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
          <source>Handle to a window.</source>
          <target state="translated">Identificador para uma janela.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified windows handle.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o identificador do Windows especificado.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified window handle.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o identificador do Windows especificado.</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
          <source>This method should not be used.</source>
          <target state="translated">Esse método não deve ser usado.</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> from which to create the new <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> por meio do qual o novo <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> será criado.</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">Cria um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> com base no <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>This method returns a new <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">Esse método retorna um novo <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>If the image has an indexed pixel format, this method throws an exception with the message, "A Graphics object cannot be created from an image that has an indexed pixel format."</source>
          <target state="translated">Se a imagem tem um formato de pixel indexado, este método lança uma exceção com a mensagem, "um objeto de gráfico não pode ser criado de uma imagem que tem um formato de pixel indexado."</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>The indexed pixel formats are shown in the following list.</source>
          <target state="translated">Os formatos de pixel indexados são mostrados na lista a seguir.</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>You can save the indexed image as another format by using the <ph id="ph1">&lt;xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29&gt;</ph> method and then retrieve a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object for the new image.</source>
          <target state="translated">Você pode salvar a imagem indexada como outro formato usando o <ph id="ph1">&lt;xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29&gt;</ph> método e, em seguida, recuperar um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto para a nova imagem.</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>This method also throws an exception if the image has any of the following pixel formats.</source>
          <target state="translated">Esse método também lançará uma exceção se a imagem tiver qualquer um dos seguintes formatos de pixel.</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>You should always call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> method to release the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> and related resources created by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromImage%2A&gt;</ph> method.</source>
          <target state="translated">Você sempre deve chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> método para liberar o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> e recursos criados pelo relacionados a <ph id="ph3">&lt;xref:System.Drawing.Graphics.FromImage%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>Creates an <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> from a graphics file SampImag.jpg in the example folder.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> de um gráfico de arquivos SampImag.jpg na pasta example.</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> from the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> do <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>Alters the image by filling a rectangle within it.</source>
          <target state="translated">Altera a imagem, preenchendo um retângulo dentro dele.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>Draws the <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> to the screen.</source>
          <target state="translated">Desenha o <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph> na tela.</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source>Releases the created <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Libera o criado <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
          <source><ph id="ph1">&lt;paramref name="image" /&gt;</ph> has an indexed pixel format or its format is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="image" /&gt;</ph> tem um formato de pixel indexado ou seu formato é indefinido.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetContextInfo">
          <source>Gets the cumulative graphics context.</source>
          <target state="translated">Obtém o contexto gráfico cumulativo.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetContextInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the cumulative graphics context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representando o contexto gráfico cumulativo.</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetContextInfo">
          <source>The return value is an object array where the first element contains the cumulative clip region and the second element contains the cumulative translate/transform matrix.</source>
          <target state="translated">O valor de retorno é uma matriz de objetos em que o primeiro elemento contém a região de clip cumulativa e o segundo elemento contém a matriz de traduzir/transformação cumulativa.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Gets a handle to the current Windows halftone palette.</source>
          <target state="translated">Obtém um identificador para a paleta de meio-tom atual do Windows.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Internal pointer that specifies the handle to the palette.</source>
          <target state="translated">Ponteiro interno que especifica o identificador para a paleta.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>The purpose of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHalftonePalette%2A&gt;</ph> method is to enable <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> to produce a better quality halftone when the display uses 8 bits per pixel.</source>
          <target state="translated">A finalidade de <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHalftonePalette%2A&gt;</ph> método é habilitar <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> para produzir um meio de tom melhor qualidade quando a exibição usa 8 bits por pixel.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>To display an image using the halftone palette, use the following procedure.</source>
          <target state="translated">Para exibir uma imagem usando a paleta de meio-tom, use o procedimento a seguir.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Defines interoperability <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attributes for the Windows DLL file gdi32.dll, which contains the necessary <ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> functions.</source>
          <target state="translated">Define a interoperabilidade <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> atributos para Gdi32 o arquivo DLL do Windows, que contém o necessário <ph id="ph2">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> funções.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Defines the <ph id="ph1">`SelectPalette`</ph> and <ph id="ph2">`RealizePalette`</ph> functions in that DLL as external.</source>
          <target state="translated">Define o <ph id="ph1">`SelectPalette`</ph> e <ph id="ph2">`RealizePalette`</ph> funções nessa DLL como externo.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.</source>
          <target state="translated">Cria uma imagem de um arquivo de imagem existente SampImag.jpg (que deve estar na mesma pasta que o arquivo de código de exemplo) e desenha a imagem para a tela.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.</source>
          <target state="translated">Cria variáveis de tipo de ponteiro interno e define seus valores para o identificador para o objeto de gráfico e a paleta de meio-tom atual do Windows, respectivamente.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Selects and realizes the halftone palette.</source>
          <target state="translated">Seleciona e realiza a paleta de meio-tom.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Creates a new graphics object using the <ph id="ph1">`hdc`</ph> parameter.</source>
          <target state="translated">Cria um novo objeto de gráfico usando o <ph id="ph1">`hdc`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Draws the image again.</source>
          <target state="translated">Desenha a imagem novamente.</target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>Releases the handle to the device context.</source>
          <target state="translated">Libera o identificador para o contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHalftonePalette">
          <source>The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.</source>
          <target state="translated">O resultado é dois renderizações da imagem de exemplo: com a paleta de 16 bits e uma com a paleta de 8 bits.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Gets the handle to the device context associated with this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém o identificador para o contexto de dispositivo associado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Handle to the device context associated with this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Identificador para o contexto de dispositivo associado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>The device context is a Windows structure based on <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</source>
          <target state="translated">O contexto de dispositivo é uma estrutura de Windows com base em <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> que define um conjunto de objetos gráficos e seus atributos associados, bem como os modos de gráficos que afetam a saída.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>This method returns that device context with the exception of a font.</source>
          <target state="translated">Esse método retorna esse contexto de dispositivo com a exceção de uma fonte.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Because a font is not selected, calls to the <ph id="ph1">&lt;xref:System.Drawing.Font.FromHdc%2A&gt;</ph> method using a handle returned from the <ph id="ph2">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> method will fail.</source>
          <target state="translated">Como uma fonte não estiver selecionada, chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Font.FromHdc%2A&gt;</ph> método usando um identificador retornado do <ph id="ph2">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> método irá falhar.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> methods must appear in pairs.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> métodos devem aparecer em pares.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>During the scope of a <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> method pair, you usually make only calls to <ph id="ph3">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> functions.</source>
          <target state="translated">Durante o escopo de um <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> par de métodos, você normalmente fazer somente chamadas para <ph id="ph3">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> funções.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Calls in that scope made to <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> methods of the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> that produced the <ph id="ph3">`hdc`</ph> parameter fail with an <ph id="ph4">`ObjectBusy`</ph> error.</source>
          <target state="translated">Chamadas em que o escopo feitas <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> métodos do <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> que produziu o <ph id="ph3">`hdc`</ph> parâmetro falhar com um <ph id="ph4">`ObjectBusy`</ph> erro.</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Also, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> ignores any state changes made to the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> of the <ph id="ph3">`hdc`</ph> parameter in subsequent operations.</source>
          <target state="translated">Além disso, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> ignora quaisquer alterações de estado para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> do <ph id="ph3">`hdc`</ph> parâmetro em operações subsequentes.</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>The example illustrates calling a Windows <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> function to perform the same task as a <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> method.</source>
          <target state="translated">O exemplo ilustra a chamada de um Windows <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> função para executar a mesma tarefa como uma <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Defines the interoperability <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute for the Windows DLL file gdi32.dll.</source>
          <target state="translated">Define a interoperabilidade <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> atributo para o arquivo de DLL do Windows Gdi32. dll.</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>This DLL contains the desired <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> function.</source>
          <target state="translated">Essa DLL contém os detalhes desejados <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> função.</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Defines the <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> function in that DLL as external.</source>
          <target state="translated">Define o <ph id="ph1">&lt;xref:System.Drawing.Rectangle&gt;</ph> função naquela DLL como externo.</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Creates a red pen.</source>
          <target state="translated">Cria uma caneta vermelha.</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>With the pen, draws a rectangle to the screen using the <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method.</source>
          <target state="translated">Com a caneta desenha um retângulo para a tela usando o <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Defines an internal pointer type variable <ph id="ph1">`hdc`</ph> and sets its value to the handle to the device context of the form.</source>
          <target state="translated">Define uma variável de tipo de ponteiro interno <ph id="ph1">`hdc`</ph> e define seu valor como o identificador para o contexto do formulário.</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Draws a rectangle to the screen using the <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> function.</source>
          <target state="translated">Desenha um retângulo para a tela usando o <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> função.</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Releases the device context represented by the <ph id="ph1">`hdc`</ph> parameter.</source>
          <target state="translated">Libera o contexto de dispositivo representado pelo <ph id="ph1">`hdc`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetHdc">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure for which to find a match.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> para a qual encontrar uma correspondência.</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>Gets the nearest color to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure.</source>
          <target state="translated">Obtém a cor mais próxima da estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the nearest color to the one specified with the <ph id="ph2">&lt;paramref name="color" /&gt;</ph> parameter.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> que representa a cor mais próxima àquela especificada com o parâmetro <ph id="ph2">&lt;paramref name="color" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).</source>
          <target state="translated">Cria uma cor arbitrária com ARGB coordenadas (255, 165, 63 136).</target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>Creates a solid brush and sets its color to the specified color.</source>
          <target state="translated">Cria um pincel sólido e define a cor para a cor especificada.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>Fills an ellipse using the arbitrary color.</source>
          <target state="translated">Preenche uma elipse usando a cor arbitrária.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>Creates a second color and sets its value to the nearest system ARGB color.</source>
          <target state="translated">Cria uma segunda cor e define seu valor como o cor ARGB do sistema mais próximo.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>Fills a second ellipse with this color.</source>
          <target state="translated">Preenche uma segunda elipse com essa cor.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
          <source>The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.</source>
          <target state="translated">O resultado será duas elipses: o primeiro desenhado com a cor especificada arbitrária e a segunda desenhadas com a cor do sistema mais próximo a cor especificada.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.InterpolationMode">
          <source>Gets or sets the interpolation mode associated with this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o modo de interpolação associado a esse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.InterpolationMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.InterpolationMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.InterpolationMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.InterpolationMode">
          <source>The interpolation mode determines how intermediate values between two endpoints are calculated.</source>
          <target state="translated">O modo de interpolação determina como os valores intermediários entre dois pontos de extremidade são calculados.</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the intersection of the current clip region and the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a interseção da região de recorte atual e a estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure to intersect with the current clip region.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> para interseccionar com a região de recorte atual.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the intersection of the current clip region and the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a interseção da região de recorte atual e a estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>This method assigns to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> the area represented by the intersection of the current clip region and the rectangle specified by the <ph id="ph3">`rect`</ph> parameter.</source>
          <target state="translated">Esse método atribui para a <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade deste <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> área representada pela interseção de região de clip atual e o retângulo especificado pelo <ph id="ph3">`rect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</source>
          <target state="translated">Cria um retângulo com o canto superior esquerdo em (0, 0) e define a região de recorte para esse retângulo.</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</source>
          <target state="translated">Cria um segundo retângulo com o canto superior esquerdo em (100, 100) e define a região de recorte para a interseção desse retângulo e a região de recorte atual (o retângulo primeiro).</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>Fills a large rectangle that includes both previous rectangles with a solid blue brush.</source>
          <target state="translated">Preenche um retângulo grande que inclui os dois retângulos anteriores com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>Resets the clipping region to infinite.</source>
          <target state="translated">Redefine a região de recorte como infinito.</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>Draws rectangles around the two clipping regions.</source>
          <target state="translated">Desenha retângulos ao redor das regiões de corte de dois.</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</source>
          <target state="translated">Ele usa uma caneta preta primeiro retângulo de recorte e uma caneta vermelha para a segunda região de recorte.</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
          <source>The result is that only the intersection of the two rectangles is filled with blue.</source>
          <target state="translated">O resultado é que apenas a interseção de dois retângulos é preenchida com azul.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure to intersect with the current clip region.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> para interseccionar com a região de recorte atual.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the intersection of the current clip region and the specified <ph id="ph2">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a interseção da região de recorte atual e a estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>This method assigns to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> the area represented by the intersection of the current clip region and the rectangle specified by the <ph id="ph3">`rect`</ph> parameter.</source>
          <target state="translated">Esse método atribui para a <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade deste <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> área representada pela interseção de região de clip atual e o retângulo especificado pelo <ph id="ph3">`rect`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</source>
          <target state="translated">Cria um retângulo com o canto superior esquerdo em (0, 0) e define a região de recorte para esse retângulo.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</source>
          <target state="translated">Cria um segundo retângulo com o canto superior esquerdo em (100, 100) e define a região de recorte para a interseção desse retângulo e a região de recorte atual (o retângulo primeiro).</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>Fills a large rectangle that includes both previous rectangles with a solid blue brush.</source>
          <target state="translated">Preenche um retângulo grande que inclui os dois retângulos anteriores com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>Resets the clipping region to infinite.</source>
          <target state="translated">Redefine a região de recorte como infinito.</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>Draws rectangles around the two clipping regions.</source>
          <target state="translated">Desenha retângulos ao redor das regiões de corte de dois.</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</source>
          <target state="translated">Ele usa uma caneta preta primeiro retângulo de recorte e uma caneta vermelha para a segunda região de recorte.</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
          <source>The result is that only the intersection of the two rectangles is filled with blue.</source>
          <target state="translated">O resultado é que apenas a interseção de dois retângulos é preenchida com azul.</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to intersect with the current region.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> para interseccionar com a região atual.</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Updates the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the intersection of the current clip region and the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>.</source>
          <target state="translated">Atualiza a região de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a interseção da região de recorte atual e a <ph id="ph2">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>This method assigns to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> the area represented by the intersection of the current clip region and the region specified by the <ph id="ph3">`region`</ph> parameter.</source>
          <target state="translated">Esse método atribui ao <ph id="ph1">&lt;xref:System.Drawing.Graphics.Clip%2A&gt;</ph> propriedade deste <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> área representada pela interseção de região de clip atual e a região especificada pelo <ph id="ph3">`region`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Creates a rectangle with upper-left corner at (0, 0).</source>
          <target state="translated">Cria um retângulo com o canto superior esquerdo em (0, 0).</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Creates a region and sets it to the rectangle, and sets the clipping region to this region.</source>
          <target state="translated">Cria uma região e define-o para o retângulo e define a região de recorte para essa região.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Creates a second rectangle with upper-left corner at (100, 100).</source>
          <target state="translated">Cria um segundo retângulo com o canto superior esquerdo em (100, 100).</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região e define como o segundo retângulo e define a região de recorte para a interseção desta região e a região de recorte atual (o primeiro retângulo) usando um modo de combinação de <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Fills a large rectangle that includes both previous regions with a solid blue brush.</source>
          <target state="translated">Preenche um retângulo grande que inclui as duas regiões anteriores com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Resets the clipping region to infinite.</source>
          <target state="translated">Redefine a região de recorte como infinito.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>Draws rectangles around the two clipping regions.</source>
          <target state="translated">Desenha retângulos ao redor das regiões de corte de dois.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>It uses a black pen for the first clipping region and a red pen for the second clipping region.</source>
          <target state="translated">Ele usa uma caneta preta para a região de recorte primeiro e uma caneta vermelha para a segunda região de recorte.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
          <source>The result is that only the intersection of the two regions is filled with blue.</source>
          <target state="translated">O resultado é que apenas a interseção de duas regiões é preenchida com azul.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.IsClipEmpty">
          <source>Gets a value indicating whether the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> is empty.</source>
          <target state="translated">Obtém um valor que indica se a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> está vazia.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.IsClipEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the clipping region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a região de recorte deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> estiver vazia; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado por um par de coordenadas está contido na região de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure to test for visibility.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> para testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>Indicates whether the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure is contained within the visible clip region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se a estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> especificada está contida na região de recorte visível deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the point specified by the <ph id="ph2">&lt;paramref name="point" /&gt;</ph> parameter is contained within the visible clip region of this <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado pelo parâmetro <ph id="ph2">&lt;paramref name="point" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>Creates two points, one inside the clipping region and one outside.</source>
          <target state="translated">Cria dois pontos, uma dentro da região de recorte e outra fora.</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>Tests each of the points for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos pontos de visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
          <source>The result is one small red circle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno círculo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure to test for visibility.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> para testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>Indicates whether the specified <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure is contained within the visible clip region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se a estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> especificada está contida na região de recorte visível deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the point specified by the <ph id="ph2">&lt;paramref name="point" /&gt;</ph> parameter is contained within the visible clip region of this <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado pelo parâmetro <ph id="ph2">&lt;paramref name="point" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte de gráficos do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>Creates two points, one inside the clipping region and one outside.</source>
          <target state="translated">Cria dois pontos, uma dentro da região de recorte e outra fora.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>Tests each of the points for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos pontos de visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
          <source>The result is one small red circle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno círculo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure to test for visibility.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> para testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>Indicates whether the rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure is contained within the visible clip region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o retângulo especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> está contido na região de recorte visível deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle specified by the <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> parameter is contained within the visible clip region of this <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o retângulo especificado pelo parâmetro <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>Creates the location and size of two rectangles, one inside the clipping region and one outside.</source>
          <target state="translated">Cria o local e tamanho de dois retângulos, um dentro da região de recorte e um fora.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>Tests each of the rectangles for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos retângulos para visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
          <source>The result is one small red rectangle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno retângulo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure to test for visibility.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> para testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>Indicates whether the rectangle specified by a <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure is contained within the visible clip region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o retângulo especificado por uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> está contido na região de recorte visível deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle specified by the <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> parameter is contained within the visible clip region of this <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o retângulo especificado pelo parâmetro <ph id="ph2">&lt;paramref name="rect" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>Creates two rectangles, one inside the clipping region and one outside.</source>
          <target state="translated">Cria dois retângulos, um dentro da região de recorte e um fora.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>Tests each of the rectangles for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos retângulos para visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
          <source>The result is one small red rectangle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno retângulo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>The x-coordinate of the point to test for visibility.</source>
          <target state="translated">A coordenada X do ponto a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>The y-coordinate of the point to test for visibility.</source>
          <target state="translated">A coordenada Y do ponto a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado por um par de coordenadas está contido na região de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the point defined by the <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> parameters is contained within the visible clip region of this <ph id="ph4">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto definido pelos parâmetros <ph id="ph2">&lt;paramref name="x" /&gt;</ph> e <ph id="ph3">&lt;paramref name="y" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph4">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>Creates two points, one inside the clipping region and one outside.</source>
          <target state="translated">Cria dois pontos, uma dentro da região de recorte e outra fora.</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>Tests each of the points for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos pontos de visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
          <source>The result is one small red circle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno círculo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>The x-coordinate of the point to test for visibility.</source>
          <target state="translated">A coordenada X do ponto a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>The y-coordinate of the point to test for visibility.</source>
          <target state="translated">A coordenada Y do ponto a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado por um par de coordenadas está contido na região de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the point defined by the <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph> parameters is contained within the visible clip region of this <ph id="ph4">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto definido pelos parâmetros <ph id="ph2">&lt;paramref name="x" /&gt;</ph> e <ph id="ph3">&lt;paramref name="y" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph4">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>Creates two points, one inside the clipping region and one outside.</source>
          <target state="translated">Cria dois pontos, uma dentro da região de recorte e outra fora.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>Tests each of the points for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos pontos de visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
          <source>The result is one small red circle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno círculo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the rectangle to test for visibility.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the rectangle to test for visibility.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Width of the rectangle to test for visibility.</source>
          <target state="translated">A largura do retângulo a testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Height of the rectangle to test for visibility.</source>
          <target state="translated">A altura do retângulo a testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o retângulo especificado por um par de coordenadas, uma largura e uma altura está contido na região de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle defined by the <ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>, <ph id="ph4">&lt;paramref name="width" /&gt;</ph>, and <ph id="ph5">&lt;paramref name="height" /&gt;</ph> parameters is contained within the visible clip region of this <ph id="ph6">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o retângulo definido pelos parâmetros <ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>, <ph id="ph4">&lt;paramref name="width" /&gt;</ph> e <ph id="ph5">&lt;paramref name="height" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph6">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates the location and size of two rectangles, one inside the clipping region and one outside.</source>
          <target state="translated">Cria o local e tamanho de dois retângulos, um dentro da região de recorte e um fora.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Tests each of the rectangles for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos retângulos para visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The result is one small red rectangle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno retângulo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangle to test for visibility.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangle to test for visibility.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo a ser testado quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>Width of the rectangle to test for visibility.</source>
          <target state="translated">A largura do retângulo a testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>Height of the rectangle to test for visibility.</source>
          <target state="translated">A altura do retângulo a testar quanto à visibilidade.</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o retângulo especificado por um par de coordenadas, uma largura e uma altura está contido na região de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the rectangle defined by the <ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>, <ph id="ph4">&lt;paramref name="width" /&gt;</ph>, and <ph id="ph5">&lt;paramref name="height" /&gt;</ph> parameters is contained within the visible clip region of this <ph id="ph6">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o retângulo definido pelos parâmetros <ph id="ph2">&lt;paramref name="x" /&gt;</ph>, <ph id="ph3">&lt;paramref name="y" /&gt;</ph>, <ph id="ph4">&lt;paramref name="width" /&gt;</ph> e <ph id="ph5">&lt;paramref name="height" /&gt;</ph> está contido dentro da região de recorte visível deste <ph id="ph6">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>; caso contrário, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</source>
          <target state="translated">Cria uma região de recorte retangular e define-a como a região de recorte para o objeto de gráfico do formulário usando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>Creates the location and size of two rectangles, one inside the clipping region and one outside.</source>
          <target state="translated">Cria o local e tamanho de dois retângulos, um dentro da região de recorte e um fora.</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>Tests each of the rectangles for visibility and draws only the visible one.</source>
          <target state="translated">Testa cada um dos retângulos para visibilidade e desenha apenas aquele visível.</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
          <source>The result is one small red rectangle, which is within the clip region.</source>
          <target state="translated">O resultado é um pequeno retângulo vermelho, que está dentro da região de recorte.</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.IsVisibleClipEmpty">
          <source>Gets a value indicating whether the visible clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> is empty.</source>
          <target state="translated">Obtém um valor que indica se a área de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> está vazia.</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.IsVisibleClipEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the visible portion of the clipping region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> is empty; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a parte visível da região de recorte deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> estiver vazia; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.IsVisibleClipEmpty">
          <source>The visible clipping region is the intersection of the clipping region of this <ph id="ph1">`Graphics`</ph> and the clipping region of the window.</source>
          <target state="translated">A região de recorte visível é a interseção da região de recorte deste <ph id="ph1">`Graphics`</ph> e a região de recorte da janela.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that specifies the layout rectangle for the string.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que especifica o retângulo de layout para a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that represents formatting information, such as line spacing, for the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que representa as informações de formatação, como o espaçamento entre linhas, para a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> objects, each of which bounds a range of character positions within the specified string.</source>
          <target state="translated">Obtém uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>, cada um deles limita um intervalo de posições de caractere na cadeia de caracteres especificada.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>This method returns an array of <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> objects, each of which bounds a range of character positions within the specified string.</source>
          <target state="translated">Esse método retorna uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>, cada um deles limita um intervalo de posições de caractere na cadeia de caracteres especificada.</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The regions returned by this method are resolution-dependent, so there might be a slight loss of accuracy if strings are recorded in a metafile at one resolution and later played back at a different resolution.</source>
          <target state="translated">As regiões retornadas por esse método são depende de resolução, portanto, pode ser uma pequena perda de precisão se cadeias de caracteres são registradas em um metarquivo em uma resolução e reproduzidas mais tarde em uma resolução diferente.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Sets a string "First and Second ranges" and a font for display of the string ("Times New Roman", 16 point).</source>
          <target state="translated">Define uma cadeia de caracteres "primeiro e segundo intervalos" e uma fonte para exibir a cadeia de caracteres ("Times New Roman", ponto 16).</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Sets two character ranges within the string (which correspond to the words "First" and "Second").</source>
          <target state="translated">Conjuntos de dois caracteres intervalos na cadeia de caracteres (que correspondem às palavras "Primeiro" e "Depois").</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Creates a rectangle in which to display the string.</source>
          <target state="translated">Cria um retângulo para exibir a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Sets the formatting of the string ¾ including the two character ranges.</source>
          <target state="translated">Define a formatação da cadeia de caracteres ¾ incluindo os intervalos de dois caracteres.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Draws the string to the screen.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Measures the character ranges, determines rectangles that bound the two specified ranges.</source>
          <target state="translated">Mede os intervalos de caractere, determina retângulos que associada os dois intervalos especificados.</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Draws the two rectangles to the screen.</source>
          <target state="translated">Desenha os dois retângulos para a tela.</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The result is the displayed string with the first range ("First") bounded by a red rectangle and the second range ("Second") bounded by a blue rectangle.</source>
          <target state="translated">O resultado é a cadeia de caracteres exibida com o primeiro intervalo ("primeiro") vinculada por um retângulo vermelho e o segundo intervalo ("depois") vinculada por um retângulo azul.</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the string specified by the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter.</source>
          <target state="translated">Este método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, nas unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres especificada pelo parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph> conforme desenhada com o parâmetro <ph id="ph4">&lt;paramref name="font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>, and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>e passe <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Also, ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Creates a string to measure.</source>
          <target state="translated">Cria uma cadeia de caracteres de medidas.</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Creates a font object and sets it to Arial (16 point).</source>
          <target state="translated">Cria um objeto de fonte e define-a como Arial (ponto de 16).</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Creates a size object and uses it and the font object to measure the size of the string.</source>
          <target state="translated">Cria um objeto de tamanho e usa a ele e o objeto de fonte para medir o tamanho da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Draws a red rectangle using the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o tamanho da cadeia de caracteres de medida.</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that specifies the maximum layout area for the text.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que especifica a área de layout máximo para o texto.</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> within the specified layout area.</source>
          <target state="translated">Mede a cadeia de caracteres especificada desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado dentro de uma área de layout especificada.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the string specified by the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter.</source>
          <target state="translated">Este método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, nas unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres especificada pelo parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph> conforme desenhada com o parâmetro <ph id="ph4">&lt;paramref name="font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>, and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>e passe <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Also, ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Creates a string to measure and a font object set to Arial (16 point).</source>
          <target state="translated">Cria uma cadeia de caracteres para medidas e um objeto de fonte definida para Arial (ponto de 16).</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Sets the maximum layout size of the string.</source>
          <target state="translated">Define o tamanho máximo do layout da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.</source>
          <target state="translated">Cria um objeto de tamanho e usa, o objeto de fonte e o tamanho máximo de layout para medir o tamanho da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Draws a red rectangle using the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o tamanho da cadeia de caracteres de medida.</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Maximum width of the string in pixels.</source>
          <target state="translated">Largura máxima da cadeia de caracteres em pixels.</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the string specified in the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter.</source>
          <target state="translated">Este método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, em unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres especificada no parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph> desenhada com o parâmetro <ph id="ph4">&lt;paramref name="font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>The <ph id="ph1">`width`</ph> parameter specifies the maximum value of the width component of the returned <ph id="ph2">&lt;xref:System.Drawing.SizeF&gt;</ph> structure (<ph id="ph3">&lt;xref:System.Drawing.SizeF.Width%2A&gt;</ph>).</source>
          <target state="translated">O <ph id="ph1">`width`</ph> parâmetro especifica o valor máximo do componente largura do retornado <ph id="ph2">&lt;xref:System.Drawing.SizeF&gt;</ph> estrutura (<ph id="ph3">&lt;xref:System.Drawing.SizeF.Width%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>If the <ph id="ph1">`width`</ph> parameter is less than the actual width of the string, the returned <ph id="ph2">&lt;xref:System.Drawing.SizeF.Width%2A&gt;</ph> component is truncated to a value representing the maximum number of characters that will fit within the specified width.</source>
          <target state="translated">Se o <ph id="ph1">`width`</ph> parâmetro for menor que a largura real da cadeia de caracteres, retornada <ph id="ph2">&lt;xref:System.Drawing.SizeF.Width%2A&gt;</ph> componente será truncado para um valor que representa o número máximo de caracteres que serão ajustados a largura especificada.</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>To accommodate the entire string, the returned <ph id="ph1">&lt;xref:System.Drawing.SizeF.Height%2A&gt;</ph> component is adjusted to a value that allows displaying the string with character wrap.</source>
          <target state="translated">Para acomodar a cadeia de caracteres inteira, retornada <ph id="ph1">&lt;xref:System.Drawing.SizeF.Height%2A&gt;</ph> componente é ajustado para um valor que permite exibir a cadeia de caracteres com contorno de caractere.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>, and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>e passe <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Also, ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Creates a string to measure and a font object set to Arial (16 point).</source>
          <target state="translated">Cria uma cadeia de caracteres para medidas e um objeto de fonte definida para Arial (ponto de 16).</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Sets the maximum width of the string.</source>
          <target state="translated">Define a largura máxima da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.</source>
          <target state="translated">Cria um objeto de tamanho e usa, o objeto de fonte e a largura máxima da cadeia de caracteres para medir o tamanho da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Draws a red rectangle using the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o tamanho da cadeia de caracteres de medida.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structure that represents the upper-left corner of the string.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o canto superior esquerdo da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that represents formatting information, such as line spacing, for the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que representa as informações de formatação, como o espaçamento entre linhas, para a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> and formatted with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado e formatada com o <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the string specified by the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter and the <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph> parameter.</source>
          <target state="translated">Este método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, nas unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres especificada pelo parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph> conforme desenhado com o parâmetro <ph id="ph4">&lt;paramref name="font" /&gt;</ph> e o parâmetro <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>, and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>e passe <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Also, ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a string to measure and a font object set to Arial (16 point)</source>
          <target state="translated">Cria uma cadeia de caracteres para medidas e um objeto de fonte definida para Arial (16 ponto)</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a point to locate the upper-left corner of the string.</source>
          <target state="translated">Cria um ponto para localizar o canto superior esquerdo da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a string format object and sets its format flags to <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</source>
          <target state="translated">Cria um objeto de formato de cadeia de caracteres e define seus sinalizadores de formato <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Creates a size object to measure the string.</source>
          <target state="translated">Cria um objeto de tamanho para medir a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Measures the size of the string, using the string, the font object, the locating point, and the string format.</source>
          <target state="translated">Mede o tamanho da cadeia de caracteres, usando a cadeia de caracteres, o objeto de fonte, o ponto de localização e o formato de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Draws a red rectangle using the locating point and the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o ponto de localização e o tamanho medido da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The result is a vertical rectangle enclosing a vertical string.</source>
          <target state="translated">O resultado é um retângulo vertical colocar uma cadeia de caracteres vertical.</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that specifies the maximum layout area for the text.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que especifica a área de layout máximo para o texto.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that represents formatting information, such as line spacing, for the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que representa as informações de formatação, como o espaçamento entre linhas, para a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> and formatted with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado e formatada com o <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the string specified in the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter and the <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph> parameter.</source>
          <target state="translated">Este método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, nas unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres especificada no parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph>, conforme desenhada com os parâmetros <ph id="ph4">&lt;paramref name="font" /&gt;</ph> e <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>, and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>e passe <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Also, ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Creates a string to measure and a font object set to Arial (16 point).</source>
          <target state="translated">Cria uma cadeia de caracteres para medidas e um objeto de fonte definida para Arial (ponto de 16).</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Sets the maximum layout size of the string, creating a size object to measure the string.</source>
          <target state="translated">Define o tamanho máximo do layout da cadeia de caracteres, criando um objeto de tamanho para medir a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Creates a string format object and sets its format flags to <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</source>
          <target state="translated">Cria um objeto de formato de cadeia de caracteres e define seus sinalizadores de formato <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.</source>
          <target state="translated">Mede o tamanho da cadeia de caracteres, usando a cadeia de caracteres, o objeto de fonte, o tamanho máximo de layout e o formato de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Draws a red rectangle using the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o tamanho da cadeia de caracteres de medida.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source>The result is a vertical rectangle enclosing a vertical string.</source>
          <target state="translated">O resultado é um retângulo vertical colocar uma cadeia de caracteres vertical.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Maximum width of the string.</source>
          <target state="translated">Largura máxima da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that represents formatting information, such as line spacing, for the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que representa as informações de formatação, como o espaçamento entre linhas, para a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> and formatted with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado e formatada com o <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the string specified in the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter and the <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph> parameter.</source>
          <target state="translated">Este método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, nas unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres especificada no parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph>, conforme desenhada com os parâmetros <ph id="ph4">&lt;paramref name="font" /&gt;</ph> e <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>, and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph>e passe <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Also, ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Creates a string to measure and a font object set it to Arial (16 point).</source>
          <target state="translated">Cria uma cadeia de caracteres para medidas e uma fonte objeto defini-la para Arial (ponto de 16).</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Sets the maximum width of the string.</source>
          <target state="translated">Define a largura máxima da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Creates a string format object and sets its format flags to <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</source>
          <target state="translated">Cria um objeto de formato de cadeia de caracteres e define seus sinalizadores de formato <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Creates a size object to measure the string.</source>
          <target state="translated">Cria um objeto de tamanho para medir a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Measures the size of the string, using the string, the font object, the maximum width, and the string format.</source>
          <target state="translated">Mede o tamanho da cadeia de caracteres, usando a cadeia de caracteres, o objeto de fonte, a largura máxima e o formato de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Draws a red rectangle using the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o tamanho da cadeia de caracteres de medida.</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source>The result is a vertical rectangle enclosing a vertical string.</source>
          <target state="translated">O resultado é um retângulo vertical colocar uma cadeia de caracteres vertical.</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>String to measure.</source>
          <target state="translated">Cadeia de caracteres a ser medida.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that defines the text format of the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> que define o formato de texto da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that specifies the maximum layout area for the text.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que especifica a área de layout máximo para o texto.</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that represents formatting information, such as line spacing, for the string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que representa as informações de formatação, como o espaçamento entre linhas, para a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Number of characters in the string.</source>
          <target state="translated">O número de caracteres na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Number of text lines in the string.</source>
          <target state="translated">O número de linhas de texto na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Measures the specified string when drawn with the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> and formatted with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>.</source>
          <target state="translated">Mede a cadeia de caracteres especificada quando desenhada com o <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> especificado e formatada com o <ph id="ph2">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> structure that represents the size of the string, in the units specified by the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> property, of the <ph id="ph3">&lt;paramref name="text" /&gt;</ph> parameter as drawn with the <ph id="ph4">&lt;paramref name="font" /&gt;</ph> parameter and the <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph> parameter.</source>
          <target state="translated">Esse método retorna uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> que representa o tamanho, em unidades especificadas pela propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph>, da cadeia de caracteres do parâmetro <ph id="ph3">&lt;paramref name="text" /&gt;</ph> desenhada com os parâmetros <ph id="ph4">&lt;paramref name="font" /&gt;</ph> e <ph id="ph5">&lt;paramref name="stringFormat" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> método foi projetado para uso com o indivíduo cadeias de caracteres e inclui uma pequena quantidade de espaço extra antes e após a cadeia de caracteres para permitir em saliência em relação glifos.</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Also, the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawString%2A&gt;</ph> método ajusta pontos de glifo para otimizar a qualidade do vídeo e podem exibir uma cadeia de caracteres mais estreita que relatado pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> method or one of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> methods that takes a <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph> and pass <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</source>
          <target state="translated">Para obter métricas adequadas para cadeias de caracteres adjacentes no layout (por exemplo, quando a implementação de texto formatado), use o <ph id="ph1">&lt;xref:System.Drawing.Graphics.MeasureCharacterRanges%2A&gt;</ph> método ou uma da <ph id="ph2">&lt;xref:System.Drawing.Graphics.MeasureString%2A&gt;</ph> métodos que leva um <ph id="ph3">&lt;xref:System.Drawing.StringFormat&gt;</ph> e passar <ph id="ph4">&lt;xref:System.Drawing.StringFormat.GenericTypographic%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Also ensure the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</source>
          <target state="translated">Além disso, verifique o <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é <ph id="ph3">&lt;xref:System.Drawing.Text.TextRenderingHint.AntiAlias&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Creates a string to measure and a font object set to Arial (16 point)</source>
          <target state="translated">Cria uma cadeia de caracteres para medidas e um objeto de fonte definida para Arial (16 ponto)</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Sets the maximum layout size of the string.</source>
          <target state="translated">Define o tamanho máximo do layout da cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Creates a string format object and sets its format flags to <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</source>
          <target state="translated">Cria um objeto de formato de cadeia de caracteres e define seus sinalizadores de formato <ph id="ph1">&lt;xref:System.Drawing.StringFormatFlags.DirectionVertical&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Creates the integer variables <ph id="ph1">`charactersFitted`</ph> and <ph id="ph2">`linesFilled`</ph> and a size object to measure the string.</source>
          <target state="translated">Cria as variáveis de inteiro <ph id="ph1">`charactersFitted`</ph> e <ph id="ph2">`linesFilled`</ph> e um objeto de tamanho para medir a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.</source>
          <target state="translated">Mede o tamanho da cadeia de caracteres e determina o número de linhas preenchidas, usando a cadeia de caracteres, o objeto de fonte, o tamanho máximo de layout e o formato de cadeia de caracteres e caracteres ajustados.</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Draws a red rectangle using the measured size of the string.</source>
          <target state="translated">Desenha um retângulo vermelho usando o tamanho da cadeia de caracteres de medida.</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Draws the string within the drawn rectangle.</source>
          <target state="translated">Desenha a cadeia de caracteres dentro do retângulo desenhado.</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>Draws the values of the number of characters fitted and lines filled.</source>
          <target state="translated">Desenha os valores do número de linhas preenchidas e ajustados de caracteres.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source>The result is a vertical rectangle enclosing a vertical string.</source>
          <target state="translated">O resultado é um retângulo vertical colocar uma cadeia de caracteres vertical.</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="font" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="font" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Multiplies the world transformation of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and specified the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multiplica a transformação global deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e especificou o <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>4x4 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that multiplies the world transformation.</source>
          <target state="translated">4x4 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que multiplica a transformação global.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the world transformation of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and specified the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multiplica a transformação global deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e especificou o <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>This method prepends the matrix specified by the <ph id="ph1">`matrix`</ph> parameter, so that the result is <ph id="ph2">`matrix`</ph> x world transformation.</source>
          <target state="translated">Esse método precede a matriz especificada pelo <ph id="ph1">`matrix`</ph> parâmetro, para que o resultado é <ph id="ph2">`matrix`</ph> x transformações de mundo.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a <ph id="ph1">`transformMatrix`</ph> matrix (a two by two identity matrix plus a zero-translation vector).</source>
          <target state="translated">Cria um <ph id="ph1">`transformMatrix`</ph> matriz (um dois por dois matriz de identidade e um vetor de conversão de zero).</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Translates the transform matrix by a vector (200, 100).</source>
          <target state="translated">Converte a matriz de transformação por um vetor (200, 100).</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.</source>
          <target state="translated">Gira a matriz de transformação do mundo do Windows Form 30 graus, precede a matriz de rotação para 30 graus para matriz de transformação do formulário.</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the rotated world transformation matrix by the translated <ph id="ph1">`transformMatrix`</ph>, and prepends the <ph id="ph2">`transformMatrix`</ph> to the world transformation matrix.</source>
          <target state="translated">Multiplica a matriz de transformação world girado pelo traduzido <ph id="ph1">`transformMatrix`</ph>e que precede o <ph id="ph2">`transformMatrix`</ph> para a matriz de transformação do mundo.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a rotated, translated ellipse.</source>
          <target state="translated">Desenha uma elipse girada, traduzida.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>4x4 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that multiplies the world transformation.</source>
          <target state="translated">4x4 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que multiplica a transformação global.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> enumeration that determines the order of the multiplication.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que determina a ordem da multiplicação.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the world transformation of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and specified the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">Multiplica a transformação global deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e especificou o <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph> for the <ph id="ph2">`order`</ph> parameter specifies that the order of the multiplication is <ph id="ph3">`matrix`</ph> x world transformation.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph> para o <ph id="ph2">`order`</ph> parâmetro especifica que a ordem da multiplicação é <ph id="ph3">`matrix`</ph> x transformações de mundo.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph> for <ph id="ph2">`order`</ph> specifies that the order of the multiplication is world transformation x <ph id="ph3">`matrix`</ph>.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph> para <ph id="ph2">`order`</ph> Especifica que a ordem da multiplicação transformações de mundo x <ph id="ph3">`matrix`</ph>.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">`transformMatrix`</ph> matrix (a two by two identity matrix plus a zero-translation vector).</source>
          <target state="translated">Cria um <ph id="ph1">`transformMatrix`</ph> matriz (um dois por dois matriz de identidade e um vetor de conversão de zero).</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Translates the transform matrix by a vector (200, 100).</source>
          <target state="translated">Converte a matriz de transformação por um vetor (200, 100).</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.</source>
          <target state="translated">A matriz de transformação do mundo do Windows Form gira 30 graus, acrescentando a matriz de rotação para 30 graus para matriz de transformação do formulário.</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the rotated world transformation matrix by the translated <ph id="ph1">`transformMatrix`</ph>, appending the <ph id="ph2">`transformMatrix`</ph> to the world transformation matrix.</source>
          <target state="translated">Multiplica a matriz de transformação world girado pelo traduzido <ph id="ph1">`transformMatrix`</ph>, acrescentando o <ph id="ph2">`transformMatrix`</ph> para a matriz de transformação do mundo.</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rotated, translated ellipse.</source>
          <target state="translated">Desenha uma elipse girada, traduzida.</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.PageScale">
          <source>Gets or sets the scaling between world units and page units for this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o dimensionamento entre unidades do mundo e de página para este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageScale">
          <source>This property specifies a value for the scaling between world units and page units for this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Esta propriedade especifica um valor para o dimensionamento entre unidades de mundo e de página para este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageScale">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageScale%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph> members to change the scale and origin when you draw a rectangle.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageScale%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph> membros para alterar a escala e a origem quando você desenhar um retângulo.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageScale">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageScale">
          <source>Paste the code into a form and call the <ph id="ph1">`ChangePageScaleAndTranslateTransform`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o código em um formulário e uma chamada a <ph id="ph1">`ChangePageScaleAndTranslateTransform`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.PageUnit">
          <source>Gets or sets the unit of measure used for page coordinates in this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define a unidade de medida usada para as coordenadas da página neste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageUnit">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> values other than <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.World" /&gt;</ph>.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.GraphicsUnit" /&gt;</ph> além de <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.World" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageUnit">
          <source>The graphics unit is the unit of measure used for page coordinates in this <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">A unidade de gráficos é a unidade de medida usado para coordenadas de página neste <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageUnit">
          <source>The following code example demonstrates the effect of changing the <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra o efeito de alterar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageUnit">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PageUnit">
          <source>Paste the code into a form and call the <ph id="ph1">`ChangePageUnit`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o código em um formulário e uma chamada a <ph id="ph1">`ChangePageUnit`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.PageUnit">
          <source><ph id="ph1">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.World" /&gt;</ph>, which is not a physical unit.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Graphics.PageUnit" /&gt;</ph> é definido como <ph id="ph2">&lt;see cref="F:System.Drawing.GraphicsUnit.World" /&gt;</ph>, que não é uma unidade física.</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.PixelOffsetMode">
          <source>Gets or set a value specifying how pixels are offset during rendering of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define um valor que especifica como os pixels são deslocados durante a renderização deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PixelOffsetMode">
          <source>This property specifies a member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /&gt;</ph> enumeration</source>
          <target state="translated">Esta propriedade especifica um membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.PixelOffsetMode">
          <source>Use this property to specify either higher quality, slower rendering, or lower quality, faster rendering of the contents of this <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Use esta propriedade para especificar um ou mais alta qualidade, a renderização mais lenta ou qualidade inferior, mais rápido a renderização do conteúdo desse <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Releases a device context handle obtained by a previous call to the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> method of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Libera um identificador de contexto de dispositivo obtido por uma chamada anterior ao método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ReleaseHdc">
          <source>Releases a device context handle obtained by a previous call to the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> method of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Libera um identificador de contexto de dispositivo obtido por uma chamada anterior ao método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc">
          <source><ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows device.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> dois métodos que permitem que você obtenha e liberar o identificador para um dispositivo do Windows.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc">
          <source>You should always follow a call to <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.</source>
          <target state="translated">Você sempre deve seguir uma chamada para <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> com uma chamada para <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> quando tiver terminado com o identificador do Windows.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Handle to a device context obtained by a previous call to the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> method of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Identificador para um contexto de dispositivo obtido por uma chamada anterior ao método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> desse <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Releases a device context handle obtained by a previous call to the <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> method of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Libera um identificador de contexto de dispositivo obtido por uma chamada anterior ao método <ph id="ph1">&lt;see cref="M:System.Drawing.Graphics.GetHdc" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>The device context is a Windows structure based on <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</source>
          <target state="translated">O contexto de dispositivo é uma estrutura de Windows com base em <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> que define um conjunto de objetos gráficos e seus atributos associados, bem como os modos de gráficos que afetam a saída.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> methods must appear in pairs.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> métodos devem aparecer em pares.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>During the scope of a <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> method pair, you usually make calls only to <ph id="ph3">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> functions.</source>
          <target state="translated">Durante o escopo de um <ph id="ph1">&lt;xref:System.Drawing.Graphics.GetHdc%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.ReleaseHdc%2A&gt;</ph> par de métodos, você normalmente fazer chamadas apenas a <ph id="ph3">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> funções.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Calls in that scope made to <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> methods of the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> that produced the <ph id="ph3">`hdc`</ph> parameter fail with an <ph id="ph4">`ObjectBusy`</ph> error.</source>
          <target state="translated">Chamadas em que o escopo feitas <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> métodos do <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> que produziu o <ph id="ph3">`hdc`</ph> parâmetro falhar com um <ph id="ph4">`ObjectBusy`</ph> erro.</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Also, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> ignores any state changes made to the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> of the <ph id="ph3">`hdc`</ph> parameter in subsequent operations.</source>
          <target state="translated">Além disso, <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> ignora quaisquer alterações de estado para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> do <ph id="ph3">`hdc`</ph> parâmetro em operações subsequentes.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>The example illustrates calling a Windows <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> function to perform the same task as a <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> method.</source>
          <target state="translated">O exemplo ilustra a chamada de um Windows <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> função para executar a mesma tarefa como uma <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Defines the interoperability <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute for the Windows DLL file gdi32.dll.</source>
          <target state="translated">Define a interoperabilidade <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> atributo para o arquivo de DLL do Windows Gdi32. dll.</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>This DLL contains the desired <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> function, and it defines the <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> function in that DLL as external.</source>
          <target state="translated">Essa DLL contém os detalhes desejados <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> função e define o <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> função naquela DLL como externo.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Creates a red pen.</source>
          <target state="translated">Cria uma caneta vermelha.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>With the pen, draws a rectangle to the screen using the <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> method.</source>
          <target state="translated">Com a caneta desenha um retângulo para a tela usando o <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Defines an internal pointer type variable <ph id="ph1">`hdc`</ph> and sets its value to the handle to the device context of the form.</source>
          <target state="translated">Define uma variável de tipo de ponteiro interno <ph id="ph1">`hdc`</ph> e define seu valor como o identificador para o contexto do formulário.</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Draws a rectangle to the screen using the <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> function.</source>
          <target state="translated">Desenha um retângulo para a tela usando o <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> função.</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Releases the device context represented by the <ph id="ph1">`hdc`</ph> parameter.</source>
          <target state="translated">Libera o contexto de dispositivo representado pelo <ph id="ph1">`hdc`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
          <source>Handle to a device context.</source>
          <target state="translated">Identificador para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
          <source>Releases a handle to a device context.</source>
          <target state="translated">Libera um identificador para um contexto de dispositivo.</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">para acessar código não gerenciado.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Enumeração de relacionados: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.RenderingOrigin">
          <source>Gets or sets the rendering origin of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for dithering and for hatch brushes.</source>
          <target state="translated">Obtém ou define a origem de renderização deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para pincéis de hachura e pontilhamento.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.RenderingOrigin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structure that represents the dither origin for 8-bits-per-pixel and 16-bits-per-pixel dithering and is also used to set the origin for hatch brushes.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa a origem para pontilhamentos de 8 bits por pixel e de 16 bits por pixel e que também é usada para definir a origem dos pincéis de hachura.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ResetClip">
          <source>Resets the clip region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to an infinite region.</source>
          <target state="translated">Redefine a região de recorte desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para uma região infinita.</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>When the clipping region of a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> is infinite, items that this <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> draws are not clipped.</source>
          <target state="translated">Quando a região de recorte de um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> é infinito, itens que este <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> desenhos não são cortados.</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</source>
          <target state="translated">Cria um retângulo com o canto superior esquerdo em (0, 0) e define a região de recorte para esse retângulo.</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</source>
          <target state="translated">Cria um segundo retângulo com o canto superior esquerdo em (100, 100) e define a região de recorte para a interseção desse retângulo e a região de recorte atual (o retângulo primeiro).</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>Fills a large rectangle that includes both previous rectangles with a solid blue brush.</source>
          <target state="translated">Preenche um retângulo grande que inclui os dois retângulos anteriores com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>Resets the clipping region to infinite.</source>
          <target state="translated">Redefine a região de recorte como infinito.</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</source>
          <target state="translated">Desenha retângulos ao redor das regiões de dois recorte; Ele usa uma caneta preta primeiro retângulo de recorte e uma caneta vermelha para a segunda região de recorte.</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetClip">
          <source>The result is that only the intersection of the two rectangles is filled with blue.</source>
          <target state="translated">O resultado é que apenas a interseção de dois retângulos é preenchida com azul.</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>Resets the world transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the identity matrix.</source>
          <target state="translated">Redefine a matriz de transformação global desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a matriz de identidade.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>The identity matrix represents a transformation with no scaling, rotation, or translation.</source>
          <target state="translated">A matriz de identidade representa uma transformação com nenhuma escala, rotação ou conversão.</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>Resetting the world transformation of this <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> to the identity matrix means that its world transformation does not change the geometry of transformed items.</source>
          <target state="translated">Redefinindo a transformação global deste <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para a matriz de identidade significa que sua transformação world não alteram a geometria de itens transformados.</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>Translates the world transform of the Windows Form by a vector (100, 0).</source>
          <target state="translated">Converte a transformação do mundo do formulário do Windows por um vetor de (100, 0).</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>Saves the graphics state of the form.</source>
          <target state="translated">Salva o estado de elementos gráficos do formulário.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</source>
          <target state="translated">Redefine a transformação do mundo do formulário como uma identidade e preenche um retângulo com um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>Restores the translated graphics state and fills a rectangle with a solid blue brush.</source>
          <target state="translated">Restaura o estado dos gráficos traduzidos e preenche um retângulo com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ResetTransform">
          <source>The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</source>
          <target state="translated">O resultado é um retângulo de vermelho não traduzido e um retângulo de preenchimento azul traduzido.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph> that represents the state to which to restore this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph> que representa o estado para o qual restaurar este <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Restores the state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the state represented by a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph>.</source>
          <target state="translated">Restaura o estado desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o estado representado por um <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, an information block that holds the state of the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> is put on a stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, um bloco de informações que mantém o estado do <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> é colocada em uma pilha.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> that identifies that information block.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> que identifica esse bloco de informações.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>When you pass the identifying <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, the information block is removed from the stack and is used to restore the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> to the state it was in at the time of the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call.</source>
          <target state="translated">Quando você passa de identificação <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, o bloco de informações é removido da pilha e é usado para restaurar o <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> para o estado em que estava no momento do <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> returned by a given call to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method can be passed only once to the <ph id="ph3">`Restore`</ph> method.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> retornado por uma chamada fornecida para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método pode ser transmitido apenas uma vez para o <ph id="ph3">`Restore`</ph> método.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method can be nested; that is, you can call the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method several times before you call the <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método pode ser aninhado; ou seja, você pode chamar o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método várias vezes antes de chamar o <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Each time you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method, an information block is put on the stack, and you receive a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> for the information block.</source>
          <target state="translated">Cada vez que você chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método, um bloco de informações é colocado na pilha, e você recebe um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> para o bloco de informações.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>When you pass one of those objects to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is returned to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call that returned that particular <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph>.</source>
          <target state="translated">Quando você passa um desses objetos para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é retornado para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método retornado que determinado <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>The information block placed on the stack by that <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call is removed from the stack, and all information blocks placed on that stack after that <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call are also removed.</source>
          <target state="translated">O bloco de informações é colocado na pilha de por que <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método é removida da pilha e todos os blocos de informações é colocado na pilha depois disso <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método também serão removidos.</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method place information blocks on the same stack as calls to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> blocos de informações de local do método na mesma pilha de chamadas para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Just as a <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> call is paired with a <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> call, a <ph id="ph3">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method call is paired with a <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call.</source>
          <target state="translated">Assim como um <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> chamada é emparelhada com um <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamar, um <ph id="ph3">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Likewise, when you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Da mesma forma, quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Translates the world transform of the Windows Form by a vector (100, 0).</source>
          <target state="translated">Converte a transformação do mundo do formulário do Windows por um vetor de (100, 0).</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Saves the graphics state of the form.</source>
          <target state="translated">Salva o estado de elementos gráficos do formulário.</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</source>
          <target state="translated">Redefine a transformação do mundo do formulário como uma identidade e preenche um retângulo com um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>Restores the translated graphics state and fills a second rectangle with a solid blue brush.</source>
          <target state="translated">Restaura o estado dos gráficos traduzidos e preenche um segundo retângulo com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
          <source>The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</source>
          <target state="translated">O resultado é um retângulo de vermelho não traduzido e um retângulo de preenchimento azul traduzido.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Applies the specified rotation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Aplica a rotação especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>Angle of rotation in degrees.</source>
          <target state="translated">Ângulo de rotação em graus.</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>Applies the specified rotation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Aplica a rotação especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the <ph id="ph1">`angle`</ph> parameter.</source>
          <target state="translated">A operação de rotação consiste multiplicando-se a matriz de transformação por uma matriz cujos elementos são provenientes de <ph id="ph1">`angle`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>This method applies the rotation by prepending it to the transformation matrix.</source>
          <target state="translated">Esse método se aplica a rotação acrescentando-o para a matriz de transformação.</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>Translates the world transformation matrix of the Windows Form by the vector (100, 0).</source>
          <target state="translated">Converte a matriz de transformação do mundo do Windows Form pelo vetor (100, 0).</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.</source>
          <target state="translated">Gira a transformação do mundo por um ângulo de 30 graus, acrescentando a matriz de rotação para a matriz de transformação do mundo.</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single)">
          <source>Draws a rotated, translated ellipse with a blue pen.</source>
          <target state="translated">Desenha uma elipse girada, traduzida com uma caneta azul.</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Angle of rotation in degrees.</source>
          <target state="translated">Ângulo de rotação em graus.</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica se a rotação é acrescentada ou anexada à transformação da matriz.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified rotation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> in the specified order.</source>
          <target state="translated">Aplica a rotação especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the <ph id="ph1">`angle`</ph> parameter.</source>
          <target state="translated">A operação de rotação consiste multiplicando-se a matriz de transformação por uma matriz cujos elementos são provenientes de <ph id="ph1">`angle`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method prepends or appends the transformation matrix of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> by the rotation matrix according to the <ph id="ph2">`order`</ph> parameter.</source>
          <target state="translated">Este método adiciona ou acrescenta a matriz de transformação do <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para a matriz de rotação de acordo com o <ph id="ph2">`order`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Translates the world transformation matrix of the Windows Form by the vector (100, 0).</source>
          <target state="translated">Converte a matriz de transformação do mundo do Windows Form pelo vetor (100, 0).</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>.</source>
          <target state="translated">Gira a transformação do mundo por um ângulo de 30 graus, anexando a matriz de rotação para a matriz de transformação do mundo com <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a translated, rotated ellipse with a blue pen.</source>
          <target state="translated">Desenha uma elipse traduzida, girada com uma caneta azul.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Save">
          <source>Saves the current state of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> and identifies the saved state with a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph>.</source>
          <target state="translated">Salva o estado atual deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> e identifica o estado salvo com um <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.Save">
          <source>This method returns a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph> that represents the saved state of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Esse método retorna um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsState" /&gt;</ph> que representa o estado salvo deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, an information block that holds the state of the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> is put on a stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método de um <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>, um bloco de informações que mantém o estado do <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> é colocada em uma pilha.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> that identifies that information block.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método retorna um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> que identifica esse bloco de informações.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>When you pass the identifying <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, the information block is removed from the stack and is used to restore the <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> to the state it was in at the time of the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call.</source>
          <target state="translated">Quando você passa de identificação <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, o bloco de informações é removido da pilha e é usado para restaurar o <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> para o estado em que estava no momento do <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Note that the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> returned by a given call to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method can be passed only once to the <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> retornado por uma chamada fornecida para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método pode ser transmitido apenas uma vez para o <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method can be nested; that is, you can call the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method several times before you call the <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método pode ser aninhado; ou seja, você pode chamar o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método várias vezes antes de chamar o <ph id="ph3">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Each time you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method, an information block is put on the stack, and you receive a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> for the information block.</source>
          <target state="translated">Cada vez que você chamar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método, um bloco de informações é colocado na pilha, e você recebe um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph> para o bloco de informações.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>When you pass one of those objects to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> is returned to the state it was in at the time of the <ph id="ph3">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call that returned that particular <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph>.</source>
          <target state="translated">Quando você passa um desses objetos para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> é retornado para o estado em que estava no momento do <ph id="ph3">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método retornado que determinado <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>The information block placed on the stack by that <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call is removed from the stack, and all information blocks placed on that stack after that <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method call are also removed.</source>
          <target state="translated">O bloco de informações é colocado na pilha de por que <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método é removida da pilha e todos os blocos de informações é colocado na pilha depois disso <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamada de método também serão removidos.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Calls to the <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method place information blocks on the same stack as calls to the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method.</source>
          <target state="translated">Chamadas para o <ph id="ph1">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> blocos de informações de local do método na mesma pilha de chamadas para o <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Just as a <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> call is paired with a <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> call, a <ph id="ph3">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method call is paired with a <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method call.</source>
          <target state="translated">Assim como um <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> chamada é emparelhada com um <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> chamar, um <ph id="ph3">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> chamada de método é emparelhada com um <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.Restore%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Likewise, When you call the <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> method, all information blocks placed on the stack (by the <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method or by the <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method) after the corresponding call to the <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> method are removed from the stack.</source>
          <target state="translated">Da mesma forma, quando você chama o <ph id="ph1">&lt;xref:System.Drawing.Graphics.EndContainer%2A&gt;</ph> método, todos os blocos de informações colocadas na pilha (pelo <ph id="ph2">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> método ou o <ph id="ph3">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método) após a chamada correspondente para o <ph id="ph4">&lt;xref:System.Drawing.Graphics.BeginContainer%2A&gt;</ph> método são removidas da pilha.</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Translates the world transform of the Windows Form by a vector (100, 0).</source>
          <target state="translated">Converte a transformação do mundo do formulário do Windows por um vetor de (100, 0).</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Saves the graphics state of the form.</source>
          <target state="translated">Salva o estado de elementos gráficos do formulário.</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.</source>
          <target state="translated">Redefine a transformação do mundo do formulário como uma identidade (matriz de identidade de 2 x 2 além de uma tradução de vetor de zero) e preenche um retângulo com um pincel vermelho sólido.</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>Restores the translated graphics state and fills a rectangle with a solid blue brush.</source>
          <target state="translated">Restaura o estado dos gráficos traduzidos e preenche um retângulo com um pincel azul sólido.</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.Save">
          <source>The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.</source>
          <target state="translated">O resultado é um retângulo vermelho não traduzido à esquerda e um retângulo preenchido azul traduzido à direita do formulário.</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Applies the specified scaling operation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> by prepending it to the object's transformation matrix.</source>
          <target state="translated">Aplica a operação de colocação em escala especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> precedendo-a à matriz de transformação do objeto.</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>Scale factor in the x direction.</source>
          <target state="translated">Fator de escala na direção x.</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>Scale factor in the y direction.</source>
          <target state="translated">Fator de escala na direção y.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>Applies the specified scaling operation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> by prepending it to the object's transformation matrix.</source>
          <target state="translated">Aplica a operação de colocação em escala especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> precedendo-a à matriz de transformação do objeto.</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (<ph id="ph1">`sx`</ph>, <ph id="ph2">`sy`</ph>, 1).</source>
          <target state="translated">A operação de escala consiste multiplicando-se a matriz de transformação por uma matriz diagonal cujos elementos são (<ph id="ph1">`sx`</ph>, <ph id="ph2">`sy`</ph>, 1).</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>This method prepends the transformation matrix of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> by the scaling matrix.</source>
          <target state="translated">Esse método precede a matriz de transformação do <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para a matriz de escala.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>Rotates the world transformation matrix of the Windows Form by 30 degrees.</source>
          <target state="translated">A matriz de transformação do mundo do Windows Form gira 30 graus.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.</source>
          <target state="translated">Dimensiona essa matriz por um fator de 3 na direção x e um fator de 1 na direção y acrescentando a transformação de escala.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>Draws a scaled, rotated rectangle with a blue pen.</source>
          <target state="translated">Desenha um retângulo dimensionado, girado com uma caneta azul.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
          <source>The result is still a rectangle.</source>
          <target state="translated">O resultado ainda é um retângulo.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scale factor in the x direction.</source>
          <target state="translated">Fator de escala na direção x.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scale factor in the y direction.</source>
          <target state="translated">Fator de escala na direção y.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica se a operação de colocação em escala precede ou é acrescentada à matriz de transformação.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified scaling operation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> in the specified order.</source>
          <target state="translated">Aplica a operação de colocação em escala especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (<ph id="ph1">`sx`</ph>, <ph id="ph2">`sy`</ph>, 1).</source>
          <target state="translated">A operação de escala consiste multiplicando-se a matriz de transformação por uma matriz diagonal cujos elementos são (<ph id="ph1">`sx`</ph>, <ph id="ph2">`sy`</ph>, 1).</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method prepends or appends the transformation matrix of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> by the scaling matrix according to the <ph id="ph2">`order`</ph> parameter.</source>
          <target state="translated">Este método adiciona ou acrescenta a matriz de transformação do <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para a matriz escala de acordo com o <ph id="ph2">`order`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the world transformation matrix of the Windows Form by 30 degrees.</source>
          <target state="translated">A matriz de transformação do mundo do Windows Form gira 30 graus.</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph> member.</source>
          <target state="translated">Dimensiona essa matriz por um fator de 3 na direção x e um fator de 1 na direção y acrescentando a transformação de dimensionamento com o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph> membro.</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rotated, scaled rectangle with a blue pen.</source>
          <target state="translated">Desenha um retângulo girado, dimensionado com uma caneta azul.</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The result is a parallelogram.</source>
          <target state="translated">O resultado é um paralelogramo.</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the <ph id="ph2">&lt;see langword="Clip" /&gt;</ph> property of the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Define a área de recorte desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a propriedade <ph id="ph2">&lt;see langword="Clip" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> that represents the new clip region.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que representa a nova região de recorte.</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Define a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>If the graphics path represented by the <ph id="ph1">`path`</ph> parameter is not closed, an additional segment is added from the last point to the first point to close the path.</source>
          <target state="translated">Se o caminho de elementos gráficos representados pelo <ph id="ph1">`path`</ph> parâmetro não for fechado, um segmento adicional é adicionado do último ponto até o primeiro ponto para fechar o caminho.</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a graphics path and adds an ellipse to the path.</source>
          <target state="translated">Cria um caminho de gráficos e adiciona uma elipse ao caminho.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Sets the clipping region to the elliptical path.</source>
          <target state="translated">Define a região de recorte para o caminho elíptico.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The result is a filled, black ellipse.</source>
          <target state="translated">O resultado é uma elipse preenchida, preta.</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> from which to take the new clip region.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual capturar a nova região de recorte.</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the <ph id="ph2">&lt;see langword="Clip" /&gt;</ph> property of the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Define a área de recorte desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para a propriedade <ph id="ph2">&lt;see langword="Clip" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler, as well as <ph id="ph4">`thisForm`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> for the example.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos, bem como <ph id="ph4">`thisForm`</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> para o exemplo.</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>Creates a temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> from the <ph id="ph2">`thisForm`</ph><ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> of the example.</source>
          <target state="translated">Cria um temporário <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> do <ph id="ph2">`thisForm`</ph> <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> do exemplo.</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>Sets the clipping region of the temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> to a small square.</source>
          <target state="translated">Define a região de recorte de temporárias <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para um pequeno quadrado.</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>Updates the clipping region of the form's graphic object to that of the temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Atualizações da região de recorte do objeto de gráfico do formulário que temporárias <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
          <source>The result is a small, filled, black square.</source>
          <target state="translated">O resultado é um quadrado pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the new clip region.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa a nova região de recorte.</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the rectangle specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Define a área de recorte desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o retângulo especificado por uma estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>Creates a small rectangle for the clipping region.</source>
          <target state="translated">Cria um pequeno retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>Sets the clipping region to the rectangle.</source>
          <target state="translated">Define a região de recorte para o retângulo.</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
          <source>The result is a small, filled, black rectangle.</source>
          <target state="translated">O resultado é um retângulo pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents the new clip region.</source>
          <target state="translated">Estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa a nova região de recorte.</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the rectangle specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure.</source>
          <target state="translated">Define a área de recorte desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> para o retângulo especificado por uma estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>Creates a small rectangle for the clipping region.</source>
          <target state="translated">Cria um pequeno retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>Sets the clipping region to the rectangle.</source>
          <target state="translated">Define a região de recorte para o retângulo.</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
          <source>The result is a small, filled, black rectangle.</source>
          <target state="translated">O resultado é um retângulo pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to combine.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> a ser combinado.</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> enumeration that specifies the combining operation to use.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> que especifica a operação de combinação a ser usada.</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the result of the specified operation combining the current clip region and the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Define a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> como o resultado da operação especificada que combina a região de recorte e o <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>If the graphics path represented by the <ph id="ph1">`path`</ph> parameter is not closed, an additional segment is added from the last point to the first point to close the path.</source>
          <target state="translated">Se o caminho de elementos gráficos representados pelo <ph id="ph1">`path`</ph> parâmetro não for fechado, um segmento adicional é adicionado do último ponto até o primeiro ponto para fechar o caminho.</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>Creates a graphics path and adds an ellipse to the path.</source>
          <target state="translated">Cria um caminho de gráficos e adiciona uma elipse ao caminho.</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region to the elliptical path with the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> member.</source>
          <target state="translated">Define a região de recorte para o caminho elíptico com o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> membro.</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
          <source>The result is a filled, black ellipse.</source>
          <target state="translated">O resultado é uma elipse preenchida, preta.</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> that specifies the clip region to combine.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> que especifica a área de recorte a ser combinada.</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> enumeration that specifies the combining operation to use.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> que especifica a operação de combinação a ser usada.</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the result of the specified combining operation of the current clip region and the <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.Clip" /&gt;</ph> property of the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Define a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> como o resultado da operação especificada de combinação da área de recorte e a propriedade <ph id="ph2">&lt;see cref="P:System.Drawing.Graphics.Clip" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler, as well as <ph id="ph4">`thisForm`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> for the example.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos, bem como <ph id="ph4">`thisForm`</ph>, o <ph id="ph5">&lt;xref:System.Windows.Forms.Form&gt;</ph> para o exemplo.</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>Creates a temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> from the <ph id="ph2">`thisForm`</ph><ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> of the example.</source>
          <target state="translated">Cria um temporário <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> do <ph id="ph2">`thisForm`</ph> <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> do exemplo.</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region of the temporary <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> to a small square.</source>
          <target state="translated">Define a região de recorte de temporárias <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para um pequeno quadrado.</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>Updates the clipping region of the form's graphic object to that of the new <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> with the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> member.</source>
          <target state="translated">Atualizações da região de recorte do objeto de gráfico do formulário de novo <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> com o <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> membro.</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
          <source>The result is a small, filled, black square.</source>
          <target state="translated">O resultado é um quadrado pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure to combine.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> a combinar.</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> enumeration that specifies the combining operation to use.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> que especifica a operação de combinação a ser usada.</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the result of the specified operation combining the current clip region and the rectangle specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure.</source>
          <target state="translated">Define a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> como o resultado da operação especificada que combina a região de recorte e o retângulo especificado por uma estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>Creates a small rectangle for the clipping region.</source>
          <target state="translated">Cria um pequeno retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region to the rectangle with the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> member.</source>
          <target state="translated">Define a região de recorte para o retângulo com o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> membro.</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
          <source>The result is a small, filled, black rectangle.</source>
          <target state="translated">O resultado é um retângulo pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure to combine.</source>
          <target state="translated">A estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> a combinar.</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> enumeration that specifies the combining operation to use.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> que especifica a operação de combinação a ser usada.</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the result of the specified operation combining the current clip region and the rectangle specified by a <ph id="ph2">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure.</source>
          <target state="translated">Define a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> como o resultado da operação especificada que combina a região de recorte e o retângulo especificado por uma estrutura <ph id="ph2">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>Creates a small rectangle for the clipping region.</source>
          <target state="translated">Cria um pequeno retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region to the rectangle with the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> member.</source>
          <target state="translated">Define a região de recorte para o retângulo com o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> membro.</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
          <source>The result is a small, filled, black rectangle.</source>
          <target state="translated">O resultado é um retângulo pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> to combine.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> a ser combinado.</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>Member from the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> enumeration that specifies the combining operation to use.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CombineMode" /&gt;</ph> que especifica a operação de combinação a ser usada.</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to the result of the specified operation combining the current clip region and the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Region" /&gt;</ph>.</source>
          <target state="translated">Define a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> como o resultado da operação especificada que combina a região de recorte e o <ph id="ph2">&lt;see cref="T:System.Drawing.Region" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>Creates a small rectangle for the clipping region.</source>
          <target state="translated">Cria um pequeno retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>Sets the clipping region to the rectangle with the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> member.</source>
          <target state="translated">Define a região de recorte para o retângulo com o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CombineMode.Replace&gt;</ph> membro.</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
          <source>The result is a small, filled, black rectangle.</source>
          <target state="translated">O resultado é um retângulo pequeno, preenchido, preto.</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>Gets or sets the rendering quality for this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define a qualidade de renderização para este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.SmoothingMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.SmoothingMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>The smoothing mode specifies whether lines, curves, and the edges of filled areas use smoothing (also called antialiasing).</source>
          <target state="translated">O modo Especifica se linhas, curvas e as bordas de áreas preenchidas usam suavização (também chamado de suavização).</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>One exception is that path gradient brushes do not obey the smoothing mode.</source>
          <target state="translated">Uma exceção é que pincéis de gradiente do caminho não obedece o modo.</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>Areas filled using a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PathGradientBrush&gt;</ph> are rendered the same way (aliased) regardless of the <ph id="ph2">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> property.</source>
          <target state="translated">Áreas preenchidas usando um <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PathGradientBrush&gt;</ph> são renderizados da mesma forma (alias) independentemente do <ph id="ph2">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>The following method demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">O método a seguir demonstra os efeitos da configuração de <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>The output of the example is shown in the following illustration.</source>
          <target state="translated">A saída do exemplo é mostrada na ilustração a seguir.</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source><bpt id="p1">![</bpt>Lines with and without smoothing applied.<ept id="p1">]</ept><bpt id="p2">(~/add/media/gdi-smoothingmode.png "</bpt>Lines with and without smoothing applied.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Linhas com e sem suavização aplicada. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/gdi-smoothingmode.png "</bpt>Linhas com e sem suavização aplicada.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.SmoothingMode">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o código em um formulário e uma chamada a <ph id="ph1">`ShowPensAndSmoothingMode`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.TextContrast">
          <source>Gets or sets the gamma correction value for rendering text.</source>
          <target state="translated">Obtém ou define o valor de correção gama para renderizar texto.</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextContrast">
          <source>The gamma correction value used for rendering antialiased and ClearType text.</source>
          <target state="translated">O valor de correção gama usado para renderizar antialiasing e texto ClearType.</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextContrast">
          <source>The gamma correction value must be between 0 and 12.</source>
          <target state="translated">O valor de correção gama deve estar entre 0 e 12.</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextContrast">
          <source>The default value is 4.</source>
          <target state="translated">O valor padrão é 4.</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextContrast">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.TextContrast%2A&gt;</ph> properties.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.TextContrast%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextContrast">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextContrast">
          <source>Paste the code into a form and call the <ph id="ph1">`ChangeTextRenderingHintAndTextContrast`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o código em um formulário e uma chamada a <ph id="ph1">`ChangeTextRenderingHintAndTextContrast`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>Gets or sets the rendering mode for text associated with this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o modo de renderização para o texto associado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Text.TextRenderingHint" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Drawing.Text.TextRenderingHint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>The text rendering hint specifies whether text renders with antialiasing.</source>
          <target state="translated">A dica de renderização de texto Especifica se o texto renderizado com suavização.</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>You should not use a <ph id="ph1">&lt;xref:System.Drawing.Graphics.CompositingMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy&gt;</ph> when the <ph id="ph3">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit&gt;</ph>.</source>
          <target state="translated">Você não deve usar um <ph id="ph1">&lt;xref:System.Drawing.Graphics.CompositingMode%2A&gt;</ph> valor da propriedade <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy&gt;</ph> quando o <ph id="ph3">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> está definida como <ph id="ph4">&lt;xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>An exception could occur or the image may not render correctly.</source>
          <target state="translated">Uma exceção pode ocorrer ou a imagem talvez não sejam renderizadas corretamente.</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.TextContrast%2A&gt;</ph> properties.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Drawing.Graphics.TextRenderingHint%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Graphics.TextContrast%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.TextRenderingHint">
          <source>Paste the code into a form and call the <ph id="ph1">`ChangeTextRenderingHintAndTextContrast`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Cole o código em um formulário e uma chamada a <ph id="ph1">`ChangeTextRenderingHintAndTextContrast`</ph> método ao lidar com o formulário <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> evento, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.Transform">
          <source>Gets or sets a copy of the geometric world transformation for this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define uma cópia da transformação geométrica global deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the geometric world transformation for this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Uma cópia da <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que representa a transformação geométrica global deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>GDI+ uses three coordinate spaces: world, page, and device.</source>
          <target state="translated">GDI+ usa três espaços de coordenadas: mundo, página e dispositivo.</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>World coordinates are the coordinates used to model a particular graphic world and are the coordinates you pass to methods in the .NET Framework.</source>
          <target state="translated">Coordenadas de mundo são as coordenadas usadas para modelar um mundo gráfico específico e são as coordenadas que você passa para métodos no .NET Framework.</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>Page coordinates refer to the coordinate system used by a drawing surface, such as a form or a control.</source>
          <target state="translated">Coordenadas da página se referem ao sistema de coordenadas usado por um superfície de desenho, como um formulário ou controle.</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>Device coordinates are the coordinates used by the physical device being drawn on, such as a screen or a printer.</source>
          <target state="translated">Coordenadas do dispositivo são as coordenadas usadas pelo dispositivo físico desenhado, como uma tela ou uma impressora.</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics.Transform%2A&gt;</ph> property represents the world transformation, which maps world coordinates to page coordinates.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Graphics.Transform%2A&gt;</ph> propriedade representa a transformação global, que mapeia as coordenadas do mundo para coordenadas da página.</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.Transform">
          <source>Because the matrix returned and by the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Transform%2A&gt;</ph> property is a copy of the geometric transform, you should dispose of the matrix when you no longer need it.</source>
          <target state="translated">Porque a matriz retornada e pela <ph id="ph1">&lt;xref:System.Drawing.Graphics.Transform%2A&gt;</ph> é uma cópia da transformação geométrica, descarte da matriz quando você não precisa mais dela.</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Transforma uma matriz de pontos de um espaço de coordenadas para outro usando as transformações global e de página atuais deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> enumeration that specifies the destination coordinate space.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> que especifica o espaço de coordenadas de destino.</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> enumeration that specifies the source coordinate space.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> que especifica o espaço de coordenadas de origem.</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transformation.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos para transformação.</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Transforma uma matriz de pontos de um espaço de coordenadas para outro usando as transformações global e de página atuais deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Creates two points and draws a blue line between them.</source>
          <target state="translated">Cria dois pontos e desenha uma linha azul entre eles.</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</source>
          <target state="translated">Define a transformação do mundo para traduzir por valores 40 na direção x e 30 na direção y.</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Transforms the points from world coordinates (<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.World&gt;</ph>) to page coordinates (<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.Page&gt;</ph>).</source>
          <target state="translated">Transforma os pontos de coordenadas do mundo (<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.World&gt;</ph>) em coordenadas da página (<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.Page&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Resets the world transformation to the identity.</source>
          <target state="translated">Redefine a transformação global para a identidade.</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>Draws a red line between the transformed points.</source>
          <target state="translated">Desenha uma linha vermelha entre os pontos transformados.</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
          <source>The result is a blue line and a translated red line below it.</source>
          <target state="translated">O resultado é uma linha azul e uma linha vermelha traduzida abaixo dela.</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> enumeration that specifies the destination coordinate space.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> que especifica o espaço de coordenadas de destino.</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> enumeration that specifies the source coordinate space.</source>
          <target state="translated">Membro da enumeração de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /&gt;</ph> que especifica o espaço de coordenadas de origem.</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represent the points to transform.</source>
          <target state="translated">Matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos a serem transformados.</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Transforma uma matriz de pontos de um espaço de coordenadas para outro usando as transformações global e de página atuais deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Creates two points and draws a blue line between them.</source>
          <target state="translated">Cria dois pontos e desenha uma linha azul entre eles.</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</source>
          <target state="translated">Define a transformação do mundo para traduzir por valores 40 na direção x e 30 na direção y.</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Transforms the points from world coordinates (<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.World&gt;</ph>) to page coordinates (<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.Page&gt;</ph>).</source>
          <target state="translated">Transforma os pontos de coordenadas do mundo (<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.World&gt;</ph>) em coordenadas da página (<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CoordinateSpace.Page&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>Resets the world transformation to the identity and draws a red line between the transformed points.</source>
          <target state="translated">Redefine a transformação global para a identidade e desenha uma linha vermelha entre os pontos transformados.</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
          <source>The result is a blue line and a translated red line below it.</source>
          <target state="translated">O resultado é uma linha azul e uma linha vermelha traduzida abaixo dela.</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Translates the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> by specified amounts in the horizontal and vertical directions.</source>
          <target state="translated">Converte a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pelos valores especificados nas orientações horizontal e vertical.</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>The x-coordinate of the translation.</source>
          <target state="translated">A coordenada X da tradução.</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>The y-coordinate of the translation.</source>
          <target state="translated">A coordenada y da tradução.</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>Translates the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> by specified amounts in the horizontal and vertical directions.</source>
          <target state="translated">Converte a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pelos valores especificados nas orientações horizontal e vertical.</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>Creates a rectangle for the clipping region.</source>
          <target state="translated">Cria um retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>Sets the clipping region to the rectangle.</source>
          <target state="translated">Define a região de recorte para o retângulo.</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>Translates the clipping region by a vector (50, 50).</source>
          <target state="translated">Converte a região de recorte por um vetor (50, 50).</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
          <source>The result is a translated, small, black rectangle.</source>
          <target state="translated">O resultado é um retângulo traduzido, pequeno, preto.</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>The x-coordinate of the translation.</source>
          <target state="translated">A coordenada X da tradução.</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>The y-coordinate of the translation.</source>
          <target state="translated">A coordenada y da tradução.</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>Translates the clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> by specified amounts in the horizontal and vertical directions.</source>
          <target state="translated">Converte a área de recorte deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> pelos valores especificados nas orientações horizontal e vertical.</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>Creates a rectangle for the clipping region.</source>
          <target state="translated">Cria um retângulo para a região de recorte.</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>Sets the clipping region to the rectangle.</source>
          <target state="translated">Define a região de recorte para o retângulo.</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>Translates the clipping region by a vector (50.0F, 50.0F).</source>
          <target state="translated">Converte a região de recorte por um vetor (50.0 f e, 50.0 f e).</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>Fills a large rectangle with a solid black brush.</source>
          <target state="translated">Preenche um retângulo grande com um pincel preto sólido.</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
          <source>The result is a translated, small, black rectangle.</source>
          <target state="translated">O resultado é um retângulo traduzido, pequeno, preto.</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" uid="T:System.Drawing.Graphics">
          <source>Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Altera a origem do sistema de coordenadas acrescentando a tradução especificada para a matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The x-coordinate of the translation.</source>
          <target state="translated">A coordenada X da tradução.</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The y-coordinate of the translation.</source>
          <target state="translated">A coordenada y da tradução.</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Altera a origem do sistema de coordenadas acrescentando a tradução especificada para a matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The origin is typically the upper-left-hand corner of the drawing surface.</source>
          <target state="translated">A origem é geralmente o canto superior esquerdo da superfície de desenho.</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the <ph id="ph1">`dx`</ph> and <ph id="ph2">`dy`</ph> parameters.</source>
          <target state="translated">A operação de conversão consiste multiplicando-se a matriz de transformação por uma matriz cuja parte de tradução é o <ph id="ph1">`dx`</ph> e <ph id="ph2">`dy`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>This method applies the translation by prepending the translation matrix to the transformation matrix.</source>
          <target state="translated">Esse método aplica-se a tradução acrescentando a matriz de tradução para a matriz de transformação.</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</source>
          <target state="translated">Gira a matriz de transformação do mundo do Windows Form 30.0F graus.</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>Moves the origin of the graphics object by calling <ph id="ph1">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph>, prepending the translation to the transformation matrix.</source>
          <target state="translated">Move a origem do objeto graphics chamando <ph id="ph1">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph>, acrescentando a tradução para a matriz de transformação.</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>Draws a translated, rotated ellipse with a blue pen.</source>
          <target state="translated">Desenha uma elipse traduzida, girada com uma caneta azul.</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source>The following illustration shows the output of running the previous code example.</source>
          <target state="translated">A ilustração a seguir mostra a saída da execução do exemplo de código anterior.</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
          <source><bpt id="p1">![</bpt>Translated and transformed ellipse<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-tranlatetransform.png "</bpt>Translated and transformed ellipse<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Traduzido e transformado elipse<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-tranlatetransform.png "</bpt>traduzido e transformado elipse<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The x-coordinate of the translation.</source>
          <target state="translated">A coordenada X da tradução.</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The y-coordinate of the translation.</source>
          <target state="translated">A coordenada y da tradução.</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Member of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.</source>
          <target state="translated">Membro da enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica se a translação precede ou é acrescentada à matriz de transformação.</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> in the specified order.</source>
          <target state="translated">Altera a origem do sistema de coordenadas aplicando a translação especificada à matriz de transformação desse <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the <ph id="ph1">`dx`</ph> and <ph id="ph2">`dy`</ph> parameters.</source>
          <target state="translated">A operação de conversão consiste multiplicando-se a matriz de transformação por uma matriz cuja parte de tradução é o <ph id="ph1">`dx`</ph> e <ph id="ph2">`dy`</ph> parâmetros.</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method prepends or appends the transformation matrix of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> by the translation matrix according to the <ph id="ph2">`order`</ph> parameter.</source>
          <target state="translated">Este método adiciona ou acrescenta a matriz de transformação do <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> para a matriz de conversão de acordo com o <ph id="ph2">`order`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, que é um parâmetro do <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</source>
          <target state="translated">Gira a matriz de transformação do mundo do Windows Form 30.0F graus.</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Moves the graphics object's origin by calling <ph id="ph1">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph>, appending the translation to the world transformation matrix.</source>
          <target state="translated">Move a origem do objeto graphics chamando <ph id="ph1">&lt;xref:System.Drawing.Graphics.TranslateTransform%2A&gt;</ph>, anexando a tradução para a matriz de transformação do mundo.</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rotated, translated ellipse with a blue pen.</source>
          <target state="translated">Desenha uma elipse girada, traduzida com uma caneta azul.</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" uid="P:System.Drawing.Graphics.VisibleClipBounds">
          <source>Gets the bounding rectangle of the visible clipping region of this <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Obtém o retângulo delimitador da área de recorte visível deste <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.VisibleClipBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents a bounding rectangle for the visible clipping region of this <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa um retângulo delimitador para a área de recorte visível deste <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.VisibleClipBounds">
          <source>The unit for resulting rectangle is designated by the <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">A unidade para o retângulo resultante é designada pelo <ph id="ph1">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.VisibleClipBounds">
          <source>The default unit is pixels.</source>
          <target state="translated">A unidade padrão é pixels.</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.VisibleClipBounds">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> é geralmente associado um controle e a origem do retângulo serão relativas à área do cliente do controle.</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Graphics.VisibleClipBounds">
          <source>The visible clipping region is the intersection of the clipping region of this <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> and the clipping region of the window.</source>
          <target state="translated">A região de recorte visível é a interseção da região de recorte deste <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> e a região de recorte da janela.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>