<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dc31d-101">Fornece um buffer de gráficos para buffer duplo.</span><span class="sxs-lookup"><span data-stu-id="dc31d-101">Provides a graphics buffer for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc31d-102">O <xref:System.Drawing.BufferedGraphics> classe permite que você implemente o buffer duplo personalizado para seus elementos gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="dc31d-103">Ele fornece um wrapper para um buffer de gráficos, junto com os métodos que você pode usar para gravar no buffer e processar seu conteúdo para um dispositivo de saída.</span><span class="sxs-lookup"><span data-stu-id="dc31d-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="dc31d-104">Elementos gráficos que usam o buffer duplo podem reduzir ou eliminar a cintilação causado redesenhando uma superfície de exibição.</span><span class="sxs-lookup"><span data-stu-id="dc31d-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="dc31d-105">Quando você usa o buffer duplo, gráfico atualizado é desenhado primeiro em um buffer na memória e o conteúdo desse buffer rapidamente, em seguida, é gravado para alguns ou todos da superfície exibida.</span><span class="sxs-lookup"><span data-stu-id="dc31d-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="dc31d-106">Essa substituição relativamente breve dos gráficos exibidos normalmente reduz ou elimina a cintilação que às vezes acontece quando os gráficos são atualizados.</span><span class="sxs-lookup"><span data-stu-id="dc31d-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc31d-107">A maneira mais simples de usar buffer duplo é definir o <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controlar o sinalizador de estilo em um controle usando o <xref:System.Windows.Forms.Control.SetStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dc31d-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="dc31d-108">Definindo o <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> sinalizador para um controle redireciona toda a pintura para o controle por meio de um buffer de gráfico padrão, sem a necessidade de qualquer código adicional.</span><span class="sxs-lookup"><span data-stu-id="dc31d-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="dc31d-109">Este sinalizador é definido como `true` por padrão.</span><span class="sxs-lookup"><span data-stu-id="dc31d-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="dc31d-110">O <xref:System.Drawing.BufferedGraphics> classe não tem construtor público e deve ser criada pelo <xref:System.Drawing.BufferedGraphicsContext> para um domínio de aplicativo usando sua <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dc31d-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="dc31d-111">Você pode recuperar o <xref:System.Drawing.BufferedGraphicsContext> para o domínio de aplicativo atual de estático <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="dc31d-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="dc31d-112">O <xref:System.Drawing.BufferedGraphics.Graphics%2A> propriedade pode ser usada para desenhar o buffer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="dc31d-113">Esta propriedade fornece acesso para o <xref:System.Drawing.Graphics> que leva para o buffer de gráficos alocado para este objeto <xref:System.Drawing.BufferedGraphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="dc31d-114">O <xref:System.Drawing.BufferedGraphics.Render%2A> método com desenhos sem argumentos buffer o conteúdo dos elementos gráficos à superfície de especificado quando o buffer alocado.</span><span class="sxs-lookup"><span data-stu-id="dc31d-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="dc31d-115">Outras sobrecargas do <xref:System.Drawing.BufferedGraphics.Render%2A> método permitem que você especifique um <xref:System.Drawing.Graphics> objeto ou uma <xref:System.IntPtr> objeto que aponta para um contexto de dispositivo para o qual desenhar o conteúdo do buffer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="dc31d-116">Para obter mais informações sobre o desenho de elementos gráficos em buffer duplo, consulte [gráficos em buffer duplo](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="dc31d-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc31d-117">O exemplo de código a seguir demonstra como usar um <xref:System.Drawing.BufferedGraphics> objeto ao desenhar gráficos usando vários tipos de implementações de buffer.</span><span class="sxs-lookup"><span data-stu-id="dc31d-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="dc31d-118">Como alternativa clicando no formulário inicia e interrompe um temporizador que faz com que desenha atualizações.</span><span class="sxs-lookup"><span data-stu-id="dc31d-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="dc31d-119">As atualizações de desenho permitem que você observar o efeito de buffer duplo.</span><span class="sxs-lookup"><span data-stu-id="dc31d-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="dc31d-120">Clicando duas vezes os ciclos de formulário por meio de modos de desenho a seguir:</span><span class="sxs-lookup"><span data-stu-id="dc31d-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="dc31d-121">Desenhando diretamente para o <xref:System.Windows.Forms.Control.Handle%2A> para um <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="dc31d-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="dc31d-122">Desenhando, substituindo o <xref:System.Windows.Forms.Form.OnPaint%2A> usando o método de <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> estilo de controle.</span><span class="sxs-lookup"><span data-stu-id="dc31d-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="dc31d-123">Desenhando, substituindo o <xref:System.Windows.Forms.Form.OnPaint%2A> método para o método de formulário sem usar o <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> estilo de controle.</span><span class="sxs-lookup"><span data-stu-id="dc31d-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="dc31d-124">Em cada modo, o texto é desenhado que identifica o modo atual e descreve o comportamento que ocorre quando cada botão do mouse é pressionado.</span><span class="sxs-lookup"><span data-stu-id="dc31d-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="dc31d-125">A classe <see cref="T:System.Drawing.BufferedGraphics" /> não é segura para threads.</span><span class="sxs-lookup"><span data-stu-id="dc31d-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span></span> <span data-ttu-id="dc31d-126">Ao acessar um buffer de gráficos de threads separados, é importante usar um mecanismo de controle de acesso de thread para evitar conflitos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc31d-127">Libera todos os recursos usados pelo objeto <see cref="T:System.Drawing.BufferedGraphics" />.</span><span class="sxs-lookup"><span data-stu-id="dc31d-127">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc31d-128">Chamar <xref:System.Drawing.BufferedGraphics.Dispose%2A> quando tiver terminado de usar o <xref:System.Drawing.BufferedGraphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-128">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="dc31d-129">O <xref:System.Drawing.BufferedGraphics.Dispose%2A> método deixa o <xref:System.Drawing.BufferedGraphics> objeto em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="dc31d-129">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="dc31d-130">Depois de chamar <xref:System.Drawing.BufferedGraphics.Dispose%2A>, você deve liberar todas as referências para o <xref:System.Drawing.BufferedGraphics> do objeto para o coletor de lixo possa recuperar a memória que o <xref:System.Drawing.BufferedGraphics> objeto estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="dc31d-130">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="dc31d-131">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="dc31d-131">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc31d-132">Sempre chamar <xref:System.Drawing.BufferedGraphics.Dispose%2A> antes de liberar sua última referência para o <xref:System.Drawing.BufferedGraphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-132">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="dc31d-133">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Drawing.BufferedGraphics> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="dc31d-133">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc31d-134">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="dc31d-134">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc31d-135">Obtém um objeto <see cref="T:System.Drawing.Graphics" /> que gera saídas para o buffer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-135">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></summary>
        <value><span data-ttu-id="dc31d-136">Um <see cref="T:System.Drawing.Graphics" /> objeto saídas para o buffer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-136">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc31d-137">Esta propriedade fornece uma <xref:System.Drawing.Graphics> que leva para o buffer de gráficos alocado para este objeto <xref:System.Drawing.BufferedGraphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-137">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc31d-138">Grava o conteúdo do buffer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-138">Writes the contents of the graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc31d-139">Grava o conteúdo do buffer de gráficos no dispositivo padrão.</span><span class="sxs-lookup"><span data-stu-id="dc31d-139">Writes the contents of the graphics buffer to the default device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc31d-140">Esse método grava o conteúdo do buffer de gráfico para o dispositivo especificado chamando o <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método o <xref:System.Drawing.BufferedGraphicsContext> usadas para criar este <xref:System.Drawing.BufferedGraphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-140">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="dc31d-141">Um objeto <see cref="T:System.Drawing.Graphics" /> no qual gravar o conteúdo do buffer gráfico.</span><span class="sxs-lookup"><span data-stu-id="dc31d-141">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="dc31d-142">Grava o conteúdo do buffer gráfico no objeto <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dc31d-142">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc31d-143">Esse método grava o conteúdo do buffer de gráfico especificado <xref:System.Drawing.Graphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-143">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc31d-144">O exemplo de código a seguir demonstra a renderizar o conteúdo do buffer de gráficos para determinado <xref:System.Drawing.Graphics> objeto.</span><span class="sxs-lookup"><span data-stu-id="dc31d-144">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="dc31d-145">Esse código é parte de um exemplo maior fornecido para a <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="dc31d-145">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="dc31d-146">Um <see cref="T:System.IntPtr" /> que aponta para o contexto de dispositivo no qual gravar o conteúdo do buffer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="dc31d-146">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="dc31d-147">Grava o conteúdo do buffer de gráficos no contexto de dispositivo associado ao identificador <see cref="T:System.IntPtr" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dc31d-147">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc31d-148">Esse método grava o conteúdo do buffer de gráfico para o contexto de dispositivo associado especificado <xref:System.IntPtr> tratar.</span><span class="sxs-lookup"><span data-stu-id="dc31d-148">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc31d-149">O exemplo de código a seguir demonstra como renderizar o conteúdo do buffer de gráficos `grafx` em um contexto de dispositivo especificado.</span><span class="sxs-lookup"><span data-stu-id="dc31d-149">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="dc31d-150">Esse código é parte de um exemplo maior fornecido para a <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="dc31d-150">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="dc31d-151">para acessar código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="dc31d-151">for access to unmanaged code.</span></span> <span data-ttu-id="dc31d-152">Enumeração de relacionados: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="dc31d-152">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.IntPtr" />
      </Docs>
    </Member>
  </Members>
</Type>