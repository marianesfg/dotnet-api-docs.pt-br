<Type Name="IconConverter" FullName="System.Drawing.IconConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2af180e73f416b29b60a43c68d7f6a66513dec87" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39818844" /></Metadata><TypeSignature Language="C#" Value="public class IconConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IconConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class IconConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type IconConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d48ac-101">Converte um objeto <see cref="T:System.Drawing.Icon" /> de um tipo de dados para outro.</span><span class="sxs-lookup"><span data-stu-id="d48ac-101">Converts an <see cref="T:System.Drawing.Icon" /> object from one data type to another.</span></span> <span data-ttu-id="d48ac-102">Acesse essa classe por meio do objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="d48ac-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d48ac-103">Inicializa uma nova instância da classe <see cref="T:System.Drawing.IconConverter" />.</span><span class="sxs-lookup"><span data-stu-id="d48ac-103">Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="iconConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d48ac-104">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="d48ac-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="d48ac-105">Um <see cref="T:System.Type" /> que especifica o tipo do qual você deseja converter.</span><span class="sxs-lookup"><span data-stu-id="d48ac-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="d48ac-106">Determina se este <see cref="T:System.Drawing.IconConverter" /> pode converter uma instância de um tipo especificado para um <see cref="T:System.Drawing.Icon" />, usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="d48ac-106">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Icon" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d48ac-107">Este método retornará <see langword="true" /> se este <see cref="T:System.Drawing.IconConverter" /> puder realizar a conversão; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d48ac-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d48ac-108">Esse método retornará `true` somente se `sourceType` é igual a uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="d48ac-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="iconConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d48ac-109">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="d48ac-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d48ac-110">Um <see cref="T:System.Type" /> que especifica o tipo para o qual você deseja converter.</span><span class="sxs-lookup"><span data-stu-id="d48ac-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="d48ac-111">Determina se este <see cref="T:System.Drawing.IconConverter" /> pode converter um <see cref="T:System.Drawing.Icon" /> para uma instância de um tipo especificado, usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="d48ac-111">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an <see cref="T:System.Drawing.Icon" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d48ac-112">Este método retornará <see langword="true" /> se este <see cref="T:System.Drawing.IconConverter" /> puder realizar a conversão; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d48ac-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d48ac-113">Esse método retornará `true` somente se `destinationType` é igual a uma matriz de bytes ou cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="d48ac-113">This method returns `true` only if `destinationType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="iconConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d48ac-114">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="d48ac-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d48ac-115">Um <see cref="T:System.Globalization.CultureInfo" /> que contém informações sobre uma cultura específica.</span><span class="sxs-lookup"><span data-stu-id="d48ac-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="d48ac-116">O <see cref="T:System.Object" /> a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="d48ac-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="d48ac-117">Converte um objeto especificado em um <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="d48ac-117">Converts a specified object to an <see cref="T:System.Drawing.Icon" />.</span></span></summary>
        <returns><span data-ttu-id="d48ac-118">Se esse método for bem-sucedido, ele retornará o <see cref="T:System.Drawing.Icon" /> que ele criou por meio da conversão do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="d48ac-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Icon" /> that it created by converting the specified object.</span></span> <span data-ttu-id="d48ac-119">Caso contrário, ele gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d48ac-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d48ac-120">A conversão não pôde ser executada.</span><span class="sxs-lookup"><span data-stu-id="d48ac-120">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="iconConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d48ac-121">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="d48ac-121">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d48ac-122">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica as convenções de formatação usadas por uma determinada cultura.</span><span class="sxs-lookup"><span data-stu-id="d48ac-122">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="d48ac-123">O objeto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="d48ac-123">The object to convert.</span></span> <span data-ttu-id="d48ac-124">Esse objeto deve ser do tipo ícone ou algum tipo que possa ser convertido em <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="d48ac-124">This object should be of type icon or some type that can be cast to <see cref="T:System.Drawing.Icon" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d48ac-125">O tipo para o qual converter o ícone.</span><span class="sxs-lookup"><span data-stu-id="d48ac-125">The type to convert the icon to.</span></span></param>
        <summary><span data-ttu-id="d48ac-126">Converte um <see cref="T:System.Drawing.Icon" /> (ou um objeto que pode ser convertido em um <see cref="T:System.Drawing.Icon" />) em um tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="d48ac-126">Converts an <see cref="T:System.Drawing.Icon" /> (or an object that can be cast to an <see cref="T:System.Drawing.Icon" />) to a specified type.</span></span></summary>
        <returns><span data-ttu-id="d48ac-127">Esse método retorna o objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="d48ac-127">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d48ac-128">A implementação padrão chama o <xref:System.Object.ToString%2A> método no objeto se o objeto é válido e se o tipo de destino é `string`.</span><span class="sxs-lookup"><span data-stu-id="d48ac-128">The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`.</span></span> <span data-ttu-id="d48ac-129">Se esse método não é possível converter o tipo de destino, ele gerará um <xref:System.NotSupportedException> exceção.</span><span class="sxs-lookup"><span data-stu-id="d48ac-129">If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d48ac-130">A conversão não pôde ser executada.</span><span class="sxs-lookup"><span data-stu-id="d48ac-130">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>