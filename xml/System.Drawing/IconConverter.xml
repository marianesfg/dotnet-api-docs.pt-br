<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IconConverter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e9c2964f1baa1ff1ea4e44e2adc34b942bf9705b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9c2964f1baa1ff1ea4e44e2adc34b942bf9705b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.IconConverter">
          <source>Converts an <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> object from one data type to another.</source>
          <target state="translated">Converte um objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> de um tipo de dados para outro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.IconConverter">
          <source>Access this class through the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> object.</source>
          <target state="translated">Acesse essa classe por meio do objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que fornece um contexto de formato.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that specifies the type you want to convert from.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que especifica o tipo do qual você deseja converter.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether this <ph id="ph1">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> can convert an instance of a specified type to an <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>, using the specified context.</source>
          <target state="translated">Determina se este <ph id="ph1">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> pode converter uma instância de um tipo especificado para um <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>, usando o contexto especificado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> can perform the conversion; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> puder realizar a conversão; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`sourceType`</ph> is equal to a byte array.</source>
          <target state="translated">Este método retorna <ph id="ph1">`true`</ph> somente se <ph id="ph2">`sourceType`</ph> é igual a uma matriz de bytes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que fornece um contexto de formato.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that specifies the type you want to convert to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que especifica o tipo para o qual você deseja converter.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether this <ph id="ph1">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> can convert an <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> to an instance of a specified type, using the specified context.</source>
          <target state="translated">Determina se este <ph id="ph1">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> pode converter um <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> para uma instância de um tipo especificado, usando o contexto especificado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> can perform the conversion; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Drawing.IconConverter" /&gt;</ph> puder realizar a conversão; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`destinationType`</ph> is equal to a byte array or string.</source>
          <target state="translated">Este método retorna <ph id="ph1">`true`</ph> somente se <ph id="ph2">`destinationType`</ph> é igual a uma cadeia de caracteres ou matriz de bytes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que fornece um contexto de formato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that holds information about a specific culture.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> que contém informações sobre uma cultura específica.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be converted.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser convertido.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts a specified object to an <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>.</source>
          <target state="translated">Converte um objeto especificado em um <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>If this method succeeds, it returns the <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> that it created by converting the specified object.</source>
          <target state="translated">Se esse método for bem-sucedido, ele retornará o <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> que ele criou por meio da conversão do objeto especificado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Otherwise, it throws an exception.</source>
          <target state="translated">Caso contrário, ele gera uma exceção.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The conversion could not be performed.</source>
          <target state="translated">A conversão não pôde ser executada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> que fornece um contexto de formato.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object that specifies formatting conventions used by a particular culture.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> que especifica as convenções de formatação usadas por uma determinada cultura.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The object to convert.</source>
          <target state="translated">O objeto a ser convertido.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This object should be of type icon or some type that can be cast to <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>.</source>
          <target state="translated">Esse objeto deve ser do tipo ícone ou algum tipo que possa ser convertido em <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The type to convert the icon to.</source>
          <target state="translated">O tipo para o qual converter o ícone.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Converts an <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> (or an object that can be cast to an <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>) to a specified type.</source>
          <target state="translated">Converte um <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> (ou um objeto que pode ser convertido em um <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>) em um tipo especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This method returns the converted object.</source>
          <target state="translated">Esse método retorna o objeto convertido.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The default implementation calls the <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> method on the object if the object is valid and if the destination type is <ph id="ph2">`string`</ph>.</source>
          <target state="translated">A implementação padrão chama o <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> método no objeto se o objeto é válido e se o tipo de destino é <ph id="ph2">`string`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>If this method cannot convert to the destination type, it throws a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
          <target state="translated">Se esse método não é possível converter o tipo de destino, ele gerará uma <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exceção.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The conversion could not be performed.</source>
          <target state="translated">A conversão não pôde ser executada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>