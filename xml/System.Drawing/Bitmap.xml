<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="618fdd187a99f0f129c4259d65123bd617d9f2e4" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52913840" /></Metadata><TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsula um bitmap GDI+, que consiste nos dados de pixel de uma imagem de elementos gráficos e seus atributos. A <see cref="T:System.Drawing.Bitmap" /> é um objeto usado para trabalhar com imagens definidas por dados de pixel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um bitmap consiste em dados de pixel de uma imagem de elementos gráficos e seus atributos. Há muitos formatos padrão para salvar um bitmap em um arquivo. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] suporta os seguintes formatos de arquivo: BMP, GIF, EXIF, JPG, PNG e TIFF. Para obter mais informações sobre os formatos com suporte, consulte [tipos de Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md).  
  
 Você pode criar imagens de arquivos, fluxos e outras fontes, usando uma da <xref:System.Drawing.Bitmap.%23ctor%2A> construtores e salvá-los em um fluxo ou o sistema de arquivos com o <xref:System.Drawing.Image.Save%2A> método. Imagens são desenhadas na tela ou para a memória usando o <xref:System.Drawing.Graphics.DrawImage%2A> método da <xref:System.Drawing.Graphics> objeto. Para obter uma lista de tópicos sobre como trabalhar com arquivos de imagem, consulte [trabalhando com imagens, Bitmaps, ícones e metarquivos](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).  
  
> [!NOTE]
>  O <xref:System.Drawing.Bitmap> classe não é acessível em domínios de aplicativo. Por exemplo, se você criar um dinâmico <xref:System.AppDomain> e criar vários pincéis, canetas e bitmaps desse domínio, em seguida, passe esses objetos de volta para o domínio do aplicativo principal, você pode usar com êxito as canetas e pincéis. No entanto, se você chamar o <xref:System.Drawing.Graphics.DrawImage%2A> método para desenhar o empacotado <xref:System.Drawing.Bitmap>, você receberá a seguinte exceção.  
>   
>  Comunicação remota não é possível localizar o campo "imagem nativa" no tipo "Drawing".  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como construir uma nova <xref:System.Drawing.Bitmap> de um arquivo, usando o <xref:System.Drawing.Bitmap.GetPixel%2A> e <xref:System.Drawing.Bitmap.SetPixel%2A> métodos para recolorir a imagem. Ele também usa o <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, e <xref:System.Drawing.Image.Height%2A> propriedades.  
  
 Este exemplo é projetado para ser usado com dos Windows Forms que contém um <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, e <xref:System.Windows.Forms.Button> denominada `Label1`, `PictureBox1`, e `Button1`, respectivamente. Cole o código no formulário e associar a `Button1_Click` método com o botão <xref:System.Windows.Forms.Control.Click> eventos.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
    <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71">Imagens, bitmaps e metarquivos</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a626d701-bd99-4fd8-b92f-7b8f794e042b">Trabalhando com imagens, bitmaps, ícones e metarquivos</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">O <see cref="T:System.Drawing.Image" /> por meio do qual o novo <see cref="T:System.Drawing.Bitmap" /> será criado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> da imagem existente especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">O fluxo de dados usado para carregar a imagem.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> do fluxo de dados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve manter o fluxo aberto durante a vida útil de <xref:System.Drawing.Bitmap>.  
  
 Devido a uma limitação do [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] decodificador, um <xref:System.ArgumentException?displayProperty=nameWithType> será lançada se você construir um bitmap de um arquivo de imagem. PNG com uma única dimensão maior do que 65.535 pixels.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como carregar um bitmap de um fluxo.  
  
 Este exemplo é projetado para ser usado com o Windows Forms. Criar um formulário que contém um <xref:System.Windows.Forms.PictureBox> chamado `PictureBox1`. Cole o código para o formulário e chame o `InitializeStreamBitmap` método de construtor do formulário ou <xref:System.Windows.Forms.Form.Load> método manipulador de eventos.  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> não contém dados de imagem ou é <see langword="null" />.  
  
- ou - 
 <paramref name="stream" /> contém um arquivo de imagem PNG com uma única dimensão maior do que 65.535 pixels.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Tipos de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">O caminho e o nome do arquivo de bitmap.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> do arquivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome do arquivo e o caminho podem ser relativo ao aplicativo ou um caminho absoluto. Use esse construtor para abrir imagens com os seguintes formatos de arquivo: BMP, GIF, EXIF, JPG, PNG e TIFF. Para obter mais informações sobre os formatos com suporte, consulte [tipos de Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md). O arquivo permanecerá bloqueado até que o <xref:System.Drawing.Bitmap> é descartado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">O arquivo especificado não foi encontrado.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Tipos de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * System.Drawing.Size -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, newSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">O <see cref="T:System.Drawing.Image" /> por meio do qual o novo <see cref="T:System.Drawing.Bitmap" /> será criado.</param>
        <param name="newSize">A estrutura <see cref="T:System.Drawing.Size" /> que representa o tamanho da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> da imagem existente especificada, dimensionada para o tamanho especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">A largura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">A altura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> com o tamanho especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor cria um <xref:System.Drawing.Bitmap> com um <xref:System.Drawing.Imaging.PixelFormat> o valor de enumeração de <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (stream, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">O fluxo de dados usado para carregar a imagem.</param>
        <param name="useIcm"><see langword="true" /> para usar a correção de cor para este <see cref="T:System.Drawing.Bitmap" />; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> do fluxo de dados especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve manter o fluxo aberto durante a vida útil de <xref:System.Drawing.Bitmap>.  
  
 Devido a uma limitação do [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] decodificador, um <xref:System.ArgumentException?displayProperty=nameWithType> será lançada se você construir um bitmap de um arquivo de imagem. PNG com uma única dimensão maior do que 65.535 pixels.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> não contém dados de imagem ou é <see langword="null" />.  
  
- ou - 
 <paramref name="stream" /> contém um arquivo de imagem PNG com uma única dimensão maior do que 65.535 pixels.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Tipos de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (filename, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">O nome do arquivo bitmap.</param>
        <param name="useIcm"><see langword="true" /> para usar a correção de cor para este <see cref="T:System.Drawing.Bitmap" />; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> do arquivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse construtor para abrir imagens com os seguintes formatos de arquivo: BMP, GIF, EXIF, JPG, PNG e TIFF. Para obter mais informações sobre os formatos com suporte, consulte [tipos de Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md). O arquivo permanecerá bloqueado até que o <xref:System.Drawing.Bitmap> é descartado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um novo bitmap de um arquivo. O exemplo usa o <xref:System.Drawing.Bitmap.GetPixel%2A> e <xref:System.Drawing.Bitmap.SetPixel%2A> métodos para recolorir a imagem. Ele também usa o <xref:System.Drawing.Image.PixelFormat%2A> propriedade.  
  
 Este exemplo é projetado para ser usado com um formulário do Windows que contém um <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> e <xref:System.Windows.Forms.Button> denominada `Label1`, `PictureBox1` e `Button1`, respectivamente. Cole o código no formulário e associar a `Button1_Click` método com o botão <xref:System.Windows.Forms.Control.Click> eventos.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Tipos de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : Type * string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">A classe usada para extrair o recurso.</param>
        <param name="resource">O nome do recurso.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> de um recurso especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor combina o namespace do tipo fornecido com o nome de cadeia de caracteres do recurso e procura uma correspondência no manifesto do assembly. Por exemplo você pode passar o <xref:System.Windows.Forms.Button> tipo e `Button.bmp` a este construtor e ele irá procurar um recurso chamado `System.Windows.Forms.Button.bmp`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como construir um bitmap de um tipo e como usar o <xref:System.Drawing.Image.Save%2A> método. Para executar este exemplo, cole o código em um formulário do Windows. Lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento e a chamada a `ConstructFromResourceSaveAsGif` método, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Tipos de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">O <see cref="T:System.Drawing.Image" /> por meio do qual o novo <see cref="T:System.Drawing.Bitmap" /> será criado.</param>
        <param name="width">A largura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">A altura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> da imagem existente especificada, dimensionada para o tamanho especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Graphics -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, g)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">A largura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">A altura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="g">O objeto <see cref="T:System.Drawing.Graphics" /> que especifica a resolução para o novo <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> com o tamanho especificado e a resolução do objeto <see cref="T:System.Drawing.Graphics" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O novo <xref:System.Drawing.Bitmap> que esse método cria leva sua resolução horizontal e vertical do <xref:System.Drawing.Graphics.DpiX%2A> e <xref:System.Drawing.Graphics.DpiY%2A> propriedades de `g`, respectivamente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, format)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">A largura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">A altura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">O formato de pixel para o novo <see cref="T:System.Drawing.Bitmap" />. Isso deve especificar um valor que começa com <c>Format</c>.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> com o tamanho e o formato especificados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Drawing.Imaging.PixelFormat" /> foi especificado, cujo nome não começa com *Format*. Por exemplo, especificar <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> causará um <see cref="T:System.ArgumentException" />, mas <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> não.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * int * System.Drawing.Imaging.PixelFormat * nativeint -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, stride, format, scan0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">A largura, em pixels, da nova <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">A altura, em pixels, do novo <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="stride">Inteiro que especifica o deslocamento de byte entre o início de uma linha de uma varredura e a linha seguinte. É normalmente (mas não necessariamente) o número de bytes no formato de pixel (por exemplo, 2 por 16 bits por pixel) multiplicado pela largura do bitmap. O valor passado para esse parâmetro deve ser um múltiplo de quatro.</param>
        <param name="format">O formato de pixel para o novo <see cref="T:System.Drawing.Bitmap" />. Isso deve especificar um valor que começa com <c>Format</c>.</param>
        <param name="scan0">Ponteiro para uma matriz de bytes que contém os dados de pixel.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Bitmap" /> com o tamanho, o formato de pixel e os dados de pixel especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O chamador é responsável por alocar e liberar o bloco de memória especificado pelo `scan0` parâmetro. No entanto, a memória não deve ser liberada até que as <xref:System.Drawing.Bitmap> é liberado.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29> construtor. Este exemplo é projetado para ser usado com o Windows Forms e requer uma <xref:System.Windows.Forms.PaintEventArgs> parâmetro, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> eventos.  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Um valor <see cref="T:System.Drawing.Imaging.PixelFormat" /> foi especificado, cujo nome não começa com *Format*. Por exemplo, especificar <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> causará um <see cref="T:System.ArgumentException" />, mas <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> não.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria uma cópia da seção desse <see cref="T:System.Drawing.Bitmap" /> definida com um <see cref="T:System.Drawing.Imaging.PixelFormat" /> especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.Rectangle * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Define a parte desse <see cref="T:System.Drawing.Bitmap" /> a ser copiada. As coordenadas são relativas a esse <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">O formato de pixel para o novo <see cref="T:System.Drawing.Bitmap" />. Isso deve especificar um valor que começa com <c>Format</c>.</param>
        <summary>Cria uma cópia da seção deste <see cref="T:System.Drawing.Bitmap" /> definida pela estrutura <see cref="T:System.Drawing.Rectangle" /> e com uma enumeração <see cref="T:System.Drawing.Imaging.PixelFormat" /> especificada.</summary>
        <returns>O novo <see cref="T:System.Drawing.Bitmap" /> criado por esse método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código executa as seguintes ações:  
  
-   Cria um <xref:System.Drawing.Bitmap> de um arquivo.  
  
-   Clona uma parte do que <xref:System.Drawing.Bitmap>.  
  
-   Desenha a parte clonada na tela.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><paramref name="rect" /> está fora dos limites do bitmap de origem.</exception>
        <exception cref="T:System.ArgumentException">A altura ou largura de <paramref name="rect" /> é 0.  
  
- ou - 
Um valor <see cref="T:System.Drawing.Imaging.PixelFormat" /> foi especificado, cujo nome não começa com *Format*. Por exemplo, especificar <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> causará um <see cref="T:System.ArgumentException" />, mas <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> não.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.RectangleF * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Define a parte desse <see cref="T:System.Drawing.Bitmap" /> a ser copiada.</param>
        <param name="format">Especifica a enumeração <see cref="T:System.Drawing.Imaging.PixelFormat" /> para o destino <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Cria uma cópia da seção desse <see cref="T:System.Drawing.Bitmap" /> definida com uma enumeração <see cref="T:System.Drawing.Imaging.PixelFormat" /> especificada.</summary>
        <returns>O <see cref="T:System.Drawing.Bitmap" /> criado por esse método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código executa as seguintes ações:  
  
-   Cria um <xref:System.Drawing.Bitmap> de um arquivo.  
  
-   Clona uma parte do que <xref:System.Drawing.Bitmap>.  
  
-   Desenha a parte clonada na tela.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><paramref name="rect" /> está fora dos limites do bitmap de origem.</exception>
        <exception cref="T:System.ArgumentException">A altura ou largura de <paramref name="rect" /> é 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberSignature Language="F#" Value="static member FromHicon : nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromHicon hicon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">Um identificador para um ícone.</param>
        <summary>Cria um <see cref="T:System.Drawing.Bitmap" /> de um identificador do Windows para um ícone.</summary>
        <returns>O <see cref="T:System.Drawing.Bitmap" /> criado por esse método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código executa as seguintes ações:  
  
-   Obtém o identificador para uma imagem de ícone existente.  
  
-   Cria um <xref:System.Drawing.Bitmap> do identificador.  
  
-   Desenha o <xref:System.Drawing.Bitmap> na tela.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberSignature Language="F#" Value="static member FromResource : nativeint * string -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromResource (hinstance, bitmapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">Um identificador para uma instância do arquivo executável que contém o recurso.</param>
        <param name="bitmapName">Uma cadeia de caracteres que contém o nome do bitmap do recurso.</param>
        <summary>Cria um <see cref="T:System.Drawing.Bitmap" /> do recurso do Windows especificado.</summary>
        <returns>O <see cref="T:System.Drawing.Bitmap" /> criado por esse método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A> requer permissão de segurança para chamar código não gerenciado. Para obter uma alternativa gerenciada para criar um bitmap de um recurso inserido, consulte <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>. <xref:System.Drawing.Bitmap.FromResource%2A> funciona apenas com bitmaps que são nomeados recursos em uma DLL.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um objeto de bitmap GDI com base em um <see cref="T:System.Drawing.Bitmap" /> GDI+.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : unit -&gt; nativeint" Usage="bitmap.GetHbitmap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um objeto de bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] com base neste <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Um identificador do objeto de bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] criado por esse método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você é responsável por chamar o [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` método para liberar a memória usada pelo [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] objeto bitmap. Para obter mais informações sobre GDI bitmaps, consulte [Bitmaps](https://go.microsoft.com/fwlink/?LinkId=205685) na documentação do Windows GDI.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.Bitmap.GetHbitmap%2A> método.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A altura ou largura do bitmap é maior que <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : System.Drawing.Color -&gt; nativeint" Usage="bitmap.GetHbitmap background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">Uma estrutura <see cref="T:System.Drawing.Color" /> que especifica a cor da tela de fundo. Esse parâmetro será ignorado se o bitmap será totalmente opaco.</param>
        <summary>Cria um objeto de bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] com base neste <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Um identificador do objeto de bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] criado por esse método.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você é responsável por chamar o [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` método para liberar a memória usada pelo [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] objeto bitmap. Para obter mais informações sobre GDI bitmaps, consulte [Bitmaps](https://go.microsoft.com/fwlink/?LinkId=205685) na documentação do Windows GDI.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.Bitmap.GetHbitmap%2A>.method.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A altura ou largura do bitmap é maior que <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberSignature Language="F#" Value="member this.GetHicon : unit -&gt; nativeint" Usage="bitmap.GetHicon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna o identificador para um ícone.</summary>
        <returns>Um identificador do Windows para um ícone com a mesma imagem que o <see cref="T:System.Drawing.Bitmap" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicialmente, um ícone criado do identificador terá o mesmo tamanho que o bitmap original.  
  
   
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código executa as seguintes ações:  
  
-   Cria um <xref:System.Drawing.Bitmap>.  
  
-   Desenha o objeto na tela.  
  
-   Obtém um identificador de ícone para o <xref:System.Drawing.Bitmap>.  
  
-   Conjuntos de <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> atributo do formulário para um ícone criado do identificador.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">para chamar código não gerenciado. Enumeração relacionada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; System.Drawing.Color" Usage="bitmap.GetPixel (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">A coordenada X do pixel a ser recuperada.</param>
        <param name="y">A coordenada y do pixel a ser recuperado.</param>
        <summary>Obtém a cor do pixel especificado neste <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor do pixel especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código obtém a cor de um pixel em um bitmap e, em seguida, preenche um retângulo com essa cor.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="x" /> é menor que 0, ou maior ou igual a <see cref="P:System.Drawing.Image.Width" />.  
  
- ou - 
 <paramref name="y" /> é menor que 0, ou maior ou igual a <see cref="P:System.Drawing.Image.Height" />.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bloqueia um <see cref="T:System.Drawing.Bitmap" /> na memória do sistema.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Uma estrutura <see cref="T:System.Drawing.Rectangle" /> que especifica a parte do <see cref="T:System.Drawing.Bitmap" /> a ser bloqueada.</param>
        <param name="flags">Uma enumeração <see cref="T:System.Drawing.Imaging.ImageLockMode" /> que especifica o nível de acesso (leitura/gravação) do <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Uma enumeração <see cref="T:System.Drawing.Imaging.PixelFormat" /> que especifica o formato de dados deste <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Bloqueia um <see cref="T:System.Drawing.Bitmap" /> na memória do sistema.</summary>
        <returns>Um <see cref="T:System.Drawing.Imaging.BitmapData" /> que contém informações sobre essa operação de bloqueio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Drawing.Bitmap.LockBits%2A> método para bloquear um bitmap existente na memória do sistema, para que ela pode ser alterada programaticamente. Você pode alterar a cor de uma imagem com o <xref:System.Drawing.Bitmap.SetPixel%2A> método, embora o <xref:System.Drawing.Bitmap.LockBits%2A> método oferece um desempenho melhor para alterações em larga escala.  
  
 O <xref:System.Drawing.Imaging.BitmapData> Especifica os atributos do <xref:System.Drawing.Bitmap>, como tamanho, formato de pixel, o endereço inicial dos dados de pixel na memória e o comprimento de cada linha de varredura (stride).  
  
 Ao chamar esse método, você deve usar um membro do <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> enumeração que contém um valor específico bits por pixel (BPP). Usando o <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> valores como <xref:System.Drawing.Imaging.PixelFormat.Indexed> e <xref:System.Drawing.Imaging.PixelFormat.Gdi> lançará um <xref:System.ArgumentException?displayProperty=nameWithType>. Além disso, passar o formato de pixel incorreto para um bitmap lançará um <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, e <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> propriedades; o <xref:System.Drawing.Bitmap.LockBits%2A> e <xref:System.Drawing.Bitmap.UnlockBits%2A> métodos; e o <xref:System.Drawing.Imaging.ImageLockMode> enumeração. Este exemplo é projetado para ser usado com o Windows Forms. Este exemplo não foi projetado para funcionar corretamente com todos os formatos de pixel, mas para fornecer um exemplo de como usar o <xref:System.Drawing.Bitmap.LockBits%2A> método. Para executar este exemplo, cole-o em um formulário e lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento chamando o `LockUnlockBitsExample` método, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O <see cref="T:System.Drawing.Imaging.PixelFormat" /> não é um valor bits por pixel específico.  
  
- ou - 
O <see cref="T:System.Drawing.Imaging.PixelFormat" /> incorreto é passado para um bitmap.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat * System.Drawing.Imaging.BitmapData -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format, bitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">Uma estrutura em retângulo que especifica a parte do <see cref="T:System.Drawing.Bitmap" /> a ser bloqueada.</param>
        <param name="flags">Um dos valores <see cref="T:System.Drawing.Imaging.ImageLockMode" /> que especifica o nível de acesso (leitura/gravação) do <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Um dos valores <see cref="T:System.Drawing.Imaging.PixelFormat" /> que especifica o formato de dados do <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="bitmapData">Um <see cref="T:System.Drawing.Imaging.BitmapData" /> que contém informações sobre a operação de bloqueio.</param>
        <summary>Bloqueia um <see cref="T:System.Drawing.Bitmap" /> na memória do sistema</summary>
        <returns>Um <see cref="T:System.Drawing.Imaging.BitmapData" /> que contém informações sobre a operação de bloqueio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Drawing.Bitmap.LockBits%2A> método para bloquear um bitmap existente na memória do sistema, para que ela pode ser alterada programaticamente. Você pode alterar a cor de uma imagem com o <xref:System.Drawing.Bitmap.SetPixel%2A> método, embora o <xref:System.Drawing.Bitmap.LockBits%2A> método oferece um desempenho melhor para alterações em larga escala.  
  
 Ao chamar esse método, você deve usar um membro do <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> enumeração que contém um valor específico bits por pixel (BPP). Usando o <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> valores, como <xref:System.Drawing.Imaging.PixelFormat.Indexed> e <xref:System.Drawing.Imaging.PixelFormat.Gdi>, gerará um <xref:System.ArgumentException?displayProperty=nameWithType>. Além disso, passar o formato de pixel incorreto para um bitmap lançará um <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
 Esta versão dos <xref:System.Drawing.Bitmap.LockBits%2A> método é destinado a ser usado com um `flags` valor de <xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor <see cref="T:System.Drawing.Imaging.PixelFormat" /> não é um valor bits por pixel específico.  
  
- ou - 
O <see cref="T:System.Drawing.Imaging.PixelFormat" /> incorreto é passado para um bitmap.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Torna a cor transparente padrão transparente para este <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : unit -&gt; unit" Usage="bitmap.MakeTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Torna a cor transparente padrão transparente para este <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A paleta do sistema define uma cor como a cor transparente ou alfa, do padrão. Esse método torna a cor transparente padrão transparente para este <xref:System.Drawing.Bitmap>. Se nenhuma cor transparente é especificada pelo sistema, <xref:System.Drawing.Color.LightGray%2A> é a cor transparente.  
  
 Quando você chama <xref:System.Drawing.Bitmap.MakeTransparent%2A>, o bitmap será convertido para o <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> Formatar, como esse formato oferece suporte a um canal alfa.  
  
   
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código torna transparente para a cor transparente padrão do sistema `myBitmap`e, em seguida, desenha a <xref:System.Drawing.Bitmap> na tela.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O formato da imagem do <see cref="T:System.Drawing.Bitmap" /> é um formato de ícone.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : System.Drawing.Color -&gt; unit" Usage="bitmap.MakeTransparent transparentColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor">A estrutura <see cref="T:System.Drawing.Color" /> que representa a cor para tornar transparente.</param>
        <summary>Torna a cor especificada transparente para este <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você chama <xref:System.Drawing.Bitmap.MakeTransparent%2A>, o bitmap será convertido para o <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> Formatar, como esse formato oferece suporte a um canal alfa.  
  
   
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código executa as seguintes ações:  
  
-   Obtém a cor de um pixel em um <xref:System.Drawing.Bitmap>.  
  
-   Torna essa cor transparente para o bitmap.  
  
-   Desenha o <xref:System.Drawing.Bitmap> na tela.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O formato da imagem do <see cref="T:System.Drawing.Bitmap" /> é um formato de ícone.</exception>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * System.Drawing.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">A coordenada X do pixel a ser definida.</param>
        <param name="y">A coordenada y do pixel a ser definida.</param>
        <param name="color">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor a ser atribuída ao pixel especificado.</param>
        <summary>Define a cor do pixel especificado neste <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Drawing.Bitmap.SetPixel%2A> método para definir a cor de um pixel individual em uma imagem por meio de programação. Você também pode alterar uma imagem por meio de programação usando o <xref:System.Drawing.Bitmap.LockBits%2A> método. Normalmente, para alterações em larga escala, o <xref:System.Drawing.Bitmap.LockBits%2A> método oferece melhor desempenho.  
  
   
  
## Examples  
 O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos. O código executa as seguintes ações:  
  
-   Cria um <xref:System.Drawing.Bitmap>.  
  
-   Define a cor de cada pixel no bitmap para preto.  
  
-   Desenha o bitmap.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberSignature Language="F#" Value="member this.SetResolution : single * single -&gt; unit" Usage="bitmap.SetResolution (xDpi, yDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">A resolução horizontal, em pontos por polegada, do <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="yDpi">A resolução vertical, em pontos por polegada, do <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Define a resolução para esse <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para definir a resolução desejada em um bitmap recém-criada. Alterar a resolução da imagem não altera seu tamanho físico.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.Drawing.Bitmap.SetResolution%2A> método.  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberSignature Language="F#" Value="member this.UnlockBits : System.Drawing.Imaging.BitmapData -&gt; unit" Usage="bitmap.UnlockBits bitmapdata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">Um <see cref="T:System.Drawing.Imaging.BitmapData" /> que especifica informações sobre a operação de bloqueio.</param>
        <summary>Desbloqueia este <see cref="T:System.Drawing.Bitmap" /> da memória do sistema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Drawing.Imaging.BitmapData> Especifica os atributos do <xref:System.Drawing.Bitmap>, como tamanho, formato de pixel, o endereço inicial dos dados de pixel na memória e o comprimento de cada linha de varredura (stride).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, e <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> propriedades; o <xref:System.Drawing.Bitmap.LockBits%2A> e <xref:System.Drawing.Bitmap.UnlockBits%2A> métodos; e o <xref:System.Drawing.Imaging.ImageLockMode> enumeração. Este exemplo não foi projetado para funcionar corretamente com todos os formatos de pixel, mas para fornecer um exemplo de como usar o <xref:System.Drawing.Bitmap.LockBits%2A> método. Este exemplo é projetado para ser usado com o Windows Forms. Para executar este exemplo, cole-o em um formulário e lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento chamando o `LockUnlockBitsExample` método, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">A operação falhou.</exception>
      </Docs>
    </Member>
  </Members>
</Type>