<Type Name="Pen" FullName="System.Drawing.Pen">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0bf79287e834a3418faa21191f24576ea24f5b5" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49152864" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pen extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Pen" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pen&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pen sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type Pen = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e9bf2-101">Define um objeto usado para desenhar linhas e curvas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9bf2-101">Defines an object used to draw lines and curves.</span>
      </span>
      <span data-ttu-id="e9bf2-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9bf2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-103">Um <xref:System.Drawing.Pen> desenha uma linha de estilo e largura especificadas.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-103">A <xref:System.Drawing.Pen> draws a line of specified width and style.</span></span> <span data-ttu-id="e9bf2-104">Use o <xref:System.Drawing.Drawing2D.DashStyle> propriedade desenhar diversas variedades de linhas tracejadas.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-104">Use the <xref:System.Drawing.Drawing2D.DashStyle> property to draw several varieties of dashed lines.</span></span> <span data-ttu-id="e9bf2-105">A linha desenhada por um <xref:System.Drawing.Pen> poderão ser preenchidas em uma variedade de estilos de preenchimento, incluindo cores sólidas e texturas.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-105">The line drawn by a <xref:System.Drawing.Pen> can be filled in a variety of fill styles, including solid colors and textures.</span></span> <span data-ttu-id="e9bf2-106">O estilo de preenchimento depende de pincel ou textura é usada como o objeto de preenchimento.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-106">The fill style depends on brush or texture that is used as the fill object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-107">O exemplo de código a seguir demonstra a construção de uma <xref:System.Drawing.Pen> com um <xref:System.Drawing.Pen.Brush%2A> e os efeitos da configuração do <xref:System.Drawing.Pen.LineJoin%2A> propriedade em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-107">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-108">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-108">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-109">Cole o código em um formulário e chame o `ShowLineJoin` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-109">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-110">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Pen" /> com a cor especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-110">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen brush" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="e9bf2-111">Um <see cref="T:System.Drawing.Brush" /> que determina as propriedades de preenchimento desta <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-111">A <see cref="T:System.Drawing.Brush" /> that determines the fill properties of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-112">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Pen" /> com o <see cref="T:System.Drawing.Brush" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-112">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-113">O <xref:System.Drawing.Pen.Brush%2A> propriedade determina como o <xref:System.Drawing.Pen> desenha linhas.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-113">The <xref:System.Drawing.Pen.Brush%2A> property determines how the <xref:System.Drawing.Pen> draws lines.</span></span> <span data-ttu-id="e9bf2-114">Como se fossem preenchidos retângulos, com as características de especificado as linhas são desenhadas <xref:System.Drawing.Brush>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-114">Lines are drawn as if they are filled rectangles, with the characteristics of the specified <xref:System.Drawing.Brush>.</span></span>  
  
 <span data-ttu-id="e9bf2-115">O <xref:System.Drawing.Pen.Width%2A> propriedade da nova <xref:System.Drawing.Pen> é definido como 1 (o padrão).</span><span class="sxs-lookup"><span data-stu-id="e9bf2-115">The <xref:System.Drawing.Pen.Width%2A> property of the new <xref:System.Drawing.Pen> is set to 1 (the default).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-116">O exemplo de código a seguir demonstra a construção de uma <xref:System.Drawing.Pen> com um <xref:System.Drawing.Pen.Brush%2A> e os efeitos da configuração do <xref:System.Drawing.Pen.LineJoin%2A> propriedade em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-116">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-117">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-117">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-118">Cole o código em um formulário e chame o `ShowLineJoin` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-118">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e9bf2-119">
            <paramref name="brush" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-119">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen color" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">
          <span data-ttu-id="e9bf2-120">Uma estrutura <see cref="T:System.Drawing.Color" /> que indica a cor desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-120">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-121">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Pen" /> com a cor especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-121">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-122">O <xref:System.Drawing.Color> estiver definida como a cor especificada pela `color` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-122">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="e9bf2-123">O <xref:System.Drawing.Pen.Width%2A> estiver definida como 1 (o padrão).</span><span class="sxs-lookup"><span data-stu-id="e9bf2-123">The <xref:System.Drawing.Pen.Width%2A> property is set to 1 (the default).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (brush, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="e9bf2-124">Um <see cref="T:System.Drawing.Brush" /> que determina as características desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-124">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e9bf2-125">A largura do novo <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-125">The width of the new <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-126">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Pen" /> com o <see cref="T:System.Drawing.Brush" /> e <see cref="P:System.Drawing.Pen.Width" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-126">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="P:System.Drawing.Pen.Width" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-127">O <xref:System.Drawing.Brush> é definido como a cor especificada na `brush` parâmetro, o <xref:System.Drawing.Pen.Width%2A> estiver definida como o valor especificado no `width` parâmetro e as unidades são definidos como <xref:System.Drawing.GraphicsUnit.World>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-127">The <xref:System.Drawing.Brush> is set to the color specified in the `brush` parameter, the <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter, and the units are set to <xref:System.Drawing.GraphicsUnit.World>.</span></span>  
  
 <span data-ttu-id="e9bf2-128">Observe que o `brush` parâmetro também especifica a <xref:System.Drawing.Color> propriedade deste <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-128">Note that the `brush` parameter also specifies the <xref:System.Drawing.Color> property of this <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-129">Um `width` 0 resultará na <xref:System.Drawing.Pen> como se a largura eram 1 de desenho.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-129">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-130">O exemplo de código a seguir cria uma <xref:System.Drawing.Pen> e demonstra os efeitos da configuração de <xref:System.Drawing.Pen.StartCap%2A> e <xref:System.Drawing.Pen.EndCap%2A> propriedades em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-130">The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-131">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-131">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-132">Cole o código em um formulário e chame o `ShowStartAndEndCaps` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-132">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.ImageExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ImageExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ImageExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e9bf2-133">
            <paramref name="brush" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-133">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (color, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">
          <span data-ttu-id="e9bf2-134">Uma estrutura <see cref="T:System.Drawing.Color" /> que indica a cor desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-134">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e9bf2-135">Um valor que indica a largura deste <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-135">A value indicating the width of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-136">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Pen" /> com as propriedades <see cref="T:System.Drawing.Color" /> e <see cref="P:System.Drawing.Pen.Width" /> especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-136">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see cref="P:System.Drawing.Pen.Width" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-137">O <xref:System.Drawing.Color> estiver definida como a cor especificada pela `color` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-137">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="e9bf2-138">O <xref:System.Drawing.Pen.Width%2A> estiver definida como o valor especificado no `width` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-138">The <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter.</span></span> <span data-ttu-id="e9bf2-139">Um `width` 0 resultará na <xref:System.Drawing.Pen> como se a largura eram 1 de desenho.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-139">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-140">O exemplo de código a seguir demonstra como criar uma <xref:System.Drawing.Pen> e os efeitos da configuração de <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, e <xref:System.Drawing.Graphics.SmoothingMode%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-140">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="e9bf2-141">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-141">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-142">Cole o código em um formulário e chame o `ShowPensAndSmoothingMode` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> passagem de eventos, e como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-142">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As PenAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenAlignment Alignment { System::Drawing::Drawing2D::PenAlignment get(); void set(System::Drawing::Drawing2D::PenAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.Drawing2D.PenAlignment with get, set" Usage="System.Drawing.Pen.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-143">Obtém ou define o alinhamento deste <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-143">Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-144">Um <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> que representa o alinhamento deste <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-144">A <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> that represents the alignment for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-145">Essa propriedade determina como o <xref:System.Drawing.Pen> desenha curvas fechadas e polígonos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-145">This property determines how the <xref:System.Drawing.Pen> draws closed curves and polygons.</span></span> <span data-ttu-id="e9bf2-146">O <xref:System.Drawing.Drawing2D.PenAlignment> enumeração Especifica cinco valores; no entanto, somente dois valores —<xref:System.Drawing.Drawing2D.PenAlignment.Center> e <xref:System.Drawing.Drawing2D.PenAlignment.Inset>— irá alterar a aparência de uma linha desenhada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-146">The <xref:System.Drawing.Drawing2D.PenAlignment> enumeration specifies five values; however, only two values—<xref:System.Drawing.Drawing2D.PenAlignment.Center> and <xref:System.Drawing.Drawing2D.PenAlignment.Inset>—will change the appearance of a drawn line.</span></span> <span data-ttu-id="e9bf2-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> é o valor padrão para essa propriedade e especifica que a largura da caneta é centralizada no contorno da curva ou polígono.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</span></span> <span data-ttu-id="e9bf2-148">Um valor de <xref:System.Drawing.Drawing2D.PenAlignment.Inset> para essa propriedade especifica que a largura da caneta é dentro do contorno da curva ou polígono.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-148">A value of <xref:System.Drawing.Drawing2D.PenAlignment.Inset> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</span></span> <span data-ttu-id="e9bf2-149">Os outros três valores, <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, e <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, resultará em uma caneta centralizado.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-149">The other three values, <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, and <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, will result in a pen that is centered.</span></span>  
  
 <span data-ttu-id="e9bf2-150">Um <xref:System.Drawing.Pen> que tem seu alinhamento definido como <xref:System.Drawing.Drawing2D.PenAlignment.Inset> produzirá resultados não confiáveis, às vezes, de desenho na posição de inserção e, às vezes, na posição centralizada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-150">A <xref:System.Drawing.Pen> that has its alignment set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</span></span> <span data-ttu-id="e9bf2-151">Além disso, uma caneta de baixo-relevo não pode ser usada para desenhar linhas compostas e não é possível desenhar linhas tracejadas com <xref:System.Drawing.Drawing2D.DashCap.Triangle> traço caps.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-151">Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <xref:System.Drawing.Drawing2D.DashCap.Triangle> dash caps.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e9bf2-152">O valor especificado não é um membro de <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-152">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-153">A propriedade <see cref="P:System.Drawing.Pen.Alignment" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-153">The <see cref="P:System.Drawing.Pen.Alignment" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Drawing.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Brush ^ Brush { System::Drawing::Brush ^ get(); void set(System::Drawing::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Drawing.Brush with get, set" Usage="System.Drawing.Pen.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-154">Obtém ou define o <see cref="T:System.Drawing.Brush" /> que determina os atributos desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-154">Gets or sets the <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-155">Um <see cref="T:System.Drawing.Brush" /> que determina os atributos desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-155">A <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-156">Atribuir essa propriedade faz com que a caneta desenhar linhas preenchidas e curvas.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-156">Assigning this property causes the pen to draw filled lines and curves.</span></span> <span data-ttu-id="e9bf2-157">Ele substitui o <xref:System.Drawing.Color> propriedade do <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-157">It overrides the <xref:System.Drawing.Color> property of the <xref:System.Drawing.Pen>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-158">A propriedade <see cref="P:System.Drawing.Pen.Brush" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-158">The <see cref="P:System.Drawing.Pen.Brush" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="pen.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-159">Cria uma cópia exata deste <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-159">Creates an exact copy of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9bf2-160">Um <see cref="T:System.Object" /> que pode ser convertido em um <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-160">An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-161">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-161">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-162">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-162">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-163">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-163">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-164">Cria uma cópia dessa caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-164">Creates a copy of that pen.</span></span>  
  
-   <span data-ttu-id="e9bf2-165">Desenha uma linha para a tela, usando a cópia da caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-165">Draws a line to the screen, using the copy of the pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicPenExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Drawing.Pen.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-166">Obtém ou define a cor desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-166">Gets or sets the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-167">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor desse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-167">A <see cref="T:System.Drawing.Color" /> structure that represents the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-168">A propriedade <see cref="P:System.Drawing.Pen.Color" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-168">The <see cref="P:System.Drawing.Pen.Color" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompoundArray">
      <MemberSignature Language="C#" Value="public float[] CompoundArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] CompoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CompoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Property CompoundArray As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ CompoundArray { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompoundArray : single[] with get, set" Usage="System.Drawing.Pen.CompoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-169">Obtém ou define uma matriz de valores que especifica uma caneta composta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-169">Gets or sets an array of values that specifies a compound pen.</span>
          </span>
          <span data-ttu-id="e9bf2-170">Uma caneta composta desenha uma linha composta que consiste em linhas paralelas e espaços.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-170">A compound pen draws a compound line made up of parallel lines and spaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-171">Uma matriz de números reais que especificam a matriz composta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-171">An array of real numbers that specifies the compound array.</span>
          </span>
          <span data-ttu-id="e9bf2-172">Os elementos na matriz devem estar em ordem crescente, não serem menor que 0 nem maiores que 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-172">The elements in the array must be in increasing order, not less than 0, and not greater than 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-173">Uma linha composta é composta por alternando linhas paralelas e espaços de larguras diferentes.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-173">A compound line is made up of alternating parallel lines and spaces of varying widths.</span></span> <span data-ttu-id="e9bf2-174">Os valores na matriz especificam os pontos de partida de cada componente da linha em relação à largura da caneta composta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-174">The values in the array specify the starting points of each component of the compound line relative to the pen's width.</span></span> <span data-ttu-id="e9bf2-175">O primeiro valor na matriz Especifica onde o primeiro componente (uma linha) começa como uma fração da distância entre a largura da caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-175">The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="e9bf2-176">O segundo valor na matriz Especifica o início do próximo componente (um espaço) como uma fração da distância entre a largura da caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-176">The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="e9bf2-177">O valor final da matriz Especifica onde o último componente termina.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-177">The final value in the array specifies where the last component ends.</span></span>  
  
 <span data-ttu-id="e9bf2-178">Suponha que você deseja uma caneta para desenhar duas linhas paralelas em que a largura da primeira linha é 20 por cento da largura da caneta, a largura do espaço que separa as duas linhas é 50 por cento da caneta ' s largura e a largura da segunda linha é 30 por cento do que a caneta Largura.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-178">Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</span></span> <span data-ttu-id="e9bf2-179">Comece criando um <xref:System.Drawing.Pen> e uma matriz de números reais.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-179">Start by creating a <xref:System.Drawing.Pen> and an array of real numbers.</span></span> <span data-ttu-id="e9bf2-180">Defina a matriz composta, passando a matriz com os valores de 0,2, 0,0, 0.7 e 1.0 para essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-180">Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</span></span>  
  
 <span data-ttu-id="e9bf2-181">Não defina essa propriedade se o <xref:System.Drawing.Pen> tem sua <xref:System.Drawing.Pen.Alignment%2A> propriedade definida como <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-181">Do not set this property if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-182">A propriedade <see cref="P:System.Drawing.Pen.CompoundArray" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-182">The <see cref="P:System.Drawing.Pen.CompoundArray" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CustomEndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomEndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomEndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomEndCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomEndCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomEndCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomEndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-183">Obtém ou define um limite personalizado a ser usado ao final das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-183">Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-184">Um <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> que representa o limite usado no final das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-184">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-185">A propriedade <see cref="P:System.Drawing.Pen.CustomEndCap" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-185">The <see cref="P:System.Drawing.Pen.CustomEndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CustomStartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomStartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomStartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomStartCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomStartCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomStartCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomStartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-186">Obtém ou define um limite personalizado para usar no início das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-186">Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-187">Um <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> que representa o limite usado no início das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-187">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-188">A propriedade <see cref="P:System.Drawing.Pen.CustomStartCap" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-188">The <see cref="P:System.Drawing.Pen.CustomStartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashCap DashCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashCap DashCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashCap" />
      <MemberSignature Language="VB.NET" Value="Public Property DashCap As DashCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashCap DashCap { System::Drawing::Drawing2D::DashCap get(); void set(System::Drawing::Drawing2D::DashCap value); };" />
      <MemberSignature Language="F#" Value="member this.DashCap : System.Drawing.Drawing2D.DashCap with get, set" Usage="System.Drawing.Pen.DashCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-189">Obtém ou define o estilo de extremidade na extremidade dos traços que compõem as linhas tracejadas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-189">Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-190">Um dos valores <see cref="T:System.Drawing.Drawing2D.DashCap" /> que representa o estilo de extremidade usado no início e no final dos traços que compõem a linhas tracejadas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-190">One of the <see cref="T:System.Drawing.Drawing2D.DashCap" /> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-191">Não defina essa propriedade como <xref:System.Drawing.Drawing2D.DashCap.Triangle> se o <xref:System.Drawing.Pen> tem seu <xref:System.Drawing.Pen.Alignment%2A> propriedade definida como <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-191">Do not set this property to <xref:System.Drawing.Drawing2D.DashCap.Triangle> if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-192">O exemplo de código a seguir demonstra como criar uma <xref:System.Drawing.Pen> e os efeitos da configuração de <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, e <xref:System.Drawing.Graphics.SmoothingMode%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-192">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="e9bf2-193">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-193">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-194">Cole o código em um formulário e chame o `ShowPensAndSmoothingMode` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-194">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e9bf2-195">O valor especificado não é um membro de <see cref="T:System.Drawing.Drawing2D.DashCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-195">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.DashCap" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-196">A propriedade <see cref="P:System.Drawing.Pen.DashCap" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-196">The <see cref="P:System.Drawing.Pen.DashCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashOffset">
      <MemberSignature Language="C#" Value="public float DashOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DashOffset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DashOffset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DashOffset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DashOffset : single with get, set" Usage="System.Drawing.Pen.DashOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-197">Obtém ou define a distância do início de uma linha até o início de um padrão de traço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-197">Gets or sets the distance from the start of a line to the beginning of a dash pattern.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-198">A distância do início de uma linha até o início de um padrão de traço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-198">The distance from the start of a line to the beginning of a dash pattern.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-199">A propriedade <see cref="P:System.Drawing.Pen.DashOffset" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-199">The <see cref="P:System.Drawing.Pen.DashOffset" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashPattern">
      <MemberSignature Language="C#" Value="public float[] DashPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] DashPattern" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property DashPattern As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ DashPattern { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DashPattern : single[] with get, set" Usage="System.Drawing.Pen.DashPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-200">Obtém ou define uma matriz de traços e espaços personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-200">Gets or sets an array of custom dashes and spaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-201">Uma matriz de números reais que especifica os tamanhos dos traços alternados e dos espaços em linhas tracejadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-201">An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-202">Atribuindo um valor diferente de `null` a essa propriedade definirá o <xref:System.Drawing.Drawing2D.DashStyle> propriedade para este <xref:System.Drawing.Pen> para <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-202">Assigning a value other than `null` to this property will set the <xref:System.Drawing.Drawing2D.DashStyle> property for this <xref:System.Drawing.Pen> to <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span></span>  
  
 <span data-ttu-id="e9bf2-203">Os elementos no `dashArray` matriz definir o comprimento de cada traço e espaço no padrão de traço.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-203">The elements in the `dashArray` array set the length of each dash and space in the dash pattern.</span></span> <span data-ttu-id="e9bf2-204">O primeiro elemento define o comprimento de um traço, o segundo elemento define o comprimento de um espaço, o terceiro elemento define o comprimento de um traço e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-204">The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</span></span> <span data-ttu-id="e9bf2-205">Consequentemente, cada elemento deve ser um número de positivo diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-205">Consequently, each element should be a non-zero positive number.</span></span>  
  
 <span data-ttu-id="e9bf2-206">O comprimento de cada traço e espaço no padrão de traço é o produto do valor do elemento na matriz e a largura do <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-206">The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <xref:System.Drawing.Pen>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-207">O exemplo de código a seguir demonstra os efeitos da configuração de <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, e <xref:System.Drawing.Graphics.SmoothingMode%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-207">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="e9bf2-208">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-208">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-209">Cole o código em um formulário e chame o `ShowPensAndSmoothingMode` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-209">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-210">A propriedade <see cref="P:System.Drawing.Pen.DashPattern" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-210">The <see cref="P:System.Drawing.Pen.DashPattern" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashStyle DashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DashStyle As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashStyle DashStyle { System::Drawing::Drawing2D::DashStyle get(); void set(System::Drawing::Drawing2D::DashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DashStyle : System.Drawing.Drawing2D.DashStyle with get, set" Usage="System.Drawing.Pen.DashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-211">Obtém ou define o estilo usado para as linhas tracejadas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-211">Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-212">Um <see cref="T:System.Drawing.Drawing2D.DashStyle" /> que representa o estilo usado para as linhas tracejadas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-212">A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-213">Um valor de <xref:System.Drawing.Drawing2D.DashStyle.Custom> para essa propriedade especifica que um padrão personalizado de traços e espaços, definido pela <xref:System.Drawing.Pen.DashPattern%2A> torna a propriedade, as linhas desenhadas com este <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-213">A value of <xref:System.Drawing.Drawing2D.DashStyle.Custom> for this property specifies that a custom pattern of dashes and spaces, defined by the <xref:System.Drawing.Pen.DashPattern%2A> property, makes up lines drawn with this <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="e9bf2-214">Se o valor dessa propriedade é <xref:System.Drawing.Drawing2D.DashStyle.Custom> e o valor da <xref:System.Drawing.Pen.DashPattern%2A> é de propriedade `null`, a caneta desenha linhas sólidas.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-214">If the value of this property is <xref:System.Drawing.Drawing2D.DashStyle.Custom> and the value of the <xref:System.Drawing.Pen.DashPattern%2A> property is `null`, the pen draws solid lines.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-215">A propriedade <see cref="P:System.Drawing.Pen.DashStyle" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-215">The <see cref="P:System.Drawing.Pen.DashStyle" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="pen.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-216">Libera todos os recursos usados por este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-216">Releases all resources used by this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-217">Chamando <xref:System.Drawing.Pen.Dispose%2A> permite que os recursos usados por este <xref:System.Drawing.Brush> sejam realocados para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-217">Calling <xref:System.Drawing.Pen.Dispose%2A> allows the resources used by this <xref:System.Drawing.Brush> to be reallocated for other purposes.</span></span>  
  
 <span data-ttu-id="e9bf2-218">Chame <xref:System.Drawing.Pen.Dispose%2A> quando tiver terminado de usar o <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-218">Call <xref:System.Drawing.Pen.Dispose%2A> when you are finished using the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="e9bf2-219">O <xref:System.Drawing.Pen.Dispose%2A> método deixa o <xref:System.Drawing.Pen> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-219">The <xref:System.Drawing.Pen.Dispose%2A> method leaves the <xref:System.Drawing.Pen> in an unusable state.</span></span> <span data-ttu-id="e9bf2-220">Depois de chamar <xref:System.Drawing.Pen.Dispose%2A>, você deve liberar todas as referências para o <xref:System.Drawing.Pen> para que o coletor de lixo possa recuperar a memória que o <xref:System.Drawing.Pen> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-220">After calling <xref:System.Drawing.Pen.Dispose%2A>, you must release all references to the <xref:System.Drawing.Pen> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Pen> was occupying.</span></span> <span data-ttu-id="e9bf2-221">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="e9bf2-221">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9bf2-222">Sempre chamar <xref:System.Drawing.Pen.Dispose%2A> antes de liberar sua última referência para o <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-222">Always call <xref:System.Drawing.Pen.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="e9bf2-223">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.Drawing.Pen> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-223">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Pen> object's `Finalize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-224">O exemplo de código a seguir demonstra os efeitos da configuração de <xref:System.Drawing.Pen.Width%2A> e <xref:System.Drawing.Pen.LineJoin%2A> propriedades e mostra como chamar o <xref:System.Drawing.Pen.Dispose%2A> método para um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-224">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the <xref:System.Drawing.Pen.Dispose%2A> method for a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-225">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-225">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-226">Cole o código em um formulário e chame o `ShowLineJoin` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-226">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap EndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap EndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.EndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property EndCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap EndCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.EndCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.EndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-227">Obtém ou define o estilo do limite usado no final das linhas desenhadas com esta <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-227">Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-228">Um dos valores de <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa o estilo do limite usado no final das linhas desenhadas com esta <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-228">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-229">O exemplo de código a seguir demonstra os efeitos da configuração de <xref:System.Drawing.Pen.StartCap%2A> e <xref:System.Drawing.Pen.EndCap%2A> propriedades em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-229">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-230">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-230">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-231">Cole o código em um formulário e chame o `ShowStartAndEndCaps` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-231">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e9bf2-232">O valor especificado não é um membro de <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-232">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-233">A propriedade <see cref="P:System.Drawing.Pen.EndCap" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-233">The <see cref="P:System.Drawing.Pen.EndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Pen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Pen ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="pen.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-234">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-234">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin LineJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.LineJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property LineJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin LineJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.LineJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Pen.LineJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-235">Obtém ou define o estilo de junção para as extremidades de duas linhas consecutivas desenhadas com essa <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-235">Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-236">Uma <see cref="T:System.Drawing.Drawing2D.LineJoin" /> que representa o estilo de junção para as extremidades de duas linhas consecutivas desenhadas com essa <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-236">A <see cref="T:System.Drawing.Drawing2D.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-237">Uma junção de linha é a área comum que é formada por duas linhas cujas extremidades se encontram ou se sobrepõem.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-237">A line join is the common area that is formed by two lines whose ends meet or overlap.</span></span> <span data-ttu-id="e9bf2-238">Há três estilos de junção de linha: Malhete, Bisel e redonda.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-238">There are three line join styles: miter, bevel, and round.</span></span>  <span data-ttu-id="e9bf2-239">Quando você especifica um estilo de junção de linha para um <xref:System.Drawing.Pen> do objeto, que o estilo de junção será aplicado a todas as linhas conectadas em qualquer <xref:System.Drawing.Drawing2D.GraphicsPath> objeto desenhado usando essa caneta. A ilustração a seguir mostra os resultados do exemplo de junção de linha biselada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-239">When you specify a line join style for a <xref:System.Drawing.Pen> object, that join style will be applied to all the connected lines in any <xref:System.Drawing.Drawing2D.GraphicsPath> object drawn using that pen.The following illustration shows the results of the beveled line join example.</span></span>  
  
 <span data-ttu-id="e9bf2-240">![Canetas](~/add/media/pens5.gif "canetas")</span><span class="sxs-lookup"><span data-stu-id="e9bf2-240">![Pens](~/add/media/pens5.gif "Pens")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-241">O exemplo de código a seguir demonstra os efeitos da configuração de <xref:System.Drawing.Pen.Width%2A> e <xref:System.Drawing.Pen.LineJoin%2A> propriedades em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-241">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-242">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-242">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-243">Cole o código em um formulário e chame o `ShowLineJoin` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs> .</span><span class="sxs-lookup"><span data-stu-id="e9bf2-243">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-244">A propriedade <see cref="P:System.Drawing.Pen.LineJoin" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-244">The <see cref="P:System.Drawing.Pen.LineJoin" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MiterLimit">
      <MemberSignature Language="C#" Value="public float MiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MiterLimit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.MiterLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MiterLimit As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MiterLimit { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MiterLimit : single with get, set" Usage="System.Drawing.Pen.MiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-245">Obtém ou define o limite da espessura da junção em um canto de malhete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-245">Gets or sets the limit of the thickness of the join on a mitered corner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-246">O limite da espessura da junção em um canto de malhete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-246">The limit of the thickness of the join on a mitered corner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-247">O comprimento do Malhete é a distância da interseção das paredes linha dentro da associação para a interseção das paredes linha fora da junção.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-247">The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</span></span> <span data-ttu-id="e9bf2-248">O comprimento do Malhete e pode ser grande, quando o ângulo entre duas linhas é pequeno.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-248">The miter length can be large when the angle between two lines is small.</span></span> <span data-ttu-id="e9bf2-249">O limite de Malhete é a taxa máxima permitida comprimento do Malhete e a largura do traço.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-249">The miter limit is the maximum allowed ratio of miter length to stroke width.</span></span> <span data-ttu-id="e9bf2-250">O valor padrão é 10.0f.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-250">The default value is 10.0f.</span></span>  
  
 <span data-ttu-id="e9bf2-251">Se o comprimento do Malhete da junção da interseção excede o limite de junção, em seguida, a junção será biselada para mantê-la dentro do limite de junção da interseção.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-251">If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-252">A propriedade <see cref="P:System.Drawing.Pen.MiterLimit" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-252">The <see cref="P:System.Drawing.Pen.MiterLimit" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-253">Multiplica a matriz de transformação para este <see cref="T:System.Drawing.Pen" /> pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-253">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="pen.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e9bf2-254">O objeto <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual multiplicar a matriz de transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-254">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-255">Multiplica a matriz de transformação para este <see cref="T:System.Drawing.Pen" /> pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-255">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-256">Esse método precede a matriz de multiplicação especificada no `matrix` parâmetro para a matriz de transformação para a operação de multiplicação.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-256">This method prepends the multiplication matrix specified in the `matrix` parameter to the transformation matrix for the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-257">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-257">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-258">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-258">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-259">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-259">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-260">Desenha uma linha para a tela.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-260">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="e9bf2-261">Multiplica a matriz de transformação da caneta pela matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-261">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="e9bf2-262">Desenha uma linha com a caneta transformada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-262">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicPenExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e9bf2-263">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual multiplicar a matriz de transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-263">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the transformation matrix.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="e9bf2-264">A ordem na qual executar a operação de multiplicação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-264">The order in which to perform the multiplication operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-265">Multiplica a matriz de transformação para este <see cref="T:System.Drawing.Pen" /> pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-265">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-266">Esse método usa o <xref:System.Drawing.Drawing2D.MatrixOrder> elemento de enumeração (preceder ou acrescentar) especificado pelo `order` parâmetro para realizar a operação de multiplicação.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-266">This method uses the <xref:System.Drawing.Drawing2D.MatrixOrder> enumeration element (either prepend or append) specified by the `order` parameter to carry out the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-267">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-267">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-268">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-268">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-269">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-269">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-270">Desenha uma linha para a tela.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-270">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="e9bf2-271">Multiplica a matriz de transformação da caneta pela matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-271">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="e9bf2-272">Desenha uma linha com a caneta transformada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-272">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicPenExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenType">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenType PenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenType PenType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.PenType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PenType As PenType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenType PenType { System::Drawing::Drawing2D::PenType get(); };" />
      <MemberSignature Language="F#" Value="member this.PenType : System.Drawing.Drawing2D.PenType" Usage="System.Drawing.Pen.PenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-273">Obtém o estilo das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-273">Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-274">A enumeração <see cref="T:System.Drawing.Drawing2D.PenType" /> que especifica o estilo das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-274">A <see cref="T:System.Drawing.Drawing2D.PenType" /> enumeration that specifies the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-275">Um <xref:System.Drawing.Pen> desenhar linhas sólidas, linhas preenchidas ou linhas texturizadas, dependendo do estilo especificado por um membro do <xref:System.Drawing.Drawing2D.PenType> enumeração.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-275">A <xref:System.Drawing.Pen> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <xref:System.Drawing.Drawing2D.PenType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="pen.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-276">Redefine a matriz de transformação geométrica para este <see cref="T:System.Drawing.Pen" /> para a identidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-276">Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> to identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-277">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-277">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-278">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-278">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-279">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-279">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-280">Define a matriz de transformação da caneta em escala de 2 vezes na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-280">Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="e9bf2-281">Desenha uma linha para a tela.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-281">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="e9bf2-282">Redefine a matriz de transformação à identidade.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-282">Resets the transformation matrix to identity.</span></span>  
  
-   <span data-ttu-id="e9bf2-283">Desenha uma segunda linha para a tela.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-283">Draws a second line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicPenExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-284">Gira a transformação geométrica local pelo ângulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-284">Rotates the local geometric transformation by the specified angle.</span>
          </span>
          <span data-ttu-id="e9bf2-285">Esse método precede a rotação para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-285">This method prepends the rotation to the transformation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="pen.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="e9bf2-286">O ângulo de rotação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-286">The angle of rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-287">Gira a transformação geométrica local pelo ângulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-287">Rotates the local geometric transformation by the specified angle.</span>
          </span>
          <span data-ttu-id="e9bf2-288">Esse método precede a rotação para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-288">This method prepends the rotation to the transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-289">Como a forma de uma caneta é circular, uma rotação não tem nenhum efeito visível, a menos que a caneta é dimensionada na direção do eixo x ou y.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-289">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-290">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-290">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-291">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-291">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-292">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-292">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-293">Desenha um retângulo usando a caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-293">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="e9bf2-294">Dimensiona a caneta por 2 vezes na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-294">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="e9bf2-295">Gira a caneta 90 graus no sentido horário.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-295">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="e9bf2-296">Desenha um retângulo de segundo para demonstrar a diferença.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-296">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicPenExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="e9bf2-297">O ângulo de rotação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-297">The angle of rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="e9bf2-298">Um <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica se é necessário acrescentar algo ao começo ou no fim da matriz de rotação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-298">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-299">Gira a transformação geométrica local pelo ângulo especificado na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-299">Rotates the local geometric transformation by the specified angle in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-300">Como a forma de uma caneta é circular, uma rotação não tem nenhum efeito visível, a menos que a caneta é dimensionada na direção do eixo x ou y.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-300">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-301">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-301">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-302">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-302">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-303">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-303">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-304">Dimensiona a caneta por 2 vezes na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-304">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="e9bf2-305">Desenha um retângulo usando a caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-305">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="e9bf2-306">Gira a caneta 90 graus no sentido horário.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-306">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="e9bf2-307">Desenha um retângulo de segundo para demonstrar a diferença.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-307">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicPenExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-308">Coloca em escala a transformação geométrica local pelos fatores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-308">Scales the local geometric transformation by the specified factors.</span>
          </span>
          <span data-ttu-id="e9bf2-309">Esse método precede a matriz de escala para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-309">This method prepends the scaling matrix to the transformation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="pen.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="e9bf2-310">O fator pelo qual colocar em escala a transformação na direção do eixo x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-310">The factor by which to scale the transformation in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="e9bf2-311">O fator pelo qual colocar em escala a transformação na direção do eixo y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-311">The factor by which to scale the transformation in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-312">Coloca em escala a transformação geométrica local pelos fatores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-312">Scales the local geometric transformation by the specified factors.</span>
          </span>
          <span data-ttu-id="e9bf2-313">Esse método precede a matriz de escala para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-313">This method prepends the scaling matrix to the transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-314">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-314">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-315">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-315">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="e9bf2-316">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-316">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-317">Desenha um retângulo usando a caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-317">Draws a rectangle using the pen.</span></span>  
  
 <span data-ttu-id="e9bf2-318">Dimensiona a caneta por 2 vezes na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-318">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
 <span data-ttu-id="e9bf2-319">Desenha um retângulo de segundo para demonstrar a diferença.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-319">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicPenExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="e9bf2-320">O fator pelo qual colocar em escala a transformação na direção do eixo x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-320">The factor by which to scale the transformation in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="e9bf2-321">O fator pelo qual colocar em escala a transformação na direção do eixo y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-321">The factor by which to scale the transformation in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="e9bf2-322">Um <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica se o acréscimo à matriz de colocação em escala deve ser no início ou no fim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-322">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-323">Ajusta a transformação geométrica local por fatores especificados na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-323">Scales the local geometric transformation by the specified factors in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-324">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-324">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-325">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-325">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e9bf2-326">Cria um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-326">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="e9bf2-327">Desenha um retângulo usando a caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-327">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="e9bf2-328">Dimensiona a caneta por 2 vezes na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-328">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="e9bf2-329">Desenha um retângulo de segundo para demonstrar a diferença.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-329">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicPenExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineCap">
      <MemberSignature Language="C#" Value="public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLineCap(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap, valuetype System.Drawing.Drawing2D.DashCap dashCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLineCap(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap, System::Drawing::Drawing2D::DashCap dashCap);" />
      <MemberSignature Language="F#" Value="member this.SetLineCap : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.DashCap -&gt; unit" Usage="pen.SetLineCap (startCap, endCap, dashCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="dashCap" Type="System.Drawing.Drawing2D.DashCap" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="e9bf2-330">Um <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa o estilo da tampa usada no início das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-330">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="e9bf2-331">Um <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa o estilo da tampa usada no final das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-331">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="dashCap">
          <span data-ttu-id="e9bf2-332">Um <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa o estilo da tampa usada no início ou no final das linhas tracejadas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-332">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-333">Define os valores que determinam o estilo da tampa usada para terminar as linhas desenhadas por esse <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-333">Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-334">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro do <xref:System.Windows.Forms.Control.Paint> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="e9bf2-335">O código cria um <xref:System.Drawing.Pen> e define-o para desenhar caps de âncora de seta no início das linhas:</span><span class="sxs-lookup"><span data-stu-id="e9bf2-335">The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicPenExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap StartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap StartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.StartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property StartCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap StartCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.StartCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.StartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-336">Obtém ou define o estilo do limite usado no início das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-336">Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-337">Um dos valores de <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa o estilo do limite usado no início das linhas desenhadas com este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-337">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9bf2-338">O exemplo de código a seguir demonstra os efeitos da configuração de <xref:System.Drawing.Pen.StartCap%2A> e <xref:System.Drawing.Pen.EndCap%2A> propriedades em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-338">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-339">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-339">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-340">Cole o código em um formulário e chame o `ShowStartAndEndCaps` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-340">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e9bf2-341">O valor especificado não é um membro de <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-341">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-342">A propriedade <see cref="P:System.Drawing.Pen.StartCap" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-342">The <see cref="P:System.Drawing.Pen.StartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Pen.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-343">Obtém ou define uma cópia da transformação geométrica para este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-343">Gets or sets a copy of the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-344">Uma cópia do <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa a transformação geométrica para este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-344">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-345">Esta propriedade define uma forma elíptica de ponta da caneta.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-345">This property defines an elliptical shape for the pen tip.</span></span> <span data-ttu-id="e9bf2-346">Essa elipse é obtido da forma circular padrão aplicando-se a matriz de transformação.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-346">This ellipse is obtained from the default circular shape by applying the transformation matrix.</span></span> <span data-ttu-id="e9bf2-347">Observe que a parte de translação da matriz será ignorada.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-347">Note that the translation portion of the matrix is ignored.</span></span> <span data-ttu-id="e9bf2-348">Porque a matriz retornada e pela <xref:System.Drawing.Pen.Transform%2A> é uma cópia da transformação geométrica da caneta, você deve descartar a matriz quando você não precisa mais dela.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-348">Because the matrix returned and by the <xref:System.Drawing.Pen.Transform%2A> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-349">A propriedade <see cref="P:System.Drawing.Pen.Transform" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-349">The <see cref="P:System.Drawing.Pen.Transform" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-350">Converte a transformação geométrica local pelas dimensões especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-350">Translates the local geometric transformation by the specified dimensions.</span>
          </span>
          <span data-ttu-id="e9bf2-351">Esse método precede a translação para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-351">This method prepends the translation to the transformation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="pen.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="e9bf2-352">O valor da conversão em x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-352">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="e9bf2-353">O valor da conversão em y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-353">The value of the translation in y.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-354">Converte a transformação geométrica local pelas dimensões especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-354">Translates the local geometric transformation by the specified dimensions.</span>
          </span>
          <span data-ttu-id="e9bf2-355">Esse método precede a translação para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-355">This method prepends the translation to the transformation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="e9bf2-356">O valor da conversão em x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-356">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="e9bf2-357">O valor da conversão em y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-357">The value of the translation in y.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="e9bf2-358">A ordem (preceder ou acrescentar) em que a translação é aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-358">The order (prepend or append) in which to apply the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9bf2-359">Converte a transformação geométrica local pelas dimensões especificadas na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-359">Translates the local geometric transformation by the specified dimensions in the specified order.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Width : single with get, set" Usage="System.Drawing.Pen.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9bf2-360">Obtém ou define a largura dessa <see cref="T:System.Drawing.Pen" />, em unidades do objeto <see cref="T:System.Drawing.Graphics" /> usado para o desenho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-360">Gets or sets the width of this <see cref="T:System.Drawing.Pen" />, in units of the <see cref="T:System.Drawing.Graphics" /> object used for drawing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9bf2-361">A largura deste <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-361">The width of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9bf2-362">Você pode acessar a unidade de medida do <xref:System.Drawing.Graphics> do objeto usando seu <xref:System.Drawing.Graphics.PageUnit%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-362">You can access the unit of measure of the <xref:System.Drawing.Graphics> object using its <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="e9bf2-363">Normalmente, a unidade de medida é pixels.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-363">The unit of measure is typically pixels.</span></span> <span data-ttu-id="e9bf2-364">Um <xref:System.Drawing.Pen.Width%2A> 0 resultará na <xref:System.Drawing.Pen> desenho como se o <xref:System.Drawing.Pen.Width%2A> eram 1.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-364">A <xref:System.Drawing.Pen.Width%2A> of 0 will result in the <xref:System.Drawing.Pen> drawing as if the <xref:System.Drawing.Pen.Width%2A> were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9bf2-365">O exemplo de código a seguir demonstra os efeitos da configuração de <xref:System.Drawing.Pen.Width%2A> e <xref:System.Drawing.Pen.LineJoin%2A> propriedades em um <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-365">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="e9bf2-366">Este exemplo é projetado para ser usado com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-366">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e9bf2-367">Cole o código em um formulário e chame o `ShowLineJoin` método ao lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="e9bf2-367">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e9bf2-368">A propriedade <see cref="P:System.Drawing.Pen.Width" /> é definida em um <see cref="T:System.Drawing.Pen" /> imutável, como os que são retornados pela classe <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9bf2-368">The <see cref="P:System.Drawing.Pen.Width" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>