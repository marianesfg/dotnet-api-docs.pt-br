<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afb260928708122a09b5cd118a07269776a89c96" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58709228" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Infere uma esquema de Linguagem de Definição de Esquema XML (XSD) de um documento XML. A classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Não use esquemas de fontes desconhecidas ou não confiáveis ou locais. Ao fazer isso comprometerá a segurança do seu código.  
> -   Esquemas XML (incluindo esquemas in-line) são inerentemente vulneráveis a ataques negação de serviço; não aceitá-los em cenários não confiáveis.  
> -   Exceções e mensagens de erro de validação de esquema podem expor informações confidenciais sobre o modelo de conteúdo ou os caminhos URI para o arquivo de esquema. Tenha cuidado para não expor essas informações para os chamadores não confiáveis.  
  
 O <xref:System.Xml.Schema.XmlSchemaInference> classe o <xref:System.Xml.Schema?displayProperty=nameWithType> namespace permite que você inferir um esquema de linguagem de definição de esquema XML (XSD) da estrutura de um documento XML. A saída de classe de <xref:System.Xml.Schema.XmlSchemaInference> um esquema XML que pode validar o documento XML.  
  
 O <xref:System.Xml.Schema.XmlSchemaInference> classe oferece suporte os padrões XML do W3C e esquemas XML. Ele pode ser usado para inferir um esquema novo ou refinar um esquema existente.  
  
   
  
## Examples  
 Este exemplo usa um arquivo XML como entrada e gera um esquema que pode validar o XML de exemplo.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 A seguir está o arquivo XML de entrada.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Este é o esquema inferido do documento XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deduz um esquema XSD (linguagem de definição de esquema XML) do documento XML especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Um objeto <see cref="T:System.Xml.XmlReader" /> que contém o documento XML do qual um esquema será deduzido.</param>
        <summary>Deduz um esquema XSD (linguagem de definição de esquema XML) do documento XML contido no objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
        <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas deduzidos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método infere um ou mais esquemas W3C linguagem de definição de esquema XML (XSD) do XML de documento contido na instância de <xref:System.Xml.XmlReader> objeto especificado. Se o documento XML contém elementos e atributos de vários namespaces e, em seguida, vários esquemas são geradas: um para cada namespace usado no documento. O esquema principal é o esquema que pode validar o documento XML inteiro e o namespace de destino é o mesmo que o namespace do elemento de documento do documento XML.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método.  
  
-   O <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método ignora qualquer `xsi:type`, `xsi:schemaLocation`, ou `xsi:noNamespaceSchemaLocation` atributos no documento XML.  
  
-   Se o <xref:System.Xml.XmlReader> objeto é digitado, ela contém as informações de tipo serão ignoradas.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em um elemento que não é o elemento raiz do documento XML, um esquema é inferido para somente esse elemento. Se o <xref:System.Xml.XmlReader> objeto não está posicionado em um elemento, o <xref:System.Xml.XmlReader.Read%2A> método é chamado na <xref:System.Xml.XmlReader> parâmetro até encontrar um elemento (por exemplo, quando <xref:System.Xml.XmlReader.NodeType%2A> é <xref:System.Xml.XmlNodeType.Element>). Neste ponto, o processo de inferência inicia a partir desse elemento. Se nenhum elemento for encontrado até o final do documento, um <xref:System.ArgumentException> é gerada.  
  
   
  
## Examples  
 Este exemplo usa um arquivo XML como entrada e gera um esquema que pode validar o XML de exemplo.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 A seguir está o arquivo XML de entrada.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Este é o esquema inferido do documento XML.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">O documento XML não está bem formado.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">O objeto <see cref="T:System.Xml.XmlReader" /> não está posicionado no nó raiz nem em um elemento. Ocorrerá um erro durante o processo de inferência de esquema.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Um objeto <see cref="T:System.Xml.XmlReader" /> que contém o documento XML do qual um esquema será deduzido.</param>
        <param name="schemas">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém um esquema existente usado para refinar o esquema deduzido.</param>
        <summary>Deduz um esquema XSD (linguagem de definição de esquema XML) do documento XML contido no objeto <see cref="T:System.Xml.XmlReader" /> especificado e refina o esquema deduzido usando um esquema existente no objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado com o mesmo namespace de destino.</summary>
        <returns>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas deduzidos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método infere um ou mais esquemas W3C linguagem de definição de esquema XML (XSD) do XML de documento contido na instância de <xref:System.Xml.XmlReader> objeto especificado. Se o documento XML contiver elementos e atributos de vários namespaces, vários esquemas são geradas: um para cada namespace usado no documento. O esquema principal é o esquema que pode validar o documento XML inteiro e o namespace de destino é o mesmo que o namespace do elemento de documento do documento XML.  
  
 As seguintes são notas importantes a considerar ao usar o <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método.  
  
-   O <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método ignora qualquer `xsi:type`, `xsi:schemaLocation`, ou `xsi:noNamespaceSchemaLocation` atributos no documento XML.  
  
-   Se o <xref:System.Xml.XmlReader> objeto é digitado, ela contém as informações de tipo serão ignoradas.  
  
-   Se o <xref:System.Xml.XmlReader> objeto está posicionado em um elemento que não é o elemento raiz do documento XML, um esquema é inferido para somente esse elemento. Se o <xref:System.Xml.XmlReader> objeto não está posicionado em um elemento, o <xref:System.Xml.XmlReader.Read%2A> método é chamado na <xref:System.Xml.XmlReader> parâmetro até encontrar um elemento (por exemplo, quando <xref:System.Xml.XmlReader.NodeType%2A> é <xref:System.Xml.XmlNodeType.Element>). Neste ponto, o processo de inferência inicia a partir desse elemento. Se nenhum elemento for encontrado até o final do documento, um <xref:System.ArgumentException> é gerada.  
  
-   Se um <xref:System.Xml.Schema.XmlSchemaSet> objeto é passado como um parâmetro e o elemento no qual o <xref:System.Xml.XmlReader> objeto está posicionado é definido em um dos esquemas a <xref:System.Xml.Schema.XmlSchemaSet>, o esquema inferido é usado para refinar um esquema existente no <xref:System.Xml.Schema.XmlSchemaSet> parâmetro com o mesmo namespace de destino; Caso contrário, um novo esquema será inferido para o namespace.  
  
   
  
## Examples  
 O código de exemplo a seguir usa o documento XML 1 como uma entrada e gera um esquema que pode validar o documento XML 1. O exemplo de código, em seguida, usa o documento XML 2 e refina o esquema gerado do documento XML 1, com base em alterações encontradas no documento XML de 2.  
  
 A seguir está o documento XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 A seguir está o documento XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 O exemplo de código a seguir infere um esquema do primeiro documento XML contido em `reader`e, em seguida, refina o esquema deduzido com alterações encontradas no segundo documento XML contido em `reader1`. O exemplo de código usa a primeira sobrecarregado <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> sobrecarregada do método para inferir o esquema e a segunda <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> método para refinar o esquema existente no <xref:System.Xml.Schema.XmlSchemaSet> objeto.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 O esquema a seguir é o esquema inferido do documento XML 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 O esquema a seguir é a versão de refinado do esquema acima, com base no documento XML 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">O documento XML não está bem formado.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">O objeto <see cref="T:System.Xml.XmlReader" /> não está posicionado no nó raiz nem em um elemento. Ocorrerá um erro durante o processo de inferência de esquema.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afeta as declarações de ocorrência de esquema deduzidas do documento XML.</summary>
        <value>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> estiver definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, os primeiros elementos de tempo são encontrados no documento XML, a declaração de esquema será inferida como `minOccurs="1"`. Quando atributos são encontrados, a declaração de esquema será inferida como `use="required"`.  
  
 Se o <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> estiver definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, declarações de elemento de esquema são inferidas como `minOccurs="0"`, e declarações de atributo de esquema são inferidas como `use="optional"`.  
  
 O valor padrão de <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> é de propriedade <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Este exemplo ilustra como a ocorrência é afetada pelos <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> propriedade. O exemplo de código infere a ocorrência de um arquivo XML de duas maneiras diferentes: relaxada e restrito. A seguir está o arquivo XML de exemplo.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 O exemplo de código a seguir instrui o <xref:System.Xml.Schema.XmlSchemaInference> classe inferir a ocorrência de elementos e atributos de uma forma reduzida.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Porque o <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> propriedade foi definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, o esquema a seguir foi gerado.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 No código de exemplo acima, se o <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> propriedade não foi definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, o <xref:System.Xml.Schema.XmlSchemaInference> classe seria ter padronizada para <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> e gerado o esquema a seguir.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afeta os tipos deduzidos do documento XML.</summary>
        <value>Um objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> estiver definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, o tipo inferido de elementos e atributos no documento XML com conteúdo simples é sempre `xs:string`. Se o <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> estiver definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, mais específicos tipos são inferidos, tais como `xs:date`, `xs:decimal`, `xs:unsignedByte`e assim por diante.  
  
 O valor padrão de <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> é de propriedade <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Este exemplo ilustra como inferência de tipo é afetada pelos <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> propriedade. O exemplo de código infere os tipos de um arquivo XML de duas maneiras diferentes: relaxada e restrito. A seguir está o arquivo XML de exemplo.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 O exemplo de código a seguir instrui o <xref:System.Xml.Schema.XmlSchemaInference> classe inferir `xs:string` para atributos e elementos com conteúdo simples.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Porque o <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> propriedade foi definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, o esquema a seguir foi gerado.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 No código de exemplo acima, se o <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> propriedade não foi definida como <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, o <xref:System.Xml.Schema.XmlSchemaInference> classe seria ter padronizada para <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> e gerado o esquema a seguir.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>