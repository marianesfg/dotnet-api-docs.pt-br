<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaValidator.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5593dcfff13b2f3c4579da94de3116830777dc050.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">593dcfff13b2f3c4579da94de3116830777dc050</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
          <target state="translated">Representa um mecanismo de validação do esquema XSD (linguagem de definição de esquema XML).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class cannot be inherited.</source>
          <target state="translated">A classe <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">Não use esquemas de fontes desconhecidas ou não confiáveis ou locais.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">Isso comprometerá a segurança do seu código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">Esquemas XML (incluindo esquemas embutidos) são inerentemente vulneráveis a ataques negação de serviço; não aceitá-los em cenários não confiáveis.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">Exceções e mensagens de erro de validação de esquema podem expor informações confidenciais sobre o modelo de conteúdo ou o caminho de URI para o arquivo de esquema.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">Tenha cuidado para não expor essas informações para chamadores não confiáveis.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
          <target state="translated">A classe de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> fornece um mecanismo eficiente, de alto desempenho validar dados XML com esquemas XML de uma maneira envio- base.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
          <target state="translated">Por exemplo, a classe de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> permite que você valide um infoset XML no local sem ter que para serializá-lo como um documento XML e então um nova análise o documento usando um leitor validando XML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> classe também pode ser usada para criar mecanismos de validação em fontes de dados XML personalizadas ou como uma maneira de criar um gravador XML de validação.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> topic.</source>
          <target state="translated">Para obter mais informações sobre o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> de classe, consulte o <bpt id="p1">[</bpt>XmlSchemaValidator envio-de validação<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> tópico.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> sinalizadores de validação de um <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto não são padrão do conjunto de ser.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto <ph id="ph3">`null`</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Como resultado, esquemas externos referenciadas em incluem, importações ou elementos de redefinição não são resolvidos por padrão.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object containing element and attribute names as atomized strings.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> que contém nomes de elementos e de atributos como cadeias de caracteres atomizadas.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> que contém os esquemas XSD (linguagem de definição de esquema XML) usados para validação.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object used for resolving namespaces encountered during validation.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> usado para resolver namespaces encontrados durante a validação.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> value specifying schema validation options.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> que especifica as opções de validação de esquema.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter are copied into an internal <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> or the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation options are set.</source>
          <target state="translated">O conteúdo do <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parâmetro são copiados em interno <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> objeto quando o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> ou <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> opções de validação são definidas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, changes to the input <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object during validation do not affect the outcome of validation.</source>
          <target state="translated">Como resultado, é alterado para a entrada <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> objeto durante a validação não afetam o resultado da validação.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter specified is not compiled, its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method is called.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parâmetro especificado não está compilado, seu <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> parameter is especially important for validating <ph id="ph2">`xs:QName`</ph> types.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> parâmetro é especialmente importante para validar <ph id="ph2">`xs:QName`</ph> tipos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class does not copy the in-scope namespaces from the <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object but instead holds a reference to it.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> classe não copia os namespaces no escopo do <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> do objeto, mas em vez disso, contém uma referência a ele.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>This allows new namespaces to be added to the <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object during the validation process.</source>
          <target state="translated">Isso permite que novos namespaces a serem adicionadas à <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> objeto durante o processo de validação.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> sinalizadores de validação de um <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto não são padrão do conjunto de ser.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto <ph id="ph3">`null`</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Como resultado, esquemas externos referenciadas em incluem, importações ou elementos de redefinição não são resolvidos por padrão.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class reference topic.</source>
          <target state="translated">Para obter um exemplo de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> construtor, consulte o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> tópico de referência de classe.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais dos parâmetros especificados são <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An error occurred while compiling schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> parameter.</source>
          <target state="translated">Ocorreu um erro durante a compilação de esquemas no parâmetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the set of schemas used for validation.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> a ser adicionado ao conjunto de esquemas usados para validação.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
          <target state="translated">Adiciona um esquema XSD (linguagem de definição de esquema XML) ao conjunto de esquemas usados para validação.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> método pode ser usado para simular o efeito de encontrar um esquema XML embutido no documento XML que está sendo validado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> parameter cannot match that of any element or attribute already encountered by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object.</source>
          <target state="translated">O namespace de destino do parâmetro de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> pode não corresponder de qualquer elemento ou atributo já encontrado pelo objeto de <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> validation option is not set, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method does nothing.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> opção de validação não for definida, o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> método não fará nada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> especificado é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter matches that of any element or attribute already encountered by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">O namespace de destino do parâmetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> corresponde o de qualquer elemento ou atributo já encontrado pelo objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> é inválido.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
          <target state="translated">Termina a validação e verifica restrições de identidade para todo o documento XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> method ends validation and checks identity constraints for the entire XML document if the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> validation option is set.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> método termina de validação e verificações de restrições de identidade para todo o documento XML se o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> validação opção está definida.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>An identity constraint error was found in the XML document.</source>
          <target state="translated">Um erro de restrição de identidade foi encontrado no documento XML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>Returns the expected attributes for the current element context.</source>
          <target state="translated">Retorna os atributos esperados para o contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects or an empty array if there are no expected attributes.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> ou uma matriz vazia se não houver atributos esperados.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method, all the attributes that could appear in the XML document are returned.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> método é chamado imediatamente após o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> método, todos os atributos que podem aparecer no documento XML são retornados.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called after one or more calls to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method, the attributes that haven't yet been validated for the current element are returned.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> método é chamado após uma ou mais chamadas para o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método, os atributos que ainda não foram validados para o elemento atual são retornados.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>Returns the expected particles in the current element context.</source>
          <target state="translated">Retorna as partículas esperadas no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> objects or an empty array if there are no expected particles.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> ou uma matriz vazia se não houver partículas esperadas.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The valid particles that can be returned by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method are instances of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> classes.</source>
          <target state="translated">As partículas válidas que podem ser retornadas pelo método de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> são instâncias de classes de <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> e de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
          <target state="translated">Quando o compositor para o modelo de conteúdo for <ph id="ph1">`xs:sequence`</ph>, somente a partícula seguir na sequência é retornada.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
          <target state="translated">Se o compositor para o modelo de conteúdo é <ph id="ph1">`xs:all`</ph> ou <ph id="ph2">`xs:choice`</ph>, todas as partículas válidos que podem seguir no contexto do elemento atual são retornadas.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
          <target state="translated">Por exemplo, no esquema e o documento XML de idioma de XSD (XSD) que seguem, após validar o elemento de <ph id="ph1">`book`</ph> , o elemento de <ph id="ph2">`book`</ph> é o contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an array containing a single <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph3">`title`</ph> element.</source>
          <target state="translated">O método de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> retorna uma matriz que contém um único objeto de <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> que representa o elemento de <ph id="ph3">`title`</ph> .</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an empty array.</source>
          <target state="translated">Quando o contexto de validação é o elemento de <ph id="ph1">`title`</ph> , o método de <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> retorna uma matriz vazia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`title`</ph> element has been validated but before the <ph id="ph3">`description`</ph> element has been validated, it returns an array containing a single <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph5">`description`</ph> element.</source>
          <target state="translated">Se o método de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> é chamado depois que o elemento de <ph id="ph2">`title`</ph> foi validado mas antes do elemento de <ph id="ph3">`description`</ph> está validado, retorna uma matriz que contém um único objeto de <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> que representa o elemento de <ph id="ph5">`description`</ph> .</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`description`</ph> element has been validated then it returns an array containing a single <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> object representing the wildcard.</source>
          <target state="translated">Se o método de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> é chamado depois que o elemento de <ph id="ph2">`description`</ph> já foi validado então retorna uma matriz que contém um único objeto de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> que representa a curinga.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XML as input.</source>
          <target state="translated">O exemplo a seguir usa XML como entrada.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XSD schema as input.</source>
          <target state="translated">O exemplo a seguir usa o esquema XSD como entrada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to populate with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes not yet encountered during validation in the element context.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> para popular com objetos <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> para os atributos que ainda não foram encontrados durante a validação no contexto do elemento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>Validates identity constraints on the default attributes and populates the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> specified with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes with default values that have not been previously validated using the <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method in the element context.</source>
          <target state="translated">Valida restrições de identidade nos atributos padrão e popula o <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> especificado com objetos <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> para quaisquer atributos com valores padrão que não foram validados anteriormente usando o método <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> no contexto do elemento.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> método deve ser chamado depois de validar todos os atributos do elemento atual com o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
          <target state="translated">O método de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> deve ser usado para determinar quais atributos padrão devem ser inseridos no documento XML que está sendo validada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Inicializa o estado do objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Inicializa o estado do objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method is only valid if called immediately after the construction of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object or after a call to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> método só será válido se chamado imediatamente após a construção de uma <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto ou após uma chamada para <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">Chamar o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> é válido imediatamente após a construção de um objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> ou após uma chamada a <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> somente.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object used to initialize the validation context of the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object for partial validation.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> usado para inicializar o contexto de validação do objeto <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> para validação parcial.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object using the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> specified for partial validation.</source>
          <target state="translated">Inicializa o estado do objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> usando o <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> especificado para validação parcial.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> as a parameter initializes an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to its starting state for partial validation.</source>
          <target state="translated">O método de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> que leva <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> como um parâmetro inicializa um objeto de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> ao seu estado inicial para a validação parcial.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>In the following example, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> is initialized for partial validation using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">No exemplo a seguir, <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> é inicializado para validação usando o método parcial de <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">`orderNumber`</ph> schema element is passed by selecting the schema element by <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> collection returned by the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object.</source>
          <target state="translated">O elemento do esquema de <ph id="ph1">`orderNumber`</ph> é passado selecionando o elemento de esquema por <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> na coleção de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> retornada pela propriedade de <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> do objeto de <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object then validates this specific element.</source>
          <target state="translated">O objeto de <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> valida neste elemento específico.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The example takes the following XML schema as input.</source>
          <target state="translated">O exemplo a seguir usa o esquema XML como entrada.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">Chamar o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> é válido imediatamente após a construção de um objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> ou após uma chamada a <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> somente.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> não é um objeto <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> ou <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> não pode ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Gets or sets the line number information for the XML node being validated.</source>
          <target state="translated">Obtém ou define as informações de número de linha para o nó XML que está sendo validado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Line information is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">As informações de linha são relatadas por qualquer <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> lançada durante o processo de validação.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>The default <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> property returns 0 for the <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> properties.</source>
          <target state="translated">O padrão <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> objeto retornado pelo <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> propriedade retorna 0 para o <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set if the current element content is successfully skipped.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades serão definidas se o conteúdo do elemento atual for ignorado com êxito.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Skips validation of the current element content and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate content in the parent element's context.</source>
          <target state="translated">Ignora a validação de conteúdo do elemento atual e prepara o objeto de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> para validar o conteúdo no contexto do elemento pai.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method skips validation of the current element content and prepares the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> método ignora a validação do conteúdo do elemento atual e prepara a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> para validar o conteúdo no contexto do elemento pai do objeto; é equivalente a ignorar a validação para todos os filhos do elemento atual e, em seguida, chamar o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the current element content is successfully skipped, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Se o conteúdo do elemento atual for ignorado com êxito, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> está definida como <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>No validation errors are reported on skipped content.</source>
          <target state="translated">Não há erros de validação são relatados em conteúdo ignorado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, chamar <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> depois de chamar <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>Gets or sets the source URI for the XML node being validated.</source>
          <target state="translated">Obtém ou define o URI de origem para o nó XML que está sendo validado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object representing the source URI for the XML node being validated; the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> objeto que representa a URI de origem para o nó XML que está sendo validada; o padrão é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>The source URI is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">A fonte de URI é relatado por qualquer <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> lançada durante o processo de validação.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> property is not set, the file name for the XML document is <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> in validation error messages.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> propriedade não for definida, o nome de arquivo para o documento XML é <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> em mensagens de erro de validação.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the attribute in the current element context.</source>
          <target state="translated">Valida o atributo no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">O nome local do atributo a ser validado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">O URI de namespace do atributo a ser validado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The value of the attribute to validate.</source>
          <target state="translated">O valor do atributo a ser validado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na validação bem-sucedida do atributo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Valida o nome do atributo, URI de namespace e o valor no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">O valor do atributo validado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> método deve ser chamado depois de validar todos os atributos do elemento atual com o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto passado para o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> método, o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método valida o atributo em relação a <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Se o atributo for validado com êxito no contexto atual do elemento, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propriedades são definidas com os resultados da validação.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">O atributo não é válido no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, chamar <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> depois de chamar <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais dos parâmetros especificados são <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">O nome local do atributo a ser validado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">O URI de namespace do atributo a ser validado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> usado para passar o valor do atributo como um tipo CLR (Common Language Runtime) compatível com o tipo XSD (linguagem de definição de esquema XML) do atributo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na validação bem-sucedida do atributo.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter and can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Este parâmetro e pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Valida o nome do atributo, URI de namespace e o valor no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">O valor do atributo validado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> método deve ser chamado depois de validar todos os atributos do elemento atual com o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto passado para o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> método, o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> método valida o atributo em relação a <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Se o atributo for validado com êxito no contexto atual do elemento, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propriedades são definidas com os resultados da validação.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">O atributo não é válido no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, chamar <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> depois de chamar <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais dos parâmetros especificados são <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the element in the current context.</source>
          <target state="translated">Valida o elemento no contexto atual.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the element to validate.</source>
          <target state="translated">O nome local do elemento a ser validado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">O URI de namespace do elemento a ser validado.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na validação bem-sucedida do nome do elemento.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the element in the current context.</source>
          <target state="translated">Valida o elemento no contexto atual.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Se o nome do elemento é validado com êxito no contexto atual, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propriedades são definidas com os resultados da validação.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name or any of its attributes are invalid the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Se o nome do elemento ou qualquer um de seus atributos são inválidos o contexto atual, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> está definida como <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; caso contrário, o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> está definida como <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">O nome do elemento não é válido no contexto atual.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> é chamado após chamar <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The local name of the element to validate.</source>
          <target state="translated">O nome local do elemento a ser validado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">O URI de namespace do elemento a ser validado.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na validação bem-sucedida do nome do elemento.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">O valor de atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept> do elemento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">O valor de atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept> do elemento.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">O valor de atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept> do elemento.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">O valor de atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> do elemento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>Validates the element in the current context with the <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p3">&lt;/c&gt;</ept>, and <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attribute values specified.</source>
          <target state="translated">Valida o elemento no contexto atual com os valores de atributo <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p3">&lt;/c&gt;</ept> e <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> especificados.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Se o nome do elemento é validado com êxito no contexto atual, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propriedades são definidas com os resultados da validação.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name or any of its attributes are invalid in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Se o nome do elemento ou qualquer um de seus atributos não são válidos no contexto atual, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> está definida como <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; caso contrário, o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> está definida como <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> value was not passed as a parameter to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, <ph id="ph3">`xsi:SchemaLocation`</ph> and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> valor não foi passado como um parâmetro para o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> construtor, <ph id="ph3">`xsi:SchemaLocation`</ph> e <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> valores de atributo são ignorados.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">O nome do elemento não é válido no contexto atual.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> é chamado após chamar <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados para elementos com conteúdo simples e verifica se o conteúdo do elemento atual está completo para elementos com conteúdo complexo.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na validação bem-sucedida do elemento.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados para elementos com conteúdo simples e verifica se o conteúdo do elemento atual está completo para elementos com conteúdo complexo.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
          <target state="translated">O valor de texto analisado e digitado do elemento se o elemento tiver conteúdo simples.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Para elementos com conteúdo simples, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados e retorna o valor digitado analisado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The text content of the element is obtained from the results of previous calls to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</source>
          <target state="translated">O conteúdo de texto do elemento é obtido dos resultados de chamadas anteriores para <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with complex content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies if the content of the current element is complete.</source>
          <target state="translated">Para elementos com conteúdo complexo, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método verifica se o conteúdo do elemento atual for concluído.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element has a default value, the value returned from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is the default value for the element.</source>
          <target state="translated">Se o elemento tem um valor padrão, o valor retornado do <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método é o valor padrão para o elemento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto foi construído com o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> valor como um parâmetro, o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método verifica as regras de restrição de identidade (se houver) que se aplicam ao elemento.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Se o elemento é validado com êxito no contexto atual, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propriedades são definidas com os resultados da validação.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's content is not valid.</source>
          <target state="translated">O conteúdo do elemento não é válido.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, se o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> for chamado após chamar <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the text content of the element.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na validação bem-sucedida do conteúdo de texto do elemento.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content of the element.</source>
          <target state="translated">O conteúdo do texto digitado do elemento.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
          <target state="translated">Verifica se o conteúdo do texto do elemento especificado é válido de acordo com seu tipo de dados.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The parsed, typed simple content of the element.</source>
          <target state="translated">O conteúdo simples analisado e digitado do elemento.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If you are validating against the <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, or <ph id="ph3">`xs:unique`</ph> identity constraints, do not use the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload.</source>
          <target state="translated">Se você estiver validando em relação a <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, ou <ph id="ph3">`xs:unique`</ph> restrições de identidade, não use o <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> sobrecarga do método.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method and pass it the value of the element.</source>
          <target state="translated">Em vez disso, chame o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método e passe o valor do elemento.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Then call the  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload, which takes <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> as an argument, to verify that the text content of the element is valid according to its data type.</source>
          <target state="translated">Em seguida, chame o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> sobrecarga de método, que usa <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> como um argumento, para verificar se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Para elementos com conteúdo simples, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> método verifica se o conteúdo de texto do elemento é válido de acordo com seu tipo de dados e retorna o valor digitado analisado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
          <target state="translated">O conteúdo de texto do elemento é obtido do conteúdo digitado passado como um parâmetro.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If calls to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method have been previously made, an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se chamadas para o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método foram feitas anteriormente, um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element has complex content an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Se o elemento tem conteúdo complexo um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto foi construído com o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> valor como um parâmetro, o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método verifica as regras de restrição de identidade (se houver) que se aplicam ao elemento.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Se o elemento é validado com êxito no contexto atual, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> propriedades são definidas com os resultados da validação.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The element's text content is not valid.</source>
          <target state="translated">O conteúdo do texto do elemento não é válido.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence (for example, if the <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), calls to the <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method have been previously made, or the element has complex content.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> não foi chamado na sequência correta (por exemplo, se o método <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> for chamado após chamar <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), as chamadas ao método <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> tinham sido feitas anteriormente ou o elemento tem conteúdo complexo.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content parameter cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro de conteúdo de texto digitado não pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> cujas propriedades são definidas na verificação bem-sucedida de que todos os atributos necessários no contexto do elemento estão presentes.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse parâmetro pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate the child content of the element.</source>
          <target state="translated">Verifica se todos os atributos necessários no contexto do elemento entram presente e prepara o objeto de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> para validar o conteúdo filho do elemento.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should always be called before <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> sempre deve ser chamado antes do método <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method must be called before proceeding with validation of an element's content.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> método deve ser chamado antes de prosseguir com a validação de conteúdo de um elemento.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>If all the required attributes in the element context are present, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</source>
          <target state="translated">Se todos os atributos necessários no contexto do elemento estiverem presentes, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> do objeto (se especificado) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> está definida como <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the required attributes in the current element context were not found.</source>
          <target state="translated">Um ou mais atributos necessários no contexto do elemento atual não foram encontrados.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, chamar <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> depois de chamar <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um ou mais dos parâmetros especificados são <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether text is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Valida se o texto é permitido no contexto do elemento atual, e acumula o texto para validação se o elemento atual tem conteúdo simples.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>A text <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated">Um texto <ph id="ph1">&lt;see langword="string" /&gt;</ph> a ser validado no contexto do elemento.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>Validates whether the text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Validará se o texto <ph id="ph1">&lt;see langword="string" /&gt;</ph> especificado for permitido no contexto do elemento atual e acumulará o texto para validação se o elemento atual tiver conteúdo simples.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Se o elemento tem conteúdo simples, o texto <ph id="ph1">`string`</ph> especificado é concatenado em cada chamada para o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método até que o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método é chamado, todo o texto é validado.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Se o elemento tem conteúdo complexo, ocorre sem concatenação de texto.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="string" /&gt;</ph> do texto especificado não é permitido no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> é chamado após chamar <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see langword="string" /&gt;</ph> do texto não pode ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> usado para passar o valor do texto como um tipo CLR (Common Language Runtime) compatível com o tipo XSD (linguagem de definição de esquema XML) do atributo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the text returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Validará se o texto retornado pelo objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> especificado for permitido no contexto do elemento atual e acumulará o texto para validação se o elemento atual tiver conteúdo simples.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Eis as observações importantes a considerar ao usar o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Se o elemento tem conteúdo simples, o texto <ph id="ph1">`string`</ph> especificado é concatenado em cada chamada para o <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> método até que o <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> método é chamado, todo o texto é validado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Se o elemento tem conteúdo complexo, ocorre sem concatenação de texto.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="string" /&gt;</ph> do texto especificado não é permitido no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> é chamado após chamar <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see langword="string" /&gt;</ph> do texto não pode ser <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether white space is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Validará se o espaço em branco for permitido no contexto do elemento atual e acumulará o espaço em branco para validação se o elemento atual tiver conteúdo simples.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>A white space <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated">Um espaço em branco <ph id="ph1">&lt;see langword="string" /&gt;</ph> a ser validado no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>Validates whether the white space in the <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Validará se o espaço em branco no <ph id="ph1">&lt;see langword="string" /&gt;</ph> especificado for permitido no contexto do elemento atual e acumulará o espaço em branco para validação se o elemento atual tiver conteúdo simples.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">Não é permitido espaço em branco no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, se o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> for chamado após chamar <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> usado para passar o valor do espaço em branco como um tipo CLR (Common Language Runtime) compatível com o tipo XSD (linguagem de definição de esquema XML) do atributo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the white space returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Validará se o espaço em branco retornado pelo objeto <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> especificado for permitido no contexto do elemento atual e acumulará o espaço em branco para validação se o elemento atual tiver conteúdo simples.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">Não é permitido espaço em branco no contexto do elemento atual.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> não foi chamado na sequência correta.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, se o método <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> for chamado após chamar <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> that receives schema validation warnings and errors encountered during schema validation.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> que recebe avisos e erros de validação de esquema encontrados durante a validação do esquema.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is specified, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is thrown for all schema validation errors with an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">Se nenhum <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> for especificado, um <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> é gerada para todos os erros de validação de esquema com um <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> valor <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is not thrown for validation warnings with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> não é gerada para avisos de validação com um <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> valor <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">O exemplo a seguir valida o <ph id="ph1">`contosoBooks.xml`</ph> arquivo em relação a <ph id="ph2">`contosoBooks.xsd`</ph> esquema.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">O exemplo usa a classe de <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para desserializar o arquivo de <ph id="ph2">`contosoBooks.xml`</ph> e passar o valor de nós métodos de classe de <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">O exemplo usa o arquivo <ph id="ph1">`contosoBooks.xml`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">O exemplo também usa <ph id="ph1">`contosoBooks.xsd`</ph> como entrada.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
          <target state="translated">Obtém ou define o objeto enviado como o objeto do remetente de um evento de validação.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; the default is this <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; este é o padrão <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>For an example of a validation event, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> event.</source>
          <target state="translated">Para obter um exemplo de um evento de validação, consulte o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object used to resolve <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xs:include<ept id="p2">&lt;/c&gt;</ept> elements as well as <bpt id="p3">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p3">&lt;/c&gt;</ept> and <bpt id="p4">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attributes.</source>
          <target state="translated">Define o objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> usado para resolver os elementos <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> e <bpt id="p2">&lt;c&gt;</bpt>xs:include<ept id="p2">&lt;/c&gt;</ept> bem como os atributos <bpt id="p3">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p3">&lt;/c&gt;</ept> e <bpt id="p4">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object; the default is an <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> objeto; o padrão é um <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> e <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> sinalizadores de validação de um <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto não são padrão do conjunto de ser.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Além disso, o <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> objeto <ph id="ph3">`null`</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Como resultado, esquemas externos referenciadas em incluem, importações ou elementos de redefinição não são resolvidos por padrão.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>