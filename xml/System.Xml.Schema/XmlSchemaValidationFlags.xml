<Type Name="XmlSchemaValidationFlags" FullName="System.Xml.Schema.XmlSchemaValidationFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ac5fe369800592ddff28eb05142bb8cabdd1f99" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52198928" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum XmlSchemaValidationFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSchemaValidationFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidationFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlSchemaValidationFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlSchemaValidationFlags" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidationFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica as opções de validação de esquema usadas pelas classes <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> e <see cref="T:System.Xml.XmlReader" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os seguintes são notas a considerar ao usar <xref:System.Xml.Schema.XmlSchemaValidationFlags> valores com o <xref:System.Xml.XmlReader>.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidationFlags> valores definem opções de validação usadas por uma validação de esquema <xref:System.Xml.XmlReader> para executar a validação de XML em um esquema. <xref:System.Xml.Schema.XmlSchemaValidationFlags> valores para um Validando <xref:System.Xml.XmlReader> são especificadas usando o <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> propriedade.  
  
 A seguir estão as anotações a serem considerados ao usar o valor de AllowXmlAttributes.  
  
1.  Quando um esquema não importa o namespace de Xml.  
  
    1.  Se AllowXmlAttributes for definido como `true` (padrão) e o documento de instância contém atributos Xml, o mecanismo de validação carregará um instantâneo do esquema do namespace de Xml padrão e usá-lo para validação. Se os atributos Xml usados no documento de instância não forem encontrados no esquema padrão, não validará o documento.  
  
    2.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos Xml, o mecanismo de validação relatará um erro.  
  
2.  Quando um esquema importa o namespace de Xml sem um local.  
  
    1.  Se AllowXmlAttributes for definido como `true` (padrão) e o documento de instância contém atributos Xml, o mecanismo de validação usará o esquema do namespace de Xml padrão para validação. Se os atributos Xml usados no documento de instância não forem encontrados no esquema padrão, não validará o documento.  
  
    2.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos Xml que não são explicitamente permitidos pelo esquema, o mecanismo de validação relatará um erro.  
  
    3.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos Xml que são explicitamente permitidos pelo esquema, o mecanismo de validação valida os atributos da mesma forma que ele valida a outros atributos usando o Xml padrão esquema do namespace.  
  
3.  Quando um esquema importa um esquema personalizado de namespace de Xml com um schemaLocation personalizado.  
  
    1.  Se AllowXmlAttributes for definido como `true` (padrão) e o documento de instância contém atributos Xml, o mecanismo de validação usará o esquema do namespace de Xml personalizado para validação. Se os atributos Xml usados no documento de instância não forem encontrados no esquema especificado, o documento não validará.  
  
    2.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos Xml que não são explicitamente permitidos pelo esquema, o mecanismo de validação relatará um erro.  
  
    3.  Se AllowXmlAttributes for definido como `false` e o documento de instância contém atributos Xml que são explicitamente permitidos pelo esquema, o mecanismo de validação valida os atributos da mesma forma que ele valida a outros atributos usando o Xml especificado esquema do namespace.  
  
4.  Quando um esquema define um xml: * atributo com uso = "required".  
  
    1.  O seguinte se aplica quando AllowXmlAttributes está definido como `true` e `false`. Necessário xml: * atributos devem ser tratados como outros atributos e validada com o esquema do namespace de Xml especificado.  
  
5.  Quando um esquema define um xml: * atributo com uso = "prohibited".  
  
    1.  O seguinte se aplica quando AllowXmlAttributes está definido como `true` e `false`. Se um documento de instância contiver xml: * atributos que são explicitamente proibidos pelo esquema, o mecanismo de validação relatará um erro.  
  
6.  Quando um esquema especifica um curinga de atributo.  
  
    1.  Se um documento de instância contém um atributo Xml e o esquema especifica um curinga de atributo com processContents está omitida ou definida como "estrito", o mecanismo de validação usará o esquema do namespace de Xml presente no <xref:System.Xml.Schema.XmlSchemaSet>. Se nenhum esquema de namespace de Xml for especificada, o mecanismo de validação irão se comportar da seguinte maneira.  
  
    2.  Se AllowXmlAttributes for definido como `true`, o mecanismo de validação usará o esquema do namespace de Xml padrão para executar a validação.  
  
    3.  Se AllowXmlAttributes for definido como `false`, o mecanismo de validação relatará um erro.  
  
    4.  Se um documento de instância contém um atributo Xml e o esquema especifica um curinga de atributo com processContents definido como "Ignorar", o mecanismo de validação ignorará a validação do atributo.  
  
    5.  Se um documento de instância contém um atributo Xml e o esquema especifica um curinga de atributo com processContents definido como "Incerto", o mecanismo de validação usará o esquema do namespace de Xml presente no <xref:System.Xml.Schema.XmlSchemaSet>. Se nenhum esquema de namespace de Xml for especificada, o mecanismo de validação irão se comportar da seguinte maneira.  
  
    6.  Se AllowXmlAttributes for definido como `true`, o mecanismo de validação usará o esquema do namespace de Xml padrão para executar a validação.  
  
    7.  Se AllowXmlAttributes for definido como `false`, validação de atributo não será executada.  
  
7.  Quando a validação de tipos simples.  
  
    1.  Quando AllowXmlAttributes é definida como `true` (padrão), atributos Xml serão permitidos em elementos de tipos simples.  
  
   
  
## Examples  
 Para obter um exemplo de <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> classe, consulte o <xref:System.Xml.Schema.XmlSchemaValidator> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
  </Docs>
  <Members>
    <Member MemberName="AllowXmlAttributes">
      <MemberSignature Language="C#" Value="AllowXmlAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberSignature Language="VB.NET" Value="AllowXmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="AllowXmlAttributes" />
      <MemberSignature Language="F#" Value="AllowXmlAttributes = 16" Usage="System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Permite atributos xml:* mesmo quando não estão definidos no esquema. Os atributos serão validados com base em seu tipo de dados.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Não processe restrições de identidade, esquemas embutidos, dicas de localização de esquema ou avisos de validação de esquema de relatório.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdentityConstraints">
      <MemberSignature Language="C#" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberSignature Language="VB.NET" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="C++ CLI" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="F#" Value="ProcessIdentityConstraints = 8" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Restrições de identidade do processo (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) encontradas durante a validação.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessInlineSchema">
      <MemberSignature Language="C#" Value="ProcessInlineSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberSignature Language="VB.NET" Value="ProcessInlineSchema" />
      <MemberSignature Language="C++ CLI" Value="ProcessInlineSchema" />
      <MemberSignature Language="F#" Value="ProcessInlineSchema = 1" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Esquemas embutidos do processo encontrados durante a validação.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessSchemaLocation">
      <MemberSignature Language="C#" Value="ProcessSchemaLocation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberSignature Language="VB.NET" Value="ProcessSchemaLocation" />
      <MemberSignature Language="C++ CLI" Value="ProcessSchemaLocation" />
      <MemberSignature Language="F#" Value="ProcessSchemaLocation = 2" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Dicas de localização de esquemas do processo (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) encontradas durante a validação.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReportValidationWarnings">
      <MemberSignature Language="C#" Value="ReportValidationWarnings" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberSignature Language="VB.NET" Value="ReportValidationWarnings" />
      <MemberSignature Language="C++ CLI" Value="ReportValidationWarnings" />
      <MemberSignature Language="F#" Value="ReportValidationWarnings = 4" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Avisos de validação de esquema de relatório encontrados durante a validação.</summary>
      </Docs>
    </Member>
  </Members>
</Type>