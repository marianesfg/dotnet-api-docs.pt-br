<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IContractBehavior.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72114f8a235597b1f1c6ee487226dbe4228db0eadf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">114f8a235597b1f1c6ee487226dbe4228db0eadf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implements methods that can be used to extend run-time behavior for a contract in either a service or client application.</source>
          <target state="translated">Implementa métodos que podem ser usados para estender o comportamento de tempo de execução de um contrato em um serviço ou aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> interface to modify, examine, or extend some aspect of contract-wide execution at the application level.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> interface para modificar, examinar ou estender algum aspecto da execução de todo o contrato no nível do aplicativo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Unlike <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objects, <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects cannot be added to the runtime using an application configuration file; they can only be added programmatically or using an attribute.</source>
          <target state="translated">Ao contrário de <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph> objetos, <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objetos não podem ser adicionados ao tempo de execução usando um arquivo de configuração do aplicativo; eles só podem ser adicionados programaticamente ou usando um atributo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information about choosing between service, endpoint, and contract behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como escolher entre o serviço de ponto de extremidade e comportamentos de contrato, consulte <bpt id="p1">[</bpt>Configurando e estendendo o tempo de execução com comportamentos<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with custom data to support the behavior.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> método para fornecer dados personalizados para suportar o comportamento de elementos de associação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a client application.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> método para modificar, examinar ou inserir extensões a um contrato em um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a contract in a service application.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> método para modificar, examinar ou inserir extensões a um contrato em um aplicativo de serviço.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to ensure that a contract can support a particular feature.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> método para garantir que um contrato pode dar suporte a um determinado recurso.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return without any value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> podem ser usados de qualquer um desses métodos, mas somente um é importante. Nesses casos, podem retornar os métodos não utilizados sem qualquer valor.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> as parameters.</source>
          <target state="translated">Todos os <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> métodos passam <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> e <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> como parâmetros.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>These parameters are for examination; if you modify the objects the execution behavior is undefined.</source>
          <target state="translated">Esses parâmetros são para exame; Se você modificar os objetos, o comportamento de execução é indefinido.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types can be used on either the service or the client, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> tipos podem ser usados no serviço ou cliente ou ambos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform a customization task on the service, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime, which occurs when the <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Para executar uma tarefa de personalização do serviço, o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objeto deve ser adicionado para o <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> propriedade antes da construção do tempo de execução de serviço, que ocorre quando o <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> método é chamado no <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this.</source>
          <target state="translated">Há duas formas de fazer isso.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The first method is to programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">O primeiro método é adicionar programaticamente o comportamento de contrato personalizados para o <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> propriedade antes do ponto quando o <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> método é chamado no <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>When applied this way, the behavior is applied for all messages flowing through that contract on any endpoint.</source>
          <target state="translated">Quando aplicado dessa forma, o comportamento é aplicado para todas as mensagens que passam por esse contrato em qualquer ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior is applied to all contracts of the same type.</source>
          <target state="translated">O comportamento é aplicado a todos os contratos do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For example, if you programmatically add the same contract type to more than one endpoint, the behavior modifies all endpoints that refer to the same contract object.</source>
          <target state="translated">Por exemplo, se você adicionar programaticamente o mesmo tipo de contrato para mais de um ponto de extremidade, o comportamento modifica todos os pontos de extremidade que se referem ao mesmo objeto de contrato.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The second method is to create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> and apply that to:</source>
          <target state="translated">O segundo método é criar um atributo personalizado que implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> e aplicar a:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">Uma interface de contrato.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint.</source>
          <target state="translated">Nesse caso, o comportamento é aplicado a todos os contratos desse tipo em qualquer ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">Uma classe de serviço.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all endpoints regardless of contract.</source>
          <target state="translated">Nesse caso, o comportamento é aplicado a todos os pontos de extremidade, independentemente do contrato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">Uma classe de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint.</source>
          <target state="translated">Nesse caso, o comportamento é aplicado ao ponto de extremidade do cliente duplex.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The behavior of the second approach varies slightly if the custom attribute also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O comportamento da segunda abordagem varia se o atributo personalizado também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is as follows:</source>
          <target state="translated">Nesse caso, o comportamento é o seguinte:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A contract interface.</source>
          <target state="translated">Uma interface de contrato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to all contracts of that type in any endpoint and <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ignores the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Nesse caso, o comportamento é aplicado a todos os contratos desse tipo em qualquer ponto de extremidade e <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> ignora o valor da <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A service class.</source>
          <target state="translated">Uma classe de serviço.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied only to endpoints the contract of which is the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Nesse caso, o comportamento é aplicado somente aos pontos de extremidade de contrato que é o valor da <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>A callback class.</source>
          <target state="translated">Uma classe de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>In this case, the behavior is applied to the duplex client's endpoint and WCF ignores the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Nesse caso, o comportamento é aplicado ao ponto de extremidade do cliente duplex e WCF ignora o valor da <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To perform the customization task on the client for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the construction of the client runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Para executar a tarefa de personalização no cliente para o qual é pretendido, o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> objeto deve ser adicionado para o <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> propriedade antes da construção do tempo de execução de cliente, que ocorre quando <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>There are two ways to do this:</source>
          <target state="translated">Há duas formas de fazer isso:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Programmatically add the custom contract behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> property prior to the point when the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">Adicionar programaticamente o comportamento de contrato personalizados para o <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A&gt;</ph> propriedade antes do ponto quando o <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>Create a custom attribute that also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.</source>
          <target state="translated">Criar um atributo personalizado que também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>For more information on programmatically adding <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> types to either the client or service application, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como adicionar programaticamente <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> tipos ao aplicativo cliente ou serviço, consulte <bpt id="p1">[</bpt>Configurando e estendendo o tempo de execução com comportamentos<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">O exemplo de código a seguir pressupõe um personalizado <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementação chamado <ph id="ph2">`ObjectProviderBehavior`</ph> que fornece um comportamento de "simples"; ele sempre retorna a mesma instância de serviço e não reciclar.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Para inserir a personalização do provedor de instância, o exemplo mostra como implementar um atributo personalizado (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) que implementa <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> para inserir o provedor de instância de serviço personalizado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehavior">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">Ele também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, que associa o seu uso para o <ph id="ph2">`ISampleService`</ph> contrato.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The contract description to modify.</source>
          <target state="translated">A descrição do contrato a ser modificada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The endpoint to modify.</source>
          <target state="translated">O ponto de extremidade a ser modificado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The objects that binding elements require to support the behavior.</source>
          <target state="translated">Os objetos que os elementos de associação necessitam para oferecer suporte ao comportamento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Configures any binding elements to support the contract behavior.</source>
          <target state="translated">Configura quaisquer elementos de associação para dar suporte ao comportamento de contrato.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the contract behavior.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.AddBindingParameters%2A&gt;</ph> método para fornecer elementos de associação com os objetos adicionais necessários para dar suporte o comportamento de contrato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Esse método é chamado uma vez para cada ponto de extremidade que usa o contrato de serviço especificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The contract description for which the extension is intended.</source>
          <target state="translated">A descrição do contrato ao qual a extensão se destina.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The endpoint.</source>
          <target state="translated">O ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The client runtime.</source>
          <target state="translated">O tempo de execução do cliente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">Implementa uma modificação ou a extensão do cliente em um contrato.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add custom extensions to the client runtime across all messages or for one specific operation.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> método para exibir, modificar ou adicionar extensões personalizadas no tempo de execução do cliente em todas as mensagens ou para uma operação específica.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">Para obter detalhes sobre as personalizações que você pode fazer com que um objeto de tempo de execução do cliente, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a service application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior%2A&gt;</ph> método pode acionar um <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exceção se o comportamento é destinado somente para uso em um aplicativo de serviço.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Esse método é chamado uma vez para cada ponto de extremidade que usa o contrato de serviço especificado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> property.</source>
          <target state="translated">Observe que pode haver duas operações com o mesmo nome na descrição (um em cada direção), para que se deve iterar por meio de operações em que o contrato é um contrato duplex, você deve correlacionar a direção de mensagem entre o ponto de extremidade <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> e retornado pelo <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>Because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in the description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">Como outros comportamentos tenha já adicionado ou removido algumas operações de tempo de execução, não há nenhuma garantia de que há o mesmo número de operações na descrição de como existem <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objetos no <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">O exemplo de código a seguir pressupõe um personalizado <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementação chamado <ph id="ph2">`ObjectProviderBehavior`</ph> que fornece um comportamento de "simples"; ele sempre retorna a mesma instância de serviço e não reciclar.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Para inserir a personalização do provedor de instância, o exemplo mostra como implementar um atributo personalizado (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) que implementa <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> para inserir o provedor de instância de serviço personalizado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">Ele também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, que associa o seu uso para o <ph id="ph2">`ISampleService`</ph> contrato.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The contract description to be modified.</source>
          <target state="translated">A descrição de contrato a ser modificada.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The endpoint that exposes the contract.</source>
          <target state="translated">O ponto de extremidade que expõe o contrato.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The dispatch runtime that controls service execution.</source>
          <target state="translated">O tempo de execução de expedição que controla a execução do serviço.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implements a modification or extension of the client across a contract.</source>
          <target state="translated">Implementa uma modificação ou a extensão do cliente em um contrato.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> to view, modify, or add custom extensions to the service runtime across all messages in a specific contract or for one specific operation in that contract.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> para exibir, modificar ou adicionar extensões personalizadas no tempo de execução do serviço em todas as mensagens em um contrato específico ou para uma operação específica no contrato.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>For details about what customizations you can perform in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
          <target state="translated">Para obter detalhes sobre as personalizações que você pode executar em um aplicativo de serviço, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> e <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> method can throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior%2A&gt;</ph> método pode acionar um <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exceção se o comportamento é destinado somente para uso em um aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Esse método é chamado uma vez para cada ponto de extremidade que usa o contrato de serviço especificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>Note that there can be two operations with the same name in the description (one in each direction), so if you must iterate through operations where the contract is a duplex contract, you must correlate the message direction between the endpoint <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and that returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> property.</source>
          <target state="translated">Observe que pode haver duas operações com o mesmo nome na descrição (um em cada direção), para que se deve iterar por meio de operações em que o contrato é um contrato duplex, você deve correlacionar a direção de mensagem entre o ponto de extremidade <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> e retornado pelo <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">Além disso, como outros comportamentos tenha já adicionado ou removido algumas operações de tempo de execução, não há nenhuma garantia de que há o mesmo número de operações na descrição de como existem <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> objetos no <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">O exemplo de código a seguir pressupõe um personalizado <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> implementação chamado <ph id="ph2">`ObjectProviderBehavior`</ph> que fornece um comportamento de "simples"; ele sempre retorna a mesma instância de serviço e não reciclar.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Para inserir a personalização do provedor de instância, o exemplo mostra como implementar um atributo personalizado (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) que implementa <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> para inserir o provedor de instância de serviço personalizado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its use to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">Ele também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, que associa o seu uso para o <ph id="ph2">`ISampleService`</ph> contrato.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The contract to validate.</source>
          <target state="translated">O contrato a ser validado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint to validate.</source>
          <target state="translated">O ponto de extremidade a ser validado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement to confirm that the contract and endpoint can support the contract behavior.</source>
          <target state="translated">Implemente para confirmar que o contrato e o ponto de extremidade são compatíveis com o comportamento de contrato.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> method to confirm that the contract description is sufficient to support the custom contract behavior.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior.Validate%2A&gt;</ph> método para confirmar que a descrição do contrato é suficiente para suportar o comportamento de contrato personalizados.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Implementations can inspect the description and either throw or return no value.</source>
          <target state="translated">Implementações podem inspecionar a descrição e o lançar ou nenhum valor de retorno.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
          <source>This method is called once for each endpoint that uses the specified service contract.</source>
          <target state="translated">Esse método é chamado uma vez para cada ponto de extremidade que usa o contrato de serviço especificado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>