<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RoutingService.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d3f1b7c4779ded46e8f047f8707f2975729ebe1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d3f1b7c4779ded46e8f047f8707f2975729ebe1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Routing.RoutingService">
          <source>Defines the routing service, which is responsible for routing messages between endpoints based on filter criteria.</source>
          <target state="translated">Define o serviço de roteamento, responsável pelo roteamento de mensagens entre pontos de extremidade com base em critérios de filtro.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose">
          <source>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</source>
          <target state="translated">Realiza tarefas definidas pelo aplicativo associadas à liberação ou à redefinição de recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be processed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> a ser processado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the message processing has completed.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> invocado após a conclusão do processamento da mensagem.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Begins the asynchronous processing of the message.</source>
          <target state="translated">Inicia o processamento assíncrono da mensagem.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>For more information on using the IDuplexSessionRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de IDuplexSessionRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retornado pela chamada ao <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
          <source>Completes the asynchronous execution of message processing.</source>
          <target state="translated">Completa a execução assíncrona de processamento de mensagens.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
          <source>For more information on using the IDuplexSessionRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de IDuplexSessionRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IDuplexSessionRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be processed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> a ser processado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the message processing has completed.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> invocado após a conclusão do processamento da mensagem.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous processing of the message.</source>
          <target state="translated">Inicia o processamento assíncrono da mensagem.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>For more information on using the IRequestReplyRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IRequestReplyRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de IRequestReplyRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IRequestReplyRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retornado pela chamada ao <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)">
          <source>Finishes asynchronous execution of message processing.</source>
          <target state="translated">Conclui a execução assíncrona de processamento de mensagens.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that contains the reply.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> que contém a resposta.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)">
          <source>For more information on using the IRequestReplyRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IRequestReplyRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de IRequestReplyRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.IRequestReplyRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be processed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> a ser processado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the message processing has completed.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> invocado após a conclusão do processamento da mensagem.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous processing of the message.</source>
          <target state="translated">Inicia o processamento assíncrono da mensagem.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>For more information on using the ISimplexDatagramRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de ISimplexDatagramRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retornado pela chamada ao <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)">
          <source>Finishes asynchronous execution of message processing.</source>
          <target state="translated">Conclui a execução assíncrona do processamento de mensagens.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)">
          <source>For more information on using the ISimplexDatagramRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de ISimplexDatagramRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexDatagramRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be processed.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> a ser processado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the message processing has completed.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> invocado após a conclusão do processamento da mensagem.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Um objeto de estado definido pelo usuário passado para o procedimento de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous processing of the message.</source>
          <target state="translated">Inicia o processamento assíncrono da mensagem.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que pode ser usado para sondar ou aguardar resultados ou ambos. Esse valor também é necessário ao invocar <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>For more information on using the ISimplexSessionRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexSessionRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de ISimplexSessionRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexSessionRouter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retornado pela chamada ao <ph id="ph2">&lt;see cref="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
          <source>Finishes asynchronous execution of message processing.</source>
          <target state="translated">Conclui a execução assíncrona do processamento de mensagens.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
          <source>For more information on using the ISimplexSessionRouter contract, see <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexSessionRouter&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como usar o contrato de ISimplexSessionRouter, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Routing.ISimplexSessionRouter&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>