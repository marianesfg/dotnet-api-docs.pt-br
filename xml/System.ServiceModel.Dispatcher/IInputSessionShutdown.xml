<Type Name="IInputSessionShutdown" FullName="System.ServiceModel.Dispatcher.IInputSessionShutdown">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2f7c673a99ba91e8ae138d97330caeec0617619" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36415531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInputSessionShutdown" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputSessionShutdown" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputSessionShutdown" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInputSessionShutdown" />
  <TypeSignature Language="F#" Value="type IInputSessionShutdown = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5e7f3-101">Define o contrato que deve ser implementado para encerrar uma sessão de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e7f3-101">Defines the contract that must be implemented to shut down an input session.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e7f3-102">Use o <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> interface dentro de uma sessão duplex para enviar mensagens de saída antes de fechar a sessão.</span><span class="sxs-lookup"><span data-stu-id="5e7f3-102">Use the <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> interface inside a duplex session to send outbound messages prior to closing the session.</span></span> <span data-ttu-id="5e7f3-103">Por exemplo, se um cliente fecha uma sessão pode implementar o serviço <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving%2A> para ser notificado antes do desligamento, habilitando o serviço enviar uma mensagem de notificação antes de retornar.</span><span class="sxs-lookup"><span data-stu-id="5e7f3-103">For example, if a client closes a session the service can implement <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving%2A> to be notified prior to the shutdown, enabling the service to send one notification message prior to returning.</span></span> <span data-ttu-id="5e7f3-104">O cliente recebe a notificação antes da confirmação de que o cliente pode fechar o canal.</span><span class="sxs-lookup"><span data-stu-id="5e7f3-104">The client receives the notification prior to the acknowledgment that the client can close the channel.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChannelFaulted">
      <MemberSignature Language="C#" Value="public void ChannelFaulted (System.ServiceModel.IDuplexContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChannelFaulted(class System.ServiceModel.IDuplexContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChannelFaulted (channel As IDuplexContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChannelFaulted(System::ServiceModel::IDuplexContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="abstract member ChannelFaulted : System.ServiceModel.IDuplexContextChannel -&gt; unit" Usage="iInputSessionShutdown.ChannelFaulted channel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IDuplexContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="5e7f3-105">O <see cref="T:System.ServiceModel.IDuplexContextChannel" /> que apresentou falha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e7f3-105">The <see cref="T:System.ServiceModel.IDuplexContextChannel" /> that has faulted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e7f3-106">Indica que houve falha no canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e7f3-106">Indicates that the channel has faulted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e7f3-107">Use o <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted%2A> método para executar alguns comportamentos personalizados quando um canal foi interrompido.</span><span class="sxs-lookup"><span data-stu-id="5e7f3-107">Use the <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted%2A> method to perform some custom behavior when a channel has faulted.</span></span> <span data-ttu-id="5e7f3-108">Normalmente, o canal foi anulado.</span><span class="sxs-lookup"><span data-stu-id="5e7f3-108">Typically, the channel is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoneReceiving">
      <MemberSignature Language="C#" Value="public void DoneReceiving (System.ServiceModel.IDuplexContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoneReceiving(class System.ServiceModel.IDuplexContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoneReceiving (channel As IDuplexContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoneReceiving(System::ServiceModel::IDuplexContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="abstract member DoneReceiving : System.ServiceModel.IDuplexContextChannel -&gt; unit" Usage="iInputSessionShutdown.DoneReceiving channel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IDuplexContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="5e7f3-109">O <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> que concluiu o recebimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e7f3-109">The <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that is done receiving.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5e7f3-110">Indica quando o canal do cliente terminou de receber mensagens como parte da troca de mensagens duplex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e7f3-110">Indicates when the client channel is done receiving messages as part of the duplex message exchange.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>