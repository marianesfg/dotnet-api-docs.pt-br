<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dad5e141479796dd737e2665a74ecbfdfd17ee12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316210" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="79f04-101">Classe base abstrata para o dispatcher de canal que aceita os canais e os associa com um serviço.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79f04-101">Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f04-102">Isso é usado por desenvolvedores que desejam manter o modelo de programação do Windows Communication Foundation (WCF), mas substitua o tempo de execução fornecida pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="79f04-102">This is used by developers who want to keep the Windows Communication Foundation (WCF) programming model but replace the system-provided runtime.</span></span> <span data-ttu-id="79f04-103">Esses aplicativos serão pull das mensagens fora de canais e tratá-los diretamente com distribuidores definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="79f04-103">Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</span></span> <span data-ttu-id="79f04-104">Para usar <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , crie uma classe derivada, estender <xref:System.ServiceModel.ServiceHost> e substituir <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adicionando instâncias de sua classe derivada de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> para <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span><span class="sxs-lookup"><span data-stu-id="79f04-104">To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span></span>  
  
 <span data-ttu-id="79f04-105">O <xref:System.ServiceModel.Channels.IChannelListener> e o <xref:System.ServiceModel.ServiceHost>, associados a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objeto estão disponíveis para a inspeção ou modificação por meio de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectivamente.</span><span class="sxs-lookup"><span data-stu-id="79f04-105">The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.</span></span>  
  
 <span data-ttu-id="79f04-106"><xref:System.ServiceModel.ServiceHost> chamadas de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> ou <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> métodos ao adicionar ou remover um <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> de item de seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="79f04-106"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 <span data-ttu-id="79f04-107"><xref:System.ServiceModel.ServiceHost> chamadas de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> durante o desligamento antes de fechar InstanceContexts.</span><span class="sxs-lookup"><span data-stu-id="79f04-107"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts.</span></span> <span data-ttu-id="79f04-108">Windows Communication Foundation (WCF) usa essa chamada para fechar canais de datagrama e aguarde até que todas as mensagens obter um InstanceContext.</span><span class="sxs-lookup"><span data-stu-id="79f04-108">Windows Communication Foundation (WCF) uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79f04-109">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="79f04-110">O <see cref="T:System.ServiceModel.ServiceHostBase" /> do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-110">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f04-111">Quando substituído em uma classe derivada, anexa o dispatcher do canal a um host específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-111">When overridden in a derived class, attaches the channel dispatcher to a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f04-112">Esse método só pode ser definido quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="79f04-112">This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="79f04-113">Um <xref:System.ServiceModel.ServiceHost> chama este método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> é adicionado ao seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="79f04-113">A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  <span data-ttu-id="79f04-114">Isso fornece o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance de vincular eventos e inspecione o <xref:System.ServiceModel.ServiceHost>e fornece o valor que deve ser retornado o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="79f04-114">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79f04-115">
            <paramref name="host" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-115">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79f04-116">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou o host já está definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-116">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="79f04-117">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-117">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="79f04-118">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-118">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79f04-119">Quando substituído em uma classe derivada, remove os dispatchers de ponto de extremidade associados ao dispatcher de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-119">When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f04-120"><xref:System.ServiceModel.ServiceHost> chama esse método durante o desligamento para dar o dispatcher uma chance para que as mensagens.</span><span class="sxs-lookup"><span data-stu-id="79f04-120"><xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages.</span></span> <span data-ttu-id="79f04-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> usa essa chamada para fechar canais de datagrama.</span><span class="sxs-lookup"><span data-stu-id="79f04-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="79f04-122">O <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-122">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f04-123">Quando substituído em uma classe derivada, desanexa o dispatcher do canal de um host específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-123">When overridden in a derived class, detaches the channel dispatcher from a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f04-124">O <xref:System.ServiceModel.ServiceHostBase> só pode ser desanexado quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="79f04-124">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="79f04-125">Deve definir o <xref:System.ServiceModel.ServiceHostBase> associado com o distribuidor de canal para `null`.</span><span class="sxs-lookup"><span data-stu-id="79f04-125">Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
 <span data-ttu-id="79f04-126"><xref:System.ServiceModel.ServiceHost> chama esse método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> é removido do seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="79f04-126"><xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span> <span data-ttu-id="79f04-127">Isso fornece o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance de remover eventos e inspecione o <xref:System.ServiceModel.ServiceHost>.</span><span class="sxs-lookup"><span data-stu-id="79f04-127">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79f04-128">
            <paramref name="host" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-128">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79f04-129">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou o host já está definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="79f04-130">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="79f04-131">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79f04-132">Quando substituído em uma classe derivada, obtém o host de serviço associado com o dispatcher de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-132">When overridden in a derived class, gets the service host associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79f04-133">O <see cref="T:System.ServiceModel.ServiceHostBase" /> para o serviço associado com o distribuidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-133">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f04-134">Cada <xref:System.ServiceModel.ServiceHost> objeto pode ter muitos <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objetos, cada um associado com outro <xref:System.ServiceModel.Channels.IChannelListener> para esse serviço.</span><span class="sxs-lookup"><span data-stu-id="79f04-134">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span> <span data-ttu-id="79f04-135">O host mantém uma lista desses <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objetos no <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.</span><span class="sxs-lookup"><span data-stu-id="79f04-135">The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79f04-136">Quando substituído em uma classe derivada, obtém o ouvinte de canais associado com o dispatcher de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-136">When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79f04-137">O <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associado com o distribuidor de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f04-137">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f04-138">Um <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associa um <xref:System.ServiceModel.Channels.IChannelListener> cujo canais e mensagens isso <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> está distribuindo.</span><span class="sxs-lookup"><span data-stu-id="79f04-138">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>