<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f11b9d85cad26795cfc2ff3756f71132472a2e9d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37616330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe base abstrata para o dispatcher de canal que aceita os canais e os associa com um serviço.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso é usado por desenvolvedores que desejam manter o modelo de programação do Windows Communication Foundation (WCF), mas substitua o tempo de execução fornecida pelo sistema. Esses aplicativos serão extrair mensagens de canais e manipulá-las diretamente com os dispatchers definidos pelo usuário. Para usar <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , crie uma classe derivada dela, estender <xref:System.ServiceModel.ServiceHost> e substituir <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adicionar instâncias de sua classe derivada de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> para <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 O <xref:System.ServiceModel.Channels.IChannelListener> e o <xref:System.ServiceModel.ServiceHost>, associados a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objeto estão disponíveis para inspeção ou modificação por meio do <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectivamente.  
  
 <xref:System.ServiceModel.ServiceHost> chamadas a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> ou <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> métodos quando adicionar ou remover um <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> do item de seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.  
  
 <xref:System.ServiceModel.ServiceHost> chamadas a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> durante o desligamento antes de fechar InstanceContexts. Windows Communication Foundation (WCF) usa essa chamada para fechar os canais de datagrama e aguarde até que todas as mensagens obter um InstanceContext.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">O <see cref="T:System.ServiceModel.ServiceHostBase" /> do serviço.</param>
        <summary>Quando substituído em uma classe derivada, anexa o dispatcher do canal a um host específico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método só pode ser definido quando a instância das <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.  
  
 Um <xref:System.ServiceModel.ServiceHost> chama esse método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> é adicionado ao seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.  Isso fornece o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> oportunidade de se vincular eventos e inspecione o <xref:System.ServiceModel.ServiceHost>e fornece o valor que deve ser retornado do <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou o host já está definido.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, remove os dispatchers de ponto de extremidade associados ao dispatcher de canal.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHost> chama esse método durante o desligamento para permitir que o dispatcher para esvaziar as mensagens. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> usa essa chamada para fechar os canais de datagrama.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">O <see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
        <summary>Quando substituído em uma classe derivada, desanexa o dispatcher do canal de um host específico.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.ServiceHostBase> só pode ser desanexado quando a instância das <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.  
  
 Defina a <xref:System.ServiceModel.ServiceHostBase> associado com o dispatcher do canal `null`.  
  
 <xref:System.ServiceModel.ServiceHost> chama esse método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> é removido do seu <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção. Isso fornece o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> oportunidade de desencaixe de eventos e inspecione o <xref:System.ServiceModel.ServiceHost>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" /> ou o host já está definido.</exception>
        <exception cref="T:System.ObjectDisposedException">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o host de serviço associado com o dispatcher de canal.</summary>
        <value>O <see cref="T:System.ServiceModel.ServiceHostBase" /> para o serviço associado ao dispatcher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.ServiceModel.ServiceHost> objeto pode ter muitas <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objetos, cada um associado a um com outro <xref:System.ServiceModel.Channels.IChannelListener> para o serviço. O host mantém uma lista desses <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objetos no <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando substituído em uma classe derivada, obtém o ouvinte de canais associado com o dispatcher de canal.</summary>
        <value>O <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associado com o dispatcher do canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associa um <xref:System.ServiceModel.Channels.IChannelListener> cuja os canais e mensagens isso <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> está distribuindo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>