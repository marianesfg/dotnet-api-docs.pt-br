<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e764d8c47caf6ddf0e2748dedaba492a73bc67b1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30517460" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="40092-101">Define os métodos que permitem que um aplicativo cliente exiba uma interface do usuário para coletar informações de identidade antes de criar o canal.</span>
      <span class="sxs-lookup">
        <span data-stu-id="40092-101">Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40092-102">Implementar o <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface para habilitar um aplicativo cliente para exibir uma interface de usuário que permite que o usuário do aplicativo criar ou selecionar as credenciais antes de abrir um canal.</span><span class="sxs-lookup"><span data-stu-id="40092-102">Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.</span></span>  
  
 <span data-ttu-id="40092-103">Para implementar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, execute as seguintes etapas no <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="40092-103">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="40092-104">Solicitar ao usuário e obter um apropriado <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="40092-104">Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="40092-105">Adicionar um objeto de parâmetro de canal personalizado para a coleção retornada pelo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> método sobre o <xref:System.ServiceModel.IClientChannel> objeto com um parâmetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="40092-105">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="40092-106">Esse objeto de parâmetro do canal é usado por personalizado <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> para estabelecer os tokens de segurança para o canal.</span><span class="sxs-lookup"><span data-stu-id="40092-106">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="40092-107">Retorne.</span><span class="sxs-lookup"><span data-stu-id="40092-107">Return.</span></span>  
  
 <span data-ttu-id="40092-108">Para inserir <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:</span><span class="sxs-lookup"><span data-stu-id="40092-108">To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:</span></span>  
  
1.  <span data-ttu-id="40092-109">Substituir o <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> método sobre o <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> classe.</span><span class="sxs-lookup"><span data-stu-id="40092-109">Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> class.</span></span>  
  
2.  <span data-ttu-id="40092-110">Nesse método, determine se o ponto de extremidade requer uma <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> e nesse caso, adicione o <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> para o <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> coleção.</span><span class="sxs-lookup"><span data-stu-id="40092-110">In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> collection.</span></span>  
  
 <span data-ttu-id="40092-111">Há duas maneiras que os desenvolvedores de aplicativos podem fazer usam de um inserido <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>.</span><span class="sxs-lookup"><span data-stu-id="40092-111">There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>.</span></span> <span data-ttu-id="40092-112">O aplicativo cliente pode chamar tanto <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (ou uma versão assíncrona) antes de abrir o canal (o *explícita* abordagem) ou simplesmente chamar a primeira operação (o *implícita* abordagem).</span><span class="sxs-lookup"><span data-stu-id="40092-112">The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).</span></span>  
  
 <span data-ttu-id="40092-113">Se usar a abordagem implícita, o aplicativo deve chamar a primeira operação em um <xref:System.ServiceModel.ClientBase%601> ou <xref:System.ServiceModel.IClientChannel> extensão.</span><span class="sxs-lookup"><span data-stu-id="40092-113">If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension.</span></span> <span data-ttu-id="40092-114">Se ele chama qualquer coisa que não seja a primeira operação, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="40092-114">If it calls anything other than the first operation, an exception is thrown.</span></span>  
  
 <span data-ttu-id="40092-115">Se usar a abordagem explícita, o aplicativo deve executar as seguintes etapas na ordem:</span><span class="sxs-lookup"><span data-stu-id="40092-115">If using the explicit approach, the application must perform the following steps in order:</span></span>  
  
1.  <span data-ttu-id="40092-116">Chame <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (ou uma versão assíncrona).</span><span class="sxs-lookup"><span data-stu-id="40092-116">Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version).</span></span>  
  
2.  <span data-ttu-id="40092-117">Quando os inicializadores tem retornado, chame o <xref:System.ServiceModel.ICommunicationObject.Open%2A> método no <xref:System.ServiceModel.IClientChannel> objeto ou no <xref:System.ServiceModel.IClientChannel> objeto retornado do <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="40092-117">When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="40092-118">Chamar as operações.</span><span class="sxs-lookup"><span data-stu-id="40092-118">Call operations.</span></span>  
  
 <span data-ttu-id="40092-119">É recomendável que controlam aplicativos de qualidade de produção do processo de interface do usuário, adotando a abordagem explícita.</span><span class="sxs-lookup"><span data-stu-id="40092-119">It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.</span></span>  
  
 <span data-ttu-id="40092-120">Aplicativos que usam a abordagem implícita invocar os inicializadores de interface do usuário, mas se o usuário do aplicativo não responder dentro do período de tempo limite de envio da associação, uma exceção é lançada quando a interface do usuário retorna.</span><span class="sxs-lookup"><span data-stu-id="40092-120">Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="40092-121">O canal do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-121">The client channel.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="40092-122">O objeto de retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-122">The callback object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="40092-123">Quaisquer dados de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-123">Any state data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40092-124">Uma chamada assíncrona para começar a usar uma interface do usuário para obter informações de credenciais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-124">An asynchronous call to begin using a user interface to obtain credential information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40092-125">O <see cref="T:System.IAsyncResult" /> a usar para retorno de chamada após a conclusão do processamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-125">The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40092-126">Para implementar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, execute as seguintes etapas no <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="40092-126">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="40092-127">Solicitar ao usuário o que forma você achar mais conveniente e obter adequados <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="40092-127">Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="40092-128">Adicionar um objeto de parâmetro de canal personalizado para a coleção retornada pelo <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> método sobre o <xref:System.ServiceModel.IClientChannel> objeto com um parâmetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="40092-128">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="40092-129">Esse objeto de parâmetro do canal é usado por personalizado <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> para estabelecer os tokens de segurança para o canal.</span><span class="sxs-lookup"><span data-stu-id="40092-129">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="40092-130">Retorne.</span><span class="sxs-lookup"><span data-stu-id="40092-130">Return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="40092-131">O <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-131">The <see cref="T:System.IAsyncResult" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40092-132">Chamado quando o <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> é concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40092-132">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> has finished.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>