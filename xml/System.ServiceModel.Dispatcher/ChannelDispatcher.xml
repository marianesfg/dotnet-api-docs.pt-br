<Type Name="ChannelDispatcher" FullName="System.ServiceModel.Dispatcher.ChannelDispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1212f4a3ae3d1bc89f872c2a7431978ac159be2f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36615049" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelDispatcher extends System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelDispatcher&#xA;Inherits ChannelDispatcherBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcher : System::ServiceModel::Dispatcher::ChannelDispatcherBase" />
  <TypeSignature Language="F#" Value="type ChannelDispatcher = class&#xA;    inherit ChannelDispatcherBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ChannelDispatcherBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="86b0e-101">Um componente que aceita canais e os associa a um serviço.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86b0e-101">A component that accepts channels and associates them with a service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-102">Um <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objeto associa um <xref:System.ServiceModel.Channels.IChannelListener> em um URI específico (chamado de um URI de escuta) com uma instância de um serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-102">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service.</span></span> <span data-ttu-id="86b0e-103">Cada <xref:System.ServiceModel.ServiceHost> objeto pode ter muitos <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objetos, cada um associado com um ouvinte diferente e URI de escuta para esse serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-103">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.</span></span>  
  
 <span data-ttu-id="86b0e-104">Quando uma mensagem chega, o <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> consulta cada um dos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objetos se o ponto de extremidade pode aceitar a mensagem e passa a mensagem para aquele que pode.</span><span class="sxs-lookup"><span data-stu-id="86b0e-104">When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can.</span></span> <span data-ttu-id="86b0e-105">O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objeto é responsável pelo processamento de mensagens de um <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> quando o endereço de destino de uma mensagem corresponde a <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> propriedade e as correspondências de ação de mensagem de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="86b0e-105">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.</span></span>  
  
 <span data-ttu-id="86b0e-106">Todas as propriedades que controlam o comportamento de uma sessão de canal e tempo de vida estão disponíveis para a inspeção ou modificação no <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objeto.</span><span class="sxs-lookup"><span data-stu-id="86b0e-106">All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object.</span></span> <span data-ttu-id="86b0e-107">Além de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, eles incluem personalizado <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objetos, o <xref:System.ServiceModel.Channels.IChannelListener>, o <xref:System.ServiceModel.ServiceHost>, associado e <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="86b0e-107">In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]
 [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-108">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher listener" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="86b0e-109">O <see cref="T:System.ServiceModel.Channels.IChannelListener" /> para o dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-109">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-110">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-111">Inicializa uma nova instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> classe do ouvinte fornecido, com limites padrão fornecido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="86b0e-111">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]
 [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86b0e-112">
            <paramref name="listener" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-112">
              <paramref name="listener" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener * string -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher (listener, bindingName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="86b0e-113">O <see cref="T:System.ServiceModel.Channels.IChannelListener" /> para o dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-113">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span>
          </span>
        </param>
        <param name="bindingName">
          <span data-ttu-id="86b0e-114">O nome da associação usada para configurar o serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-114">The name of the binding used to configure the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-115">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-116">Inicializa uma nova instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> classe do ouvinte fornecido e associação, com limites padrão fornecido pelo sistema.</span><span class="sxs-lookup"><span data-stu-id="86b0e-116">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]
 [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86b0e-117">
            <paramref name="listener" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-117">
              <paramref name="listener" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName, class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String, timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName, System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener * string * System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher (listener, bindingName, timeouts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="86b0e-118">O <see cref="T:System.ServiceModel.Channels.IChannelListener" /> do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-118">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the service.</span>
          </span>
        </param>
        <param name="bindingName">
          <span data-ttu-id="86b0e-119">O nome da associação usada para configurar o serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-119">The name of the binding used to configure the service.</span>
          </span>
        </param>
        <param name="timeouts">
          <span data-ttu-id="86b0e-120">O <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-120">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-121">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-122">Inicializa uma nova instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> classe do ouvinte fornecido e associação com os limites padrão especificado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-122">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]
 [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86b0e-123">
            <paramref name="listener" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-123">
              <paramref name="listener" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousTransactedAcceptEnabled">
      <MemberSignature Language="C#" Value="public bool AsynchronousTransactedAcceptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AsynchronousTransactedAcceptEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsynchronousTransactedAcceptEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsynchronousTransactedAcceptEnabled : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-124">Obtém um valor que indica se as chamadas do método accept transacionadas no ouvinte são assíncronas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-124">Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-125">
            <see langword="true" /> Se aceitar o transacionado chamadas de método no ouvinte são assíncronas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-125">
              <see langword="true" /> if the transacted accept method calls on listener are asynchronous; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected override void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcher.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="86b0e-126">O <see cref="T:System.ServiceModel.ServiceHostBase" /> do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-126">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-127">Anexa o dispatcher do canal ao host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-127">Attaches the channel dispatcher to the host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-128">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-128">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-129">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-130">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-131">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindingName">
      <MemberSignature Language="C#" Value="public string BindingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingName : string" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-132">Obtém o nome da associação usada para configurar o serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-132">Gets the name of the binding used to configure the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-133">O nome da associação do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-133">The binding name of the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-134">Usado para obter o nome da associação para a associação ao qual esse distribuidor de canal está associado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-134">Used to obtain the binding name for the binding with which this channel dispatcher is associated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]
 [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelInitializers : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-135">Obtém um conjunto de objetos <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> que você pode usar para inspecionar e adicionar o estado para canais quando eles são criados pela primeira vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-135">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects that you can use to inspect and add state to channels when they are first created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-136">Um <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> do tipo <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-136">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-137">Use essa propriedade para inserir um inicializador de canal personalizado para a coleção de inicialização para inspecionar ou modificar o estado do canal quando eles são criados.</span><span class="sxs-lookup"><span data-stu-id="86b0e-137">Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.</span></span> <span data-ttu-id="86b0e-138">Isso também é útil para executar o mesmo comportamento em canais de saída, se o contrato associado com um distribuidor é um contrato duplex.</span><span class="sxs-lookup"><span data-stu-id="86b0e-138">This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]
 [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public override void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CloseInput();" />
      <MemberSignature Language="F#" Value="override this.CloseInput : unit -&gt; unit" Usage="channelDispatcher.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-139">Interrompe a aceitação de novos canais pelo ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-139">Stops the listener from accepting new channels.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-140">Chamar esse método interrompe o ouvinte escuta.</span><span class="sxs-lookup"><span data-stu-id="86b0e-140">Calling this method stops the listener listening.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-141">Obtém o intervalo de tempo padrão permitido para o fechamento do dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-141">Gets the default interval of time allowed for the channel dispatcher to close.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-142">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para o distribuidor de canal fechar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-142">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-143">Tempo limite de fechamento esse padrão pode ser definido usando <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span><span class="sxs-lookup"><span data-stu-id="86b0e-143">This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="86b0e-144">Caso contrário, é usado um valor de padrão de modelo de serviço de 1 minuto.</span><span class="sxs-lookup"><span data-stu-id="86b0e-144">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-145">Obtém o intervalo de tempo padrão permitido para a abertura do dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-145">Gets the default interval of time allowed for the channel dispatcher to open.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-146">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para o distribuidor de canal fechar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-146">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-147">Esse limite de abrir do padrão pode ser definido usando <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span><span class="sxs-lookup"><span data-stu-id="86b0e-147">This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="86b0e-148">Caso contrário, é usado um valor de padrão de modelo de serviço de 1 minuto.</span><span class="sxs-lookup"><span data-stu-id="86b0e-148">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected override void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcher.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="86b0e-149">O <see cref="T:System.ServiceModel.ServiceHostBase" /> do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-149">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-150">Desanexa o host de serviço do dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-150">Detaches the service host from the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-151">O <xref:System.ServiceModel.ServiceHostBase> só pode ser desanexado quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-151">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="86b0e-152">Conjuntos de <xref:System.ServiceModel.ServiceHostBase> associado com o distribuidor de canal para `null`.</span><span class="sxs-lookup"><span data-stu-id="86b0e-152">Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]
 [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86b0e-153">
            <paramref name="host" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-153">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-154">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-154">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-155">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-155">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-156">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-156">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoints As SynchronizedCollection(Of EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ Endpoints { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Endpoints : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-157">Obtém os dispatchers de ponto de extremidade que encaminham mensagens para os pontos de extremidade de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-157">Gets the endpoint dispatchers which forward messages to the channel endpoints.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-158">Um <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> de <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> que encaminhar mensagens para os pontos de extremidade de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-158">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> which forward messages to the channel endpoints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-159">O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> tem um distintos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para cada ponto de extremidade de canal pode dar suporte.</span><span class="sxs-lookup"><span data-stu-id="86b0e-159">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.</span></span>  
  
 <span data-ttu-id="86b0e-160">Use o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para obter acesso a propriedades de tempo de execução que permitem personalizar o tempo de execução em um ponto de extremidade inteiro.</span><span class="sxs-lookup"><span data-stu-id="86b0e-160">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]
 [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandlers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorHandlers As Collection(Of IErrorHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ ErrorHandlers { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorHandlers : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-161">Obtém um conjunto de <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objetos que podem ser usados para inserir a funcionalidade de tratamento de erro personalizado em um ponto de extremidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-161">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-162">Um <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> de objetos <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-162">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]
 [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-163">Obtém o host para o serviço associado ao dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-163">Gets the host for the service associated with the dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-164">O <see cref="T:System.ServiceModel.ServiceHostBase" /> para o serviço associado com o distribuidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-164">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-165">Cada <xref:System.ServiceModel.ServiceHost> objeto pode ter muitos <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objetos, cada um associado com outro <xref:System.ServiceModel.Channels.IChannelListener> para esse serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-165">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]
 [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-166">Obtém ou define um valor que indica se detalhes sobre uma exceção em uma falha devem ou não ser incluídos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-166">Gets or sets a value that indicates whether to include the details about an exception in a fault.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-167">
            <see langword="true" /> Se os detalhes sobre a exceção são incluídos em falhas. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-167">
              <see langword="true" /> if the details about an exception are included in the faults; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-168">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-168">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]
 [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-169">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-169">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-170">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-170">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-171">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-171">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedAccept">
      <MemberSignature Language="C#" Value="public bool IsTransactedAccept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedAccept" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTransactedAccept As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedAccept { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactedAccept : bool" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-172">Obtém um valor que indica se as chamadas de aceitação de método no ouvinte são realizadas sob uma transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-172">Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-173">
            <see langword="true" /> se chama o método de aceitação no ouvinte é feita em uma transação; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-173">
              <see langword="true" /> if the accept method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]
 [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedReceive">
      <MemberSignature Language="C#" Value="public bool IsTransactedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedReceive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTransactedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedReceive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactedReceive : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-174">Obtém um valor que indica se as chamadas de recebimento de método no ouvinte são realizadas sob uma transação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-174">Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-175">
            <see langword="true" /> se chama o método receive no ouvinte é feita em uma transação; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-175">
              <see langword="true" /> if the receive method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-176">O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-176">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]
 [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-177">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-177">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-178">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-178">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-179">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-179">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-180">Obtém o ouvinte associado com o dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-180">Gets the listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-181">O <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associado com o distribuidor de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-181">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-182">Um <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associa um <xref:System.ServiceModel.Channels.IChannelListener> em um URI específico com uma instância de um serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-182">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]
 [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ManualAddressing : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-183">Obtém ou define um valor que indica se o dispatcher do canal adiciona cabeçalhos de endereçamento para mensagens de solicitação/resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-183">Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-184">
            <see langword="true" /> Se o proxy não adicionar nenhum cabeçalho de endereçamento; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-184">
              <see langword="true" /> if the proxy does not add any addressing headers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="86b0e-185">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-185">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-186">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-186">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="86b0e-187">Definir o <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> propriedade `true` se você quiser impedir que o cliente adicionar ID de mensagem e ReplyTo cabeçalhos de mensagens de solicitação/resposta de endereçamento para que seu aplicativo possa controlar esses cabeçalhos.</span><span class="sxs-lookup"><span data-stu-id="86b0e-187">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]
 [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-188">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-188">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-189">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-189">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-190">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-190">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingReceives">
      <MemberSignature Language="C#" Value="public int MaxPendingReceives { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingReceives" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingReceives As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingReceives { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingReceives : int with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-191">Obtém ou define o máximo de mensagens pendentes por canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-191">Gets or sets the maximum pending messages per channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-192">Um inteiro que representa um número máximo de mensagens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-192">An integer representing a maximum number of messages.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTransactedBatchSize">
      <MemberSignature Language="C#" Value="public int MaxTransactedBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransactedBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTransactedBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxTransactedBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTransactedBatchSize : int with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-193">Obtém ou define o tamanho máximo para um lote transacionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-193">Gets or sets the maximum size for a transacted batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-194">O tamanho máximo para um lote transacionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-194">The maximum size for a transacted batch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-195">O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-195">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]
 [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86b0e-196">O valor definido é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-196">The value set is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-197">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-197">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-198">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-198">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-199">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-199">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-200">Obtém ou define a mensagem SOAP e as versões do WS-Addressing usadas ou esperadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-200">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-201">O <see cref="T:System.ServiceModel.Channels.MessageVersion" /> que é usado ou esperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-201">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-202">Especifica que as versões de SOAP e WS-Addressing associados a uma mensagem e sua troca.</span><span class="sxs-lookup"><span data-stu-id="86b0e-202">Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</span></span>  
  
 <span data-ttu-id="86b0e-203">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-203">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]
 [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-204">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-204">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-205">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-205">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-206">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-206">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="channelDispatcher.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-207">Anula o ouvinte associado com o dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-207">Aborts the listener associated with the dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelDispatcher.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="86b0e-208">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de fechamento tem para ser concluída antes de atingir o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-208">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="86b0e-209">O delegado de <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão da operação close assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-209">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the close operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="86b0e-210">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação de fechamento assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-210">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-211">Inicia uma operação assíncrona para fechar um ouvinte de canais para o dispatcher que deve ser concluído dentro de um intervalo de tempo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-211">Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86b0e-212">O <see cref="T:System.IAsyncResult" /> que faz referência à operação assíncrona para fechar um ouvinte de canais para o dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-212">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close a channel listener for the dispatcher.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelDispatcher.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="86b0e-213">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de abertura tem para ser concluída antes de atingir o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-213">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="86b0e-214">O delegado de <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão da operação open assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-214">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the open operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="86b0e-215">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação open assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-215">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-216">Inicia uma operação assíncrona para abrir um ouvinte de canais para o dispatcher que deve ser concluído dentro de um intervalo de tempo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-216">Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86b0e-217">O <see cref="T:System.IAsyncResult" /> que faz referência à operação assíncrona para abrir um ouvinte de canais para o dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-217">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a channel listener for the dispatcher.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-218">O dispatcher do canal deve ser associado uma não -`null` quando este método é chamado de host de serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-218">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-219">O host ou a versão de mensagem é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-219">The host or the message version is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="channelDispatcher.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="86b0e-220">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para o fechamento do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-220">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-221">Fecha o ouvinte de canais associado ao dispatcher dentro de um intervalo de tempo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-221">Closes the channel listener associated with the dispatcher within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="channelDispatcher.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-222">Fornece um rastreamento do fechamento dos dispatchers de ponto de extremidade associados com o dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-222">Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="channelDispatcher.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="86b0e-223">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada ao método <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-223">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-224">Conclui uma operação assíncrona para fechar um ouvinte de canais para o dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-224">Completes an asynchronous operation to close a channel listener for the dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="channelDispatcher.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="86b0e-225">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada ao método <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-225">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-226">Conclui uma operação assíncrona para abrir um ouvinte de canais para o dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-226">Completes an asynchronous operation to open a channel listener for the dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="channelDispatcher.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="86b0e-227">O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para a abertura do ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-227">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86b0e-228">Abre o ouvinte associado com o dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-228">Opens the listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-229">O dispatcher do canal deve ser associado uma não -`null` host de serviço quando este método é chamado e a versão de mensagem deve ser definido como não`null` valor.</span><span class="sxs-lookup"><span data-stu-id="86b0e-229">The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-230">O host ou a versão de mensagem é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-230">The host or the message version is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberSignature Language="F#" Value="override this.OnOpened : unit -&gt; unit" Usage="channelDispatcher.OnOpened " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-231">Preenche e valida a tabela de filtro usada para expedir para os pontos de extremidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-231">Populates and validates filter table used to dispatch to the endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-232">O dispatcher do canal deve ser associado uma não -`null` quando este método é chamado de host de serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-232">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-233">O host é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-233">The host is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberSignature Language="F#" Value="override this.OnOpening : unit -&gt; unit" Usage="channelDispatcher.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-234">Verifica se o dispatcher do canal está anexado a um host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-234">Checks whether the channel dispatcher is attached to a host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-235">O dispatcher do canal deve ser associado uma não -`null` host de serviço na abertura.</span><span class="sxs-lookup"><span data-stu-id="86b0e-235">The channel dispatcher must be associated with a non-`null` service host on opening.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-236">O host é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-236">The host is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-237">Obtém ou define se ReceiveContext está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-237">Gets or sets whether ReceiveContext is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-238">
            <see langword="true" /> Se ReceiveContext está ativado. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-238">
              <see langword="true" /> if ReceiveContext is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-239">O ReceiveContext controla a maneira na qual as mensagens são tratadas pelo serviço, por exemplo o bloqueio da mensagem como necessário.</span><span class="sxs-lookup"><span data-stu-id="86b0e-239">The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-240">Obtém ou define um valor que especifica se o dispatcher usa chamadas síncronas para ler mensagens de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-240">Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-241">
            <see langword="true" /> Se o distribuidor usa métodos síncronos para ler mensagens de canais; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-241">
              <see langword="true" /> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="86b0e-242">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-242">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-243">Se uma associação implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, Windows Communication Foundation (WCF) atribui o valor da <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> propriedade para essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="86b0e-243">If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, Windows Communication Foundation (WCF) assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property.</span></span> <span data-ttu-id="86b0e-244">Portanto, se esse valor é `true`, o `false` valor de padrão <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> é substituído.</span><span class="sxs-lookup"><span data-stu-id="86b0e-244">So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.</span></span>  
  
 <span data-ttu-id="86b0e-245">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-245">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]
 [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-246">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-246">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-247">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-247">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-248">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-248">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsynchronously">
      <MemberSignature Language="C#" Value="public bool SendAsynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendAsynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property SendAsynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendAsynchronously { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendAsynchronously : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-249">Obtém ou define se as mensagens são enviadas de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-249">Gets or sets whether messages are sent asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-250">
            <see langword="true" /> Se as mensagens são enviadas de forma assíncrona. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-250">
              <see langword="true" /> if messages are sent asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceThrottle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceThrottle As ServiceThrottle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ServiceThrottle ^ ServiceThrottle { System::ServiceModel::Dispatcher::ServiceThrottle ^ get(); void set(System::ServiceModel::Dispatcher::ServiceThrottle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceThrottle : System.ServiceModel.Dispatcher.ServiceThrottle with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ServiceThrottle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-251">Obtém ou define a limitação de serviço para o serviço associado com o dispatcher do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-251">Gets or sets the service throttle for the service associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-252">Um objeto <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-252">A <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-253">Fornece acesso aos controles usados para otimizar a disponibilidade e o desempenho de um serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-253">This provides access to the controls used to optimize the availability and performance of a service.</span></span>  
  
 <span data-ttu-id="86b0e-254">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-254">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]
 [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-255">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-255">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-256">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-256">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-257">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-257">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionIsolationLevel : System.Transactions.IsolationLevel with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-258">Obtém ou define o nível de isolamento padrão para transações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-258">Gets or sets the default isolation level for transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-259">Um dos valores de <see cref="T:System.Transactions.IsolationLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-259">One of the <see cref="T:System.Transactions.IsolationLevel" /> values.</span>
          </span>
          <span data-ttu-id="86b0e-260">O padrão é <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-260">The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-261">Use o <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> propriedade para obter ou definir o nível de isolamento padrão para novas transações criadas pelo distribuidor para o serviço.</span><span class="sxs-lookup"><span data-stu-id="86b0e-261">Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.</span></span>  
  
 <span data-ttu-id="86b0e-262">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-262">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]
 [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86b0e-263">O nível de isolamento especificado não está definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-263">The isolation level set is not defined.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-264">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-264">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-265">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-265">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-266">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-266">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TransactionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86b0e-267">Obtém ou define um valor que especifica o tempo limite padrão para novas transações criadas pelo dispatcher em nome do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-267">Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86b0e-268">Um <see cref="T:System.TimeSpan" /> valor que representa o período de tempo limite padrão para transações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-268">A <see cref="T:System.TimeSpan" /> value that represents the default timeout period for transactions.</span>
          </span>
          <span data-ttu-id="86b0e-269">O padrão é <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-269">The default is <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b0e-270">Essa propriedade só pode ser definida quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está no <xref:System.ServiceModel.CommunicationState.Created> state, pois esse é o único estado que é mutável e não descartado.</span><span class="sxs-lookup"><span data-stu-id="86b0e-270">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]
 [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86b0e-271">O valor definido é menor que zero ou é grande demais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-271">The value set is less than zero or is too large.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86b0e-272">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opened" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-272">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="86b0e-273">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closing" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-273">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="86b0e-274">O objeto de comunicação está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86b0e-274">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>