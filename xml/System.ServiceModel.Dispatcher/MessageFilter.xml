<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09416cea98600bff685c2b1432b5ba70f057f51f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39849447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1554d-101">Classe base <see langword="abstract" /> para diferentes classes de filtros, usada para consultar mensagens.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1554d-101">
          <see langword="abstract" /> base class for different classes of filters used to query messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1554d-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> é um `abstract` de classes que implementam os desenvolvedores para especificar os critérios usados para inspecionar as mensagens.</span><span class="sxs-lookup"><span data-stu-id="1554d-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="1554d-103">Normalmente, os filtros são usados por um aplicativo de ponto de extremidade para determinar o que fazer com uma mensagem com base em um exame de alguma parte da mensagem.</span><span class="sxs-lookup"><span data-stu-id="1554d-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="1554d-104">Um processo de enfileiramento de mensagens, por exemplo, pode usar uma consulta XPath 1.0 para verificar o elemento de prioridade de um cabeçalho conhecido para determinar se deseja mover uma mensagem para o início da fila.</span><span class="sxs-lookup"><span data-stu-id="1554d-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="1554d-105">Os filtros são armazenados em uma tabela de filtro que implementa <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="1554d-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="1554d-106">Cada filtro na tabela é associado a dados do filtro especificado que podem ser usados para indicar quais ações a serem tomadas se uma mensagem corresponde ao filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="1554d-107">O <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> métodos são usados para determinar se uma mensagem satisfaz um filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="1554d-108">Os critérios usados por um filtro não podem ser alterados depois que o filtro é construído como filtrar tabelas não têm nenhuma maneira de detectar uma alteração.</span><span class="sxs-lookup"><span data-stu-id="1554d-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="1554d-109">É a única maneira de modificar os critérios de filtro construir um novo e excluir o filtro existente.</span><span class="sxs-lookup"><span data-stu-id="1554d-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="1554d-110">As seguintes classes implementam o `abstract` <xref:System.ServiceModel.Dispatcher.MessageFilter> classe:</span><span class="sxs-lookup"><span data-stu-id="1554d-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="1554d-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> usa uma expressão XPath 1.0 para especificar os critérios para uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="1554d-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="1554d-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> corresponde a todas as mensagens.</span><span class="sxs-lookup"><span data-stu-id="1554d-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="1554d-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> corresponde a nenhuma das mensagens.</span><span class="sxs-lookup"><span data-stu-id="1554d-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="1554d-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> Testa se a ação de uma mensagem é parte de um conjunto especificado de ações.</span><span class="sxs-lookup"><span data-stu-id="1554d-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="1554d-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> Testa se uma mensagem satisfaz um endereço de ponto de extremidade especificado.</span><span class="sxs-lookup"><span data-stu-id="1554d-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="1554d-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> é um `abstract` classe base que você pode usar para escrever os ouvintes não enfileiramento de mensagens.</span><span class="sxs-lookup"><span data-stu-id="1554d-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1554d-117">Quando chamado em uma classe derivada, inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1554d-118">O construtor é protegido para que somente os filtros que derivam de <xref:System.ServiceModel.Dispatcher.MessageFilter> pode ser instanciado.</span><span class="sxs-lookup"><span data-stu-id="1554d-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="1554d-119">Dados associados com os filtros na tabela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-119">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="1554d-120">Cria uma tabela de filtro para um filtro que tem um tipo de dado especificado associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-120">Creates a filter table for a filter that has a specified type of data associated with it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1554d-121">Um objeto <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> ao qual os filtros associados a <paramref name="FilterData" /> podem ser adicionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1554d-122">Esse método deve ser chamado por <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="1554d-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="1554d-123">Os usuários devem criar uma tabela de filtro ao chamar um construtor para a tabela de filtros.</span><span class="sxs-lookup"><span data-stu-id="1554d-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="1554d-124">A implementação padrão desse método retorna uma tabela de filtro que chama o <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> sequencialmente de método de cada filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="1554d-125">Substitua este método para associar uma tabela de filtro personalizado ao implementar um filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1554d-126">Quando substituído em uma classe derivada, testa se uma mensagem ou uma mensagem em buffer atende aos critérios de filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1554d-127">A diferença entre as duas sobrecargas é que um recebe um <xref:System.ServiceModel.Channels.Message> parâmetro e não é permitida para examinar o corpo.</span><span class="sxs-lookup"><span data-stu-id="1554d-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="1554d-128">O outro usa um <xref:System.ServiceModel.Channels.MessageBuffer> parâmetro e pode examinar qualquer parte da mensagem.</span><span class="sxs-lookup"><span data-stu-id="1554d-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="1554d-129">Cabeçalhos de mensagem são automaticamente armazenados em buffer e podem ser inspecionados por um filtro sem ser consumido.</span><span class="sxs-lookup"><span data-stu-id="1554d-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="1554d-130">Mas se o corpo é ser inspecionados por um filtro, toda a mensagem deve ser armazenada em buffer porque um corpo de mensagem não armazenada em buffer pode ser consumido por uma consulta e seus conteúdos são destruídos.</span><span class="sxs-lookup"><span data-stu-id="1554d-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="1554d-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se não é necessário um exame do corpo.</span><span class="sxs-lookup"><span data-stu-id="1554d-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="1554d-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se é necessário um exame do corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="1554d-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1554d-133">
            <para>
              <see langword="Null" /> as mensagens são inválidas e causarão um <see cref="T:System.ArgumentNullException" /> seja lançada.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-133">
              <para>
                <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</para>
            </span>
          </span>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1554d-134">O objeto <see cref="T:System.ServiceModel.Channels.Message" /> a ser testado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1554d-135">Quando substituído em uma classe derivada, testa se uma mensagem atende aos critérios de filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span>
          </span>
          <span data-ttu-id="1554d-136">O corpo não pode ser examinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-136">The body cannot be examined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1554d-137">
            <see langword="true" /> se o objeto <see cref="T:System.ServiceModel.Channels.Message" /> atender aos critérios de filtro; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-137">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1554d-138">Esse método não é possível inspecionar o conteúdo do corpo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="1554d-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1554d-139">
            <para>Se o filtro de tentativas examinar o corpo de uma mensagem não armazenada em buffer, o filtro deve lançar uma <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. Ele não deve retornar <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-139">
              <para>If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />. It should not return <see langword="false" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1554d-140">O objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> a ser testado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-140">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1554d-141">Quando substituído em uma classe derivada, testa se uma mensagem em buffer atende aos critérios de filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-141">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1554d-142">
            <see langword="true" /> se o objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> atender aos critérios de filtro; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1554d-142">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1554d-143">A mensagem deve ser totalmente armazenada em buffer se o corpo deve ser inspecionado pelo filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-143">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="1554d-144">O corpo do <xref:System.ServiceModel.Channels.MessageBuffer> é totalmente armazenada em buffer e, portanto, podem ser inspecionados por um filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-144">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="1554d-145">O corpo de um <xref:System.ServiceModel.Channels.Message> que não foi totalmente armazenada em buffer pode ser consumido pela inspeção de filtro.</span><span class="sxs-lookup"><span data-stu-id="1554d-145">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="1554d-146">O elemento de cabeçalho de um <xref:System.ServiceModel.Channels.Message> automaticamente é armazenada em buffer e, portanto, podem ser inspecionadas sem ser consumido.</span><span class="sxs-lookup"><span data-stu-id="1554d-146">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>