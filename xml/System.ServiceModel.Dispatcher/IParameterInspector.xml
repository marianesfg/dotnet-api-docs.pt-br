<Type Name="IParameterInspector" FullName="System.ServiceModel.Dispatcher.IParameterInspector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89566eb5793aa3f3ad4d0a23250acea1ef5b6913" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518150" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IParameterInspector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParameterInspector" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IParameterInspector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IParameterInspector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IParameterInspector" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e37ad-101">Define o contrato implementado pelo inspetores de parâmetro personalizado que permite inspecionar ou modificar as informações antes e após as chamadas no cliente ou no serviço.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e37ad-101">Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e37ad-102">Implementar o <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface para criar um Inspetor de parâmetro personalizado que pode exibir e modificar o conteúdo de uma chamada antes da chamada e após a chamada em aplicativos cliente ou serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-102">Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications.</span></span>  
  
 <span data-ttu-id="e37ad-103">Em chamadas de saída de um cliente, o Inspetor é chamado antes do conteúdo de solicitação é serializado e enviado para o serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-103">On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.</span></span> <span data-ttu-id="e37ad-104">O Inspetor também é chamado depois que a resposta tiver sido desserializada, mas antes dos valores de retorno foram despachados para o método de proxy.</span><span class="sxs-lookup"><span data-stu-id="e37ad-104">The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.</span></span>  
  
 <span data-ttu-id="e37ad-105">Em chamadas de entrada para um serviço, o Inspetor é invocado depois desserializados parâmetros, mas antes de serem distribuídos para a operação de serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-105">On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.</span></span>  
  
 <span data-ttu-id="e37ad-106">Use o <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType> ou <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType> propriedades para adicionar um <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementação para a coleção de inspetores de uma determinada operação.</span><span class="sxs-lookup"><span data-stu-id="e37ad-106">Use the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=nameWithType> or the <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=nameWithType> properties to add an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation to the inspectors collection for a particular operation.</span></span>  
  
 <span data-ttu-id="e37ad-107">**Observação** desenvolvedores e administradores devem garantir que a interação com outras <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementações é entendida.</span><span class="sxs-lookup"><span data-stu-id="e37ad-107">**Note** Developers and administrators must ensure that the interaction with other <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementations is understood.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e37ad-108">O seguinte exemplo de código mostra um <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementação que:</span><span class="sxs-lookup"><span data-stu-id="e37ad-108">The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:</span></span>  
  
-   <span data-ttu-id="e37ad-109">Grava o nome da operação e o valor de retorno para o console depois que uma resposta tiver sido desserializada pelo serviço ou uma solicitação tiver sido serializada por um cliente.</span><span class="sxs-lookup"><span data-stu-id="e37ad-109">Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.</span></span>  
  
-   <span data-ttu-id="e37ad-110">Grava o nome da operação no console após a desserialização de uma resposta no cliente ou depois que uma resposta tem sido serializada no serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-110">Writes the operation name to the console after deserializing a response on the client or after a response has been serialized on the service.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="e37ad-111">O exemplo de código a seguir mostra como usar o <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> ou <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> inserir <xref:System.ServiceModel.Dispatcher.IParameterInspector> objetos.</span><span class="sxs-lookup"><span data-stu-id="e37ad-111">The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.</span></span>  
  
 [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AfterCall">
      <MemberSignature Language="C#" Value="public void AfterCall (string operationName, object[] outputs, object returnValue, object correlationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterCall(string operationName, object[] outputs, object returnValue, object correlationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterCall (operationName As String, outputs As Object(), returnValue As Object, correlationState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterCall(System::String ^ operationName, cli::array &lt;System::Object ^&gt; ^ outputs, System::Object ^ returnValue, System::Object ^ correlationState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="outputs" Type="System.Object[]" />
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="correlationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operationName">
          <span data-ttu-id="e37ad-112">O nome da operação invocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-112">The name of the invoked operation.</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="e37ad-113">Quaisquer objetos de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-113">Any output objects.</span>
          </span>
        </param>
        <param name="returnValue">
          <span data-ttu-id="e37ad-114">O valor retornado da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-114">The return value of the operation.</span>
          </span>
        </param>
        <param name="correlationState">
          <span data-ttu-id="e37ad-115">Qualquer estado de correlação retornado do método <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-115">Any correlation state returned from the <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> method, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e37ad-116">Chamado depois que as chamadas do cliente são retornadas e antes que as respostas do serviço são enviadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-116">Called after client calls are returned and before service responses are sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e37ad-117">Em chamadas de saída de um cliente, o Inspetor é chamado antes do conteúdo de solicitação é serializado e enviado para o serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-117">On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.</span></span> <span data-ttu-id="e37ad-118">O Inspetor também é chamado depois que a resposta tiver sido desserializada, mas antes dos valores de retorno foram despachados para o método de proxy.</span><span class="sxs-lookup"><span data-stu-id="e37ad-118">The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.</span></span>  
  
 <span data-ttu-id="e37ad-119">Em chamadas de entrada para um serviço, o Inspetor é invocado depois desserializados parâmetros, mas antes de serem distribuídos para a operação de serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-119">On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e37ad-120">O seguinte exemplo de código mostra um <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementação que:</span><span class="sxs-lookup"><span data-stu-id="e37ad-120">The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:</span></span>  
  
-   <span data-ttu-id="e37ad-121">Grava o nome da operação e o valor de retorno para o console depois que uma resposta tiver sido desserializada pelo serviço ou uma solicitação tiver sido serializada por um cliente.</span><span class="sxs-lookup"><span data-stu-id="e37ad-121">Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.</span></span>  
  
-   <span data-ttu-id="e37ad-122">Grava o nome da operação no console após a desserialização de uma resposta no cliente ou depois que uma resposta tem sido serializada no serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-122">Writes the operation name to the console after deserializing a response on the client or after a response has been serialized on the service.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="e37ad-123">O exemplo de código a seguir mostra como usar o <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, ou <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> inserir <xref:System.ServiceModel.Dispatcher.IParameterInspector> objetos.</span><span class="sxs-lookup"><span data-stu-id="e37ad-123">The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.</span></span>  
  
 [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCall">
      <MemberSignature Language="C#" Value="public object BeforeCall (string operationName, object[] inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BeforeCall(string operationName, object[] inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeforeCall (operationName As String, inputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BeforeCall(System::String ^ operationName, cli::array &lt;System::Object ^&gt; ^ inputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="inputs" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="operationName">
          <span data-ttu-id="e37ad-124">O nome da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-124">The name of the operation.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="e37ad-125">Os objetos passados para o método pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-125">The objects passed to the method by the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e37ad-126">Chamado antes de chamadas do cliente serem enviadas e depois de respostas de serviço serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-126">Called before client calls are sent and after service responses are returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e37ad-127">O estado de correlação que é retornado como o parâmetro <paramref name="correlationState" /> em <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-127">The correlation state that is returned as the <paramref name="correlationState" /> parameter in <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />.</span>
          </span>
          <span data-ttu-id="e37ad-128">Retorne <see langword="null" /> se você não pretende usar o estado de correlação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e37ad-128">Return <see langword="null" /> if you do not intend to use correlation state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e37ad-129">Em chamadas de saída de um cliente, o Inspetor é chamado antes do conteúdo de solicitação é serializado e enviado para o serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-129">On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.</span></span> <span data-ttu-id="e37ad-130">O Inspetor também é chamado depois que a resposta tiver sido desserializada, mas antes dos valores de retorno foram despachados para o método de proxy.</span><span class="sxs-lookup"><span data-stu-id="e37ad-130">The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.</span></span>  
  
 <span data-ttu-id="e37ad-131">Em chamadas de entrada para um serviço, o Inspetor é invocado depois que o conteúdo de solicitação é desserializado e enviado para a operação de serviço e antes do conteúdo de resposta é serializado e enviado ao cliente.</span><span class="sxs-lookup"><span data-stu-id="e37ad-131">On inbound calls to a service, the inspector is invoked after the request contents are deserialized and dispatched to the service operation and before the response contents are serialized and sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e37ad-132">O seguinte exemplo de código mostra um <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementação que:</span><span class="sxs-lookup"><span data-stu-id="e37ad-132">The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:</span></span>  
  
-   <span data-ttu-id="e37ad-133">Grava o nome da operação e o valor de retorno para o console depois que uma resposta tiver sido desserializada pelo serviço ou uma solicitação tiver sido serializada por um cliente.</span><span class="sxs-lookup"><span data-stu-id="e37ad-133">Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.</span></span>  
  
-   <span data-ttu-id="e37ad-134">Grava o nome da operação no console após a desserialização de uma resposta no cliente ou depois que uma resposta é serializada no serviço.</span><span class="sxs-lookup"><span data-stu-id="e37ad-134">Writes the operation name to the console after deserializing a response on the client or after a response is serialized on the service.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="e37ad-135">O exemplo de código a seguir mostra como usar o <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> ou <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> inserir <xref:System.ServiceModel.Dispatcher.IParameterInspector> objetos.</span><span class="sxs-lookup"><span data-stu-id="e37ad-135">The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.</span></span>  
  
 [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>