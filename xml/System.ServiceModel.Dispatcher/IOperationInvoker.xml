<Type Name="IOperationInvoker" FullName="System.ServiceModel.Dispatcher.IOperationInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b57266690d1ab463048ab7297ef82f79fcf673c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37455164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOperationInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationInvoker" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationInvoker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationInvoker" />
  <TypeSignature Language="F#" Value="type IOperationInvoker = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="24567-101">Declara os métodos que utilizam um objeto e uma matriz de parâmetros extraídos de uma mensagem, invocam um método no objeto com esses parâmetros e retornam o os parâmetros de saída e o valor retornado do método.</span>
      <span class="sxs-lookup">
        <span data-stu-id="24567-101">Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24567-102">Implementar o <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interface para controlar a conversão de um objeto sem tipo e a matriz de parâmetros para uma chamada de método fortemente tipados naquele objeto.</span><span class="sxs-lookup"><span data-stu-id="24567-102">Implement the <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object.</span></span> <span data-ttu-id="24567-103">Ele tem um síncrono <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> método, que usa uma instância e o conjunto de entradas do tipo objeto e retorna um objeto e um conjunto de saídas do tipo objeto.</span><span class="sxs-lookup"><span data-stu-id="24567-103">It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object.</span></span> <span data-ttu-id="24567-104">Ele também tem um <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> e <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variante.</span><span class="sxs-lookup"><span data-stu-id="24567-104">It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant.</span></span>  <span data-ttu-id="24567-105">O <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> propriedade especifica se o método síncrono ou assíncrono deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="24567-105">The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateInputs">
      <MemberSignature Language="C#" Value="public object[] AllocateInputs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] AllocateInputs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
      <MemberSignature Language="VB.NET" Value="Public Function AllocateInputs () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ AllocateInputs();" />
      <MemberSignature Language="F#" Value="abstract member AllocateInputs : unit -&gt; obj[]" Usage="iOperationInvoker.AllocateInputs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24567-106">Retorna uma <see cref="T:System.Array" /> de objetos de parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-106">Returns an <see cref="T:System.Array" /> of parameter objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24567-107">Os parâmetros que devem ser usados como argumentos para a operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-107">The parameters that are to be used as arguments to the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24567-108">Implemente para retornar uma matriz de parâmetros para a operação.</span><span class="sxs-lookup"><span data-stu-id="24567-108">Implement this to return an array of parameters for the operation.</span></span> <span data-ttu-id="24567-109">Essa matriz é preenchida pelo formatador e passado de volta para o chamador quando <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="24567-109">This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <threadsafe>
          <span data-ttu-id="24567-110">Uma implementação deste método deve alocar uma matriz de entrada em cada chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-110">An implementation of this method must allocate the input array on every call.</span>
          </span>
          <span data-ttu-id="24567-111">Retornando a mesma matriz para várias chamadas pode resultar em comportamento imprevisível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-111">Returning the same array for multiple calls can result in unpredictable behavior.</span>
          </span>
        </threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object instance, object[] inputs, out object[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object instance, object[] inputs, [out] object[]&amp; outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (instance As Object, inputs As Object(), ByRef outputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * obj[] *  -&gt; obj" Usage="iOperationInvoker.Invoke (instance, inputs, outputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="outputs" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="24567-112">O objeto a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-112">The object to be invoked.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="24567-113">As entradas para o método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-113">The inputs to the method.</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="24567-114">As saídas do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-114">The outputs from the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24567-115">Retorna um objeto e um conjunto de objetos de saída de uma instância e um conjunto de objetos de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-115">Returns an object and a set of output objects from an instance and set of input objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24567-116">O valor retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-116">The return value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeBegin">
      <MemberSignature Language="C#" Value="public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult InvokeBegin(object instance, object[] inputs, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeBegin (instance As Object, inputs As Object(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ InvokeBegin(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member InvokeBegin : obj * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOperationInvoker.InvokeBegin (instance, inputs, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="24567-117">O objeto a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-117">The object to be invoked.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="24567-118">As entradas para o método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-118">The inputs to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="24567-119">O objeto de retorno de chamada assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-119">The asynchronous callback object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="24567-120">Dados de estado associados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-120">Associated state data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24567-121">Uma implementação assíncrona do método <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-121">An asynchronous implementation of the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24567-122">Um <see cref="T:System.IAsyncResult" /> usado para concluir a chamada assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-122">A <see cref="T:System.IAsyncResult" /> used to complete the asynchronous call.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEnd">
      <MemberSignature Language="C#" Value="public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeEnd(object instance, [out] object[]&amp; outputs, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeEnd (instance As Object, ByRef outputs As Object(), result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeEnd(System::Object ^ instance, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member InvokeEnd : obj *  * IAsyncResult -&gt; obj" Usage="iOperationInvoker.InvokeEnd (instance, outputs, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="outputs" Type="System.Object[]&amp;" RefType="out" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="24567-123">O objeto invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-123">The object invoked.</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="24567-124">As saídas do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-124">The outputs from the method.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="24567-125">O objeto <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-125">The <see cref="T:System.IAsyncResult" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24567-126">O método de término assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-126">The asynchronous end method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24567-127">O valor retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-127">The return value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSynchronous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronous : bool" Usage="System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24567-128">Obtém um valor que especifica se o método <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> ou <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> é chamado pelo dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-128">Gets a value that specifies whether the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> or <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> method is called by the dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24567-129">
            <see langword="true" /> Se o dispatcher chama a operação síncrona; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="24567-129">
              <see langword="true" /> if the dispatcher invokes the synchronous operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24567-130">O chamador padrão distribui as mensagens para a operação síncrona por padrão.</span><span class="sxs-lookup"><span data-stu-id="24567-130">The default invoker dispatches messages to the synchronous operation by default.</span></span> <span data-ttu-id="24567-131">Esse valor é armazenado em cache pelo dispatcher e, portanto, não deve alterar ao longo do tempo de vida do objeto que implementa <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span><span class="sxs-lookup"><span data-stu-id="24567-131">This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>