<Type Name="EndpointDispatcher" FullName="System.ServiceModel.Dispatcher.EndpointDispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45667bba71e1d386ffafa302f24e478ad5be2b47" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49132766" /></Metadata><TypeSignature Language="C#" Value="public sealed class EndpointDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EndpointDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EndpointDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointDispatcher sealed" />
  <TypeSignature Language="F#" Value="type EndpointDispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa o objeto de tempo de execução que expõe propriedades que permitem a inserção de extensões ou modificações de tempo de execução para mensagens em aplicativos de serviço.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> e o <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> classes expõem os pontos de personalização de tempo de execução para pontos de extremidade em um serviço. O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> pode ser usado para controlar quais mensagens ele possa processar e algumas informações relacionadas ao ponto de extremidade. O <xref:System.ServiceModel.Dispatcher.DispatchRuntime> tem um grande número de propriedades usadas para inserir extensões personalizadas no tempo de execução de todo o ponto de extremidade.  
  
 O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objeto é responsável pelo processamento de mensagens de uma <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> quando o endereço de destino de uma mensagem corresponde a <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> propriedade e as correspondências de ação da mensagem a <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> propriedade. Se duas <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objetos podem aceitar uma mensagem, o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> valor da propriedade determina o ponto de extremidade de prioridade mais alta.  
  
 Use o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objeto para configurar ou estender o processo de recebimento de mensagens do associado <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, convertendo de objetos de mensagem para os objetos usados como parâmetros e invocar uma operação de ponto de extremidade, bem como o processo inverso.  
  
 Normalmente, o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para um ponto de extremidade é obtido com a implementação de <xref:System.ServiceModel.Description.IEndpointBehavior> interface, mas você pode acessar o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> de outras interfaces de comportamento.  
  
 Você pode usar o seguinte <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> propriedades:  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> propriedade permite que você obtenha ou defina uma <xref:System.ServiceModel.Dispatcher.MessageFilter> do objeto que o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> usa para identificar se o ponto de extremidade pode processar uma mensagem específica.  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> propriedade obtém associado <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object, que envia e recebe mensagens de e para o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> e que pode ser usado para inspecionar ou modificar outros valores de canal e comportamentos.  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> obtém o <xref:System.ServiceModel.Dispatcher.MessageFilter> objeto que é usado para identificar se uma mensagem é destinada a este contrato.  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName%2A> e <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace%2A> propriedades retornam o nome e namespace do contrato de ponto de extremidade.  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> propriedade retorna o <xref:System.ServiceModel.Dispatcher.DispatchRuntime> que você pode usar para modificar os valores de tempo de execução ou inserir extensões personalizadas de tempo de execução para todo o ponto de extremidade do objeto.  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress%2A> propriedade obtém o endereço do ponto de extremidade.  
  
-   O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> propriedade retorna a prioridade do filtro composto a <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> usa para estabelecer qual ponto de extremidade é manipular a mensagem.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o uso de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para localizar o <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> para o ponto de extremidade e inserções personalizado usando um comportamento de ponto de extremidade do Inspetor da mensagem.  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointDispatcher : System.ServiceModel.EndpointAddress * string * string -&gt; System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="new System.ServiceModel.Dispatcher.EndpointDispatcher (address, contractName, contractNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">O endereço do ponto de extremidade.</param>
        <param name="contractName">O nome do contrato do ponto de extremidade.</param>
        <param name="contractNamespace">O namespace do contrato do ponto de extremidade.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> com o endereço, nome do contrato e namespace de contrato especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse construtor para criar um ponto de extremidade que não está na descrição.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String, isSystemEndpoint As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointDispatcher : System.ServiceModel.EndpointAddress * string * string * bool -&gt; System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="new System.ServiceModel.Dispatcher.EndpointDispatcher (address, contractName, contractNamespace, isSystemEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
        <Parameter Name="isSystemEndpoint" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">O endereço do ponto de extremidade.</param>
        <param name="contractName">O nome do contrato do ponto de extremidade.</param>
        <param name="contractNamespace">O namespace do contrato do ponto de extremidade.</param>
        <param name="isSystemEndpoint"><see langword="true" /> para indicar que o ponto de extremidade é criado internamente pelo servidor e não pelo usuário; caso contrário, <see langword="false" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> com o endereço, nome do contrato e namespace do contrato especificados e se o ponto de extremidade é público e do sistema.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter AddressFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter AddressFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ AddressFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddressFilter : System.ServiceModel.Dispatcher.MessageFilter with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> que é usado para identificar se uma mensagem específica destina-se ao endereço do ponto de extremidade.</summary>
        <value>O filtro de endereço usado para rotear a mensagem para o ponto de extremidade apropriado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> tem um <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para cada ponto de extremidade de canal pode dar suporte. O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> propriedade é um <xref:System.ServiceModel.Dispatcher.MessageFilter?displayProperty=nameWithType> objeto que corresponde ao endereço de ponto de extremidade de destino da mensagem. O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combina os <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> de valor com o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> valor para determinar se deve rotear uma mensagem para esse ponto de extremidade.  
  
 No caso em que dois <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objetos que correspondem aos pode processar uma mensagem, o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> propriedade é usada para selecionar um ponto de extremidade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatcher As ChannelDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcher ^ ChannelDispatcher { System::ServiceModel::Dispatcher::ChannelDispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> associado, que pode ser usado para inspecionar ou modificar os outros valores de canal e comportamentos.</summary>
        <value>O dispatcher do canal que pode ser usado para inspecionar ou modificar outros valores de canal e comportamentos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objeto recebe uma mensagem de um canal e usa o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>, e <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> propriedades para determinar qual ponto de extremidade a mensagem é processada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter ContractFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter ContractFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ ContractFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContractFilter : System.ServiceModel.Dispatcher.MessageFilter with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o objeto <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> que é usado para identificar se uma mensagem destina-se a este contrato.</summary>
        <value>O filtro usado para rotear mensagens para o contrato apropriado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> propriedade é um <xref:System.ServiceModel.Dispatcher.MessageFilter> objeto que é comparado com a ação de uma mensagem. O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combina os <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> de valor com o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> valor para determinar se deve rotear uma mensagem para esse ponto de extremidade.  
  
 No caso em que dois <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objetos que correspondem aos pode processar uma mensagem, o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> propriedade é usada para selecionar um ponto de extremidade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do contrato do ponto de extremidade.</summary>
        <value>O nome do contrato do ponto de extremidade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractNamespace : string" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o namespace para o contrato do ponto de extremidade.</summary>
        <value>O namespace do contrato do ponto de extremidade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ DispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DispatchRuntime : System.ServiceModel.Dispatcher.DispatchRuntime" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> usado para inspecionar, modificar ou estender o comportamento de tempo de execução em um ponto de extremidade de serviço ou um ponto de extremidade de retorno de chamada do cliente.</summary>
        <value>O <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" /> objeto usado para inspecionar, modificar ou estender o comportamento de tempo de execução em um ponto de extremidade de serviço ou um ponto de extremidade de retorno de chamada do cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> propriedade para obter o <xref:System.ServiceModel.Dispatcher.DispatchRuntime> objeto para modificar os valores de tempo de execução ou inserir extensões personalizadas de tempo de execução para todo o ponto de extremidade. Dos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> propriedade, você também pode navegar até o <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> coleta para o ponto de extremidade.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o uso de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para localizar o <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> para o ponto de extremidade e inserções personalizado usando um comportamento de ponto de extremidade do Inspetor da mensagem.  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress EndpointAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress EndpointAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ EndpointAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o endereço do ponto de extremidade.</summary>
        <value>O endereço do ponto de extremidade.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterPriority">
      <MemberSignature Language="C#" Value="public int FilterPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FilterPriority : int with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a prioridade da combinação de <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> e <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" /> quando o <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> seleciona os pontos de extremidade.</summary>
        <value>A prioridade do filtro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combina os <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> de valor com o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> valor para determinar se deve rotear uma mensagem para esse ponto de extremidade.  
  
 No caso em que dois <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objetos que correspondem aos pode processar uma mensagem, o <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> propriedade é usada para selecionar um ponto de extremidade.  
  
 Se os dois pontos de extremidade podem processar uma mensagem e o valor de suas <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> correspondências de propriedade, um <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException?displayProperty=nameWithType> é gerada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemEndpoint">
      <MemberSignature Language="C#" Value="public bool IsSystemEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystemEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystemEndpoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSystemEndpoint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystemEndpoint : bool" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o ponto de extremidade é criado internamente pelo servidor e não pelo usuário.</summary>
        <value><see langword="true" /> Se o ponto de extremidade foi gerado pelo sistema; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>