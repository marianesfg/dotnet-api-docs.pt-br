<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7aafe75ec48d842a15df641ce8a2e7a2737d1f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36710111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RegularExpressionAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f7d97-101">Especifica que o valor de um campo de dados no Dados Dinâmicos do ASP.NET deve corresponder à expressão regular especificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7d97-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7d97-102">Você pode aplicar o atributo de RegularExpressionAttribute a uma propriedade quando precisar validar valores de propriedade em uma expressão regular.</span><span class="sxs-lookup"><span data-stu-id="f7d97-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="f7d97-103">A expressão regular habilita a especificar muito precisamente o formato de valores válidos.</span><span class="sxs-lookup"><span data-stu-id="f7d97-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="f7d97-104">A propriedade padrão contém a expressão regular. Se o valor da propriedade é nulo ou uma cadeia de caracteres vazia (""), o valor passa a validação para o atributo RegularExpressionAttribute automaticamente.</span><span class="sxs-lookup"><span data-stu-id="f7d97-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="f7d97-105">Para validar que o valor não é `null` ou uma cadeia de caracteres vazia, use o **RequiredAttribute** atributo.</span><span class="sxs-lookup"><span data-stu-id="f7d97-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7d97-106">O exemplo a seguir mostra como usar o <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> atributo para validar os campos de dados FirstName e LastName.</span><span class="sxs-lookup"><span data-stu-id="f7d97-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="f7d97-107">A expressão regular permite até 40 caracteres maiusculos e minúsculos.</span><span class="sxs-lookup"><span data-stu-id="f7d97-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="f7d97-108">O exemplo executa as seguintes tarefas:</span><span class="sxs-lookup"><span data-stu-id="f7d97-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="f7d97-109">Implementa uma classe parcial de metadados e a classe de metadados associados.</span><span class="sxs-lookup"><span data-stu-id="f7d97-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="f7d97-110">Na classe de metadados associados, aplica-se a <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> de atributo para os campos de dados FirstName e LastName, especificando o padrão e mensagens de erro personalizadas.</span><span class="sxs-lookup"><span data-stu-id="f7d97-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute : string -&gt; System.ComponentModel.DataAnnotations.RegularExpressionAttribute" Usage="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="f7d97-111">A expressão regular que é usada para validar o valor do campo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-111">The regular expression that is used to validate the data field value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7d97-112">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7d97-113">O exemplo a seguir mostra como aplicar o <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> para um campo de dados.</span><span class="sxs-lookup"><span data-stu-id="f7d97-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="f7d97-114">Se a validação falhar, o código de exemplo exibe a mensagem de erro de validação que é fornecida por dados dinâmicos.</span><span class="sxs-lookup"><span data-stu-id="f7d97-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f7d97-115">
            <paramref name="pattern" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-115">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.FormatErrorMessage : string -&gt; string" Usage="regularExpressionAttribute.FormatErrorMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f7d97-116">O nome do campo que causou a falha de validação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-116">The name of the field that caused the validation failure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7d97-117">Formata a mensagem de erro para exibir se a expressão regular de validação falhar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-117">Formats the error message to display if the regular expression validation fails.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7d97-118">A mensagem de erro formatada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-118">The formatted error message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7d97-119">O <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> cria a mensagem de erro usando o nome do campo de dados que causou a falha de validação.</span><span class="sxs-lookup"><span data-stu-id="f7d97-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="f7d97-120">Você pode substituir esse método em atributos de validação personalizada para personalizar como os erros são criados ou para fornecer uma mensagem mais complexa que contém parâmetros que são avaliadas em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="f7d97-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="regularExpressionAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f7d97-121">O valor do campo de dados a ser validado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-121">The data field value to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7d97-122">Verifica se o valor inserido pelo usuário corresponde ao padrão de expressão regular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-122">Checks whether the value entered by the user matches the regular expression pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7d97-123">
            <see langword="true" /> se a validação for bem-sucedida; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-123">
              <see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
          <span data-ttu-id="f7d97-124">O valor do campo de dados não correspondeu ao padrão da expressão regular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-124">The data field value did not match the regular expression pattern.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeoutInMilliseconds : int with get, set" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7d97-125">Obtém ou define a quantidade de tempo, em milissegundos, para executar uma única operação correspondente antes da operação atingir o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-125">Gets or set the amount of time in milliseconds to execute a single matching operation before the operation times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7d97-126">A quantidade de tempo em milissegundos para executar uma única operação correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-126">The amount of time in milliseconds to execute a single matching operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7d97-127">Obtém o padrão da expressão regular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-127">Gets the regular expression pattern.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7d97-128">O padrão a ser correspondido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7d97-128">The pattern to match.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>