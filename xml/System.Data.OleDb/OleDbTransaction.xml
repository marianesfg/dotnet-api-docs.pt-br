<Type Name="OleDbTransaction" FullName="System.Data.OleDb.OleDbTransaction">
  <TypeSignature Language="C#" Value="public sealed class OleDbTransaction : System.Data.Common.DbTransaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbTransaction extends System.Data.Common.DbTransaction" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbTransaction&#xA;Inherits DbTransaction" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbTransaction sealed : System::Data::Common::DbTransaction" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cabf2-101">Representa uma transação SQL a ser feita em uma fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="cabf2-101">Represents an SQL transaction to be made at a data source.</span></span> <span data-ttu-id="cabf2-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="cabf2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cabf2-103">O aplicativo cria um <xref:System.Data.OleDb.OleDbTransaction> objeto chamando <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> no <xref:System.Data.OleDb.OleDbConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="cabf2-103">The application creates an <xref:System.Data.OleDb.OleDbTransaction> object by calling <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> on the <xref:System.Data.OleDb.OleDbConnection> object.</span></span> <span data-ttu-id="cabf2-104">Todas as operações subsequentes associadas à transação (por exemplo, confirmar ou anular a transação), são executadas no <xref:System.Data.OleDb.OleDbTransaction> objeto.</span><span class="sxs-lookup"><span data-stu-id="cabf2-104">All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <xref:System.Data.OleDb.OleDbTransaction> object.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OleDb.OleDbDataAdapter" />
    <altmember cref="T:System.Data.OleDb.OleDbConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cabf2-105">Inicia uma transação de banco de dados aninhada.</span><span class="sxs-lookup"><span data-stu-id="cabf2-105">Initiates a nested database transaction.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbTransaction.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Function Begin () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ Begin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cabf2-106">Inicia uma transação de banco de dados aninhada.</span><span class="sxs-lookup"><span data-stu-id="cabf2-106">Initiates a nested database transaction.</span></span></summary>
        <returns><span data-ttu-id="cabf2-107">Uma transação de banco de dados aninhada.</span><span class="sxs-lookup"><span data-stu-id="cabf2-107">A nested database transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cabf2-108">A nova transação é aninhada dentro da transação atual.</span><span class="sxs-lookup"><span data-stu-id="cabf2-108">The new transaction is nested within the current transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cabf2-109">Não há suporte para transações aninhadas.</span><span class="sxs-lookup"><span data-stu-id="cabf2-109">Nested transactions are not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction Begin (System.Data.IsolationLevel isolevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction Begin(valuetype System.Data.IsolationLevel isolevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Begin (isolevel As IsolationLevel) As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ Begin(System::Data::IsolationLevel isolevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolevel"><span data-ttu-id="cabf2-110">O nível de isolamento a ser usado para a transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-110">The isolation level to use for the transaction.</span></span></param>
        <summary><span data-ttu-id="cabf2-111">Inicia uma transação de banco de dados aninhada e especifica o nível de isolamento a ser usado para a nova transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-111">Initiates a nested database transaction and specifies the isolation level to use for the new transaction.</span></span></summary>
        <returns><span data-ttu-id="cabf2-112">Uma transação de banco de dados aninhada.</span><span class="sxs-lookup"><span data-stu-id="cabf2-112">A nested database transaction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cabf2-113">A nova transação é aninhada dentro da transação atual.</span><span class="sxs-lookup"><span data-stu-id="cabf2-113">The new transaction is nested within the current transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cabf2-114">Não há suporte para transações aninhadas.</span><span class="sxs-lookup"><span data-stu-id="cabf2-114">Nested transactions are not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cabf2-115">Confirma a transação do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="cabf2-115">Commits the database transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cabf2-116">O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbConnection> e um <xref:System.Data.OleDb.OleDbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="cabf2-116">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>.</span></span> <span data-ttu-id="cabf2-117">Ele também demonstra como usar o <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, um <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, e <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="cabf2-117">It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="cabf2-118">Ocorreu um erro ao tentar confirmar a transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-118">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cabf2-119">A transação já foi confirmada ou revertida.</span><span class="sxs-lookup"><span data-stu-id="cabf2-119">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="cabf2-120">- ou -</span><span class="sxs-lookup"><span data-stu-id="cabf2-120">-or-</span></span>  
  
 <span data-ttu-id="cabf2-121">A conexão foi desfeita.</span><span class="sxs-lookup"><span data-stu-id="cabf2-121">The connection is broken.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OleDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbConnection ^ Connection { System::Data::OleDb::OleDbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cabf2-122">Obtém o objeto <see cref="T:System.Data.OleDb.OleDbConnection" /> associado à transação ou <see langword="null" />, se a transação não for mais válida.</span><span class="sxs-lookup"><span data-stu-id="cabf2-122">Gets the <see cref="T:System.Data.OleDb.OleDbConnection" /> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid.</span></span></summary>
        <value><span data-ttu-id="cabf2-123">O objeto <see cref="T:System.Data.OleDb.OleDbConnection" /> associado à transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-123">The <see cref="T:System.Data.OleDb.OleDbConnection" /> object associated with the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cabf2-124">Um único aplicativo pode ter várias conexões de banco de dados, cada uma com zero ou mais transações.</span><span class="sxs-lookup"><span data-stu-id="cabf2-124">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="cabf2-125">Essa propriedade permite que você determine o objeto de conexão associado a uma transação específica criada por <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</span><span class="sxs-lookup"><span data-stu-id="cabf2-125">This property lets you determine the connection object associated with a particular transaction created by <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cabf2-126">Especifica o <see cref="T:System.Data.IsolationLevel" /> para essa transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-126">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span></summary>
        <value><span data-ttu-id="cabf2-127">O <see cref="T:System.Data.IsolationLevel" /> para essa transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-127">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span> <span data-ttu-id="cabf2-128">O padrão é <see langword="ReadCommitted" />.</span><span class="sxs-lookup"><span data-stu-id="cabf2-128">The default is <see langword="ReadCommitted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cabf2-129">Não há suporte para transações paralelas.</span><span class="sxs-lookup"><span data-stu-id="cabf2-129">Parallel transactions are not supported.</span></span> <span data-ttu-id="cabf2-130">Portanto, o <xref:System.Data.IsolationLevel> se aplica a toda a transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-130">Therefore, the <xref:System.Data.IsolationLevel> applies to the whole transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cabf2-131">Reverte uma transação de um estado pendente.</span><span class="sxs-lookup"><span data-stu-id="cabf2-131">Rolls back a transaction from a pending state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cabf2-132">A transação pode somente ser revertida de um estado pendente (após <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> foi chamado, mas antes <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> é chamado).</span><span class="sxs-lookup"><span data-stu-id="cabf2-132">The transaction can only be rolled back from a pending state (after <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> is called).</span></span> <span data-ttu-id="cabf2-133">A transação será revertida novamente caso seja descartada antes `Commit` ou `Rollback` é chamado.</span><span class="sxs-lookup"><span data-stu-id="cabf2-133">The transaction will be rolled back in the event it is disposed before `Commit` or `Rollback` is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cabf2-134">O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbConnection> e um <xref:System.Data.OleDb.OleDbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="cabf2-134">The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>.</span></span> <span data-ttu-id="cabf2-135">Ele também demonstra como usar o <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, um <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, e <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="cabf2-135">It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="cabf2-136">Ocorreu um erro ao tentar confirmar a transação.</span><span class="sxs-lookup"><span data-stu-id="cabf2-136">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cabf2-137">A transação já foi confirmada ou revertida.</span><span class="sxs-lookup"><span data-stu-id="cabf2-137">The transaction has already been committed or rolled back.</span></span>  
  
 <span data-ttu-id="cabf2-138">- ou -</span><span class="sxs-lookup"><span data-stu-id="cabf2-138">-or-</span></span>  
  
 <span data-ttu-id="cabf2-139">A conexão foi desfeita.</span><span class="sxs-lookup"><span data-stu-id="cabf2-139">The connection is broken.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>