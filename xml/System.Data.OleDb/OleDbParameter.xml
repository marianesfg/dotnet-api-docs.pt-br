<Type Name="OleDbParameter" FullName="System.Data.OleDb.OleDbParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fee3e4468acdff0f6a8c1749dba2918dcf759b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390670" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um parâmetro para um <see cref="T:System.Data.OleDb.OleDbCommand" /> e, opcionalmente, o mapeamento para uma coluna <see cref="T:System.Data.DataSet" />. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O OLE DB.NET Framework Data Provider usa parâmetros posicionais são marcados com um ponto de interrogação (?) em vez de parâmetros nomeados.  
  
 Ao consultar um banco de dados Oracle usando o provedor Microsoft OLE DB para Oracle (MSDAORA) e o OLE DB.NET Framework Data Provider, usando o `LIKE` cláusula para valores de consulta nos campos de comprimento fixo pode não retornar esperadas todas as correspondências. A razão é que, quando Oracle coincide com os valores dos campos de comprimento fixo em um `LIKE` cláusula, ele corresponde toda a duração da cadeia de caracteres, incluindo qualquer preenchimento espaços à direita. Por exemplo, se uma tabela em um banco de dados Oracle contém um campo denominado "Campo1" é definido como `char(3)`, e insira o valor "a" em uma linha da tabela, o código a seguir não retorna a linha.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Isso ocorre porque o Oracle armazena o valor da coluna como "a" (preenchimento "a", com espaços até o comprimento de campo fixo de 3 à direita), que o Oracle não tratará como uma correspondência para o valor do parâmetro de "a" no caso de um `LIKE` comparação dos campos de comprimento fixo.  
  
 Para resolver esse problema, acrescente um caractere curinga de porcentagem ("%") para o valor do parâmetro (`"a%"`), ou usar um SQL `=` comparação em vez disso.  
  
   
  
## Examples  
 O exemplo a seguir cria várias instâncias do <xref:System.Data.OleDb.OleDbParameter> por meio de <xref:System.Data.OleDb.OleDbParameterCollection> coleção dentro de <xref:System.Data.OleDb.OleDbDataAdapter>. Esses parâmetros são usados para selecionar dados da fonte de dados e colocar os dados de <xref:System.Data.DataSet>. Este exemplo supõe que um <xref:System.Data.DataSet> e um <xref:System.Data.OleDb.OleDbDataAdapter> já foram criados usando o esquema apropriado, comandos e conexão.  
  
 [!code-csharp[Classic WebData OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro a ser mapeado.</param>
        <param name="dataType">Um dos valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" /> que usa o nome do parâmetro e o tipo de dados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo de dados e, se apropriado, <xref:System.Data.OleDb.OleDbParameter.Size%2A> e <xref:System.Data.OleDb.OleDbParameter.Precision%2A> são inferidos do valor da `dataType` parâmetro.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="dataType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro a ser mapeado.</param>
        <param name="value">O valor do novo objeto <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" /> que usa o nome do parâmetro e o valor do novo <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tenha cuidado ao usar essa sobrecarga do <xref:System.Data.OleDb.OleDbParameter> construtor para especificar valores de parâmetro de número inteiro. Como essa sobrecarga toma um `value` do tipo <xref:System.Object>, você deve converter o valor integral em um tipo <xref:System.Object> quando o valor for zero, como demonstra o exemplo C# a seguir.  
  
```csharp  
Parameter = new OleDbParameter("@pname", Convert.ToInt32(0));  
```  
  
 Se você não realizar essa conversão, o compilador assumirá que você está tentando chamar o <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> sobrecarga de construtor.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro a ser mapeado.</param>
        <param name="dataType">Um dos valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" /> que usa o nome do parâmetro, o tipo de dados e o tamanho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Size%2A> é inferido do valor da `dataType` parâmetro se não for definido explicitamente `size` parâmetro.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="dataType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, dataType As OleDbType, size As Integer, srcColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ name, System::Data::OleDb::OleDbType dataType, int size, System::String ^ srcColumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do parâmetro a ser mapeado.</param>
        <param name="dataType">Um dos valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <param name="srcColumn">O nome da coluna de origem.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" /> que usa o nome do parâmetro, o tipo de dados, o tamanho e o nome da coluna de origem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Size%2A> é inferido do valor da `dataType` parâmetro se não for definido explicitamente `size` parâmetro.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="dataType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As OleDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, srcColumn As String, srcVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ parameterName, System::Data::OleDb::OleDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">O nome do parâmetro.</param>
        <param name="dbType">Um dos valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <param name="direction">Um dos valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="isNullable">
          <see langword="true" /> se o valor do campo puder ser null; caso contrário, <see langword="false" />.</param>
        <param name="precision">O número total de dígitos à esquerda e à direita do ponto decimal para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido.</param>
        <param name="scale">O número total de casas decimais para as quais o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido.</param>
        <param name="srcColumn">O nome da coluna de origem.</param>
        <param name="srcVersion">Um dos valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="value">Um <see cref="T:System.Object" /> que é o valor do <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" /> que usa o nome do parâmetro, o tipo de dados, o tamanho, o nome da coluna de origem, a direção de parâmetro, a precisão numérica e outras propriedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Size%2A> e <xref:System.Data.OleDb.OleDbParameter.Precision%2A> são inferidos do valor da `dataType` parâmetro se não forem definidas explicitamente `size` e `precision` parâmetros.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e exibe o <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="dataType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As OleDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbParameter(System::String ^ parameterName, System::Data::OleDb::OleDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">O nome do parâmetro.</param>
        <param name="dbType">Um dos valores de <see cref="T:System.Data.OleDb.OleDbType" />.</param>
        <param name="size">O tamanho do parâmetro.</param>
        <param name="direction">Um dos valores de <see cref="T:System.Data.ParameterDirection" />.</param>
        <param name="precision">O número total de dígitos à esquerda e à direita do ponto decimal para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido.</param>
        <param name="scale">O número total de casas decimais para as quais o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido.</param>
        <param name="sourceColumn">O nome da coluna de origem.</param>
        <param name="sourceVersion">Um dos valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> se a coluna de origem for nula; caso contrário, <see langword="false" />.</param>
        <param name="value">Um <see cref="T:System.Object" /> que é o valor do <see cref="T:System.Data.OleDb.OleDbParameter" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.OleDb.OleDbParameter" /> que usa o nome do parâmetro, o tipo de dados, o tamanho, o nome da coluna de origem, a direção de parâmetro, a precisão numérica e outras propriedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Size%2A> e <xref:System.Data.OleDb.OleDbParameter.Precision%2A> são inferidos do valor da `dataType` parâmetro se não forem definidas explicitamente `size` e `precision` parâmetros.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e exibe o <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>.  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor fornecido no parâmetro <paramref name="dataType" /> é um tipo de dados de back-end inválido.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.DbType" /> do parâmetro.</summary>
        <value>Um dos valores de <see cref="T:System.Data.DbType" />. O padrão é <see cref="F:System.Data.DbType.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> e <xref:System.Data.OleDb.OleDbParameter.DbType%2A> estão vinculados. Portanto, definir o <xref:System.Data.OleDb.OleDbParameter.DbType%2A> alterações a <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> para um suporte <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>.  
  
 Para obter uma lista dos tipos de dados com suporte, consulte o <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> membro. Para obter mais informações, consulte [parâmetros DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
 [!code-csharp[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.DbType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">A propriedade não foi definida como um <see cref="T:System.Data.DbType" /> válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o parâmetro é apenas de entrada, saída, bidirecional ou um parâmetro de valor retornado do procedimento armazenado.</summary>
        <value>Um dos valores de <see cref="T:System.Data.ParameterDirection" />. O padrão é <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Data.ParameterDirection> é a saída e a execução de associado <xref:System.Data.OleDb.OleDbCommand> não retorna um valor, o <xref:System.Data.OleDb.OleDbParameter> contém um valor nulo.  
  
 `Output`, `InputOut`, e `ReturnValue` parâmetros retornados ao chamar <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> não pode ser acessado até que você chame <xref:System.Data.OleDb.OleDbDataReader.Close%2A> ou **Dispose** sobre o <xref:System.Data.OleDb.OleDbDataReader>.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A propriedade não foi definida como um dos valores <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o parâmetro aceita valores nulos.</summary>
        <value>
          <see langword="true" /> se valores nulos são aceitos; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores nulos são tratados usando a <xref:System.DBNull> classe.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.IsNullable = True  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.IsNullable = true;  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbType">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbType OleDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OleDb.OleDbType OleDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property OleDbType As OleDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbType OleDbType { System::Data::OleDb::OleDbType get(); void set(System::Data::OleDb::OleDbType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.OleDb.OleDbType" /> do parâmetro.</summary>
        <value>O <see cref="T:System.Data.OleDb.OleDbType" /> do parâmetro. O padrão é <see cref="F:System.Data.OleDb.OleDbType.VarWChar" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> e <xref:System.Data.OleDb.OleDbParameter.DbType%2A> estão vinculados. Portanto, definir o <xref:System.Data.OleDb.OleDbParameter.DbType%2A> alterações a <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> para um suporte <xref:System.Data.OleDb.OleDbType>.  
  
 Para obter uma lista dos tipos de dados com suporte, consulte o <xref:System.Data.OleDb.OleDbType> membro. Para obter mais informações, consulte [parâmetros DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <value>O nome do <see cref="T:System.Data.OleDb.OleDbParameter" />. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O provedor OLE DB .NET usa parâmetros posicionais são marcados com um ponto de interrogação (?) em vez de parâmetros nomeados.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>O número máximo de dígitos usados para representar a propriedade <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. O valor padrão é 0, que indica que o provedor de dados define a precisão do <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Precision%2A> propriedade é usada somente para parâmetros de entrada numéricos e decimais.  
  
 O <xref:System.Data.OleDb.OleDbParameter.Precision%2A> propriedade deve ser definida apenas para `Decimal` e `Numeric` parâmetros antes de chamar o <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> método o <xref:System.Data.OleDb.OleDbCommand>.  
  
 Definir essa propriedade como um valor diferente do valor no banco de dados depende da implementação do provedor de dados e pode retornar o erro código, truncate ou round dados.  
  
 O `Precision` propriedade afeta apenas os parâmetros cujos <xref:System.Data.OleDb.OleDbType> é `Decimal`, `Numeric`, ou `VarNumeric`. Para outros tipos de dados, `Precision` será ignorado.  
  
> [!NOTE]
>  Não há suporte para o uso dessa propriedade para forçar os dados passados para o banco de dados. Para arredondar, truncate, ou forçar caso contrário, os dados antes de passar para o banco de dados, use o <xref:System.Math> que faz parte da classe de `System` namespace antes de atribuir um valor para o parâmetro `Value` propriedade.  
  
> [!NOTE]
>  Provedores de dados do .NET framework que estão incluídos com o .NET Framework versão 1.0 não verificam a <xref:System.Data.OleDb.OleDbParameter.Precision%2A> ou <xref:System.Data.OleDb.OleDbParameter.Scale%2A> de <xref:System.Decimal> valores de parâmetro. Isso pode causar dados truncados a ser inserido na fonte de dados. Se você estiver usando o .NET Framework versão 1.0, validar o <xref:System.Data.OleDb.OleDbParameter.Precision%2A> e <xref:System.Data.OleDb.OleDbParameter.Scale%2A> de <xref:System.Decimal> valores antes de definir o valor do parâmetro. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> valores que excedem o <xref:System.Decimal> escala do parâmetro ainda são truncados.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine o tipo associado a este <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao executar um comando que inclui valores de parâmetro, código pode definir explicitamente o tipo de um parâmetro ou o parâmetro pode inferir o tipo do valor. Chamar este método redefine o parâmetro para que ele pode inferir novamente seu tipo do valor transmitido no parâmetro. Chamar esse método afeta tanto o <xref:System.Data.OleDb.OleDbParameter.DbType%2A> e <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> propriedades da <xref:System.Data.OleDb.OleDbParameter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOleDbType">
      <MemberSignature Language="C#" Value="public void ResetOleDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOleDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOleDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOleDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine o tipo associado a este <see cref="T:System.Data.OleDb.OleDbParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao executar um comando que inclui valores de parâmetro, código pode definir explicitamente o tipo de um parâmetro ou o parâmetro pode inferir o tipo do valor. Chamar este método redefine o parâmetro para que ele pode inferir novamente seu tipo do valor transmitido no parâmetro. Chamar esse método afeta tanto o <xref:System.Data.OleDb.OleDbParameter.DbType%2A> e <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> propriedades da <xref:System.Data.OleDb.OleDbParameter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de casas decimais para as quais o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido.</summary>
        <value>O número de casas decimais para o qual o <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> é resolvido. O padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Scale%2A> propriedade é usada somente para parâmetros de entrada numéricos e decimais antes de chamar o <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> método o <xref:System.Data.OleDb.OleDbCommand> e para especificar os parâmetros de saída numérica.  
  
 Definir essa propriedade como um valor diferente do valor no banco de dados depende da implementação do provedor de dados e pode retornar o erro código, truncate ou round dados.  
  
 Ao usar o SQL Server Native Client 10 (ou posterior), para associar um parâmetro cujo tipo é `Decimal`, `Numeric`, `VarNumeric`, `DBDate`, ou `DBTimeStamp`, você deve especificar manualmente um valor de escala apropriada.  
  
> [!NOTE]
>  Não há suporte para o uso dessa propriedade para forçar os dados passados para o banco de dados. Para arredondar, truncate, ou forçar caso contrário, os dados antes de passar para o banco de dados, use o <xref:System.Math> que faz parte da classe de `System` namespace antes de atribuir um valor para o parâmetro `Value` propriedade.  
  
> [!NOTE]
>  Provedores de dados do .NET framework que estão incluídos com o .NET Framework versão 1.0 não verificam a <xref:System.Data.OleDb.OleDbParameter.Precision%2A> ou <xref:System.Data.OleDb.OleDbParameter.Scale%2A> de <xref:System.Decimal> valores de parâmetro. Isso pode causar dados truncados a ser inserido na fonte de dados. Se você estiver usando o .NET Framework versão 1.0, validar o <xref:System.Data.OleDb.OleDbParameter.Precision%2A> e <xref:System.Data.OleDb.OleDbParameter> de <xref:System.Decimal> valores antes de definir o valor do parâmetro. <xref:System.Data.OleDb.OleDbParameter.Scale%2A> valores que excedem o <xref:System.Decimal> escala do parâmetro ainda são truncados.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tamanho máximo, em bytes, dos dados da coluna.</summary>
        <value>O tamanho máximo, em bytes, dos dados da coluna. O valor padrão é inferido do valor do parâmetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.OleDb.OleDbParameter.Size%2A> propriedade é usada para tipos binários e de cadeia de caracteres.  
  
 Para dados de cadeia de caracteres de tipos de dados não-String e ANSI de <xref:System.Data.OleDb.OleDbParameter.Size%2A> propriedade se refere ao número de bytes. Para dados de cadeia de caracteres Unicode, <xref:System.Data.OleDb.OleDbParameter.Size%2A> se refere ao número de caracteres. A contagem de cadeias de caracteres não inclui o caractere de terminação.  
  
 Para tipos de dados de comprimento variável, <xref:System.Data.OleDb.OleDbParameter.Size%2A> descreve a quantidade máxima de dados para transmitir para o servidor. Por exemplo, para um valor de cadeia de caracteres Unicode, <xref:System.Data.OleDb.OleDbParameter.Size%2A> pode ser usado para limitar a quantidade de dados enviados ao servidor para os primeiros 100 caracteres.  
  
 Para parâmetros de saída e bidirecionais e valores de retorno, você deve definir o valor de <xref:System.Data.OleDb.OleDbParameter.Size%2A>. Isso não é necessário para parâmetros de entrada, e se não foi explicitamente definido, o valor é inferido do tamanho real do parâmetro especificado quando uma instrução parametrizada é executada.  
  
 O <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, e <xref:System.Data.OleDb.OleDbParameter.Size%2A> propriedades de um parâmetro podem ser inferidas definindo <xref:System.Data.OleDb.OleDbParameter.Value%2A>. Portanto, você não precisa especificá-los. No entanto, eles não são expostos no <xref:System.Data.OleDb.OleDbParameter> as configurações de propriedade. Por exemplo, se o tamanho do parâmetro foi inferido, <xref:System.Data.OleDb.OleDbParameter.Size%2A> não contém o valor inferido após a execução da instrução.  
  
 Para tipos de dados de comprimento fixo, o valor de <xref:System.Data.OleDb.OleDbParameter.Size%2A> será ignorado. Ele pode ser recuperado para fins informativos e retorna o número máximo de bytes que o provedor usa ao transmitir o valor do parâmetro para o servidor.  
  
 Se o tamanho do valor fornecido para um <xref:System.Data.OleDb.OleDbParameter> excede especificado <xref:System.Data.OleDb.OleDbParameter.Size%2A>, o <xref:System.Data.OleDb.OleDbParameter.Value%2A> do <xref:System.Data.OleDb.OleDbParameter> contém o valor especificado, truncado para o tamanho do <xref:System.Data.OleDb.OleDbParameter>.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" /> e usada para carregar ou retornar o <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>O nome da coluna de origem mapeada para o <see cref="T:System.Data.DataSet" />. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> for definida como algo diferente de uma cadeia de caracteres vazia, o valor do parâmetro é recuperado da coluna com o <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> nome. Se <xref:System.Data.OleDb.OleDbParameter.Direction%2A> é definido como `Input`, o valor é extraído o <xref:System.Data.DataSet>. Se <xref:System.Data.OleDb.OleDbParameter.Direction%2A> é definido como `Output`, o valor é obtido da fonte de dados. Um <xref:System.Data.OleDb.OleDbParameter.Direction%2A> de `InputOutput` é uma combinação de ambos.  
  
 Para obter mais informações sobre como usar o <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> propriedade, consulte [parâmetros DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md) e [Atualizar fontes de dados com DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define ou obtém um valor que indica se a coluna de origem permite valor nulo. Isso permite que <see cref="T:System.Data.Common.DbCommandBuilder" /> gere corretamente instruções Update para colunas que permitem valor nulo.</summary>
        <value>
          <see langword="true" /> se a coluna de origem for nula; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> é usado pelo <xref:System.Data.Common.DbCommandBuilder> ao gerar comandos de atualização corretamente ao lidar com colunas anuláveis. Em geral, uso de <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> é limitado aos desenvolvedores herdando <xref:System.Data.Common.DbCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> usa essa propriedade para determinar se a coluna de origem é anulável e define essa propriedade como `true` se ele for anulável, e `false` se não for. Quando <xref:System.Data.Common.DbCommandBuilder> é gerar sua instrução de atualização, ele examina o <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> para cada parâmetro. Se a propriedade for `true`, <xref:System.Data.Common.DbCommandBuilder> gera um cláusulas WHERE como a seguir (esta expressão de consulta "FieldName" representa o nome do campo):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 Se <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> para o campo é false, <xref:System.Data.Common.DbCommandBuilder> gera a seguinte cláusula WHERE:  
  
```  
FieldName = @OriginalFieldName  
```  
  
 Além disso, @IsNull_FieldName contém 1 se o campo de origem contém null e 0 se não existir. Esse mecanismo permite uma otimização de desempenho no SQL Server e fornece código comum que funciona em vários provedores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Data.DataRowVersion" /> a ser usado ao carregar <see cref="P:System.Data.OleDb.OleDbParameter.Value" />.</summary>
        <value>Um dos valores de <see cref="T:System.Data.DataRowVersion" />. O padrão é <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usado por <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> durante uma operação de atualização para determinar se o valor do parâmetro está definido como `Current` ou `Original`. Isso permite que as chaves primárias ser atualizado. Essa propriedade é definida para a versão do <xref:System.Data.DataRow> usado pelo <xref:System.Data.DataRow.Item%2A> propriedade, ou o <xref:System.Data.DataRow.GetChildRows%2A> método o <xref:System.Data.DataRow> objeto.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">A propriedade não foi definida como um dos valores <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para obter uma descrição desse membro, consulte <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Um novo <see cref="T:System.Object" /> que é uma cópia dessa instância.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Data.OleDb.OleDbParameter> é convertida em uma interface de <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma cadeia de caracteres que contém o <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</summary>
        <returns>Uma cadeia de caracteres que contém o <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor do parâmetro.</summary>
        <value>Um <see cref="T:System.Object" /> que é o valor do parâmetro. O valor padrão é null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para parâmetros de entrada, o valor é vinculado ao <xref:System.Data.OleDb.OleDbCommand> que é enviado ao servidor. Para parâmetros de valor de retorno e de saída, o valor é definido na conclusão do <xref:System.Data.OleDb.OleDbCommand> e depois o <xref:System.Data.OleDb.OleDbDataReader> está fechado.  
  
 Quando você envia um valor de parâmetro nulo para o servidor, você deve especificar <xref:System.DBNull>, não null. O valor nulo no sistema é um objeto vazio que não tem nenhum valor. <xref:System.DBNull> é usado para representar valores nulos.  
  
 Se o aplicativo especifica o tipo de banco de dados, o valor associado é convertido para esse tipo de quando o provedor envia os dados para o servidor. O provedor tenta converter qualquer tipo de valor se ele dá suporte a <xref:System.IConvertible> interface. Erros de conversão podem resultar se o tipo especificado não é compatível com o valor.  
  
 Tanto o <xref:System.Data.OleDb.OleDbParameter.DbType%2A> e <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> propriedades podem ser inferidas, definindo o valor.  
  
 O <xref:System.Data.OleDb.OleDbParameter.Value%2A> propriedade é substituída pelo método de atualização de <xref:System.Data.IDbDataAdapter>.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Data.OleDb.OleDbParameter> e define algumas de suas propriedades.  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>