<Type Name="PropertyFilter" FullName="System.Activities.Presentation.PropertyEditing.PropertyFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83c683dded83417a34795720c6a4460ce452c114" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37139495" /></Metadata><TypeSignature Language="C#" Value="public class PropertyFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyFilter" />
  <TypeSignature Language="F#" Value="type PropertyFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0c8c4-101">Fornece funcionalidade de filtragem para um host de edição de propriedades.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-101">Provides filtering functionality for a property editing host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c8c4-102">Contém uma lista de cadeias de caracteres chamado *predicados*, que são comparados com um nome de propriedade de destino até que uma correspondência for encontrada.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-102">Contains a list of strings, called *predicates*, that are compared against a target property name until a match is found.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c8c4-103">Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilter (System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; predicates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; predicates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.Collections.Generic.IEnumerable{System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (predicates As IEnumerable(Of PropertyFilterPredicate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilter(System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^&gt; ^ predicates);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyFilter : seq&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt; -&gt; System.Activities.Presentation.PropertyEditing.PropertyFilter" Usage="new System.Activities.Presentation.PropertyEditing.PropertyFilter predicates" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="predicates" Type="System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate&gt;" />
      </Parameters>
      <Docs>
        <param name="predicates"><span data-ttu-id="0c8c4-104">Uma lista <see cref="T:System.Collections.IEnumerable" /> de predicados, que são cadeias de caracteres usadas para correspondência.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-104">An <see cref="T:System.Collections.IEnumerable" /> list of predicates, or strings used for matching.</span></span></param>
        <summary><span data-ttu-id="0c8c4-105">Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> que inclui uma enumeração de cadeias de caracteres de filtragem, chamada *predicados*, que pode ser comparada com um nome de propriedade de destino até que uma correspondência seja encontrada.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-105">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> class that includes an enumeration of filtering strings, called *predicates*, that can be compared against a target property name until a match is found.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyFilter (string filterText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filterText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filterText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyFilter(System::String ^ filterText);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyFilter : string -&gt; System.Activities.Presentation.PropertyEditing.PropertyFilter" Usage="new System.Activities.Presentation.PropertyEditing.PropertyFilter filterText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filterText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterText"><span data-ttu-id="0c8c4-106">Um <see cref="T:System.String" /> que contém os predicados delimitados por espaço para filtragem de propriedades.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-106">A <see cref="T:System.String" /> that contains space-delimited predicates for property filtering.</span></span></param>
        <summary><span data-ttu-id="0c8c4-107">Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> que inclui um <see cref="T:System.String" />, que por sua vez contém uma sequência de frases de filtragem delimitadas por espaços chamadas *predicados*, os quais podem ser comparados com um nome de propriedade de destino até que uma correspondência seja encontrada.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-107">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> class that includes a <see cref="T:System.String" /> that contains a space-delimited sequence of filtering phrases, called *predicates*, that can be compared against a target property name until a match is found.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyFilter.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c8c4-108">A propriedade somente leitura que indica se este <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> não tem nenhum predicado de filtragem.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-108">Read-only property that indicates whether this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> does not have any filtering predicates.</span></span></summary>
        <value><span data-ttu-id="0c8c4-109"><see langword="true" /> Se predicados estão ausentes; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-109"><see langword="true" /> if predicates are absent; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyFilter.Match(System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (target As IPropertyFilterTarget) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Activities::Presentation::PropertyEditing::IPropertyFilterTarget ^ target);" />
      <MemberSignature Language="F#" Value="member this.Match : System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget -&gt; bool" Usage="propertyFilter.Match target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0c8c4-110">O nome da propriedade com a qual o filtro atual será comparado ao procurar por uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-110">The name of the property that the current filter will be compared against when looking for a match.</span></span></param>
        <summary><span data-ttu-id="0c8c4-111">Faz a correspondência entre as cadeias de caracteres de predicado do objeto de filtragem atual e o nome da propriedade de destino especificado e retorna um valor booliano que indica se uma ou mais das cadeias de caracteres de predicado correspondem ao nome de destino ou se esse <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> não tem nenhum predicado.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-111">Matches the predicate strings of the current filtering object against the specified target property name and returns a Boolean that indicates whether one or more of the predicate strings matches the target name or whether this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> does not have any predicates.</span></span></summary>
        <returns><span data-ttu-id="0c8c4-112"><see langword="true" /> se há uma correspondência de filtro/destino ou se não há nada a ser usado para a comparação; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c8c4-112"><see langword="true" /> if there is a filter/target match or if there is nothing to use for the comparison; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>