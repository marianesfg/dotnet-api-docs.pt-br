<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe29b9b8c339ea42cc85c893adfac7fae474eb2b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36720951" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <TypeSignature Language="F#" Value="type DialogPropertyValueEditor = class&#xA;    inherit PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contêiner para toda a lógica de edição de caixa de diálogo para objetos <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> classe para mostrar um editor embutido que pode ter uma caixa de diálogo associada editor.  
  
 O <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> classe pode conter um <xref:System.Windows.DataTemplate> para um editor de caixa de diálogo ou lógica personalizada que é chamada quando a caixa de diálogo é invocada.  
  
 Use o <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> no seu <xref:System.Windows.DataTemplate> invocar personalizados <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> classe.  
  
 Você pode fornecer um <xref:System.Windows.DataTemplate> que é mostrada na caixa de diálogo de host, ou você pode substituir o <xref:System.Windows.Forms.Form.ShowDialog> método, que permite a reutilização das caixas de diálogo existente ou sistema.  
  
 A lista a seguir mostra as regras para determinar se o <xref:System.Windows.DataTemplate> ou <xref:System.Windows.Forms.Form.ShowDialog> método é usado.  
  
 Se o <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> propriedade não é uma referência nula (Nothing no Visual Basic), que <xref:System.Windows.DataTemplate> é hospedado em uma caixa de diálogo de host específico que fornece o estilo do host. O <xref:System.Windows.Forms.Form.ShowDialog> não for chamado.  
  
 Se o <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> propriedade é uma referência nula (Nothing no Visual Basic), virtual <xref:System.Windows.Forms.Form.ShowDialog> método é chamado e você pode substituir este método para mostrar qualquer caixa de diálogo.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> sem modelos específicos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" Usage="new System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor (dialogEditorTemplate, inlineEditorTemplate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">Um <see cref="T:System.Windows.DataTemplate" /> que é hospedado em um cromado de caixa de diálogo específico de host e tem seu <see cref="P:System.Activities.ActivityContext.DataContext" /> definido para o <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> que corresponde à propriedade sendo editada.</param>
        <param name="inlineEditorTemplate">Um <see cref="T:System.Windows.DataTemplate" /> que é usado para a interface do usuário do editor embutido. Se usado, seu <see cref="P:System.Activities.ActivityContext.DataContext" /> é definido para o <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> que corresponde à propriedade sendo editada.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> com o editor de caixa de diálogo especificado e modelos de editor embutidos.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DialogEditorTemplate : System.Windows.DataTemplate with get, set" Usage="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.DataTemplate" /> que é hospedado por uma caixa de diálogo específica de host e tem seu <see cref="P:System.Activities.ActivityContext.DataContext" /> definido para um <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />.</summary>
        <value>O <see cref="T:System.Windows.DataTemplate" /> objeto que é hospedado por uma caixa de diálogo específica do host.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se essa propriedade retorna `null`, o <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> método é chamado em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit&#xA;override this.ShowDialog : System.Activities.Presentation.PropertyEditing.PropertyValue * System.Windows.IInputElement -&gt; unit" Usage="dialogPropertyValueEditor.ShowDialog (propertyValue, commandSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue">O <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> para a propriedade sendo editada.</param>
        <param name="commandSource">O <see cref="T:System.Windows.IInputElement" /> que pode ser usado como uma origem para execução de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />.</param>
        <summary>Chamado quando o <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> é nulo e uma caixa de diálogo foi invocada pelo usuário.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como os comandos são manipulados pelo host e, como caixas de diálogo personalizadas não for parte da árvore visual, o `commandSource` expõe um <xref:System.Windows.IInputElement> que faz parte da árvore visual do host e, portanto, pode ser usado para executar comandos de edição de propriedade forma que eles são tratados corretamente. Substituir esse método permite que você implementar qualquer lógica de diálogo personalizadas, como chamar caixas de diálogo de sistema existente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>