<Type Name="DataSourceIDConverter" FullName="System.Web.UI.Design.WebControls.DataSourceIDConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd1a0d657ce4a9df1e4828189df36b31b3a9f829" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37747907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataSourceIDConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceIDConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceIDConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceIDConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataSourceIDConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Cria uma lista selecionável pelo usuário de nomes de fonte de dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> classe é um <xref:System.ComponentModel.TypeConverter> objeto normalmente é referenciado pelo <xref:System.ComponentModel.TypeConverterAttribute> atributo.  
  
 A fonte de dados nomes que são retornados pelo <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> método são componentes do contêiner do contexto especificado que são fontes de dados válido.  
  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> método obtém um valor que indica se os nomes de fonte de dados retornados são uma lista exclusiva de valores possíveis. O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A> método obtém um valor que indica se os nomes de fonte de dados são um conjunto padrão de valores que podem ser escolhidos em uma lista.  
  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> método converte o objeto especificado no tipo nativo do conversor. O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> método obtém um valor que indica se este <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> pode converter um objeto no tipo de origem especificado para o tipo nativo.  
  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A> método indica se o componente especificado implementa o <xref:System.Web.UI.IDataSource> interface.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <altmember cref="T:System.Web.UI.IDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceIDConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O .NET Framework constrói internamente uma nova instância dos <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> classe quando a classe é referenciada por uma <xref:System.ComponentModel.TypeConverterAttribute> atributo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceIDConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que implementa o <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, que fornece informações sobre um contexto para um conversor de tipo, de modo que o conversor de tipo possa fazer uma conversão.</param>
        <param name="sourceType">O <see cref="T:System.Type" /> do objeto para o qual a conversão está sendo solicitada.</param>
        <summary>Obtém um valor que indica se esse conversor pode converter um objeto do tipo de origem especificado no tipo nativo do conversor.</summary>
        <returns>
          <see langword="true" /> se <paramref name="sourceType" /> é uma cadeia de caracteres; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> método só pode converter uma cadeia de caracteres, portanto, o <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> retorna apenas `true` quando `sourcetype` é uma cadeia de caracteres.  
  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> não usa o `context` parâmetro.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataSourceIDConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que implementa o <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, que fornece informações sobre um contexto para um conversor de tipo, de modo que o conversor de tipo possa fazer uma conversão.</param>
        <param name="culture">Um objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica a cultura do parâmetro <c>value</c>.</param>
        <param name="value">O objeto a ser convertido.</param>
        <summary>Converte o objeto especificado para o tipo nativo do conversor.</summary>
        <returns>O parâmetro <paramref name="value" /> é retornado como uma cadeia de caracteres.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `value` parâmetro tem um tipo de cadeia de caracteres, ele é retornado como uma cadeia de caracteres. Se `value` é `null`, uma cadeia de caracteres vazia ("") será retornado. Caso contrário, uma <xref:System.NotSupportedException> será gerada.  
  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> método não usa o `context` ou `culture` parâmetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> é diferente de uma cadeia de caracteres ou <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceIDConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que implementa o <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, que fornece informações sobre um contexto para um conversor de tipo, de modo que o conversor de tipo possa fazer uma conversão.</param>
        <summary>Retorna uma lista dos nomes de fonte de dados disponíveis.</summary>
        <returns>Uma <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contém os nomes dos controles que implementam a interface <see cref="T:System.Web.UI.IDataSource" /> e que estão disponíveis para uso no contexto especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> método cria uma lista dos nomes dos componentes que são fontes de dados válido no contêiner do objeto especificado pelo `context` parâmetro. Em seguida, converte essa lista para um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.ComponentModel.ITypeDescriptorContext.Container" />
        <altmember cref="P:System.ComponentModel.Container.Components" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceIDConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que implementa o <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, que fornece informações sobre um contexto para um conversor de tipo, de modo que o conversor de tipo possa fazer uma conversão.</param>
        <summary>Obtém um valor que indica se os nomes de fontes de dados retornados são uma lista exclusiva de valores possíveis.</summary>
        <returns>Sempre <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você derivar uma classe a partir o <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> de classe e substituir o <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> também substituir o método para retornar uma lista exclusiva de nomes de fonte de dados, o <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> método retorne `true` quando a lista de nome de fonte de dados é exclusiva.  
  
 O `context` parâmetro não é usado pelo <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceIDConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Um objeto que implementa o <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, que fornece informações sobre um contexto para um conversor de tipo, de modo que o conversor de tipo possa fazer uma conversão.</param>
        <summary>Obtém um valor que indica se esse objeto retorna um conjunto padrão de nomes de fontes de dados que podem ser escolhidos de uma lista.</summary>
        <returns>Sempre <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `context` parâmetro não é usado pelo <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValidDataSource (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsValidDataSource(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IsValidDataSource : System.ComponentModel.IComponent -&gt; bool&#xA;override this.IsValidDataSource : System.ComponentModel.IComponent -&gt; bool" Usage="dataSourceIDConverter.IsValidDataSource component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Um objeto que implementa a interface do <see cref="T:System.ComponentModel.IComponent" />.</param>
        <summary>Obtém um valor que indica se o componente especificado é uma fonte de dados válida.</summary>
        <returns>
          <see langword="true" /> se <paramref name="component" /> é uma fonte de dados válida; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A> método considera o `component` parâmetro seja uma fonte de dados válido se ele implementa o <xref:System.Web.UI.IDataSource> interface.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>O <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> método deve ser substituído por controles que precisam investigar ainda mais um determinado componente para decidir se deve ser retornado na lista de valores padrão. Por exemplo, se um controle funciona somente com <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> fontes de dados <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> deve retornar <see langword="true" /> somente para os componentes que são <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> objetos.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
  </Members>
</Type>