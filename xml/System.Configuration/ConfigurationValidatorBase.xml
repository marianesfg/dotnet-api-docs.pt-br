<Type Name="ConfigurationValidatorBase" FullName="System.Configuration.ConfigurationValidatorBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ceb605f4b528fe5b239bc7ee8bc766d6db99a6f" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63865549" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationValidatorBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationValidatorBase abstract" />
  <TypeSignature Language="F#" Value="type ConfigurationValidatorBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Atua como uma classe base para derivar uma classe de validação, para que um valor de um objeto possa ser verificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationValidatorBase> classe é usada para criar um validador personalizado. Um validador personalizado pode ser usado para verificar os valores do objeto.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationValidatorBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationValidatorBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationValidatorBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma instância da classe <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public virtual bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanValidate : Type -&gt; bool&#xA;override this.CanValidate : Type -&gt; bool" Usage="configurationValidatorBase.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo de objeto.</param>
        <summary>Determina se um objeto pode ser validado com base no tipo.</summary>
        <returns><see langword="true" /> se o valor do parâmetro <paramref name="type" /> corresponder ao <see langword="type" /> esperado, caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj -&gt; unit" Usage="configurationValidatorBase.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O valor do objeto.</param>
        <summary>Determina se o valor de um objeto é válido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um objeto derivado de <xref:System.Configuration.ConfigurationValidatorBase> classe contém os critérios necessários para validar um objeto. Os critérios são estabelecidos quando a classe derivada é instanciada. O objeto a ser validado é passado como um parâmetro do <xref:System.Configuration.ConfigurationValidatorBase.Validate%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>