<Type Name="ConfigurationElement" FullName="System.Configuration.ConfigurationElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67bee461af6effb71727883d3358b5458aab428d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39909091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElement abstract" />
  <TypeSignature Language="F#" Value="type ConfigurationElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um elemento de configuração em um arquivo de configuração.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement> é uma classe abstrata que é usada para representar um elemento XML em um arquivo de configuração (por exemplo, o Web. config). Um elemento em um arquivo de configuração pode conter zero, um ou mais elementos filho.  
  
 Porque o <xref:System.Configuration.ConfigurationElement> classe é definida como abstrata, você não pode criar uma instância dele. Você só pode derivar classes dele. O .NET Framework inclui classes que derivam de <xref:System.Configuration.ConfigurationElement> classe para representar elementos de configuração XML padrão, como <xref:System.Configuration.ConfigurationSection>. Você também pode estender o <xref:System.Configuration.ConfigurationElement> classe para acessar os elementos de configuração personalizada e seções. O exemplo incluído neste tópico mostra como acessar elementos de configuração personalizada e seções usando classes personalizadas que derivam de <xref:System.Configuration.ConfigurationElement>.  
  
 Você também pode estender os tipos de configuração padrão, como <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, e <xref:System.Configuration.ConfigurationSection>. Para obter mais informações, consulte a documentação para essas classes.  
  
 Para obter mais informações sobre como acessar informações em arquivos de configuração, consulte o <xref:System.Configuration.ConfigurationManager> classe e o <xref:System.Web.Configuration.WebConfigurationManager> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como implementar um personalizado <xref:System.Configuration.ConfigurationElement> como um elemento individual em uma seção personalizada e uma coleção de elementos em uma seção personalizada. O exemplo consiste dos seguintes arquivos:  
  
-   Um arquivo App. config que contém uma seção personalizada denominada `MyUrls`. Esta seção contém um elemento simples (não contém todos os outros elementos) e uma coleção de elementos. O elemento simple é denominado `simple` e a coleção é chamada `urls`.  
  
-   Um aplicativo de console. O aplicativo lê o conteúdo do arquivo App. config e grava as informações no console. Ele usa as classes que derivam <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, e <xref:System.Configuration.ConfigurationSection>.  
  
-   Uma classe chamada `UrlsSection` que deriva de <xref:System.Configuration.ConfigurationSection> classe. Essa classe é usada para acessar o `MyUrls` seção no arquivo de configuração.  
  
-   Uma classe chamada `UrlsCollection` que deriva de <xref:System.Configuration.ConfigurationElementCollection> classe. Essa classe é usada para acessar o `urls` coleta no arquivo de configuração.  
  
-   Uma classe chamada `UrlConfigElement` que deriva de <xref:System.Configuration.ConfigurationElement> classe. Essa classe é usada para acessar o `simple` elemento e os membros do `urls` coleta no arquivo de configuração.  
  
 Para executar o exemplo, execute as seguintes etapas:  
  
1.  Criar uma solução que tem um projeto de aplicativo de console e um projeto de biblioteca de classes chamado `ConfigurationElement`.  
  
2.  Coloque os arquivos de três classes no projeto de biblioteca de classes e os outros arquivos no projeto da biblioteca do console.  
  
3.  Em ambos os projetos, defina uma referência ao `System.Configuration`.  
  
4.  No console do projeto de aplicativo defina uma referência de projeto ao projeto de biblioteca de classes.  
  
  
  
 [!code-csharp[System.Configuration.ConfigurationElement#151](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#151)]
 [!code-vb[System.Configuration.ConfigurationElement#151](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#151)]  
  
 [!code-csharp[System.Configuration.ConfigurationElement#71](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomSection.cs#71)]
 [!code-vb[System.Configuration.ConfigurationElement#71](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomSection.vb#71)]  
  
 [!code-csharp[System.Configuration.ConfigurationElement#51](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomElementCollection.cs#51)]
 [!code-vb[System.Configuration.ConfigurationElement#51](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomElementCollection.vb#51)]  
  
 [!code-csharp[System.Configuration.ConfigurationElement#31](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomElement.cs#31)]
 [!code-vb[System.Configuration.ConfigurationElement#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomElement.vb#31)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Cada <see cref="T:System.Configuration.ConfigurationElement" /> objeto cria interno <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> coleção de <see cref="T:System.Configuration.ConfigurationProperty" /> objetos que representa os atributos do elemento ou uma coleção de elementos filho.  Informações não personalizáveis e a funcionalidade contida por uma <see cref="T:System.Configuration.ElementInformation" /> objeto fornecido pelo <see cref="P:System.Configuration.ConfigurationElement.ElementInformation" /> propriedade.  Você pode usar um modelo declarativo de codificação (atribuído) ou por uma programação para criar um elemento de configuração personalizada:-exige que o modelo de programação que, para cada atributo de elemento, você cria uma propriedade para obter ou definir seu valor e adicioná-lo para a propriedade interna recipiente de subjacente <see cref="T:System.Configuration.ConfigurationElement" /> classe base. Para obter um exemplo de como usar esse modelo, consulte o <see cref="T:System.Configuration.ConfigurationSection" /> classe.  -O mais simples do modelo declarativo, também chamado de modelo atribuída, permite que você definir um atributo de elemento usando uma propriedade e, em seguida, decorá-lo com atributos. Esses atributos instruem o sistema de configuração do ASP.NET sobre os tipos de propriedade e seus valores padrão. Com essas informações obtidas por meio de reflexão, o sistema de configuração do ASP.NET cria objetos de propriedade de elemento para você e realiza a inicialização necessária. O exemplo mostrado mais adiante neste tópico mostra como usar esse modelo.</para>
    </block>
    <altmember cref="T:System.Configuration.ConfigurationManager" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Configuration.ElementInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElementCollection" />
    <altmember cref="T:System.Configuration.ConfigurationElementCollectionType" />
    <altmember cref="T:System.Configuration.ConfigurationProperty" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você cria uma nova instância dos <xref:System.Configuration.ConfigurationElement> classe, por exemplo, sempre que seu aplicativo precisa para adicionar um novo elemento para o relacionado <xref:System.Configuration.ConfigurationElementCollection> coleção.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar um construtor personalizado.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#32](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomElement.cs#32)]
 [!code-vb[System.Configuration.ConfigurationElement#32](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomElement.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfiguration">
      <MemberSignature Language="C#" Value="public System.Configuration.Configuration CurrentConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.Configuration CurrentConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfiguration As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Configuration ^ CurrentConfiguration { System::Configuration::Configuration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfiguration : System.Configuration.Configuration" Usage="System.Configuration.ConfigurationElement.CurrentConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência para a instância <see cref="T:System.Configuration.Configuration" /> de nível superior que representa a hierarquia de configuração à qual a instância atual <see cref="T:System.Configuration.ConfigurationElement" /> pertence.</summary>
        <value>O instância <see cref="T:System.Configuration.Configuration" /> de nível superior à qual a instância atual <see cref="T:System.Configuration.ConfigurationElement" /> pertence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.CurrentConfiguration%2A> propriedade torna mais fácil de determinar qual versão do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] destina-se. O <xref:System.Configuration.Configuration.TargetFramework%2A> propriedade de nível superior <xref:System.Configuration.Configuration> instância indica a versão do framework de destino.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeElement">
      <MemberSignature Language="C#" Value="protected internal virtual void DeserializeElement (System.Xml.XmlReader reader, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DeserializeElement(class System.Xml.XmlReader reader, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub DeserializeElement (reader As XmlReader, serializeCollectionKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DeserializeElement(System::Xml::XmlReader ^ reader, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeElement : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.DeserializeElement : System.Xml.XmlReader * bool -&gt; unit" Usage="configurationElement.DeserializeElement (reader, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">O <see cref="T:System.Xml.XmlReader" /> que lê do arquivo de configuração.</param>
        <param name="serializeCollectionKey">
          <see langword="true" /> para serializar apenas as propriedades de chave da coleção; caso contrário, <see langword="false" />.</param>
        <summary>Lê o XML do arquivo de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como estender o <xref:System.Configuration.ConfigurationElement.DeserializeElement%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#33](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomElement.cs#33)]
 [!code-vb[System.Configuration.ConfigurationElement#33](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomElement.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O elemento a ler está bloqueado.  
  
\- ou - 
Um atributo do nó atual não é reconhecido.  
  
\- ou - 
O status de bloqueio do nó atual não pode ser determinado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ElementInformation">
      <MemberSignature Language="C#" Value="public System.Configuration.ElementInformation ElementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ElementInformation ElementInformation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.ElementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementInformation As ElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ElementInformation ^ ElementInformation { System::Configuration::ElementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementInformation : System.Configuration.ElementInformation" Usage="System.Configuration.ConfigurationElement.ElementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Configuration.ElementInformation" /> que contém as informações não personalizáveis e a funcionalidade do objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>Um <see cref="T:System.Configuration.ElementInformation" /> que contém as informações não personalizáveis e a funcionalidade do <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElement.ElementInformation%2A> propriedade.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#80](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#80)]
 [!code-vb[System.Configuration.ConfigurationElement#80](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#80)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ElementInformation" />
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected internal virtual System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Configuration.ConfigurationElement.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Configuration.ConfigurationElementProperty" /> que representa o próprio objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationElementProperty" /> que representa o <see cref="T:System.Configuration.ConfigurationElement" /> em si.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object compareTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object compareTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (compareTo As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ compareTo);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationElement.Equals compareTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compareTo">O objeto com o qual comparar.</param>
        <summary>Compara a instância <see cref="T:System.Configuration.ConfigurationElement" /> atual com o objeto especificado.</summary>
        <returns>
          <see langword="true" /> se o objeto ao qual comparar for igual à instância <see cref="T:System.Configuration.ConfigurationElement" /> atual, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationContext">
      <MemberSignature Language="C#" Value="protected System.Configuration.ContextInformation EvaluationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ContextInformation EvaluationContext" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.EvaluationContext" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EvaluationContext As ContextInformation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Configuration::ContextInformation ^ EvaluationContext { System::Configuration::ContextInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationContext : System.Configuration.ContextInformation" Usage="System.Configuration.ConfigurationElement.EvaluationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ContextInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Configuration.ContextInformation" /> para o objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>O <see cref="T:System.Configuration.ContextInformation" /> para o <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Configuration.ContextInformation> objeto fornece o contexto necessário para um <xref:System.Configuration.ConfigurationElement> objeto para tomar decisões com base em onde ele está sendo avaliado.  
  
 O <xref:System.Configuration.ContextInformation> objeto fornece detalhes relacionados a um elemento de configuração do ambiente. Por exemplo, você pode usar o <xref:System.Configuration.ContextInformation.IsMachineLevel%2A> propriedade para determinar se um <xref:System.Configuration.ConfigurationElement> foi definida em Machine. config, ou você pode determinar qual hierarquia uma <xref:System.Configuration.ConfigurationElement> elemento pertence a usando o <xref:System.Configuration.ContextInformation.HostingContext%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O elemento atual não está associado a um contexto.</exception>
        <altmember cref="T:System.Configuration.ContextInformation" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um valor exclusivo que representa a instância <see cref="T:System.Configuration.ConfigurationElement" /> atual.</summary>
        <returns>Um valor exclusivo que representa a instância atual <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformedAssemblyString">
      <MemberSignature Language="C#" Value="protected virtual string GetTransformedAssemblyString (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTransformedAssemblyString(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTransformedAssemblyString (assemblyName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTransformedAssemblyString(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member GetTransformedAssemblyString : string -&gt; string&#xA;override this.GetTransformedAssemblyString : string -&gt; string" Usage="configurationElement.GetTransformedAssemblyString assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">O nome do assembly.</param>
        <summary>Retorna a versão transformada do nome do assembly especificado.</summary>
        <returns>A versão transformada do nome do assembly. Se nenhum transformador estiver disponível, o valor do parâmetro <paramref name="assemblyName" /> será retornado inalterado. A propriedade <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> será <see langword="null" /> se nenhum transformador estiver disponível.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.SerializeElement%2A> método e o <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> método chamar esse método para transformar um nome de assembly quando uma versão anterior da [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] destina-se.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformedTypeString">
      <MemberSignature Language="C#" Value="protected virtual string GetTransformedTypeString (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTransformedTypeString(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTransformedTypeString (typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTransformedTypeString(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetTransformedTypeString : string -&gt; string&#xA;override this.GetTransformedTypeString : string -&gt; string" Usage="configurationElement.GetTransformedTypeString typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">O nome do tipo.</param>
        <summary>Retorna a versão transformada do nome do tipo especificado.</summary>
        <returns>A versão transformada do nome do tipo especificado. Se nenhum transformador estiver disponível, o valor do parâmetro <paramref name="typeName" /> será retornado inalterado. A propriedade <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> será <see langword="null" /> se nenhum transformador estiver disponível.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.SerializeElement%2A> método e o <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> método chamar esse método para transformar um nome de tipo quando uma versão anterior da [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] destina-se.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContext">
      <MemberSignature Language="C#" Value="protected bool HasContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContext" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.HasContext" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HasContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool HasContext { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasContext : bool" Usage="System.Configuration.ConfigurationElement.HasContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a propriedade <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> é <see langword="null" />.</summary>
        <value>False se o <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> é de propriedade <see langword="null" />; caso contrário, <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected internal virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="configurationElement.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define o objeto <see cref="T:System.Configuration.ConfigurationElement" /> para seu estado inicial.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeDefault">
      <MemberSignature Language="C#" Value="protected internal virtual void InitializeDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void InitializeDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.InitializeDefault" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitializeDefault ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitializeDefault();" />
      <MemberSignature Language="F#" Value="abstract member InitializeDefault : unit -&gt; unit&#xA;override this.InitializeDefault : unit -&gt; unit" Usage="configurationElement.InitializeDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usado para inicializar um conjunto padrão de valores para o objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamado para definir o estado interno do objeto para valores padrão apropriados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool IsModified();" />
      <MemberSignature Language="F#" Value="abstract member IsModified : unit -&gt; bool&#xA;override this.IsModified : unit -&gt; bool" Usage="configurationElement.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se este elemento de configuração foi modificado desde a última vez em que foi salvo ou carregado quando implementado em uma classe derivada.</summary>
        <returns>
          <see langword="true" /> se o elemento tiver sido modificado, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.IsModified%2A> método determina se esse <xref:System.Configuration.ConfigurationElement> objeto será gravado para a configuração de arquivo quando o <xref:System.Configuration.Configuration.Save%2A> método é chamado. Se o valor retornado é `false`, supõe-se que o arquivo de configuração representa o estado atual do elemento.  
  
 Por padrão, <xref:System.Configuration.ConfigurationElement.IsModified%2A> retorna `true` depois que uma propriedade é definida por meio do indexador a este <xref:System.Configuration.ConfigurationElement> objeto.  
  
 Substituir a <xref:System.Configuration.ConfigurationElement.IsModified%2A> método para fornecer personalizada indicação do estado disso <xref:System.Configuration.ConfigurationElement> elemento.  
  
   
  
## Examples  
 O exemplo a seguir mostra como estender <xref:System.Configuration.ConfigurationElement.IsModified%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#35](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomElement.cs#35)]
 [!code-vb[System.Configuration.ConfigurationElement#35](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomElement.vb#35)]  
  
 O método mostrado no exemplo anterior é chamado quando um elemento de configuração for modificado, como no exemplo a seguir.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#6)]
 [!code-vb[System.Configuration.ConfigurationElement#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member IsReadOnly : unit -&gt; bool&#xA;override this.IsReadOnly : unit -&gt; bool" Usage="configurationElement.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um valor que indica se o objeto <see cref="T:System.Configuration.ConfigurationElement" /> é somente leitura.</summary>
        <returns>
          <see langword="true" /> se o objeto <see cref="T:System.Configuration.ConfigurationElement" /> for somente leitura; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O sistema define elementos de configuração que não podem ser modificados.  
  
 Para determinar quais elementos podem ser modificados, use o <xref:System.Configuration.ConfigurationElement.IsReadOnly%2A> método.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o método <xref:System.Configuration.ConfigurationElement.IsReadOnly%2A>. Ele é usado em uma seção personalizada e retorna `false`.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#7)]
 [!code-vb[System.Configuration.ConfigurationElement#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém ou define uma propriedade, atributo ou elemento filho desse objeto <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse método para obter ou definir os valores de um <xref:System.Configuration.ConfigurationProperty> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="protected internal object this[System.Configuration.ConfigurationProperty prop] { get; set; }" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Default Protected Friend Property Item(prop As ConfigurationProperty) As Object" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ default[System::Configuration::ConfigurationProperty ^] { System::Object ^ get(System::Configuration::ConfigurationProperty ^ prop); void set(System::Configuration::ConfigurationProperty ^ prop, System::Object ^ value); };" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected internal object this[System.Configuration.ConfigurationProperty property] { get; set; }" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Configuration.ConfigurationProperty)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Default Protected Friend Property Item(property As ConfigurationProperty) As Object" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ default[System::Configuration::ConfigurationProperty ^] { System::Object ^ get(System::Configuration::ConfigurationProperty ^ property); void set(System::Configuration::ConfigurationProperty ^ property, System::Object ^ value); };" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Item(System.Configuration.ConfigurationProperty) : obj with get, set" Usage="System.Configuration.ConfigurationElement.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Configuration.ConfigurationProperty" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="property" Type="System.Configuration.ConfigurationProperty" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prop">A propriedade a ser acessada.</param>
        <param name="property">A propriedade a ser acessada.</param>
        <summary>Obtém ou define uma propriedade ou um atributo desse elemento de configuração.</summary>
        <value>A propriedade, o atributo ou o elemento filho especificados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Configuration.ConfigurationElement.Item%2A> propriedade para obter ou definir os valores de um <xref:System.Configuration.ConfigurationProperty> objeto.  
  
 Em C#, essa propriedade é o indexador da classe <xref:System.Configuration.ConfigurationSectionCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <paramref name="prop" /> é <see langword="null" /> ou não existe dentro do elemento.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="prop" /> é somente leitura ou está bloqueado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="protected internal object this[string propertyName] { get; set; }" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Default Protected Friend Property Item(propertyName As String) As Object" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected internal object this[string property_name] { get; set; }" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.Item(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Default Protected Friend Property Item(property_name As String) As Object" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ property_name); void set(System::String ^ property_name, System::Object ^ value); };" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ConfigurationElement.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="property_name" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="propertyName">O nome do <see cref="T:System.Configuration.ConfigurationProperty" /> a ser acessado.</param>
        <param name="property_name">O nome do <see cref="T:System.Configuration.ConfigurationProperty" /> a ser acessado.</param>
        <summary>Obtém ou define uma propriedade, atributo ou elemento filho desse elemento de configuração.</summary>
        <value>A propriedade, atributo ou elemento filho especificado</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Configuration.ConfigurationElement.Item%2A> propriedade para obter ou definir os valores de um <xref:System.Configuration.ConfigurationProperty> objeto.  
  
 Em C#, essa propriedade é o indexador da classe <xref:System.Configuration.ConfigurationSectionCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="prop" /> é somente leitura ou está bloqueado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ListErrors">
      <MemberSignature Language="C#" Value="protected virtual void ListErrors (System.Collections.IList errorList);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ListErrors(class System.Collections.IList errorList) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ListErrors (errorList As IList)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ListErrors(System::Collections::IList ^ errorList);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected virtual void ListErrors (System.Collections.IList list);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ListErrors(class System.Collections.IList list) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ListErrors (list As IList)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ListErrors(System::Collections::IList ^ list);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ListErrors : System.Collections.IList -&gt; unit&#xA;override this.ListErrors : System.Collections.IList -&gt; unit" Usage="configurationElement.ListErrors list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorList" Type="System.Collections.IList" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="list" Type="System.Collections.IList" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="errorList">Um objeto que implementa a interface do <see cref="T:System.Collections.IList" />.</param>
        <param name="list">Um objeto que implementa a interface do <see cref="T:System.Collections.IList" />.</param>
        <summary>Adiciona os erros de propriedade inválida deste objeto <see cref="T:System.Configuration.ConfigurationElement" /> e de todos os subelementos à lista passada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAllAttributesExcept">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationLockCollection LockAllAttributesExcept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationLockCollection LockAllAttributesExcept" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockAllAttributesExcept As ConfigurationLockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationLockCollection ^ LockAllAttributesExcept { System::Configuration::ConfigurationLockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LockAllAttributesExcept : System.Configuration.ConfigurationLockCollection" Usage="System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationLockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de atributos bloqueados.</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationLockCollection" /> de atributos bloqueados (propriedades) do elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.LockAllAttributesExcept%2A> propriedade permite bloquear todos os atributos ao mesmo tempo, exceto aquele que você especificar. Para fazer isso, você deve usar o <xref:System.Configuration.ConfigurationLockCollection.Contains%2A> método, conforme explicado na seção de exemplo.  
  
> [!NOTE]
>  O <xref:System.Configuration.ConfigurationElement.LockAllAttributesExcept%2A> propriedade permite que você impeça o filho elementos de configuração do elemento ao qual você aplicar a regra de que está sendo modificado. Use o <xref:System.Configuration.ConfigurationElement.LockItem%2A> propriedade se você deseja colocar um geral de bloqueio no elemento pai em si e seus elementos filho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElement.LockAllAttributesExcept%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#9)]
 [!code-vb[System.Configuration.ConfigurationElement#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se você usar o <see cref="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" /> e <see cref="P:System.Configuration.ConfigurationElement.LockAttributes" /> propriedades ao mesmo tempo, que a regra mais restritiva se aplica.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationLockCollection" />
      </Docs>
    </Member>
    <Member MemberName="LockAllElementsExcept">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationLockCollection LockAllElementsExcept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationLockCollection LockAllElementsExcept" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockAllElementsExcept As ConfigurationLockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationLockCollection ^ LockAllElementsExcept { System::Configuration::ConfigurationLockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LockAllElementsExcept : System.Configuration.ConfigurationLockCollection" Usage="System.Configuration.ConfigurationElement.LockAllElementsExcept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationLockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de elementos bloqueados.</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationLockCollection" /> de elementos bloqueados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.LockAllElementsExcept%2A> propriedade permite bloquear todos os elementos de uma vez, exceto o que você especificar.  
  
> [!NOTE]
>  O <xref:System.Configuration.ConfigurationElement.LockAllElementsExcept%2A> propriedade permite que você impeça o filho elementos de configuração do elemento ao qual você aplicar a regra de que está sendo modificado. Use o <xref:System.Configuration.ConfigurationElement.LockItem%2A> propriedade se você deseja colocar um geral de bloqueio no elemento em si e seus elementos filho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElement.LockAllElementsExcept%2A> propriedade.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#5)]
 [!code-vb[System.Configuration.ConfigurationElement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationLockCollection" />
      </Docs>
    </Member>
    <Member MemberName="LockAttributes">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationLockCollection LockAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationLockCollection LockAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.LockAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockAttributes As ConfigurationLockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationLockCollection ^ LockAttributes { System::Configuration::ConfigurationLockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LockAttributes : System.Configuration.ConfigurationLockCollection" Usage="System.Configuration.ConfigurationElement.LockAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationLockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de atributos bloqueados</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationLockCollection" /> de atributos bloqueados (propriedades) do elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> propriedade permite bloquear todos os atributos que você especificar.  
  
 Para fazer o que você use o <xref:System.Configuration.ConfigurationLockCollection.Contains%2A> método, conforme explicado na seção de exemplo.  
  
> [!NOTE]
>  O <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> propriedade permite que você impeça o filho elementos de configuração do elemento ao qual você aplicar a regra de que está sendo modificado. Use <xref:System.Configuration.ConfigurationElement.LockItem%2A> se você deseja colocar um bloqueio geral no próprio elemento e seus elementos filho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> propriedade.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#8)]
 [!code-vb[System.Configuration.ConfigurationElement#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se você usar o <see cref="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" /> e <see cref="P:System.Configuration.ConfigurationElement.LockAttributes" /> propriedades ao mesmo tempo, que a regra mais restritiva se aplica.</para>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationLockCollection" />
      </Docs>
    </Member>
    <Member MemberName="LockElements">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationLockCollection LockElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationLockCollection LockElements" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.LockElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockElements As ConfigurationLockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationLockCollection ^ LockElements { System::Configuration::ConfigurationLockCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LockElements : System.Configuration.ConfigurationLockCollection" Usage="System.Configuration.ConfigurationElement.LockElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationLockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de elementos bloqueados.</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationLockCollection" /> de elementos bloqueados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.LockElements%2A> propriedade permite bloquear todos os elementos que você especificar.  
  
 Para fazer isso, você deve usar o <xref:System.Configuration.ConfigurationLockCollection.Contains%2A> método, conforme explicado no exemplo a seguir.  
  
> [!NOTE]
>  O <xref:System.Configuration.ConfigurationElement.LockElements%2A> propriedade permite que você impeça o filho elementos de configuração do elemento ao qual você aplicar a regra de que está sendo modificado. Use <xref:System.Configuration.ConfigurationElement.LockItem%2A> se você deseja colocar um bloqueio geral no próprio elemento e seus elementos filho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElement.LockElements%2A> propriedade.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#4)]
 [!code-vb[System.Configuration.ConfigurationElement#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationLockCollection" />
      </Docs>
    </Member>
    <Member MemberName="LockItem">
      <MemberSignature Language="C#" Value="public bool LockItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockItem" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.LockItem" />
      <MemberSignature Language="VB.NET" Value="Public Property LockItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LockItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LockItem : bool with get, set" Usage="System.Configuration.ConfigurationElement.LockItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o elemento está bloqueado.</summary>
        <value>
          <see langword="true" /> se o elemento estiver bloqueado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Configuration.ConfigurationElement.LockItem%2A> propriedade se você deseja colocar um geral de bloqueio no elemento em si e seus elementos filho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElement.LockItem%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElement#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O elemento já foi bloqueado em um nível mais alto de configuração.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedAttribute">
      <MemberSignature Language="C#" Value="protected virtual bool OnDeserializeUnrecognizedAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDeserializeUnrecognizedAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnDeserializeUnrecognizedAttribute (name As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnDeserializeUnrecognizedAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserializeUnrecognizedAttribute : string * string -&gt; bool&#xA;override this.OnDeserializeUnrecognizedAttribute : string * string -&gt; bool" Usage="configurationElement.OnDeserializeUnrecognizedAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do atributo não reconhecido.</param>
        <param name="value">O valor do atributo não reconhecido.</param>
        <summary>Obtém um valor que indica se um atributo desconhecido é encontrado durante a desserialização.</summary>
        <returns>
          <see langword="true" /> quando um atributo desconhecido é encontrado ao desserializar; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute%2A> é invocado quando um atributo desconhecido é encontrado ao desserializar o <xref:System.Configuration.ConfigurationElement> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected virtual bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected virtual bool OnDeserializeUnrecognizedElement (string element, System.Xml.XmlReader reader);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnDeserializeUnrecognizedElement(string element, class System.Xml.XmlReader reader) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnDeserializeUnrecognizedElement (element As String, reader As XmlReader) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnDeserializeUnrecognizedElement(System::String ^ element, System::Xml::XmlReader ^ reader);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool&#xA;override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElement.OnDeserializeUnrecognizedElement (element, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="element" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="1" />
      </Parameters>
      <Docs>
        <param name="elementName">O nome do subelemento desconhecido.</param>
        <param name="element">O nome do subelemento desconhecido.</param>
        <param name="reader">O <see cref="T:System.Xml.XmlReader" /> sendo usado para desserialização.</param>
        <summary>Obtém um valor que indica se um elemento desconhecido é encontrado durante a desserialização.</summary>
        <returns>
          <see langword="true" /> quando um elemento desconhecido é encontrado ao desserializar; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A> é invocado quando um atributo desconhecido é encontrado ao desserializar o <xref:System.Configuration.ConfigurationElement> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O elemento identificado por <paramref name="elementName" /> está bloqueado.  
  
\- ou - 
Um ou mais dos atributos do elemento está bloqueado.  
  
\- ou - 
 <paramref name="elementName" /> não é reconhecido ou o elemento tem um atributo não reconhecido.  
  
\- ou - 
O elemento tem um atributo booliano com um valor inválido.  
  
\- ou - 
Foi feita uma tentativa de desserializar uma propriedade mais de uma vez.  
  
\- ou - 
Foi feita uma tentativa de desserializar uma propriedade que não é um membro válido do elemento.  
  
\- ou - 
O elemento não pode conter um elemento de texto ou CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnRequiredPropertyNotFound">
      <MemberSignature Language="C#" Value="protected virtual object OnRequiredPropertyNotFound (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnRequiredPropertyNotFound(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnRequiredPropertyNotFound (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnRequiredPropertyNotFound(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OnRequiredPropertyNotFound : string -&gt; obj&#xA;override this.OnRequiredPropertyNotFound : string -&gt; obj" Usage="configurationElement.OnRequiredPropertyNotFound name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do atributo necessário não foi encontrado.</param>
        <summary>Gera uma exceção quando uma propriedade necessária não é encontrada.</summary>
        <returns>nenhuma.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement%2A> é invocado quando um atributo desconhecido é encontrado ao desserializar o <xref:System.Configuration.ConfigurationElement> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Em todos os casos.</exception>
      </Docs>
    </Member>
    <Member MemberName="PostDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void PostDeserialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostDeserialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.PostDeserialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostDeserialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostDeserialize();" />
      <MemberSignature Language="F#" Value="abstract member PostDeserialize : unit -&gt; unit&#xA;override this.PostDeserialize : unit -&gt; unit" Usage="configurationElement.PostDeserialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Chamado depois da desserialização.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreSerialize">
      <MemberSignature Language="C#" Value="protected virtual void PreSerialize (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreSerialize(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreSerialize (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreSerialize(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member PreSerialize : System.Xml.XmlWriter -&gt; unit&#xA;override this.PreSerialize : System.Xml.XmlWriter -&gt; unit" Usage="configurationElement.PreSerialize writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> que será usado para desserializar o <see cref="T:System.Configuration.ConfigurationElement" />.</param>
        <summary>Chamado antes da serialização.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected internal virtual System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Configuration.ConfigurationElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de propriedades.</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> das propriedades do elemento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.Properties%2A> propriedade, também chamada de recipiente de propriedades, contém todas as propriedades (atributos) que se aplicam ao elemento.  
  
   
  
## Examples  
 Para obter um exemplo que mostra como usar o <xref:System.Configuration.ConfigurationElement.Properties%2A> propriedade, consulte o <xref:System.Configuration.ConfigurationProperty> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationPropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected internal virtual void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElement.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">O nó pai do elemento de configuração.</param>
        <summary>Redefine o estado interno do objeto <see cref="T:System.Configuration.ConfigurationElement" />, incluindo os bloqueios e as coleções de propriedades.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal virtual void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ResetModified();" />
      <MemberSignature Language="F#" Value="abstract member ResetModified : unit -&gt; unit&#xA;override this.ResetModified : unit -&gt; unit" Usage="configurationElement.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine o valor do método <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> para <see langword="false" /> quando implementado em uma classe derivada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.ResetModified%2A> método é chamado automaticamente após as alterações a esta <xref:System.Configuration.ConfigurationElement> objeto foram gravados para o arquivo de configuração.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="abstract member SerializeElement : System.Xml.XmlWriter * bool -&gt; bool&#xA;override this.SerializeElement : System.Xml.XmlWriter * bool -&gt; bool" Usage="configurationElement.SerializeElement (writer, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> que grava no arquivo de configuração.</param>
        <param name="serializeCollectionKey">
          <see langword="true" /> para serializar apenas as propriedades de chave da coleção; caso contrário, <see langword="false" />.</param>
        <summary>Grava o conteúdo desse elemento de configuração no arquivo de configuração quando implementado em uma classe derivada.</summary>
        <returns>
          <see langword="true" /> se algum dado realmente foi serializado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como estender o <xref:System.Configuration.ConfigurationElement.SerializeElement%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#34](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/CustomElement.cs#34)]
 [!code-vb[System.Configuration.ConfigurationElement#34](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/CustomElement.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O atributo atual está bloqueado em um nível de configuração superior.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToXmlElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool SerializeToXmlElement (System.Xml.XmlWriter writer, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool SerializeToXmlElement(class System.Xml.XmlWriter writer, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeToXmlElement (writer As XmlWriter, elementName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool SerializeToXmlElement(System::Xml::XmlWriter ^ writer, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member SerializeToXmlElement : System.Xml.XmlWriter * string -&gt; bool&#xA;override this.SerializeToXmlElement : System.Xml.XmlWriter * string -&gt; bool" Usage="configurationElement.SerializeToXmlElement (writer, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> que grava no arquivo de configuração.</param>
        <param name="elementName">O nome do <see cref="T:System.Configuration.ConfigurationElement" /> a ser gravado.</param>
        <summary>Grava as marcas externas desse elemento de configuração no arquivo de configuração quando implementado em uma classe derivada.</summary>
        <returns>
          <see langword="true" /> se a gravação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> método é chamado após a chamada para o <xref:System.Configuration.ConfigurationElement.Unmerge%2A> método durante a serialização. O <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> método grava o conteúdo do elemento de configuração entre o início e fim as marcas do elemento. Substituir <xref:System.Configuration.ConfigurationElement.SerializeToXmlElement%2A> para fornecer um método de serialização personalizada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">O elemento tem vários elementos filho.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected void SetPropertyValue (System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPropertyValue(class System.Configuration.ConfigurationProperty prop, object value, bool ignoreLocks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPropertyValue (prop As ConfigurationProperty, value As Object, ignoreLocks As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPropertyValue(System::Configuration::ConfigurationProperty ^ prop, System::Object ^ value, bool ignoreLocks);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : System.Configuration.ConfigurationProperty * obj * bool -&gt; unit" Usage="configurationElement.SetPropertyValue (prop, value, ignoreLocks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.Configuration.ConfigurationProperty" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ignoreLocks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="prop">A propriedade do elemento a ser definida.</param>
        <param name="value">O valor a ser atribuído à propriedade.</param>
        <param name="ignoreLocks">
          <see langword="true" /> para ignorar os bloqueios na propriedade; caso contrário, <see langword="false" />.</param>
        <summary>Define uma propriedade para o valor especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ocorre se o elemento for somente leitura ou se <paramref name="ignoreLocks" /> for <see langword="true" />, mas os bloqueios não puderem ser ignorados.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected internal virtual void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnly : unit -&gt; unit&#xA;override this.SetReadOnly : unit -&gt; unit" Usage="configurationElement.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define a propriedade <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> para o objeto <see cref="T:System.Configuration.ConfigurationElement" /> e para todos os subelementos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado internamente para reservar os elementos de configuração do sistema que não podem ser modificados.  
  
 Para determinar quais elementos podem ser modificados, use o <xref:System.Configuration.ConfigurationElement.IsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationElement.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Unmerge">
      <MemberSignature Language="C#" Value="protected internal virtual void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, saveMode As ConfigurationSaveMode)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode saveMode);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="protected internal virtual void Unmerge (System.Configuration.ConfigurationElement source, System.Configuration.ConfigurationElement parent, System.Configuration.ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Unmerge(class System.Configuration.ConfigurationElement source, class System.Configuration.ConfigurationElement parent, valuetype System.Configuration.ConfigurationSaveMode updateMode) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Unmerge (source As ConfigurationElement, parent As ConfigurationElement, updateMode As ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Unmerge(System::Configuration::ConfigurationElement ^ source, System::Configuration::ConfigurationElement ^ parent, System::Configuration::ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit&#xA;override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElement.Unmerge (source, parent, updateMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceElement" Type="System.Configuration.ConfigurationElement" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
        <Parameter Name="source" Type="System.Configuration.ConfigurationElement" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
        <Parameter Name="parent" Type="System.Configuration.ConfigurationElement" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.7.2" />
        <Parameter Name="updateMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceElement">Um <see cref="T:System.Configuration.ConfigurationElement" /> no nível atual que contém uma exibição mesclada das propriedades.</param>
        <param name="source">Um <see cref="T:System.Configuration.ConfigurationElement" /> no nível atual que contém uma exibição mesclada das propriedades.</param>
        <param name="parentElement">O <see cref="T:System.Configuration.ConfigurationElement" /> pai ou o <see langword="null" /> se este for o nível superior.</param>
        <param name="parent">O <see cref="T:System.Configuration.ConfigurationElement" /> pai ou o <see langword="null" /> se este for o nível superior.</param>
        <param name="saveMode">Um <see cref="T:System.Configuration.ConfigurationSaveMode" /> que determina quais valores de propriedade devem ser incluídos.</param>
        <param name="updateMode">Um <see cref="T:System.Configuration.ConfigurationSaveMode" /> que determina quais valores de propriedade devem ser incluídos.</param>
        <summary>Modifica o objeto <see cref="T:System.Configuration.ConfigurationElement" /> para remover todos os valores que não devem ser salvos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é chamado antes do <xref:System.Configuration.ConfigurationElement> objeto é salvo pelo <xref:System.Configuration.Configuration> para remover todos os desnecessários propriedades do objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="Overload:System.Configuration.Configuration.Save" />
        <altmember cref="Overload:System.Configuration.Configuration.SaveAs" />
      </Docs>
    </Member>
  </Members>
</Type>