<Type Name="TimeSpanMinutesConverter" FullName="System.Configuration.TimeSpanMinutesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cf8d8e19ad3b8e4e09d4a56f4cad0ec586cebf6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39516522" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TimeSpanMinutesConverter : System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TimeSpanMinutesConverter extends System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.TimeSpanMinutesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TimeSpanMinutesConverter&#xA;Inherits ConfigurationConverterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeSpanMinutesConverter : System::Configuration::ConfigurationConverterBase" />
  <TypeSignature Language="F#" Value="type TimeSpanMinutesConverter = class&#xA;    inherit ConfigurationConverterBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationConverterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converte um período de tempo, expressado em minutos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse tipo, como todos os outros configuração conversor tipos, converte cadeias de caracteres encontradas no arquivo de configuração de e para as propriedades com rigidez de tipos relacionadas.  
  
 Em particular, o <xref:System.Configuration.TimeSpanMinutesConverter> converte <xref:System.String> minutos, atribuídos a uma propriedade de configuração, a <xref:System.TimeSpan> minutos e vice-versa.  
  
 O <xref:System.Configuration.TimeSpanMinutesConverter> persistir os valores do tipo `long` que representa um número de minutos.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como definir um personalizado <xref:System.Configuration.TimeSpanMinutesConverter> tipo.  
  
 [!code-csharp[System.Configuration.TimeSpanMinutesConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/CS/TimeSpanMinutesConverter.cs#1)]
 [!code-vb[System.Configuration.TimeSpanMinutesConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/VB/TimeSpanMinutesConverter.vb#1)]  
  
 A seguir está um trecho de configuração usado pelo exemplo anterior.  
  
```xml  
<configuration>  
  
  <configSections>  
    <section name="CustomSection"  
      type="Samples.AspNet.CustomSection,  
      ConfigurationConverters,  
      Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null"  
      allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  
  <CustomSection fileName="default.txt" maxIdleTime="90"   
    timeDelay="infinite" cdStr="str0, str1" permission="Read"   
    maxUsers="Infinite"/>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.GenericEnumConverter" />
    <altmember cref="T:System.Configuration.InfiniteIntConverter" />
    <altmember cref="T:System.Configuration.InfiniteTimeSpanConverter" />
    <altmember cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.TypeNameConverter" />
    <altmember cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpanMinutesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TimeSpanMinutesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpanMinutesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.TimeSpanMinutesConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, você pode usar os tipos de conversor fornecidos pelo sistema. A única vez em que você precisa usar o <xref:System.Configuration.TimeSpanMinutesConverter.%23ctor%2A> construtor é quando você cria seu próprio tipo de conversão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (ctx As ITypeDescriptorContext, ci As CultureInfo, data As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="timeSpanMinutesConverter.ConvertFrom (ctx, ci, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctx">O objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> usado para conversões de tipo.</param>
        <param name="ci">O objeto <see cref="T:System.Globalization.CultureInfo" /> usado durante a conversão.</param>
        <param name="data">O objeto <see cref="T:System.String" /> a ser convertido.</param>
        <summary>Converte uma <see cref="T:System.String" /> em uma <see cref="T:System.TimeSpan" />.</summary>
        <returns>O <see cref="T:System.TimeSpan" /> que representa o parâmetro <paramref name="data" /> em minutos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O sistema usa o <xref:System.Configuration.TimeSpanMinutesConverter.ConvertFrom%2A> método durante a leitura de um arquivo de configuração para converter um <xref:System.String> valor <xref:System.TimeSpan>.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como personalizar o <xref:System.Configuration.TimeSpanMinutesConverter.ConvertFrom%2A> método.  
  
 [!code-csharp[System.Configuration.TimeSpanMinutesConverter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/CS/TimeSpanMinutesConverter.cs#5)]
 [!code-vb[System.Configuration.TimeSpanMinutesConverter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/VB/TimeSpanMinutesConverter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Globalization.CultureInfo ci, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, System::Globalization::CultureInfo ^ ci, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="timeSpanMinutesConverter.ConvertTo (ctx, ci, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">O objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> usado para conversões de tipo.</param>
        <param name="ci">O objeto <see cref="T:System.Globalization.CultureInfo" /> usado durante a conversão.</param>
        <param name="value">O valor para o qual será convertido.</param>
        <param name="type">O tipo para o qual converter.</param>
        <summary>Converte uma <see cref="T:System.TimeSpan" /> em uma <see cref="T:System.String" />.</summary>
        <returns>O <see cref="T:System.String" /> que representa o parâmetro <paramref name="value" /> em minutos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O sistema usa o <xref:System.Configuration.TimeSpanMinutesConverter.ConvertTo%2A> método ao gravar em um arquivo de configuração para converter um <xref:System.TimeSpan> para um <xref:System.String>.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como personalizar o <xref:System.Configuration.TimeSpanMinutesConverter.ConvertTo%2A> método.  
  
 [!code-csharp[System.Configuration.TimeSpanMinutesConverter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/CS/TimeSpanMinutesConverter.cs#4)]
 [!code-vb[System.Configuration.TimeSpanMinutesConverter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/VB/TimeSpanMinutesConverter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>