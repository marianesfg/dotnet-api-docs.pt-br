<Type Name="SectionInformation" FullName="System.Configuration.SectionInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8c650c79dd5c5a5d821915db0257fce6f861923" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SectionInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SectionInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SectionInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SectionInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class SectionInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém metadados sobre uma seção individual dentro da hierarquia de configuração. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation> objeto contém os metadados sobre uma seção individual dentro da hierarquia de configuração. Esse objeto pode ser usado para validar e alterar as propriedades de uma seção individual.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation> metadados que está associado com um <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#91](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#91)]
 [!code-vb[System.Configuration.ConfigurationElement#91](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#91)]  
  
 O exemplo a seguir é um trecho do arquivo de configuração que é usado pelo exemplo anterior.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="MyUrls" type="Samples.AspNet.UrlsSection,  
      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null" allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  <MyUrls name="MyFavorites">  
    <simple name="Contoso" url="http://www.contoso.com" port="8080" />  
    <urls>  
      <clear />  
      <add name="Microsoft" url="http://www.microsoft.com" port="0" />  
    </urls>  
  </MyUrls>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName="AllowDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowDefinition AllowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefinition As ConfigurationAllowDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowDefinition AllowDefinition { System::Configuration::ConfigurationAllowDefinition get(); void set(System::Configuration::ConfigurationAllowDefinition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica o local na hierarquia do arquivo de configuração em que a seção de configuração associada pode ser definida.</summary>
        <value>Um valor que indica o local na hierarquia do arquivo de configuração em que o objeto <see cref="T:System.Configuration.ConfigurationSection" /> associado pode ser declarado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowDefinition%2A> aplica-se somente a arquivos de configuração de aplicativos da Web. Para aplicativos cliente, você deve usar <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.  
  
   
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.AllowDefinition%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.AllowDefinition%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#96](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#96)]
 [!code-vb[System.Configuration.ConfigurationElement#96](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Os conflitos de valor selecionados com um valor que já está definido.</exception>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <Member MemberName="AllowExeDefinition">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowExeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowExeDefinition As ConfigurationAllowExeDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationAllowExeDefinition AllowExeDefinition { System::Configuration::ConfigurationAllowExeDefinition get(); void set(System::Configuration::ConfigurationAllowExeDefinition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationAllowExeDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica o local na hierarquia do arquivo de configuração em que a seção de configuração associada pode ser declarada.</summary>
        <value>Um valor que indica o local na hierarquia do arquivo de configuração em que o objeto <see cref="T:System.Configuration.ConfigurationSection" /> associado pode ser declarado para arquivos .exe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> aplica-se somente a arquivos de configuração de aplicativos cliente. Para aplicativos Web, você deve usar <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.  
  
   
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#97](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#97)]
 [!code-vb[System.Configuration.ConfigurationElement#97](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Os conflitos de valor selecionados com um valor que já está definido.</exception>
        <altmember cref="T:System.Configuration.ConfigurationAllowExeDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowLocation">
      <MemberSignature Language="C#" Value="public bool AllowLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLocation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowLocation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowLocation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a seção de configuração permite usar o atributo <see langword="location" />.</summary>
        <value>
          <see langword="true" /> se o atributo <see langword="location" /> for permitido; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando definido como `false`, o <xref:System.Configuration.SectionInformation.AllowLocation%2A> propriedade indica que a seção seja acessada por leitores de código nativo. Portanto, o uso do `location` atributo não é permitido, pois os leitores de código nativo não suportam o conceito de `location`.  
  
   
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.AllowLocation%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.AllowLocation%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#98](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#98)]
 [!code-vb[System.Configuration.ConfigurationElement#98](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Os conflitos de valor selecionados com um valor que já está definido.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowOverride">
      <MemberSignature Language="C#" Value="public bool AllowOverride { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowOverride" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.AllowOverride" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowOverride { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a seção de configuração associada pode ser substituída por arquivos de configuração de nível inferior.</summary>
        <value>
          <see langword="true" /> Se a seção pode ser substituída; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.AllowOverride%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#95](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#95)]
 [!code-vb[System.Configuration.ConfigurationElement#95](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#95)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.AllowOverride%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#99)]
 [!code-vb[System.Configuration.ConfigurationElement#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigSource">
      <MemberSignature Language="C#" Value="public string ConfigSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigSource" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do arquivo de inclusão no qual a seção de configuração associado é definida, se existir tal arquivo.</summary>
        <value>O nome do arquivo de inclusão no qual o <see cref="T:System.Configuration.ConfigurationSection" /> associado é definido, se tal arquivo existir; caso contrário, uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.ConfigSource%2A> propriedade representa o valor da `configSource` atributo especificado para um <xref:System.Configuration.ConfigurationSection> objeto que está associado com o <xref:System.Configuration.SectionInformation> objeto.  
  
 Um <xref:System.Configuration.ConfigurationSection> implementação pode opcionalmente especificar um arquivo separado no qual as definições de configuração nessa seção são definidas. Isso pode ser útil de várias maneiras:  
  
-   Usando arquivos de inclusão pode resultar em uma estrutura modular e mais lógica para arquivos de configuração.  
  
-   Permissões e segurança de acesso a arquivos podem ser usadas para restringir o acesso às seções de definições de configuração.  
  
-   As configurações em um arquivo de inclusão não são usadas durante a inicialização do aplicativo podem ser modificadas e recarregadas sem a necessidade de uma reinicialização do aplicativo.  
  
 O exemplo a seguir mostra como esse atributo é usado em um arquivo de configuração para especificar que o `pages` seção é definida em um arquivo de inclusão externo:  
  
 `<pages configSource="pages.config"/>`  
  
 Se qualquer uma das configurações em uma configuração de incluir o arquivo requer que o aplicativo reiniciar quando eles são modificados, definir o <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> propriedade `true`.  
  
 Em aplicativos ASP.NET, em tempo de execução você pode atribuir ao <xref:System.Configuration.SectionInformation.ConfigSource%2A> o nome de um arquivo de configuração alternativa de propriedade. Nesse caso, o conteúdo do arquivo é substituído pelas informações de cadeia de caracteres de conexão padrão que estão contidas no arquivo Web. config. Isso também ocorre quando o arquivo alternativo não existe e é criado em tempo de execução. Se o arquivo Web. config não contém quaisquer informações de cadeia de caracteres de conexão, uma seção vazia é adicionada ao arquivo alternativo.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      </Docs>
    </Member>
    <Member MemberName="ConfigurationBuilder">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationBuilder ConfigurationBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationBuilder ConfigurationBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ConfigurationBuilder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationBuilder As ConfigurationBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationBuilder ^ ConfigurationBuilder { System::Configuration::ConfigurationBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o objeto <see cref="T:System.Configuration.ConfigurationBuilder" /> para essa seção de configuração.</summary>
        <value>O objeto <see cref="T:System.Configuration.ConfigurationBuilder" /> para essa seção de configuração.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ForceDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Força a seção de configuração associada a aparecer no arquivo de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma seção de configuração não é gravada em um arquivo de configuração quando ela é herdada de um arquivo pai. Se você quiser na seção pai para mostrar no arquivo de configuração filho, você deve definir o <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> para `true`. Isso faz com que um arquivo de configuração mais portáteis de um computador para outro. Isso também permite que você verifique se a seção existe mesmo se você não tem controle sobre os arquivos de configuração pai.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Força a seção de configuração associada a aparecer no arquivo de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> método força isso <xref:System.Configuration.SectionInformation> declaração a ser gravado no arquivo de configuração.  
  
> [!NOTE]
>  O <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> método pode forçar uma <xref:System.Configuration.SectionInformation> declaração a ser gravado em um arquivo de configuração, mesmo se a seção não é necessária porque ele já está declarado em um arquivo pai. Usando o <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> método pode fazer uma configuração de arquivo mais portáteis de um computador para outro. Ele permite que você verifique se a seção existe mesmo quando você não tem controle sobre os arquivos de configuração pai.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceDeclaration">
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool force) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (force As Boolean)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool force);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ForceDeclaration (bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceDeclaration(bool require) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceDeclaration (require As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceDeclaration(bool require);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="require" Type="System.Boolean" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <param name="require">To be added.</param>
        <summary>Força a seção de configuração associada a ser exibida no arquivo de configuração ou remove uma seção existente do arquivo de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> método força isso <xref:System.Configuration.SectionInformation> declaração a ser gravado no arquivo de configuração se `force` é `true`. Se `force` é `false`, essa ação pode ser ignorada se o <xref:System.Configuration.SectionInformation> declaração é exigida pelo sistema.  
  
> [!NOTE]
>  O <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> método pode forçar uma <xref:System.Configuration.SectionInformation> declaração a ser gravado em um arquivo de configuração, mesmo se esta seção não é necessária porque ele já está declarado em um arquivo pai. Usando o <xref:System.Configuration.SectionInformation.ForceDeclaration%2A> método pode fazer uma configuração de arquivo mais portáteis de um computador para outro. Isso também permite que você verifique se a seção existe mesmo se você não tem controle sobre os arquivos de configuração pai.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o método <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#113](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#113)]
 [!code-vb[System.Configuration.ConfigurationElement#113](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="force" /> é <see langword="true" /> e a seção associada não podem ser exportados para o arquivo de configuração filho ou não é declarado.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      </Docs>
    </Member>
    <Member MemberName="ForceSave">
      <MemberSignature Language="C#" Value="public bool ForceSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceSave" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ForceSave" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a seção de configuração associada será salva mesmo se ela não tiver sido modificada.</summary>
        <value>
          <see langword="true" /> Se associado <see cref="T:System.Configuration.ConfigurationSection" /> objeto será salvo, mesmo se não tiver sido modificada; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Se o arquivo de configuração é salvo (mesmo se não houver nenhuma modificação), o ASP.NET reinicia o aplicativo.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.SectionInformation.ForceSave%2A> propriedade de um <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ConfigurationElement.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ConfigurationElement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentSection">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSection GetParentSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Configuration.ConfigurationSection GetParentSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetParentSection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentSection () As ConfigurationSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::ConfigurationSection ^ GetParentSection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém a seção de configuração que contém a seção de configuração associada a este objeto.</summary>
        <returns>A seção de configuração que contém o <see cref="T:System.Configuration.ConfigurationSection" /> associado a este objeto <see cref="T:System.Configuration.SectionInformation" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se este <xref:System.Configuration.ConfigurationSection> objeto não tem seções nenhum pai, o <xref:System.Configuration.SectionInformation.GetParentSection%2A> método retorna o mesmo valor que o <xref:System.Configuration.SectionInformation.Name%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o método <xref:System.Configuration.SectionInformation.GetParentSection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#92](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#92)]
 [!code-vb[System.Configuration.ConfigurationElement#92](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#92)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O método é chamado de uma seção pai.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRawXml">
      <MemberSignature Language="C#" Value="public string GetRawXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRawXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.GetRawXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRawXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um objeto de nó XML que representa o objeto da seção de configuração associada.</summary>
        <returns>A representação XML desta seção de configuração.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir mostra como usar o método <xref:System.Configuration.SectionInformation.GetRawXml%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#93](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#93)]
 [!code-vb[System.Configuration.ConfigurationElement#93](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Esse objeto de configuração está bloqueado e não pode ser editado.</exception>
      </Docs>
    </Member>
    <Member MemberName="InheritInChildApplications">
      <MemberSignature Language="C#" Value="public bool InheritInChildApplications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InheritInChildApplications" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.InheritInChildApplications" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritInChildApplications As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InheritInChildApplications { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se as configurações especificadas na seção de configuração associada são herdadas por aplicativos que residem em um subdiretório do aplicativo relevante.</summary>
        <value>
          <see langword="true" /> se as configurações especificadas neste objeto <see cref="T:System.Configuration.ConfigurationSection" /> forem herdadas pelos aplicativos filho; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> propriedade representa o `inheritInChildApplications` atributo de um `location` elemento em um arquivo de configuração.  
  
 Definir <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> para `false` para impedir que as configurações que são específicas para um determinado local (como o diretório raiz de um site da Web) do que está sendo herdado por aplicativos que existem em subdiretórios.  
  
 O exemplo a seguir mostra como usar esse atributo em um arquivo de configuração para especificar que as configurações definidas no elemento de local para a raiz de um site da Web não devem ser herdadas por aplicativos de filho:  
  
 `<location path="." inheritInChildApplications="false">`  
  
 O <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> a propriedade se aplica somente ao local de definições de configuração específicas.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation.InheritInChildApplications%2A> valor de uma <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#100](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#100)]
 [!code-vb[System.Configuration.ConfigurationElement#100](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclarationRequired">
      <MemberSignature Language="C#" Value="public bool IsDeclarationRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclarationRequired" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclarationRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclarationRequired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a seção de configuração deve ser declarada no arquivo de configuração.</summary>
        <value>
          <see langword="true" /> Se associado <see cref="T:System.Configuration.ConfigurationSection" /> objeto deve ser declarado no arquivo de configuração; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.IsDeclarationRequired%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#103](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#103)]
 [!code-vb[System.Configuration.ConfigurationElement#103](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#103)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public bool IsDeclared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclared" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsDeclared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a seção de configuração associada está declarada no arquivo de configuração.</summary>
        <value>
          <see langword="true" /> Se este <see cref="T:System.Configuration.ConfigurationSection" /> é declarado no arquivo de configuração; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.IsDeclared%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.IsDeclared%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#104](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#104)]
 [!code-vb[System.Configuration.ConfigurationElement#104](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a seção de configuração associada está bloqueada.</summary>
        <value>
          <see langword="true" /> Se a seção está bloqueada; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.IsLocked%2A> propriedade retorna `true` quando a seção correspondente está bloqueada pelo <xref:System.Configuration.SectionInformation.AllowOverride%2A> ou <xref:System.Configuration.SectionInformation.AllowDefinition%2A> propriedade. Uma seção está bloqueada se ele não pode ser substituído ou definido no arquivo de configuração atual.  
  
   
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.IsLocked%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.IsLocked%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#105](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#105)]
 [!code-vb[System.Configuration.ConfigurationElement#105](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProtected">
      <MemberSignature Language="C#" Value="public bool IsProtected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProtected" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.IsProtected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProtected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a seção de configuração associada está protegida.</summary>
        <value>
          <see langword="true" /> Se este <see cref="T:System.Configuration.ConfigurationSection" /> protegido; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seções de configuração protegidos são criptografados e somente leitura.  
  
 Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 Os exemplos nesta seção mostram como obter o <xref:System.Configuration.SectionInformation.IsProtected%2A> valor da propriedade depois de acessar as informações da seção correspondente no arquivo de configuração.  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#102](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#102)]
 [!code-vb[System.Configuration.ConfigurationElement#102](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#102)]  
  
 O exemplo a seguir obtém o <xref:System.Configuration.SectionInformation.IsProtected%2A> valor.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#106](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#106)]
 [!code-vb[System.Configuration.ConfigurationElement#106](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da seção de configuração associada.</summary>
        <value>O nome completo da seção de configuração.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.Name%2A> é o nome da seção sem o caminho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation.Name%2A> valor de uma <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#107](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#107)]
 [!code-vb[System.Configuration.ConfigurationElement#107](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideMode">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideMode" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideMode" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideMode As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideMode { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor de enumeração <see cref="T:System.Configuration.OverrideMode" /> que especifica se a seção de configuração associada pode ser substituída por arquivos de configuração filho.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.AllowOverride%2A> propriedade obtém ou define um valor que indica se os recursos declarada dentro de um `location` elemento pode ser substituído por arquivos de configuração filho. O <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriedade obtém ou define um valor que especifica o comportamento semelhante, mas faz isso para um grupo ou um elemento de configuração específico e usa um do <xref:System.Configuration.OverrideMode> valores de enumeração. O <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriedade permite que o comportamento seja herdada de um elemento pai.  
  
 Não é possível definir ambos programaticamente o <xref:System.Configuration.SectionInformation.AllowOverride%2A> e <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriedade. Definindo o <xref:System.Configuration.SectionInformation.AllowOverride%2A> propriedade `true` define o <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriedade <xref:System.Configuration.OverrideMode.Inherit>. Definindo o <xref:System.Configuration.SectionInformation.AllowOverride%2A> propriedade `false` define o <xref:System.Configuration.SectionInformation.OverrideMode%2A> propriedade `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Foi feita uma tentativa para alterar as propriedades <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> e <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, à qual não há suporte por razões de compatibilidade.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.AllowOverride" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeDefault">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeDefault" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideModeDefault As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeDefault { System::Configuration::OverrideMode get(); void set(System::Configuration::OverrideMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica o comportamento de substituição padrão de uma seção de configuração por arquivos de configuração filho.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> propriedade de uma seção de configuração só pode ser definida o <xref:System.Configuration.OverrideMode.Allow> ou <xref:System.Configuration.OverrideMode.Deny> valor o <xref:System.Configuration.OverrideMode> enumeração. Definindo o <xref:System.Configuration.SectionInformation.OverrideModeDefault%2A> propriedade <xref:System.Configuration.OverrideMode.Inherit> é equivalente a definir o valor como <xref:System.Configuration.OverrideMode.Allow>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O comportamento de substituição é especificado em uma seção de configuração pai.</exception>
        <altmember cref="P:System.Configuration.SectionInformation.OverrideMode" />
      </Docs>
    </Member>
    <Member MemberName="OverrideModeEffective">
      <MemberSignature Language="C#" Value="public System.Configuration.OverrideMode OverrideModeEffective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.OverrideMode OverrideModeEffective" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.OverrideModeEffective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverrideModeEffective As OverrideMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::OverrideMode OverrideModeEffective { System::Configuration::OverrideMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.OverrideMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o comportamento de substituição de uma seção de configuração que, por sua vez, depende se os arquivos de configuração filho podem bloquear a seção de configuração.</summary>
        <value>Um dos valores de enumeração <see cref="T:System.Configuration.OverrideMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade retorna um <xref:System.Configuration.OverrideMode.Deny> ou <xref:System.Configuration.OverrideMode.Allow>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionProvider">
      <MemberSignature Language="C#" Value="public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProtectedConfigurationProvider ProtectionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.ProtectionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionProvider As ProtectedConfigurationProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProtectedConfigurationProvider ^ ProtectionProvider { System::Configuration::ProtectedConfigurationProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ProtectedConfigurationProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o provedor de configuração protegido para a seção de configuração associada.</summary>
        <value>O provedor de configuração protegida desta <see cref="T:System.Configuration.ConfigurationSection" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para seções desprotegidas, o <xref:System.Configuration.SectionInformation.ProtectionProvider%2A> é de propriedade `null`.  
  
 Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation.ProtectSection%2A> valor de uma <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#108](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#108)]
 [!code-vb[System.Configuration.ConfigurationElement#108](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSection">
      <MemberSignature Language="C#" Value="public void ProtectSection (string protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string protectionProvider) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (protectionProvider As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ protectionProvider);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void ProtectSection (string provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProtectSection(string provider) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.ProtectSection(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSection (provider As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProtectSection(System::String ^ provider);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectionProvider" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="provider" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="protectionProvider">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>Marca uma seção de configuração para proteção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.ProtectSection%2A> método marca a seção de criptografia para que ele será gravado em formato criptografado no disco.  
  
 Os seguintes provedores de proteção são incluídos por padrão:  
  
 <xref:System.Configuration.DpapiProtectedConfigurationProvider>  
  
 <xref:System.Configuration.RsaProtectedConfigurationProvider>  
  
> [!NOTE]
>  Se você chamar o <xref:System.Configuration.SectionInformation.ProtectSection%2A> método com um `null` parâmetro ou uma cadeia de caracteres vazia, a <xref:System.Configuration.RsaProtectedConfigurationProvider> classe é usada como o provedor de proteção.  
  
 Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o método <xref:System.Configuration.SectionInformation.ProtectSection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#94](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#94)]
 [!code-vb[System.Configuration.ConfigurationElement#94](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> é definida como <see langword="false" />.  
  
 \- ou -  
  
 A seção de destino já é uma seção de dados protegidos.</exception>
        <altmember cref="T:System.Configuration.DpapiProtectedConfigurationProvider" />
        <altmember cref="T:System.Configuration.RsaProtectedConfigurationProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequirePermission">
      <MemberSignature Language="C#" Value="public bool RequirePermission { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequirePermission" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RequirePermission" />
      <MemberSignature Language="VB.NET" Value="Public Property RequirePermission As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequirePermission { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a seção de configuração associada requer permissões de acesso.</summary>
        <value>
          <see langword="true" /> se o <see langword="requirePermission" /> atributo for definido como <see langword="true" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando <xref:System.Configuration.SectionInformation.RequirePermission%2A> é definido como `true`, o `GetSection` métodos são limitados pela configuração de nível de confiança do aplicativo. Isso significa que métodos ou propriedades que permitem o acesso aos manipuladores de seção de configuração são restritos, o nível de confiança definido para o aplicativo Web.  
  
> [!NOTE]
>  Como confiança total e alta são os níveis de apenas permitem acesso aos arquivos fora do domínio de aplicativo atual, um aplicativo pode usar manipuladores de seção de configuração apenas nesses níveis de confiança.  
  
 Quando <xref:System.Configuration.SectionInformation.RequirePermission%2A> é definido como `false`, o acesso aos dados de configuração não é restrito pelas configurações de nível de confiança do aplicativo.  
  
> [!NOTE]
>  As permissões da ACL (lista de controle de acesso) de arquivo apropriado ainda são necessárias, independentemente do <xref:System.Configuration.SectionInformation.RequirePermission%2A> configuração. Permissões de ACL determinam quem pode acessar o arquivo de configuração.  
  
   
  
## Examples  
 O exemplo a seguir mostra dois níveis de confiança possível para um aplicativo Web quando o <xref:System.Configuration.SectionInformation.RequirePermission%2A> propriedade o `appSettings` seção é `true`.  
  
```  
<system.web>  
   // With the following trust value   
   // the code below works.  
  <trust level="Full" />  
</system.web>  
  
<system.web>  
  // With the following trust value   
  // the code below does not work.  
  <trust level="Medium" />  
</system.web>  
```  
  
 O exemplo a seguir mostra o código que é executado sem erros quando o nível de confiança é definido como full. Caso contrário, o código resulta em erro.  
  
```csharp  
AppSettingsSection apSection =   
  ConfigurationManager.GetSection("appSettings") as AppSettingsSection;  
  
NameValueCollection apSectionCollection =  
  ConfigurationManager.AppSettings;  
```  
  
```vb  
Dim apSection As AppSettingsSection = _   
  TryCast(ConfigurationManager.GetSection("appSettings"),   
    AppSettingsSection)  
  
  Dim apSectionCollection As NameValueCollection = _   
    ConfigurationManager.AppSettings  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Os conflitos de valor selecionados com um valor que já está definido.</exception>
      </Docs>
    </Member>
    <Member MemberName="RestartOnExternalChanges">
      <MemberSignature Language="C#" Value="public bool RestartOnExternalChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RestartOnExternalChanges" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property RestartOnExternalChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RestartOnExternalChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se uma alteração em um arquivo de inclusão de configuração externa exige uma reinicialização do aplicativo.</summary>
        <value>
          <see langword="true" /> se uma alteração no arquivo de inclusão de configuração externa exigir uma reinicialização do aplicativo; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir o <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> propriedade `false` para evitar uma reinicialização do aplicativo quando as definições de configuração no arquivo de inclusão externos são modificadas para este <xref:System.Configuration.ConfigurationSection> objeto.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A> valor da propriedade de um <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#109](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#109)]
 [!code-vb[System.Configuration.ConfigurationElement#109](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Os conflitos de valor selecionados com um valor que já está definido.</exception>
      </Docs>
    </Member>
    <Member MemberName="RevertToParent">
      <MemberSignature Language="C#" Value="public void RevertToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevertToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.RevertToParent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevertToParent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevertToParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz a seção de configuração associada herdar todos os seus valores da seção pai.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Este método não pode ser chamado fora do modo de edição.</exception>
      </Docs>
    </Member>
    <Member MemberName="SectionName">
      <MemberSignature Language="C#" Value="public string SectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SectionName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.SectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SectionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da seção de configuração associada.</summary>
        <value>O nome do associado <see cref="T:System.Configuration.ConfigurationSection" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.SectionName%2A> o valor da propriedade é o nome de seção completa, que inclui a hierarquia de herança de configuração.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation.SectionName%2A> valor de uma <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#110](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#110)]
 [!code-vb[System.Configuration.ConfigurationElement#110](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRawXml">
      <MemberSignature Language="C#" Value="public void SetRawXml (string rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string rawXml) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (rawXml As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ rawXml);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SetRawXml (string xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRawXml(string xml) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.SetRawXml(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRawXml (xml As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRawXml(System::String ^ xml);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawXml" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rawXml">To be added.</param>
        <param name="xml">To be added.</param>
        <summary>Define o objeto como uma representação XML da seção de configuração associada dentro do arquivo de configuração.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="rawXml" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SectionInformation.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de classe da seção.</summary>
        <value>O nome da classe que está associada a essa <see cref="T:System.Configuration.ConfigurationSection" /> seção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.SectionInformation.Type%2A> propriedade retorna o nome da classe seção que trata esta instância do <xref:System.Configuration.ConfigurationSection> classe.  
  
   
  
## Examples  
 O exemplo a seguir mostra como obter o <xref:System.Configuration.SectionInformation.Type%2A> valor de uma <xref:System.Configuration.ConfigurationSection> objeto.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#111](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#111)]
 [!code-vb[System.Configuration.ConfigurationElement#111](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">O valor selecionado é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Os conflitos de valor selecionados com um valor que já está definido.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSection">
      <MemberSignature Language="C#" Value="public void UnprotectSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnprotectSection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SectionInformation.UnprotectSection" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnprotectSection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove a criptografia de configuração protegida da seção de configuração associada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obter mais informações sobre seções de configuração protegida, consulte [Criptografando informações de configuração usando configuração protegida](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar esse método.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#112](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/SectionInforrmation.cs#112)]
 [!code-vb[System.Configuration.ConfigurationElement#112](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/SectionInforrmation.vb#112)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>