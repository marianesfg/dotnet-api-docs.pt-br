<Type Name="IConfigurationSectionHandler" FullName="System.Configuration.IConfigurationSectionHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cefdeb2c470c5ffb894373315730b82ecfea22b5" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52604317" /></Metadata><TypeSignature Language="C#" Value="public interface IConfigurationSectionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConfigurationSectionHandler" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IConfigurationSectionHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConfigurationSectionHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IConfigurationSectionHandler" />
  <TypeSignature Language="F#" Value="type IConfigurationSectionHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Controla o acesso a determinadas seções de configuração.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

 > [!IMPORTANT]
 > <xref:System.Configuration.IConfigurationSectionHandler> foi preterido no .NET Framework 2.0 e versões posteriores. No entanto, porque ele é usado internamente, ele foi mantido. Você pode encontrar um exemplo no [como: criar seções de configuração personalizadas usando IConfigurationSectionHandler](https://msdn.microsoft.com/library/07f68a3f-2920-4665-a824-47bda744e662). Se você usar o exemplo anterior, compile-o com o .NET Framework versão 1.0 ou 1.1.  
  
 No .NET Framework versão 2.0 e posterior, você deve derivar em vez disso, da <xref:System.Configuration.ConfigurationSection> classe para implementar o manipulador de seção de configuração relacionados. Você pode encontrar um exemplo no [como: criar seções de configuração personalizadas usando ConfigurationSection](https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234).  
  
 Instâncias do <xref:System.Configuration.IConfigurationSectionHandler> classe deve ser thread-safe e sem monitoração de estado. O <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método deve ser chamado de vários threads simultaneamente.  
  
 Além disso, o objeto de configuração gerado pelo <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método deve ser thread-safe e imutável. Como os objetos de configuração são armazenadas em cache pelo sistema de configuração, é importante não modificar o argumento de pai para o <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método. Por exemplo, se o valor de retorno <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> é apenas uma pequena modificação do pai, as modificações reais devem ser feitas em um clone do pai, não o original.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public object Create (object parent, object configContext, System.Xml.XmlNode section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object parent, object configContext, class System.Xml.XmlNode section) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (parent As Object, configContext As Object, section As XmlNode) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Create(System::Object ^ parent, System::Object ^ configContext, System::Xml::XmlNode ^ section);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * obj * System.Xml.XmlNode -&gt; obj" Usage="iConfigurationSectionHandler.Create (parent, configContext, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="parent">Objeto pai.</param>
        <param name="configContext">Objeto de contexto de configuração.</param>
        <param name="section">Nó XML da seção.</param>
        <summary>Cria um manipulador de seção de configuração.</summary>
        <returns>O objeto de manipulador de seção criado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instâncias do <xref:System.Configuration.IConfigurationSectionHandler> classe deve ser thread-safe e sem monitoração de estado. O <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método deve ser chamado de vários threads simultaneamente.  
  
 Além disso, o objeto de configuração gerado pelo <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método deve ser thread-safe e imutável. Como os objetos de configuração são armazenadas em cache pelo sistema de configuração, é importante não modificar o argumento de pai para <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>. Por exemplo, se o valor de retorno <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> é apenas uma pequena modificação do pai, as modificações reais devem ser feitas em um clone do pai, não o original.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
        <related type="Article" href="https://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234">Como: criar seções de configuração personalizadas usando ConfigurationSection</related>
        <related type="Article" href="https://msdn.microsoft.com/library/07f68a3f-2920-4665-a824-47bda744e662">Como: criar seções de configuração personalizadas usando IConfigurationSectionHandler</related>
      </Docs>
    </Member>
  </Members>
</Type>