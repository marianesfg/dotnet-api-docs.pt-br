<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7215ab6b8c1036dacef49e3a75a2d37a7823c633" />
    <Meta Name="ms.sourcegitcommit" Value="b3480b6208c3cad466469e76294a96f5ab1ef04c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/16/2018" />
    <Meta Name="ms.locfileid" Value="35691697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="481f6-101">Fornece acesso a arquivos de configuração para aplicativos cliente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="481f6-101">Provides access to configuration files for client applications.</span>
      </span>
      <span data-ttu-id="481f6-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="481f6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-103">O <xref:System.Configuration.ConfigurationManager> classe permite que você acessar o computador, aplicativos e informações de configuração do usuário.</span><span class="sxs-lookup"><span data-stu-id="481f6-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="481f6-104">Esta classe substitui o <xref:System.Configuration.ConfigurationSettings> classe, que foi preterido.</span><span class="sxs-lookup"><span data-stu-id="481f6-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="481f6-105">Para aplicativos web, use o <xref:System.Web.Configuration.WebConfigurationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="481f6-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="481f6-106">Para usar o <xref:System.Configuration.ConfigurationManager> classe, seu projeto deve fazer referência a `System.Configuration` assembly.</span><span class="sxs-lookup"><span data-stu-id="481f6-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="481f6-107">Por padrão, alguns modelos de projeto, como o aplicativo de Console, não faça referência a esse assembly para que você precisa referenciá-lo manualmente.</span><span class="sxs-lookup"><span data-stu-id="481f6-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="481f6-108">O nome e o local do arquivo de configuração do aplicativo dependem do host do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="481f6-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="481f6-109">Para obter mais informações, consulte [NIB: arquivos de configuração de aplicativo](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="481f6-109">For more information, see [NIB: Application Configuration Files](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="481f6-110">Você pode usar o interno <xref:System.Configuration> tipos ou derivar delas para lidar com informações de configuração.</span><span class="sxs-lookup"><span data-stu-id="481f6-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="481f6-111">Ao usar esses tipos, você pode trabalhar diretamente com informações de configuração e você pode estender os arquivos de configuração para incluir informações personalizadas.</span><span class="sxs-lookup"><span data-stu-id="481f6-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="481f6-112">O <xref:System.Configuration.ConfigurationManager> classe contém membros que permitem que você execute as seguintes tarefas:</span><span class="sxs-lookup"><span data-stu-id="481f6-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="481f6-113">Ler uma seção de um arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="481f6-113">Read a section from a configuration file.</span></span> <span data-ttu-id="481f6-114">Para acessar informações de configuração, chame o <xref:System.Configuration.ConfigurationManager.GetSection%2A> método.</span><span class="sxs-lookup"><span data-stu-id="481f6-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="481f6-115">Para algumas seções como `appSettings` e `connectionStrings`, use o <xref:System.Configuration.ConfigurationManager.AppSettings%2A> e <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span><span class="sxs-lookup"><span data-stu-id="481f6-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="481f6-116">Esses membros executar operações somente leitura, use uma única instância armazenada em cache da configuração e são multithread com suporte.</span><span class="sxs-lookup"><span data-stu-id="481f6-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="481f6-117">Ler e gravar arquivos de configuração como um todo.</span><span class="sxs-lookup"><span data-stu-id="481f6-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="481f6-118">Seu aplicativo pode ler e gravar configurações em qualquer nível para si mesmo ou para outros aplicativos ou computadores, localmente ou remotamente.</span><span class="sxs-lookup"><span data-stu-id="481f6-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="481f6-119">Use um dos métodos fornecidos pelo <xref:System.Configuration.ConfigurationManager> classe para abrir um arquivo de configuração como SampleApp.exe.config. Esses métodos retornam um <xref:System.Configuration.Configuration> objeto que por sua vez, expõe métodos e propriedades que você pode usar para trabalhar com os arquivos de configuração associada.</span><span class="sxs-lookup"><span data-stu-id="481f6-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="481f6-120">Os métodos de realizar a leitura ou operações de gravação e crie os dados de configuração toda vez que um arquivo é gravado.</span><span class="sxs-lookup"><span data-stu-id="481f6-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="481f6-121">Suporte a tarefas de configuração.</span><span class="sxs-lookup"><span data-stu-id="481f6-121">Support configuration tasks.</span></span> <span data-ttu-id="481f6-122">Os tipos a seguir são usados para oferecer suporte a várias tarefas de configuração:</span><span class="sxs-lookup"><span data-stu-id="481f6-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="481f6-123">Além de trabalhar com informações de configuração existentes, você pode criar e trabalhar com elementos de configuração personalizada ao estender os tipos internos de configuração, como o <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, e <xref:System.Configuration.ConfigurationSection> classes.</span><span class="sxs-lookup"><span data-stu-id="481f6-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="481f6-124">Para obter um exemplo de como estender um tipo de configuração interna programaticamente, consulte <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="481f6-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="481f6-125">Para obter um exemplo de como estender um tipo de configuração interna que usa o modelo com base em atributo, consulte <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="481f6-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-126">O primeiro exemplo mostra um aplicativo de console simples que lê as configurações do aplicativo, adiciona uma nova configuração e atualiza uma configuração existente.</span><span class="sxs-lookup"><span data-stu-id="481f6-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="481f6-127">O exemplo anterior pressupõe que seu projeto tem um arquivo App. config, conforme mostrado abaixo.</span><span class="sxs-lookup"><span data-stu-id="481f6-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="481f6-128">O exemplo a seguir mostra como usar uma cadeia de caracteres de conexão para ler dados de um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="481f6-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="481f6-129">O exemplo anterior pressupõe que seu projeto tem um App. config, conforme mostrado abaixo.</span><span class="sxs-lookup"><span data-stu-id="481f6-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="481f6-130">
        <para>O <see cref="T:System.Configuration.Configuration" /> classe permite o acesso programático para edição de arquivos de configuração. Você usar um dos métodos Open fornecidos pelo <see cref="T:System.Configuration.ConfigurationManager" />. Esses métodos retornam um <see cref="T:System.Configuration.Configuration" /> objeto, que por sua vez, fornece os métodos e propriedades necessários para lidar com os arquivos de configuração subjacentes. Você pode acessar esses arquivos para leitura ou gravação.  Para ler os arquivos de configuração, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> ou <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> para ler informações de configuração. O usuário ou processo que lê deve ter as seguintes permissões:-permissão de leitura no arquivo de configuração no nível da hierarquia de configuração atual.  -Permissões de leitura no pai todos os arquivos de configuração.  Se seu aplicativo precisa de acesso somente leitura para sua própria configuração, é recomendável que você use o <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> método. Esse método fornece acesso para os valores de configuração em cache para o aplicativo atual, que tem um desempenho melhor que o <see cref="T:System.Configuration.Configuration" /> classe.  Para gravar os arquivos de configuração, use um do <see cref="Overload:System.Configuration.Configuration.Save" /> métodos. O usuário ou processo que grava deve ter as seguintes permissões:-permissão de gravação no arquivo de configuração e do diretório no nível da hierarquia de configuração atual.  -Permissões de leitura em todos os arquivos de configuração.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="481f6-130">
          <para>The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files. You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />. These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files. You can access these files for reading or writing.  To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information. The user or process that reads must have the following permissions:  -   Read permission on the configuration file at the current configuration hierarchy level.  -   Read permissions on all the parent configuration files.  If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method. This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.  To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods. The user or process that writes must have the following permissions:  -   Write permission on the configuration file and directory at the current configuration hierarchy level.  -   Read permissions on all the configuration files.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="481f6-131">Obtém os dados de <see cref="T:System.Configuration.AppSettingsSection" /> da configuração padrão do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-131">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="481f6-132">Retorna um objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> com o conteúdo do objeto <see cref="T:System.Configuration.AppSettingsSection" /> referente à configuração padrão do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-132">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-133">Um <xref:System.Configuration.AppSettingsSection> objeto contém o conteúdo do arquivo de configuração `appSettings` seção.</span><span class="sxs-lookup"><span data-stu-id="481f6-133">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-134">O primeiro exemplo mostra um aplicativo de console simples que lê as configurações do aplicativo, adiciona uma nova configuração e atualiza uma configuração existente.</span><span class="sxs-lookup"><span data-stu-id="481f6-134">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="481f6-135">O exemplo anterior pressupõe que seu projeto tem um arquivo App. config, conforme mostrado abaixo.</span><span class="sxs-lookup"><span data-stu-id="481f6-135">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-136">Não foi possível recuperar um objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> com os dados de configurações do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-136">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="481f6-137">Obtém os dados de <see cref="T:System.Configuration.ConnectionStringsSection" /> da configuração padrão do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-137">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="481f6-138">Retorna um objeto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> com o conteúdo do objeto <see cref="T:System.Configuration.ConnectionStringsSection" /> referente à configuração padrão do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-138">Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-139">Um <xref:System.Configuration.ConnectionStringsSection> objeto contém o conteúdo do arquivo de configuração `connectionStrings` seção.</span><span class="sxs-lookup"><span data-stu-id="481f6-139">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-140">O exemplo a seguir mostra como usar uma cadeia de caracteres de conexão para ler dados de um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="481f6-140">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="481f6-141">O exemplo anterior pressupõe que seu projeto tem um App. config, conforme mostrado abaixo.</span><span class="sxs-lookup"><span data-stu-id="481f6-141">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-142">Não foi possível recuperar um objeto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-142">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="481f6-143">O nome e o caminho da seção de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-143">The configuration section path and name.</span>
          </span>
          <span data-ttu-id="481f6-144">Nomes de nó são separados por barras, por exemplo "system.net/mailSettings/smtp".</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-144">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-145">Recupera uma seção de configuração especificada para a configuração padrão do aplicativo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-145">Retrieves a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-146">O objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado, ou <see langword="null" /> se a seção não existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-146">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-147">Para aplicativos cliente, esse método recupera um arquivo de configuração obtido ao mesclar o arquivo de configuração do aplicativo, o arquivo de configuração de usuário local e o arquivo de configuração móvel.</span><span class="sxs-lookup"><span data-stu-id="481f6-147">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="481f6-148">O <xref:System.Configuration.ConfigurationManager.GetSection%2A> método acessa as informações de configuração de tempo de execução não pode ser alterado.</span><span class="sxs-lookup"><span data-stu-id="481f6-148">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="481f6-149">Para alterar a configuração, você deve usar o <xref:System.Configuration.Configuration.GetSection%2A> método no arquivo de configuração que você pode obter usando um dos seguintes métodos abertos:</span><span class="sxs-lookup"><span data-stu-id="481f6-149">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-150">O exemplo a seguir mostra como usar o método <xref:System.Configuration.ConfigurationManager.GetSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="481f6-150">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="481f6-151">O exemplo é parte de um exemplo maior fornecido para a <xref:System.Configuration.ConfigurationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="481f6-151">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-152">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-152">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="481f6-153">
            <para>Você deve converter o valor de retorno para o tipo de configuração esperado. Para evitar exceções de conversão possível, você deve usar uma operação de conversão condicional, como o <see langword="as" /> operador em c# ou a função no Visual Basic.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-153">
              <para>You must cast the return value to the expected configuration type. To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="481f6-154">Abre o arquivo de configuração do cliente especificado como um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-154">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel">
          <span data-ttu-id="481f6-155">O <see cref="T:System.Configuration.ConfigurationUserLevel" /> para o qual você está abrindo a configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-155">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-156">Abre o arquivo de configuração para o aplicativo atual como um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-156">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-157">Um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-157">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-158">Aplicativos cliente usam uma configuração global que se aplica a todos os usuários, configurações separadas que se aplicam a usuários individuais e configurações que se aplicam a usuários móveis.</span><span class="sxs-lookup"><span data-stu-id="481f6-158">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="481f6-159">O `userLevel` parâmetro determina o local do arquivo de configuração que está sendo aberto, indicando se ele tem nenhum nível de usuário (o arquivo de configuração está no mesmo diretório que o aplicativo) ou tem um nível por usuário (o arquivo de configuração está em um caminho de configurações do aplicativo determinado pelo nível de usuário).</span><span class="sxs-lookup"><span data-stu-id="481f6-159">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="481f6-160">Especifique a configuração para obter passando um dos seguintes valores para `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="481f6-160">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="481f6-161">Para obter o <xref:System.Configuration.Configuration> conjunto de objetos que se aplica a todos os usuários, `userLevel` para <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="481f6-161">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="481f6-162">Para obter o local <xref:System.Configuration.Configuration> conjunto de objetos que se aplica ao usuário atual, `userLevel` para <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="481f6-162">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="481f6-163">Para obter o roaming <xref:System.Configuration.Configuration> conjunto de objetos que se aplica ao usuário atual, `userLevel` para <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="481f6-163">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="481f6-164">Para obter o <xref:System.Configuration.Configuration> do objeto para um recurso, seu código deve ter permissões em todos os arquivos de configuração da qual ela herda as configurações de leitura.</span><span class="sxs-lookup"><span data-stu-id="481f6-164">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="481f6-165">Para atualizar um arquivo de configuração, seu código adicionalmente deve ter permissões de gravação para o arquivo de configuração e o diretório em que ele existe.</span><span class="sxs-lookup"><span data-stu-id="481f6-165">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-166">O exemplo de código a seguir mostra como usar o método <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="481f6-166">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-167">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-167">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath">
          <span data-ttu-id="481f6-168">O caminho do arquivo executável (exe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-168">The path of the executable (exe) file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-169">Abre o arquivo de configuração do cliente especificado como um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-170">Um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-170">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-171">Aplicativos cliente usam uma configuração global que se aplica a todos os usuários, configurações separadas que se aplicam a usuários individuais e configurações que se aplicam a usuários móveis.</span><span class="sxs-lookup"><span data-stu-id="481f6-171">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="481f6-172">O `userLevel` valor determina o local do arquivo de configuração que está sendo aberto.</span><span class="sxs-lookup"><span data-stu-id="481f6-172">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="481f6-173">Indica se ele possui nenhum nível de usuário (o arquivo de configuração está no mesmo diretório que o aplicativo) ou tem um nível por usuário (o arquivo de configuração está em um caminho de configurações do aplicativo determinado pelo tipo de nível de usuário.).</span><span class="sxs-lookup"><span data-stu-id="481f6-173">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="481f6-174">Chamar essa sobrecarga de método é equivalente a chamar o <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> sobrecarga com a `preLoad` parâmetro definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="481f6-174">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-175">O exemplo de código a seguir mostra como usar o método <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="481f6-175">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-176">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-176">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="481f6-177">Abre o arquivo de configuração do computador no computador atual como um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-177">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-178">Um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-178">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-179">Definições de configuração de máquina se aplicam a todo o computador e todos os aplicativos que residem nele, a menos que substituída para o aplicativo local.</span><span class="sxs-lookup"><span data-stu-id="481f6-179">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="481f6-180">Definições de configuração de máquina são lidas do arquivo Machine. config da versão do .NET Framework em execução no momento.</span><span class="sxs-lookup"><span data-stu-id="481f6-180">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="481f6-181">O arquivo Machine. config está localizado no subdiretório do seguinte:</span><span class="sxs-lookup"><span data-stu-id="481f6-181">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="481f6-182">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="481f6-182">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="481f6-183">Para obter o <xref:System.Configuration.Configuration> do objeto para um recurso, seu código deve ter permissões em todos os arquivos de configuração da qual ela herda as configurações de leitura.</span><span class="sxs-lookup"><span data-stu-id="481f6-183">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="481f6-184">Para atualizar um arquivo de configuração, seu código adicionalmente deve ter permissões de gravação para o arquivo de configuração e o diretório em que ele existe.</span><span class="sxs-lookup"><span data-stu-id="481f6-184">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="481f6-185">Não é possível acessar o arquivo Machine. config para outras versões do .NET Framework que podem ser instalados no computador.</span><span class="sxs-lookup"><span data-stu-id="481f6-185">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-186">O exemplo de código a seguir mostra como usar o <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> método para obter todas as seções que estão contidas no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="481f6-186">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-187">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-187">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="481f6-188">Abre o arquivo de configuração do cliente especificado como um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-188">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="481f6-189">Um objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> que referencia o arquivo de configuração a ser usado em vez do arquivo de configuração padrão do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-189">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="481f6-190">O objeto <see cref="T:System.Configuration.ConfigurationUserLevel" /> para o qual você está abrindo a configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-190">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-191">Abre o arquivo de configuração do cliente especificado como um objeto <see cref="T:System.Configuration.Configuration" /> que usa o mapeamento de arquivo e nível de usuário especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-191">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-192">O objeto de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-192">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-193">O <xref:System.Configuration.ConfigurationUserLevel> objeto determina o local do arquivo de configuração que está sendo aberto.</span><span class="sxs-lookup"><span data-stu-id="481f6-193">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="481f6-194">Indica se o arquivo não tem nenhum nível de usuário (o arquivo de configuração está no mesmo diretório que o aplicativo) ou tem um nível por usuário (o arquivo de configuração está em um caminho de configurações do aplicativo determinado pelo `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="481f6-194">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="481f6-195">Para obter o <xref:System.Configuration.Configuration> do objeto para um recurso, seu código deve ter permissões em todos os arquivos de configuração da qual ela herda as configurações de leitura.</span><span class="sxs-lookup"><span data-stu-id="481f6-195">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="481f6-196">Para atualizar um arquivo de configuração, seu código adicionalmente deve ter permissões de gravação para o arquivo de configuração e o diretório em que ele existe.</span><span class="sxs-lookup"><span data-stu-id="481f6-196">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-197">O exemplo de código a seguir mostra como usar o <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> método para obter todas as seções que estão contidas no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="481f6-197">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-198">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-198">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
        <Parameter Name="preLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="481f6-199">Um objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> que referencia o arquivo de configuração a ser usado em vez do arquivo de configuração padrão de aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-199">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="481f6-200">O objeto <see cref="T:System.Configuration.ConfigurationUserLevel" /> para o qual você está abrindo a configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-200">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <param name="preLoad">
          <span data-ttu-id="481f6-201">
            <see langword="true" /> para pré-carregar todos os grupos de seções e seções; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-201">
              <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-202">Abre o arquivo de configuração do cliente especificado como um objeto <see cref="T:System.Configuration.Configuration" /> que usa o mapeamento de arquivo, nível de usuário e opção de pré-carga especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-202">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-203">O objeto de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-203">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-204">O <xref:System.Configuration.ConfigurationUserLevel> objeto determina o local do arquivo de configuração que está sendo aberto.</span><span class="sxs-lookup"><span data-stu-id="481f6-204">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="481f6-205">Indica se o arquivo não tem nenhum nível de usuário (o arquivo de configuração está no mesmo diretório que o aplicativo) ou tem um nível por usuário (o arquivo de configuração está em um caminho de configurações do aplicativo que é determinado pelo `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="481f6-205">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="481f6-206">Para obter o <xref:System.Configuration.Configuration> do objeto para um recurso, seu código deve ter permissões em todos os arquivos de configuração da qual ela herda as configurações de leitura.</span><span class="sxs-lookup"><span data-stu-id="481f6-206">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="481f6-207">Para atualizar um arquivo de configuração, seu código adicionalmente deve ter permissões de gravação para o arquivo de configuração e o diretório em que ele existe.</span><span class="sxs-lookup"><span data-stu-id="481f6-207">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="481f6-208">Para obter um exemplo de código, consulte o <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="481f6-208">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-209">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-209">A configuration file could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="481f6-210">Um objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> que referencia o arquivo de configuração a ser usado em vez do arquivo de configuração padrão do aplicativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-210">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-211">Abre o arquivo de configuração do computador como um objeto <see cref="T:System.Configuration.Configuration" /> que usa o mapeamento de arquivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-211">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="481f6-212">Um objeto <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-212">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-213">Definições de configuração de máquina se aplicam a todo o computador e todos os aplicativos que residem nele, a menos que substituída para o aplicativo local.</span><span class="sxs-lookup"><span data-stu-id="481f6-213">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="481f6-214">Definições de configuração de máquina são lidas do arquivo Machine. config da versão do .NET Framework em execução no momento.</span><span class="sxs-lookup"><span data-stu-id="481f6-214">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="481f6-215">O arquivo Machine. config está localizado no subdiretório do seguinte:</span><span class="sxs-lookup"><span data-stu-id="481f6-215">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="481f6-216">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="481f6-216">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="481f6-217">Para obter o <xref:System.Configuration.Configuration> do objeto para um recurso, seu código deve ter permissões em todos os arquivos de configuração da qual ela herda as configurações de leitura.</span><span class="sxs-lookup"><span data-stu-id="481f6-217">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="481f6-218">Para atualizar um arquivo de configuração, seu código adicionalmente deve ter permissões de gravação para o arquivo de configuração e o diretório em que ele existe.</span><span class="sxs-lookup"><span data-stu-id="481f6-218">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="481f6-219">Não é possível acessar o arquivo Machine. config para outras versões do .NET Framework que podem ser instalados no computador.</span><span class="sxs-lookup"><span data-stu-id="481f6-219">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-220">O exemplo de código a seguir mostra como usar o <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> método para obter todas as seções no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="481f6-220">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="481f6-221">Não foi possível carregar um arquivo de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-221">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="481f6-222">O nome da seção de configuração ou o nome da seção e o caminho de configuração da seção a serem atualizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-222">The configuration section name or the configuration path and section name of the section to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="481f6-223">Atualiza a seção nomeada para que na próxima vez que ela for recuperada ela seja lida novamente do disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="481f6-223">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="481f6-224">Esse método invalida o cache para a seção de configuração especificado sem afetar outras seções.</span><span class="sxs-lookup"><span data-stu-id="481f6-224">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="481f6-225">O exemplo de código a seguir mostra como usar o <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> método para atualizar a seção de configuração de configurações do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="481f6-225">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>