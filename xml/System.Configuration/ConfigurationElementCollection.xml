<Type Name="ConfigurationElementCollection" FullName="System.Configuration.ConfigurationElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e957a80c19a1aeca492fa0c38b3aefad300074a7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55373702" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationElementCollection extends System.Configuration.ConfigurationElement implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationElementCollection&#xA;Inherits ConfigurationElement&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationElementCollection abstract : System::Configuration::ConfigurationElement, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ConfigurationElementCollection = class&#xA;    inherit ConfigurationElement&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um elemento de configuração que contém uma coleção de elementos filho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection> representa uma coleção de elementos dentro de um arquivo de configuração.  
  
> [!NOTE]
>  Um elemento dentro de um arquivo de configuração se refere a um elemento XML básico ou uma seção. Um elemento simples é uma marca XML com atributos relacionados, se houver. Um elemento simples constitui uma seção. Seções complexas podem conter um ou mais elementos simples, uma coleção de elementos e outras seções.  
  
 Você usa o <xref:System.Configuration.ConfigurationElementCollection> para trabalhar com uma coleção de <xref:System.Configuration.ConfigurationElement> objetos. Implementar essa classe para adicionar uma coleção de custom <xref:System.Configuration.ConfigurationElement> elementos para um <xref:System.Configuration.ConfigurationSection>.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Configuration.ConfigurationElementCollection>.  
  
 O primeiro exemplo consiste em três classes: `UrlsSection`, `UrlsCollection` e `UrlConfigElement`. O `UrlsSection` classe usa o <xref:System.Configuration.ConfigurationCollectionAttribute> para definir uma seção de configuração personalizada. Esta seção contém uma coleção de URL (definido pelos `UrlsCollection` classe) dos elementos de URL (definido pelo `UrlConfigElement` classe).  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#1)]  
  
 Este segundo exemplo de código usa as classes especificadas antes. Você combinar esses dois exemplos em um projeto de aplicativo de console.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/usingconfigurationcollectionelement.cs#31)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/usingconfigurationcollectionelement.vb#31)]  
  
 Quando você executa o aplicativo de console, uma instância da `UrlsSection` classe é criada e os elementos de configuração a seguir são gerados no arquivo de configuração do aplicativo:  
  
```xml  
<configuration>  
    <configSections>  
        <section name="MyUrls" type="UrlsSection,   
          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />  
    </configSections>  
    <MyUrls>  
        <urls>  
           <add name="Contoso" url="http://www.contoso.com" port="4040 />  
        </urls>  
    </MyUrls>  
</configuration  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Você pode usar um modelo declarativo de codificação (atribuído) ou por uma programação para criar um elemento de configuração personalizada.  
  
O modelo de programação exige que, para cada atributo do elemento você cria uma propriedade para obter e definir seu valor e adicioná-lo para o recipiente de propriedade interna do subjacente <see cref="T:System.Configuration.ConfigurationElement" /> classe base.  
  
O modelo declarativo, também conhecido como o modelo atribuída, permite que você defina um atributo de elemento usando uma propriedade e configurá-la com atributos. Esses atributos instruem o sistema de configuração do ASP.NET sobre os tipos de propriedade e seus valores padrão. ASP.NET pode usar reflexão para obter essas informações e, em seguida, criar o elemento de objetos de propriedade e executar a inicialização necessária.</para></block>
    <altmember cref="T:System.Configuration.ElementInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
    <altmember cref="T:System.Configuration.ConfigurationElementCollectionType" />
    <altmember cref="T:System.Configuration.ConfigurationProperty" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyCollection" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você cria uma nova instância dos <xref:System.Configuration.ConfigurationElementCollection> quando seu aplicativo precisa para criar um personalizado <xref:System.Configuration.ConfigurationElementCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationElementCollection (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationElementCollection(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ConfigurationElementCollection : System.Collections.IComparer -&gt; System.Configuration.ConfigurationElementCollection" Usage="new System.Configuration.ConfigurationElementCollection comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">O comparador <see cref="T:System.Collections.IComparer" /> a ser usado.</param>
        <summary>Cria uma nova instância da classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Collections.IComparer> é usado para definir um comparador a ser usado. Por exemplo, você pode usar um comparador diferencia maiusculas de minúsculas para tornar a chave diferencia maiusculas de minúsculas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementName">
      <MemberSignature Language="C#" Value="protected internal string AddElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property AddElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ AddElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.AddElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do <see cref="T:System.Configuration.ConfigurationElement" /> a ser associado à operação de adição no <see cref="T:System.Configuration.ConfigurationElementCollection" /> quando substituído em uma classe derivada.</summary>
        <value>O nome do elemento.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O valor selecionado começa com o prefixo reservado "config" ou "lock".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um <see cref="T:System.Configuration.ConfigurationElement" /> a uma instância <see cref="T:System.Configuration.ConfigurationElementCollection" /> quando substituído em uma classe derivada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> método para adicionar um novo <xref:System.Configuration.ConfigurationElement> à coleção. Substituir em uma classe derivada se o comportamento personalizado é necessário quando o elemento é adicionado.  
  
 Ao adicionar, um elemento é considerado uma duplicata apenas se as chaves são idênticas, mas os valores são diferentes. Elementos com chaves e valores idênticos são aceitos silenciosamente, porque os elementos não competem. No entanto, um elemento com uma chave idêntica, mas um valor diferente não pode ser adicionado porque não há nenhuma lógica para determinar qual dos valores concorrentes deve ser aceito.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">O <see cref="T:System.Configuration.ConfigurationElement" /> a ser adicionado.</param>
        <summary>Adiciona um elemento de configuração ao <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> método para adicionar um novo <xref:System.Configuration.ConfigurationElement> à coleção. Substituí-lo em uma classe derivada, se o comportamento personalizado é necessário quando o elemento é adicionado.  
  
 Ao adicionar, um elemento é considerado uma duplicata apenas se as chaves são idênticas, mas os valores são diferentes. Elementos com chaves e valores idênticos são aceitos silenciosamente, porque os elementos não competem. No entanto, um elemento com uma chave idêntica, mas um valor diferente não pode ser adicionado porque não há nenhuma lógica para determinar qual dos valores concorrentes deve ser aceito.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como substituir a <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> método e como chamá-lo de um `Add` método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseAdd(class System.Configuration.ConfigurationElement element, bool throwIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseAdd (element As ConfigurationElement, throwIfExists As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseAdd(System::Configuration::ConfigurationElement ^ element, bool throwIfExists);" />
      <MemberSignature Language="F#" Value="member this.BaseAdd : System.Configuration.ConfigurationElement * bool -&gt; unit" Usage="configurationElementCollection.BaseAdd (element, throwIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="throwIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">O <see cref="T:System.Configuration.ConfigurationElement" /> a ser adicionado.</param>
        <param name="throwIfExists"><see langword="true" /> para gerar uma exceção se o <see cref="T:System.Configuration.ConfigurationElement" /> especificado já fizer parte de <see cref="T:System.Configuration.ConfigurationElementCollection" />, caso contrário, <see langword="false" />.</param>
        <summary>Adiciona um elemento de configuração à coleção de elementos de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o parâmetro opcional `throwIfExists` lançar uma <xref:System.Exception> exceção se especificado <xref:System.Configuration.ConfigurationElement> objeto já existe no <xref:System.Configuration.ConfigurationElementCollection> coleção.  
  
 Um elemento é considerado uma duplicata apenas se as chaves são idênticas, mas os valores são diferentes. Elementos com chaves e valores idênticos são aceitos silenciosamente, porque os elementos não competem. No entanto, um elemento com uma chave idêntica, mas um valor diferente não pode ser adicionado porque não há nenhuma lógica para determinar qual dos valores concorrentes deve ser aceito.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">O <see cref="T:System.Configuration.ConfigurationElement" /> a ser adicionado já existe no <see cref="T:System.Configuration.ConfigurationElementCollection" /> e o parâmetro <paramref name="throwIfExists" /> é <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BaseAdd (index As Integer, element As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BaseAdd(int index, System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit&#xA;override this.BaseAdd : int * System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.BaseAdd (index, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice no qual adicionar o <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</param>
        <param name="element">O <see cref="T:System.Configuration.ConfigurationElement" /> a ser adicionado.</param>
        <summary>Adiciona um elemento de configuração à coleção de elementos de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o `index` parâmetro para adicionar o <xref:System.Configuration.ConfigurationElement> do objeto para o <xref:System.Configuration.ConfigurationElementCollection> em um local de índice específico.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseClear">
      <MemberSignature Language="C#" Value="protected internal void BaseClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseClear();" />
      <MemberSignature Language="F#" Value="member this.BaseClear : unit -&gt; unit" Usage="configurationElementCollection.BaseClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove todos os objetos de elemento de configuração da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando o <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> método é chamado, ele remove todos os <xref:System.Configuration.ConfigurationElement> objetos da coleção. Ele também insere uma `clear` diretiva no arquivo de configuração.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como chamar o <xref:System.Configuration.ConfigurationElementCollection.BaseClear%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuração é somente leitura.  
  
- ou - 
Um item da coleção foi bloqueado em uma configuração de nível superior.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGet">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtém o <see cref="T:System.Configuration.ConfigurationElement" /> no local de índice especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (index As Integer) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : int -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice do <see cref="T:System.Configuration.ConfigurationElement" /> a ser retornado.</param>
        <summary>Obtém o elemento de configuração no local do índice especificado.</summary>
        <returns>O <see cref="T:System.Configuration.ConfigurationElement" /> no índice especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como chamar o <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#8)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="index" /> é menor que <see langword="0" />.  
  
- ou - 
Não há nenhum <see cref="T:System.Configuration.ConfigurationElement" /> no <paramref name="index" /> especificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected internal System.Configuration.ConfigurationElement BaseGet (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Configuration.ConfigurationElement BaseGet(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGet (key As Object) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Configuration::ConfigurationElement ^ BaseGet(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : obj -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.BaseGet key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">A chave do elemento a retornar.</param>
        <summary>Retorna o elemento de configuração com a chave especificada.</summary>
        <returns>O <see cref="T:System.Configuration.ConfigurationElement" /> com a chave especificada; caso contrário, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> retorn `null` se não houver nenhum <xref:System.Configuration.ConfigurationElement> objeto com a chave especificada na coleção.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como chamar o <xref:System.Configuration.ConfigurationElementCollection.BaseGet%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#9)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllKeys">
      <MemberSignature Language="C#" Value="protected internal object[] BaseGetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object[] BaseGetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetAllKeys () As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllKeys : unit -&gt; obj[]" Usage="configurationElementCollection.BaseGetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma matriz das chaves para todos os elementos de configuração contidos no <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <returns>Uma matriz que contém as chaves de todos os objetos <see cref="T:System.Configuration.ConfigurationElement" /> contidos no <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetKey">
      <MemberSignature Language="C#" Value="protected internal object BaseGetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance object BaseGetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseGetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Object ^ BaseGetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetKey : int -&gt; obj" Usage="configurationElementCollection.BaseGetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O local do índice para o <see cref="T:System.Configuration.ConfigurationElement" />.</param>
        <summary>Obtém a chave para o <see cref="T:System.Configuration.ConfigurationElement" /> no local do índice especificado.</summary>
        <returns>A chave do <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="index" /> é menor que <see langword="0" />.  
  
- ou - 
Não há nenhum <see cref="T:System.Configuration.ConfigurationElement" /> no <paramref name="index" /> especificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseIndexOf">
      <MemberSignature Language="C#" Value="protected int BaseIndexOf (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int32 BaseIndexOf(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseIndexOf (element As ConfigurationElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; int BaseIndexOf(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.BaseIndexOf : System.Configuration.ConfigurationElement -&gt; int" Usage="configurationElementCollection.BaseIndexOf element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">O <see cref="T:System.Configuration.ConfigurationElement" /> para o local do índice especificado.</param>
        <summary>Indica o índice do <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</summary>
        <returns>O índice do <see cref="T:System.Configuration.ConfigurationElement" /> especificado, caso contrário, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como chamar o <xref:System.Configuration.ConfigurationElementCollection.BaseIndexOf%2A> método.  
  
 [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseIsRemoved">
      <MemberSignature Language="C#" Value="protected internal bool BaseIsRemoved (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool BaseIsRemoved(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function BaseIsRemoved (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; bool BaseIsRemoved(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseIsRemoved : obj -&gt; bool" Usage="configurationElementCollection.BaseIsRemoved key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">A chave do elemento a ser verificada.</param>
        <summary>Indica se o <see cref="T:System.Configuration.ConfigurationElement" /> com a chave especificada foi removido do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <returns><see langword="true" /> se o <see cref="T:System.Configuration.ConfigurationElement" /> com a chave especificada foi removido, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRemove">
      <MemberSignature Language="C#" Value="protected internal void BaseRemove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.BaseRemove : obj -&gt; unit" Usage="configurationElementCollection.BaseRemove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">A chave do <see cref="T:System.Configuration.ConfigurationElement" /> a ser removida.</param>
        <summary>Remove um <see cref="T:System.Configuration.ConfigurationElement" /> da coleção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> método insere uma `<remove>` diretiva no arquivo de configuração para o <xref:System.Configuration.ConfigurationElement> com a chave especificada.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como chamar o <xref:System.Configuration.ConfigurationElementCollection.BaseRemove%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Não existe nenhum <see cref="T:System.Configuration.ConfigurationElement" /> com a chave especificada na coleção, o elemento já foi removido ou não pode ser removido porque o valor de seu <see cref="P:System.Configuration.ConfigurationProperty.Type" /> não é <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseRemoveAt">
      <MemberSignature Language="C#" Value="protected internal void BaseRemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void BaseRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub BaseRemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void BaseRemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseRemoveAt : int -&gt; unit" Usage="configurationElementCollection.BaseRemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">O local de índice do <see cref="T:System.Configuration.ConfigurationElement" /> a ser removido.</param>
        <summary>Remove o <see cref="T:System.Configuration.ConfigurationElement" /> no local de índice especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection.BaseRemoveAt%2A> método inserções um `<remove>` diretiva no arquivo de configuração para o elemento no local do índice especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuração é somente leitura.  
  
- ou - 
 <paramref name="index" /> é menor que <see langword="0" /> ou maior que o número de objetos <see cref="T:System.Configuration.ConfigurationElement" /> na coleção.  
  
- ou - 
O objeto <see cref="T:System.Configuration.ConfigurationElement" /> já foi removido.  
  
- ou - 
O valor do objeto <see cref="T:System.Configuration.ConfigurationElement" /> foi bloqueado em um nível superior.  
  
- ou - 
O objeto <see cref="T:System.Configuration.ConfigurationElement" /> foi herdado.  
  
- ou - 
O valor <see cref="P:System.Configuration.ConfigurationProperty.Type" /> do objeto <see cref="T:System.Configuration.ConfigurationElement" /> não é <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> ou <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearElementName">
      <MemberSignature Language="C#" Value="protected internal string ClearElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClearElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ClearElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ ClearElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClearElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.ClearElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do <see cref="T:System.Configuration.ConfigurationElement" /> a ser associado à operação de limpeza no <see cref="T:System.Configuration.ConfigurationElementCollection" /> quando substituído em uma classe derivada.</summary>
        <value>O nome do elemento.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O valor selecionado começa com o prefixo reservado "config" ou "lock".</exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.ConfigurationElementCollectionType CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CollectionType As ConfigurationElementCollectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationElementCollectionType CollectionType { System::Configuration::ConfigurationElementCollectionType get(); };" />
      <MemberSignature Language="F#" Value="member this.CollectionType : System.Configuration.ConfigurationElementCollectionType" Usage="System.Configuration.ConfigurationElementCollection.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementCollectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo do <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <value>O <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> dessa coleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo será um <xref:System.Configuration.ConfigurationElementCollectionType.BasicMap> ou um <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> campo. Para obter mais informações, consulte <xref:System.Configuration.ConfigurationElementCollectionType>.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como obter o <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> propriedade.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#5)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Configuration.ConfigurationElement[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ConfigurationElement(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Configuration::ConfigurationElement ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Configuration.ConfigurationElement[] * int -&gt; unit" Usage="configurationElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Configuration.ConfigurationElement[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Matriz para a qual copiar o conteúdo de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
        <param name="index">Local de índice no qual começar a copiar.</param>
        <summary>Copia o conteúdo do <see cref="T:System.Configuration.ConfigurationElementCollection" /> para uma matriz.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Configuration.ConfigurationElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o número de elementos na coleção.</summary>
        <value>O número de elementos na coleção.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNewElement">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quando substituído em uma classe derivada, cria um novo <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituir a <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> método para criar um personalizado <xref:System.Configuration.ConfigurationElement> objetos de um tipo específico. Quando uma coleção é carregada do arquivo de configuração, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> é chamado para criar elementos individuais. <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> deve ser substituído em classes que derivam de <xref:System.Configuration.ConfigurationElementCollection> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected abstract System.Configuration.ConfigurationElement CreateNewElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateNewElement () As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Configuration::ConfigurationElement ^ CreateNewElement();" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : unit -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando substituído em uma classe derivada, cria um novo <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <returns>Um <see cref="T:System.Configuration.ConfigurationElement" /> recém-criado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituir a <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> método para criar um personalizado <xref:System.Configuration.ConfigurationElement> objetos de um tipo específico. Quando uma coleção é carregada do arquivo de configuração, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> é chamado para criar elementos individuais. <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> deve ser substituído em classes que derivam de <xref:System.Configuration.ConfigurationElementCollection> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como substituir o <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#6)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewElement">
      <MemberSignature Language="C#" Value="protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Configuration.ConfigurationElement CreateNewElement(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateNewElement (elementName As String) As ConfigurationElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Configuration::ConfigurationElement ^ CreateNewElement(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewElement : string -&gt; System.Configuration.ConfigurationElement&#xA;override this.CreateNewElement : string -&gt; System.Configuration.ConfigurationElement" Usage="configurationElementCollection.CreateNewElement elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">O nome do <see cref="T:System.Configuration.ConfigurationElement" /> a ser criado.</param>
        <summary>Cria um novo <see cref="T:System.Configuration.ConfigurationElement" /> quando substituído em uma classe derivada.</summary>
        <returns>Um novo <see cref="T:System.Configuration.ConfigurationElement" /> com um nome especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituir a <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> método para criar um personalizado <xref:System.Configuration.ConfigurationElement> objetos de um tipo específico. Quando uma coleção é carregada do arquivo de configuração, <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> é chamado para criar elementos individuais. <xref:System.Configuration.ConfigurationElementCollection.CreateNewElement%2A> deve ser substituído em classes que derivam de <xref:System.Configuration.ConfigurationElementCollection> classe.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Se você criar um personalizado <see cref="T:System.Configuration.ConfigurationElementCollection" /> coleção que contém heterogêneos <see cref="T:System.Configuration.ConfigurationElement" /> tipos, você deve executar estas etapas: 
– Substituir a <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> método.  
  
-Certifique-se de que o <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" /> método retorna uma cadeia de caracteres que identifica o tipo do elemento criado chamando o <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" /> método.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="protected virtual string ElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string" Usage="System.Configuration.ConfigurationElementCollection.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome usado para identificar esta coleção de elementos no arquivo de configuração quando substituído em uma classe derivada.</summary>
        <value>O nome da coleção; Caso contrário, uma cadeia de caracteres vazia. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituir a <xref:System.Configuration.ConfigurationElementCollection.ElementName%2A> propriedade para nomear um personalizado <xref:System.Configuration.ConfigurationElementCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitClear">
      <MemberSignature Language="C#" Value="public bool EmitClear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitClear" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberSignature Language="VB.NET" Value="Public Property EmitClear As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EmitClear { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EmitClear : bool with get, set" Usage="System.Configuration.ConfigurationElementCollection.EmitClear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se a coleção foi limpa.</summary>
        <value><see langword="true" /> Se a coleção foi limpo; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definindo o <xref:System.Configuration.ConfigurationElementCollection.EmitClear%2A> propriedade para `true` faz com que um `<clear>` diretiva a ser gravado no arquivo de configuração quando a coleção é serializada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuração é somente leitura.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object compareTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object compareTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (compareTo As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ compareTo);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationElementCollection.Equals compareTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compareTo">O objeto a ser comparado.</param>
        <summary>Compara o <see cref="T:System.Configuration.ConfigurationElementCollection" /> ao objeto especificado.</summary>
        <returns><see langword="true" /> se o objeto ao qual comparar for igual à instância <see cref="T:System.Configuration.ConfigurationElementCollection" /> atual, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetElementKey (element As ConfigurationElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ GetElementKey(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member GetElementKey : System.Configuration.ConfigurationElement -&gt; obj" Usage="configurationElementCollection.GetElementKey element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">O <see cref="T:System.Configuration.ConfigurationElement" /> para o qual retornar a chave.</param>
        <summary>Obtém a chave de elemento para um elemento de configuração especificado quando substituído em uma classe derivada.</summary>
        <returns>Um <see cref="T:System.Object" /> que atua como a chave para o <see cref="T:System.Configuration.ConfigurationElement" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir mostra como substituir <xref:System.Configuration.ConfigurationElementCollection.GetElementKey%2A> método.  
  
 [!code-csharp[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/system.configuration.configurationelementcollection/cs/customcollectionsection.cs#7)]
 [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.configuration.configurationelementcollection/vb/customcollectionsection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="configurationElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um <see cref="T:System.Collections.IEnumerator" /> que é usado para iterar por meio de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <returns>Um <see cref="T:System.Collections.IEnumerator" /> que é usado para iterar por meio de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém um valor exclusivo que representa a instância <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <returns>Um valor exclusivo que representa a instância <see cref="T:System.Configuration.ConfigurationElementCollection" /> atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementName">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementName (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementName(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementName (elementName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementName(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="abstract member IsElementName : string -&gt; bool&#xA;override this.IsElementName : string -&gt; bool" Usage="configurationElementCollection.IsElementName elementName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">O nome do elemento a ser verificado.</param>
        <summary>Indica se o <see cref="T:System.Configuration.ConfigurationElement" /> especificado existe no <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <returns><see langword="true" /> se o elemento existir na coleção, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Substituir o <xref:System.Configuration.ConfigurationElementCollection.IsElementName%2A> método para fornecer um comportamento personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsElementRemovable">
      <MemberSignature Language="C#" Value="protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsElementRemovable(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsElementRemovable (element As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsElementRemovable(System::Configuration::ConfigurationElement ^ element);" />
      <MemberSignature Language="F#" Value="abstract member IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool&#xA;override this.IsElementRemovable : System.Configuration.ConfigurationElement -&gt; bool" Usage="configurationElementCollection.IsElementRemovable element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">O elemento a ser verificado.</param>
        <summary>Indica se o <see cref="T:System.Configuration.ConfigurationElement" /> especificado pode ser removido de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <returns><see langword="true" /> se o <see cref="T:System.Configuration.ConfigurationElement" /> especificado puder ser removido desse <see cref="T:System.Configuration.ConfigurationElementCollection" />, caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulta <xref:System.Configuration.ConfigurationElementCollection.IsElementRemovable%2A> antes de remover um elemento de coleção.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberSignature Language="F#" Value="override this.IsModified : unit -&gt; bool" Usage="configurationElementCollection.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se este <see cref="T:System.Configuration.ConfigurationElementCollection" /> foi modificado desde a última vez em que foi salvo ou carregado quando substituído em uma classe derivada.</summary>
        <returns><see langword="true" /> se qualquer elemento contido tiver sido modificado, caso contrário, <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Configuration.ConfigurationElement.IsModified%2A> método de qualquer <xref:System.Configuration.ConfigurationElement> contidas dentro de uma <xref:System.Configuration.ConfigurationElementCollection> retorna `true`, o <xref:System.Configuration.ConfigurationElementCollection.IsModified%2A> retorna do método de toda a coleção `true` também.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.IsReadOnly : unit -&gt; bool" Usage="configurationElementCollection.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se o objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> é somente leitura.</summary>
        <returns><see langword="true" /> se o objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> for somente leitura, caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O sistema define elementos de configuração que não podem ser modificados. Chame esse método para determinar se os elementos podem ser modificados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Configuration.ConfigurationElementCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o acesso à coleção é sincronizado.</summary>
        <value><see langword="true" /> Se acessar para o <see cref="T:System.Configuration.ConfigurationElementCollection" /> for sincronizado; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializeUnrecognizedElement">
      <MemberSignature Language="C#" Value="protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnDeserializeUnrecognizedElement(string elementName, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeserializeUnrecognizedElement (elementName As String, reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnDeserializeUnrecognizedElement(System::String ^ elementName, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.OnDeserializeUnrecognizedElement : string * System.Xml.XmlReader -&gt; bool" Usage="configurationElementCollection.OnDeserializeUnrecognizedElement (elementName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="elementName">O nome do elemento não reconhecido.</param>
        <param name="reader">Um fluxo de entrada que lê o XML do arquivo de configuração.</param>
        <summary>Faz com que o sistema de configuração lance uma exceção.</summary>
        <returns><see langword="true" /> se o elemento não reconhecido foi desserializado com êxito; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement%2A> é chamado quando um elemento de configuração não reconhecido é lido de um arquivo de configuração.  
  
 Substitua este método para fornecer manipulação personalizada de elementos de configuração não reconhecido de um arquivo de configuração. O padrão retornam um valor, `false`, faz com que o sistema de configuração gerar uma exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">O elemento especificado no <paramref name="elementName" /> é o elemento <see langword="&lt;clear&gt;" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="elementName" /> começa com o prefixo reservado "config" ou "lock".</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveElementName">
      <MemberSignature Language="C#" Value="protected internal string RemoveElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoveElementName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property RemoveElementName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ RemoveElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoveElementName : string with get, set" Usage="System.Configuration.ConfigurationElementCollection.RemoveElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do <see cref="T:System.Configuration.ConfigurationElement" /> a ser associado à operação de remoção no <see cref="T:System.Configuration.ConfigurationElementCollection" /> quando substituído em uma classe derivada.</summary>
        <value>O nome do elemento.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O valor selecionado começa com o prefixo reservado "config" ou "lock".</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected internal override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="configurationElementCollection.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">O <see cref="T:System.Configuration.ConfigurationElement" /> que representa o elemento pai da coleção, se houver, caso contrário, <see langword="null" />.</param>
        <summary>Redefine o <see cref="T:System.Configuration.ConfigurationElementCollection" /> para seu estado inalterado quando substituído em uma classe derivada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O comportamento padrão para o <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> método é limpar todos os elementos modificados uma <xref:System.Configuration.ConfigurationElementCollection> contém objeto e definir os elementos modificados com os valores especificados pelo seu arquivo de configuração pai. Se qualquer elemento na <xref:System.Configuration.ConfigurationElementCollection> tem elementos filho, <xref:System.Configuration.ConfigurationElementCollection.Reset%2A> também é chamado nesses elementos filho.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberSignature Language="F#" Value="override this.ResetModified : unit -&gt; unit" Usage="configurationElementCollection.ResetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redefine o valor da propriedade <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> para <see langword="false" /> quando substituído em uma classe derivada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection.ResetModified%2A> método determina se os elementos desta coleção serão gravados no arquivo de configuração quando a configuração é atualizada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeElement">
      <MemberSignature Language="C#" Value="protected internal override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool SerializeElement(class System.Xml.XmlWriter writer, bool serializeCollectionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SerializeElement (writer As XmlWriter, serializeCollectionKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool SerializeElement(System::Xml::XmlWriter ^ writer, bool serializeCollectionKey);" />
      <MemberSignature Language="F#" Value="override this.SerializeElement : System.Xml.XmlWriter * bool -&gt; bool" Usage="configurationElementCollection.SerializeElement (writer, serializeCollectionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="serializeCollectionKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">O fluxo de saída que grava o XML no arquivo de configuração.</param>
        <param name="serializeCollectionKey"><see langword="true" /> para serializar a chave da coleção, caso contrário, <see langword="false" />.</param>
        <summary>Grava os dados de configuração em um elemento XML no arquivo de configuração quando substituído em uma classe derivada.</summary>
        <returns><see langword="true" /> se o <see cref="T:System.Configuration.ConfigurationElementCollection" /> foi gravado com êxito no arquivo de configuração.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> método grava o conteúdo dos elementos de configuração contidos na coleção e todos eles contêm os elementos aninhados para o arquivo de configuração. Substituir <xref:System.Configuration.ConfigurationElementCollection.SerializeElement%2A> para fornecer um personalizado escrever procedimento fora o conteúdo da coleção e os elementos aninhados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Um dos elementos da coleção foi adicionado ou substituído e começa com o prefixo reservado "config" ou "lock".</exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected internal override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="configurationElementCollection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define a propriedade <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> para o objeto <see cref="T:System.Configuration.ConfigurationElementCollection" /> e para todos os subelementos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado internamente para reservar esses elementos de configuração do sistema que não podem ser modificados. Para determinar quais elementos são modificáveis, chame o <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Configuration.ConfigurationElementCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto usado para sincronizar o acesso ao <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <value>Um objeto usado para sincronizar o acesso para o <see cref="T:System.Configuration.ConfigurationElementCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (arr As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ arr, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">Matriz para a qual copiar esse <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
        <param name="index">Local de índice no qual começar a copiar.</param>
        <summary>Copia o <see cref="T:System.Configuration.ConfigurationElementCollection" /> para uma matriz.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected virtual bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ThrowOnDuplicate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ThrowOnDuplicate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ThrowOnDuplicate : bool" Usage="System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se uma tentativa de adicionar uma duplicata <see cref="T:System.Configuration.ConfigurationElement" /> ao <see cref="T:System.Configuration.ConfigurationElementCollection" /> fará com que uma exceção seja lançada.</summary>
        <value><see langword="true" /> Se uma tentativa de adicionar uma duplicata <see cref="T:System.Configuration.ConfigurationElement" /> a este <see cref="T:System.Configuration.ConfigurationElementCollection" /> fará com que uma exceção seja lançada; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você adiciona um elemento duplicado, uma exceção é lançada se o <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A> é o valor do elemento <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap> ou <xref:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate>.  
  
 Observe que os elementos com chaves e valores idênticos não são considerados duplicatas e são aceitos silenciosamente. Somente elementos com chaves idênticas, mas valores diferentes sejam considerados duplicadas. Para obter mais informações, consulte a seção comentários para o <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unmerge">
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, saveMode As ConfigurationSaveMode)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode saveMode);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected internal override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Unmerge(class System.Configuration.ConfigurationElement sourceElement, class System.Configuration.ConfigurationElement parentElement, valuetype System.Configuration.ConfigurationSaveMode updateMode) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Unmerge (sourceElement As ConfigurationElement, parentElement As ConfigurationElement, updateMode As ConfigurationSaveMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Unmerge(System::Configuration::ConfigurationElement ^ sourceElement, System::Configuration::ConfigurationElement ^ parentElement, System::Configuration::ConfigurationSaveMode updateMode);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElementCollection.Unmerge (sourceElement, parentElement, updateMode)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.Unmerge : System.Configuration.ConfigurationElement * System.Configuration.ConfigurationElement * System.Configuration.ConfigurationSaveMode -&gt; unit" Usage="configurationElementCollection.Unmerge (sourceElement, parentElement, updateMode)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceElement" Type="System.Configuration.ConfigurationElement" Index="0" />
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" Index="1" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMode" Type="System.Configuration.ConfigurationSaveMode" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceElement">Um objeto <see cref="T:System.Configuration.ConfigurationElement" /> no nível atual que contém uma exibição mesclada das propriedades.</param>
        <param name="parentElement">O objeto <see cref="T:System.Configuration.ConfigurationElement" /> pai do elemento atual ou <see langword="null" /> se este for o nível superior.</param>
        <param name="saveMode">Um dos valores enumerados que determina quais valores de propriedade incluir.</param>
        <param name="updateMode">To be added.</param>
        <summary>Inverte o efeito da mesclagem de informações de configuração de diferentes níveis da hierarquia de configuração.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>