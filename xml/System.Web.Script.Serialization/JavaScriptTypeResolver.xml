<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe8e0e840500610030d7c1d33f78c4810df879fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4b4e1-101">Fornece a classe base abstrata para implementar um resolvedor de tipo personalizado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b4e1-101">Provides the abstract base class for implementing a custom type resolver.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b4e1-102">O <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe fornece os serviços para:</span><span class="sxs-lookup"><span data-stu-id="4b4e1-102">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class provides the services for:</span></span>  
  
-   <span data-ttu-id="4b4e1-103">Convertendo tipo de informações para um valor de cadeia de caracteres por meio de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-103">Converting managed type information to a string value through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method.</span></span>  
  
-   <span data-ttu-id="4b4e1-104">Resolver um valor de cadeia de caracteres ao apropriado gerenciados tipo por meio de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-104">Resolving a string value back to the appropriate managed type through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method.</span></span>  
  
 <span data-ttu-id="4b4e1-105">Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer> objeto serializa tipos personalizados, ele pode opcionalmente incluir na cadeia de caracteres serializada notação JSON (JavaScript Object) um valor que contém informações de tipo.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-105">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</span></span> <span data-ttu-id="4b4e1-106">Durante a desserialização, <xref:System.Web.Script.Serialization.JavaScriptSerializer> pode, então, referência gerenciada esse valor de cadeia de caracteres para determinar o tipo que a cadeia de caracteres JSON será convertida.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-106">During deserialization, <xref:System.Web.Script.Serialization.JavaScriptSerializer> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</span></span>  
  
 <span data-ttu-id="4b4e1-107">Se você fornecer um resolvedor de tipo para o <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância, o serializador usará o <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> e <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> métodos para mapear entre o tipo gerenciado e o valor de cadeia de caracteres durante o processo de serialização e desserialização, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-107">If you provide a type resolver to the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer will use the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> and <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</span></span>  
  
 <span data-ttu-id="4b4e1-108">O <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe é a classe base para o <xref:System.Web.Script.Serialization.SimpleTypeResolver> classe, que fornece uma implementação de um resolvedor de tipo que usa o nome qualificado do assembly do tipo gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-108">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class is the base class for the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b4e1-109">O exemplo a seguir demonstra como criar um resolvedor de tipo personalizado.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-109">The following example demonstrates how to create a custom type resolver.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="4b4e1-110">Quando você implementar um resolvedor de tipo, a cadeia de caracteres que é retornado pelo <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> método deve mapear para o mesmo tipo gerenciado quando o valor de cadeia de caracteres é passado para o <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> método.</span>
        <span class="sxs-lookup">
          <span data-stu-id="4b4e1-110">When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b4e1-111">Inicializa uma nova instância da classe <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-111">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="4b4e1-112">O nome do tipo gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-112">The name of the managed type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b4e1-113">Quando substituído em uma classe derivada, retorna o objeto <see cref="T:System.Type" /> que está associado com o nome do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-113">When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b4e1-114">O objeto <see cref="T:System.Type" /> associado ao nome do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-114">The <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b4e1-115">Quando um resolvedor de tipo está associado com um <xref:System.Web.Script.Serialization.JavaScriptSerializer> o serializador de instância, usa o <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> método quando ele itera por meio de uma cadeia de caracteres JSON determinar o específicos gerenciados tipo ao qual o tipo JSON deve ser convertido.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-115">When a type resolver is associated with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer uses the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4b4e1-116">Dado um valor de cadeia de caracteres, o resolvedor de tipo deve retornar um <see cref="T:System.Type" /> tipo gerenciado de objeto que representa o correspondente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4b4e1-116">Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4b4e1-117">O tipo gerenciado a ser resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-117">The managed type to be resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b4e1-118">Quando substituído em uma classe derivada, retorna o nome do tipo para o objeto <see cref="T:System.Type" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-118">When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b4e1-119">O nome do tipo gerenciado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b4e1-119">The name of the specified managed type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b4e1-120">Se o <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> método retorna um `null` ou <xref:System.String.Empty>, em seguida, o resolvedor de tipo não oferece suporte ao tipo.</span><span class="sxs-lookup"><span data-stu-id="4b4e1-120">If the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method returns either `null` or <xref:System.String.Empty>, then the type resolver does not support the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>