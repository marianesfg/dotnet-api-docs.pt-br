<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b261b549f0484bcdba3b77049d0bde7135139ef" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39929972" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece a classe base abstrata para implementar um resolvedor de tipo personalizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> classe fornece os serviços para:  
  
-   Converter gerenciadas digite informações para um valor de cadeia de caracteres por meio de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> método.  
  
-   Resolver um valor de cadeia de caracteres para o tipo por meio do gerenciado de <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> método.  
  
 Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer> objeto serializa tipos personalizados, ele pode, opcionalmente, incluir na cadeia de caracteres serializada do objeto notação JSON (JavaScript) um valor que contém informações de tipo. Durante a desserialização, <xref:System.Web.Script.Serialization.JavaScriptSerializer> pode referenciar esse valor de cadeia de caracteres para determinar a apropriado gerenciado depois de tipo para o qual a cadeia de caracteres JSON será convertida.  
  
 Se você fornecer um resolvedor de tipo para o <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância, o serializador usará o <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> e <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> métodos para mapear entre o tipo gerenciado e o valor de cadeia de caracteres durante o processo de serialização e desserialização, respectivamente.  
  
 O <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> é a classe base para o <xref:System.Web.Script.Serialization.SimpleTypeResolver> classe, que fornece uma implementação de um resolvedor de tipo que usa o nome qualificado pelo assembly do tipo gerenciado.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar um resolvedor de tipo personalizado.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Ao implementar um resolvedor de tipo, a cadeia de caracteres que é retornado pelo <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> método deve mapear para o mesmo tipo gerenciado quando o valor de cadeia de caracteres é passado para o <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> método.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">O nome do tipo gerenciado.</param>
        <summary>Quando substituído em uma classe derivada, retorna o objeto <see cref="T:System.Type" /> que está associado com o nome do tipo especificado.</summary>
        <returns>O objeto <see cref="T:System.Type" /> associado ao nome do tipo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um resolvedor de tipo está associado com um <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância, o serializador usa o <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> método quando ele itera por meio de uma cadeia de caracteres JSON determinar o específico gerenciado tipo ao qual o tipo JSON deve ser convertido.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Dado um valor de cadeia de caracteres, o resolvedor de tipo deve retornar um <see cref="T:System.Type" /> tipo gerenciado do objeto que representa o correspondente.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo gerenciado a ser resolvido.</param>
        <summary>Quando substituído em uma classe derivada, retorna o nome do tipo para o objeto <see cref="T:System.Type" /> especificado.</summary>
        <returns>O nome do tipo gerenciado especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> método retorna `null` ou <xref:System.String.Empty>, em seguida, o resolvedor de tipo não oferece suporte para o tipo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>