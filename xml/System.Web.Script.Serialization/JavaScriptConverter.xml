<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JavaScriptConverter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c1e7934d8d1587adff38812ec02ac2e9499101eb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1e7934d8d1587adff38812ec02ac2e9499101eb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Provides an abstract base class for a custom type converter.</source>
          <target state="translated">Fornece uma classe base abstrata para um conversor de tipo personalizado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> classe permite que você implementar a serialização e desserialização processos para tipos gerenciados que não são suportados nativamente pelo <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>You can also use <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> when you need more control over the serialization and deserialization process.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> quando precisar de mais controle sobre o processo de serialização e desserialização.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property indicates the types for which a custom converter provides converter services.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> propriedade indica os tipos para os quais um conversor personalizado fornece serviços de conversor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>To indicate that a custom converter must be used by the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, you must register the converter with the instance.</source>
          <target state="translated">Para indicar que um conversor personalizado deve ser usado pela <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instância, você deve registrar o conversor com a instância.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class directly, you should use the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method to register the converter.</source>
          <target state="translated">Se você estiver usando o <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> diretamente da classe, você deve usar o <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> método para registrar o conversor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a <ph id="ph1">`converters`</ph> element in the configuration file.</source>
          <target state="translated">Caso contrário, se você está chamando métodos de Web de ECMAScript (JavaScript) e você deseja usar o conversor personalizado, você pode registrá-lo adicionando um <ph id="ph1">`converters`</ph> elemento no arquivo de configuração.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: configurar os serviços de ASP.NET no Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which it has a custom converter registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instância é serializar um tipo para o qual ele tem um conversor personalizado registrado, as chamadas de serializador a <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Similarly, when the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">Da mesma forma, quando o <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instância é desserializar uma cadeia de caracteres JSON JavaScript Object Notation () e reconhece que um tipo de cadeia de caracteres JSON tem um conversor personalizado associado a ele, as chamadas de serializador a <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>The following example shows how to create a custom converter for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> class.</source>
          <target state="translated">O exemplo a seguir mostra como criar um conversor personalizado para o <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>, you must override the following members:</source>
          <target state="translated">Ao herdar de <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>, você deve substituir os seguintes membros:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> provides the <ph id="ph3">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method that will be used by implementers of <ph id="ph4">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> fornece o <ph id="ph3">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> método que será usado pelo implementadores de <ph id="ph4">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">Código do conversor deve ser capaz de obter um valor que está contido no dicionário de serializador passa para ele e, em seguida, converter esse valor em um objeto do tipo <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptConverter">
          <source>Rather than re-implementing the custom conversion code to accomplish this, you can call the <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Em vez de implementar novamente o código de conversão personalizada para fazer isso, você pode chamar o <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> instance of property data stored as name/value pairs.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> de dados de propriedade armazenada como pares nome-valor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The type of the resulting object.</source>
          <target state="translated">O tipo do objeto resultante.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When overridden in a derived class, converts the provided dictionary into an object of the specified type.</source>
          <target state="translated">Quando substituído em uma classe derivada, converte o dicionário fornecido em um objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> method iterates through the values in the <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph> parameter to construct an instance of the type requested in the <ph id="ph3">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> método percorre os valores a <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph> parâmetro para construir uma instância do tipo solicitado no <ph id="ph3">&lt;paramref name="type" /&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>Although a converter can directly use values from <ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph>, we recommend that the converter implementer use the <ph id="ph2">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method instead.</source>
          <target state="translated">Embora um conversor diretamente pode usar valores de <ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph>, recomendamos que use o implementador de conversor de <ph id="ph2">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> método em vez disso.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The converter should call this method of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance available from the <ph id="ph2">&lt;paramref name="serializer" /&gt;</ph> parameter.</source>
          <target state="translated">O conversor deve chamar esse método do <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instância disponível a partir de <ph id="ph2">&lt;paramref name="serializer" /&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> method enables converter to pass a property value from <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph>, and then return a value of the expected type.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> método permite que o conversor passar um valor de propriedade <ph id="ph2">&lt;paramref name="dictionary" /&gt;</ph>e, em seguida, retorna um valor do tipo esperado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</source>
          <target state="translated">Em alguns casos, um conversor para um tipo personalizado pode estar trabalhando com propriedades que se registraram conversores (por exemplo, digite um tem uma propriedade do tipo B e tipo B também está associado um conversor personalizado).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>In that case, invoking <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</source>
          <target state="translated">Nesse caso, invocar <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /&gt;</ph> garante que conversores personalizados será chamado para dados de propriedade que estão contidos no dicionário recursivamente.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</source>
          <target state="translated">Quando o conversor tem iteração em todas as entradas no dicionário, ele retorna uma instância criada do tipo de destino.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>If the converter encounters a problem during deserialization, it should throw an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> error that describes the problem.</source>
          <target state="translated">Se o conversor de encontrar um problema durante a desserialização, ela deve gerar um <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> erro que descreve o problema.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The object to serialize.</source>
          <target state="translated">O objeto a ser serializado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The object that is responsible for the serialization.</source>
          <target state="translated">O objeto que é responsável pela serialização.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When overridden in a derived class, builds a dictionary of name/value pairs.</source>
          <target state="translated">Quando substituído em uma classe derivada, cria um dicionário de pares nome/valor.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>An object that contains key/value pairs that represent the object’s data.</source>
          <target state="translated">Um objeto que contém pares chave/valor que representam os dados do objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>When you serialize a type for which a custom converter is registered, the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance invokes the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">Ao serializar um tipo para o qual um conversor personalizado é registrado, o <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instância invoca o <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The return value of <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> must be an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</source>
          <target state="translated">O valor de retorno <ph id="ph1">&lt;see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /&gt;</ph> deve ser um <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> instância com zero ou mais pares de nome/valor que representam dados de um objeto a ser convertido em JSON.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The converter itself does not serialize data as JSON.</source>
          <target state="translated">O conversor não serializar dados como JSON.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</source>
          <target state="translated">Em vez disso, o conversor cria um dicionário de pares nome/valor que contêm os nomes de propriedade (a chave de cadeia de caracteres para o dicionário) e a propriedade correspondente (o valor do objeto no dicionário) de valores.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance subsequently converts these to JSON.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instância subsequentemente converte para JSON.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
          <source>If the converter encounters an exception, it should throw an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> error that describes the problem.</source>
          <target state="translated">Se o conversor encontra uma exceção, ela deve gerar um <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> erro que descreve o problema.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>When overridden in a derived class, gets a collection of the supported types.</source>
          <target state="translated">Quando substituída em uma classe derivada, obtém uma coleção de tipos compatíveis.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that represents the types supported by the converter.</source>
          <target state="translated">Um objeto que implementa <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> que representa os tipos suportados pelo conversor.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property lists the types that are supported by the converter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> propriedade lista os tipos que são suportados pelo conversor.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>At run time, a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</source>
          <target state="translated">Em tempo de execução, um <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instância usa essa propriedade para determinar o mapeamento de tipos gerenciados para seus conversores personalizados correspondentes.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property in a derived class.</source>
          <target state="translated">O exemplo a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> propriedade em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>In this example, the converter supports only the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> type.</source>
          <target state="translated">Neste exemplo, o conversor oferece suporte apenas a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListItemCollection&gt;</ph> tipo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
          <source><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph> must always return a collection, and the collection must contain at least one entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /&gt;</ph> sempre deve retornar que uma coleção e a coleção devem conter pelo menos uma entrada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>