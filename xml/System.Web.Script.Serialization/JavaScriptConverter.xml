<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="752718b77e67b3a54f76d7c672a56001c11ffd3d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37604877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0166c-101">Fornece uma classe base abstrata para um conversor de tipo personalizado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0166c-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166c-102">O <xref:System.Web.Script.Serialization.JavaScriptConverter> classe permite que você implementar a serialização e desserialização de processos para tipos gerenciados que não são suportados nativamente pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer> classe.</span><span class="sxs-lookup"><span data-stu-id="0166c-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="0166c-103">Você também pode usar <xref:System.Web.Script.Serialization.JavaScriptConverter> quando precisar de mais controle sobre o processo de serialização e desserialização.</span><span class="sxs-lookup"><span data-stu-id="0166c-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="0166c-104">O <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriedade indica os tipos para o qual um conversor personalizado fornece serviços de conversor.</span><span class="sxs-lookup"><span data-stu-id="0166c-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="0166c-105">Para indicar que um conversor personalizado deve ser usado pelo <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância, você deve registrar o conversor com a instância.</span><span class="sxs-lookup"><span data-stu-id="0166c-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="0166c-106">Se você estiver usando o <xref:System.Web.Script.Serialization.JavaScriptSerializer> diretamente da classe, você deve usar o <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> método para registrar o conversor.</span><span class="sxs-lookup"><span data-stu-id="0166c-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="0166c-107">Caso contrário, se você estiver chamando métodos da Web do ECMAScript (JavaScript) e você deseja usar o conversor personalizado, você pode registrá-lo adicionando um `converters` elemento no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="0166c-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="0166c-108">Para obter mais informações, consulte [como: configurar os serviços ASP.NET no Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="0166c-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="0166c-109">Quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância está serializando um tipo para o qual ele tem um conversor personalizado registrado, as chamadas do serializador a <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0166c-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="0166c-110">Da mesma forma, quando o <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância é desserializar uma cadeia de caracteres do objeto notação JSON (JavaScript) e reconhece que um tipo de cadeia de caracteres JSON tem um conversor personalizado associado a ele, as chamadas do serializador a <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0166c-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0166c-111">O exemplo a seguir mostra como criar um conversor personalizado para o <xref:System.Web.UI.WebControls.ListItemCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="0166c-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="0166c-112">
        <para>Ao herdar da <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, você deve substituir os seguintes membros:- <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> fornece o <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> que será usado por implementadores de método <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Código de conversor deve ser capaz de levar um valor que está contido no dicionário de que o serializador passa para ele e, em seguida, converter esse valor em um objeto do tipo <paramref name="T" />. Em vez de reimplementar o código de conversão personalizada para fazer isso, você pode chamar o <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0166c-112">
          <para>When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:  -   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />. Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166c-113">Inicializa uma nova instância da classe <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-113">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="0166c-114">Uma instância <see cref="T:System.Collections.Generic.IDictionary`2" /> de dados de propriedade armazenada como pares nome-valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-114">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="0166c-115">O tipo do objeto resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-115">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="0166c-116">A instância <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-116">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166c-117">Quando substituído em uma classe derivada, converte o dicionário fornecido em um objeto do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-117">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0166c-118">O objeto desserializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-118">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0166c-119">
            <para>O <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> método percorre os valores a <paramref name="dictionary" /> parâmetro para construir uma instância do tipo solicitado no <paramref name="type" /> parâmetro. Embora um conversor de pode usar diretamente os valores de <paramref name="dictionary" />, é recomendável usar o implementador de conversor de <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método em vez disso. O conversor deve chamar esse método da <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instância disponível do <paramref name="serializer" /> parâmetro.  O <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> método permite que o conversor passar um valor da propriedade <paramref name="dictionary" />e, em seguida, retornar um valor do tipo esperado. Em alguns casos, um conversor para um tipo personalizado pode estar trabalhando com propriedades que se registraram conversores (por exemplo, um tipo tem uma propriedade do tipo B e tipo B também está associado um conversor personalizado). Nesse caso, invocar <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> torna-se de que conversores personalizados será chamado para os dados de propriedade que estão contidos no dicionário recursivamente. Quando o conversor tem iterado por meio de todas as entradas no dicionário, ele retorna uma instância construída do tipo de destino.  Se o conversor de encontrar um problema durante a desserialização, ele deve gerar um <see cref="T:System.InvalidOperationException" /> erro que descreve o problema.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-119">
              <para>The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter. Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead. The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.  The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type. In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter). In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary. When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.  If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0166c-120">O objeto a ser serializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-120">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="0166c-121">O objeto que é responsável pela serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-121">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166c-122">Quando substituído em uma classe derivada, cria um dicionário de pares nome/valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-122">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0166c-123">Um objeto que contém pares chave/valor que representam os dados do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-123">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166c-124">Quando você serializa um tipo para o qual um conversor personalizado é registrado, o <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância invoca o <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0166c-124">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0166c-125">
            <para>O valor de retorno <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> deve ser um <see cref="T:System.Collections.Generic.IDictionary`2" /> instância com zero ou mais pares de nome/valor que representam dados de um objeto a ser convertido em JSON. O conversor em si não serializar dados como JSON. Em vez disso, o conversor cria um dicionário de pares nome/valor que contêm os nomes de propriedade (a chave de cadeia de caracteres para o dicionário) e a propriedade correspondente (o valor do objeto no dicionário) de valores. O <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instância subsequentemente converte-as para JSON.  Se o conversor de encontrar uma exceção, ele deve gerar um <see cref="T:System.InvalidOperationException" /> erro que descreve o problema.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-125">
              <para>The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON. The converter itself does not serialize data as JSON. Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary). The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.  If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166c-126">Quando substituída em uma classe derivada, obtém uma coleção de tipos compatíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-126">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166c-127">Um objeto que implementa <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa os tipos com suporte pelo conversor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-127">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166c-128">O <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriedade lista os tipos que são compatíveis com o conversor.</span><span class="sxs-lookup"><span data-stu-id="0166c-128">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="0166c-129">Em tempo de execução, um <xref:System.Web.Script.Serialization.JavaScriptSerializer> instância usa essa propriedade para determinar o mapeamento de tipos gerenciados para seus correspondentes conversores personalizados.</span><span class="sxs-lookup"><span data-stu-id="0166c-129">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0166c-130">O exemplo a seguir mostra como substituir o <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> propriedade em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="0166c-130">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="0166c-131">Neste exemplo, o conversor dá suporte apenas a <xref:System.Web.UI.WebControls.ListItemCollection> tipo.</span><span class="sxs-lookup"><span data-stu-id="0166c-131">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="0166c-132">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.Script.Serialization.JavaScriptConverter> classe.</span><span class="sxs-lookup"><span data-stu-id="0166c-132">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0166c-133">
            <para>
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> deve sempre retornar que uma coleção e a coleção devem conter pelo menos uma entrada.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0166c-133">
              <para>
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>