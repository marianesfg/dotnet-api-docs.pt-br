<Type Name="XslTransformFileEditor" FullName="System.Web.UI.Design.XslTransformFileEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce80958f45e241b6dd18d4d56b0c668150e572e4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39962420" /></Metadata><TypeSignature Language="C#" Value="public class XslTransformFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XslTransformFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XslTransformFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XslTransformFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransformFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type XslTransformFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece uma interface do usuário no tempo de design para selecionar um arquivo de transformação XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Web.UI.Design.XslTransformFileEditor> objeto é usado em tempo de design para selecionar e editar uma URL para um arquivo de transformação XML (. xsl) e atribuir a URL para uma propriedade de controle. Por exemplo, o <xref:System.Web.UI.WebControls.XmlDataSource> controle usa o <xref:System.Web.UI.Design.XslTransformFileEditor> classe no tempo de design para definir o valor da <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propriedade.  
  
 Use o <xref:System.ComponentModel.EditorAttribute> atributo a ser associado a <xref:System.Web.UI.Design.XslTransformFileEditor> com uma propriedade. Quando a propriedade associada é editada na superfície de design, o host de designer chama o <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método. O <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> usa o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método, que por sua vez, exibe uma interface do usuário para selecionar a URL e, em seguida, retorna a URL que é selecionada pelo usuário. O <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A> método indica o estilo de exibição da interface do usuário.  
  
 Derive uma classe do <xref:System.Web.UI.Design.XslTransformFileEditor> para definir um editor personalizado para uma propriedade de URL do arquivo de transformação XML. Por exemplo, uma classe derivada pode substituir a <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método e, em seguida, chame o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método com um personalizado <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> ou <xref:System.Web.UI.Design.XslTransformFileEditor.Caption%2A> valor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como associar uma instância da <xref:System.Web.UI.Design.XslTransformFileEditor> classe com uma propriedade que está contida dentro de um controle personalizado. Quando a propriedade de controle for editada na superfície de design, o <xref:System.Web.UI.Design.XslTransformFileEditor> classe permite que a interface do usuário selecionar e editar um nome de arquivo de transformação XML para o valor da propriedade.  
  
 [!code-csharp[WebDesigner.XslTransformFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XslTransformFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XslTransformFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XslTransformFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransformFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XslTransformFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransformFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Design.XslTransformFileEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XslTransformFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.XslTransformFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a legenda a ser exibida na caixa de diálogo de seleção.</summary>
        <value>O texto da legenda para exibir a caixa de diálogo de seleção.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.XslTransformFileEditor.Caption%2A> propriedade é usada pelo <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método ao chamar o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método, que exibe a caixa de diálogo de seleção de URL para o usuário em tempo de design.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XslTransformFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.XslTransformFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as opções de filtro de URL para o editor, que são usadas para filtrar os itens que aparecem na caixa de diálogo de seleção de URL.</summary>
        <value>Uma cadeia de caracteres que representa uma ou mais opções de filtro de URL para a caixa de diálogo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> propriedade é usada pelo <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> método ao chamar o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> método, que exibe a caixa de diálogo de seleção de URL para o usuário em tempo de design.  
  
 O <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> valor padrão da propriedade indica dois filtros de URL para a caixa de diálogo: um para arquivos de transformação XML (*. xsl) e outro para todos os arquivos (\*.\*).  
  
 Para especificar uma cadeia de caracteres de filtro personalizado, derive uma classe do <xref:System.Web.UI.Design.XslTransformFileEditor> de classe e, em seguida, substituir o <xref:System.Web.UI.Design.XslTransformFileEditor.Filter%2A> propriedade para retornar a cadeia de caracteres de filtro personalizado.  
  
 Uma cadeia de caracteres de filtro contém uma ou mais opções de filtro. Cada opção de filtro contém uma descrição do filtro, seguida pela barra vertical (&#124;) e o padrão de filtro. As cadeias de caracteres para diferentes opções de filtragem são separadas por barra vertical.  
  
 A seguir está um exemplo de uma cadeia de caracteres de filtro que contém as duas opções de filtro:  
  
 "`XML Transform Files (*.xsl)|*.xsl|All Files (*.*)|*.*`".  
  
 Você pode especificar vários padrões de filtro em uma opção de filtro, separando os padrões de filtro com ponto e vírgula. A seguir está um exemplo de uma cadeia de caracteres de filtro em que a primeira opção de filtro especifica dois padrões de filtro:  
  
 "`Custom XML Transform Files (*.xs1; *.xs2)|*.xs1;*.xs2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>