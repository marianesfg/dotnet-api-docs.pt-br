<Type Name="ResourceExpressionEditorSheet" FullName="System.Web.UI.Design.ResourceExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd9d0a54f3ce13c8c02b836a4a3eb1d260819453" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36390243" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceExpressionEditorSheet : System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditorSheet extends System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditorSheet&#xA;Inherits ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditorSheet : System::Web::UI::Design::ExpressionEditorSheet" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditorSheet = class&#xA;    inherit ExpressionEditorSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditorSheet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma folha de editor de tempo de design para as propriedades de uma expressão de recurso na interface do usuário de um host de designer em tempo de design.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O designer visual usa o <xref:System.Web.UI.Design.ResourceExpressionEditor> classe com o <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> classe para selecionar as propriedades individuais de uma expressão de referência de recurso e combine os valores de propriedade de expressão de recurso selecionado em uma expressão de recurso.  
  
 O método <xref:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> retorna um objeto <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>. Na caixa de diálogo de expressões, quando você seleciona uma propriedade de controle e associá-lo a uma expressão de recurso, o visual designer chama o <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> método. O designer visual usa retornado <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> objeto para solicitar o <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> e <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> propriedades. Depois que as propriedades de expressão de recurso forem selecionadas, o visual designer chama o <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression%2A> método combinar as propriedades em uma cadeia de caracteres de expressão de recurso.  
  
 O <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> propriedade deve ser especificada em uma expressão de recurso; ele indexará o valor do recurso. O <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> propriedade é opcional. Ele faz referência ao nome de arquivo ou chave de classe que define o recurso na pasta de recursos globais.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como associar o <xref:System.Web.UI.WebControls.HyperLink.Text%2A> propriedade de um <xref:System.Web.UI.WebControls.HyperLink> controle para uma expressão de recurso usando o <xref:System.Web.UI.Design.ResourceExpressionEditor>. Para usar o exemplo:  
  
1.  Em um projeto de site da Web, adicione um novo arquivo de recurso denominado Strings.resx na pasta App_GlobalResources.  
  
2.  Adicionar uma cadeia de caracteres denominada `myLinkText` para o recurso de Strings.resx de arquivo e defina o valor como o texto de um <xref:System.Web.UI.WebControls.HyperLink> controle. Por exemplo, definir a `myLinkText` valor de cadeia de caracteres `This is a link`.  
  
3.  Em uma página da Web ASP.NET, adicione um <xref:System.Web.UI.WebControls.HyperLink> controle.  
  
4.  Na grade de propriedades para o `Hyperlink` de controle, clique em **expressões**e clique no botão de reticências (**...) ** para exibir a caixa de diálogo de associação de expressão.  
  
5.  Selecione o `Text` propriedade de um controle e o conjunto **tipo de expressão** para o `Resources` tipo de expressão. O designer visual exibe as propriedades de expressão de recursos definidas pelo <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> objeto.  
  
6.  Definir o **propriedades de expressão** da seguinte maneira:  
  
    -   Definir **ClassKey** para `Strings`, o nome da classe para o arquivo de recurso Strings.resx compilado.  
  
    -   Definir **ResourceKey** para `myLinkText`, o nome de cadeia de caracteres em Strings.resx.  
  
 O designer visual usa o <xref:System.Web.UI.Design.ResourceExpressionEditor> objeto atribuir a expressão de recurso para o `Text` propriedade. Fonte de aspx a seguir mostra um exemplo de um valor de propriedade definido usando uma expressão de recurso:  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ResourceExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ResourceExpressionEditorSheet" Usage="new System.Web.UI.Design.ResourceExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Uma expressão de recurso, usada para inicializar a folha de editor de expressão.</param>
        <param name="serviceProvider">Uma implementação do provedor de serviço fornecida pelo host do designer, usada para obter serviços de tempo de design adicionais.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inicial <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey%2A> e <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> valores de propriedade são definidos usando a entrada `expression` cadeia de caracteres. O <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> propriedade é definida usando a entrada `serviceProvider` implementação.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a chave que corresponde ao nome do arquivo para o recurso na pasta de recursos globais do projeto.</summary>
        <value>A chave para um arquivo de recurso na pasta de recursos globais.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], arquivos de recursos globais estão localizados na pasta App_GlobalResources.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public override string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="override this.GetExpression : unit -&gt; string" Usage="resourceExpressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma expressão de recurso formada pelos valores de propriedade de folha do editor de expressão.</summary>
        <returns>A cadeia de caracteres da expressão de recurso para as configurações atuais na folha.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a cadeia de caracteres da expressão de recurso é válida.</summary>
        <value>
          <see langword="true" /> Se a cadeia de caracteres de expressão de recurso é válida. Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa implementação base sempre retorna `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string with get, set" Usage="System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.Design.ResourceExpressionEditorSheet/ResourceKeyTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do recurso, que é usado como uma chave para localizar o valor do recurso.</summary>
        <value>O nome do recurso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey%2A> propriedade é necessária para uma expressão de recurso; indica o nome do recurso. O nome do recurso é usado em tempo de execução e tempo de design para pesquisar um recurso e atribuí-la a uma propriedade de controle.  
  
 Por exemplo, se o <xref:System.Web.UI.WebControls.Label.Text%2A> propriedade para um <xref:System.Web.UI.WebControls.Label> controle é atribuído para a expressão de recurso `<%$ Resources:Strings, labelText $>`, a expressão de recurso é avaliada e o <xref:System.Web.UI.WebControls.Label.Text%2A> campo é atribuído a `labelText` valor do recurso do `Strings` classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
  </Members>
</Type>