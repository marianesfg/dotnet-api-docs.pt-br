<Type Name="Row" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.Row">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a89782f797cb8b84711708b139cf629877748c0b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36694199" /></Metadata><TypeSignature Language="C#" Value="public sealed class Row" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Row extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Row" />
  <TypeSignature Language="C++ CLI" Value="public ref class Row sealed" />
  <TypeSignature Language="F#" Value="type Row = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece um meio semelhante a construtor de chamar <see cref="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Row (System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; columnValue, params System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;[] columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; columnValue, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;[] columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnValue As KeyValuePair(Of String, DbExpression), ParamArray columnValues As KeyValuePair(Of String, DbExpression)())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Row(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; columnValue, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.CommandTrees.ExpressionBuilder.Row : System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt; * System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;[] -&gt; System.Data.Common.CommandTrees.ExpressionBuilder.Row" Usage="new System.Data.Common.CommandTrees.ExpressionBuilder.Row (columnValue, columnValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnValue" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="columnValues" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="columnValue">Um par chave-valor que fornece a primeira coluna na nova instância de linha. (necessário)</param>
        <param name="columnValues">Um par chave-valor que fornece quaisquer colunas subsequentes na nova instância de linha. (opcional)</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" /> com o valor da primeira coluna especificado e valores de colunas sucessivas opcionais.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.Common.CommandTrees.DbExpression (System.Data.Common.CommandTrees.ExpressionBuilder.Row row);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Data.Common.CommandTrees.DbExpression op_Implicit(class System.Data.Common.CommandTrees.ExpressionBuilder.Row row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::Common::CommandTrees::DbExpression ^(System::Data::Common::CommandTrees::ExpressionBuilder::Row ^ row);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Data.Common.CommandTrees.ExpressionBuilder.Row -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      </Parameters>
      <Docs>
        <param name="row">A linha a ser convertida.</param>
        <summary>Converte a linha especificada em um <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</summary>
        <returns>Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que representa a linha convertida.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToExpression">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression" />
      <MemberSignature Language="VB.NET" Value="Public Function ToExpression () As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbNewInstanceExpression ^ ToExpression();" />
      <MemberSignature Language="F#" Value="member this.ToExpression : unit -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="row.ToExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que constrói uma nova linha com base nas colunas contidas nesta instância de linha.</summary>
        <returns>Um novo DbNewInstanceExpression que constrói uma linha com os mesmos nomes de coluna e valores de DbExpression que esta instância de linha.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>