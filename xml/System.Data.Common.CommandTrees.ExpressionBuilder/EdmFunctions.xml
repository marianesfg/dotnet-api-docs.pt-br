<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ade158612276cd38148f7062489c3007520cefe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7d69a-101">Fornece uma API para construir <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que invocam funções canônicas do EDM e permite que a API a seja acessada como métodos de extensão no próprio tipo de expressão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d69a-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-102">Uma expressão que especifica o valor numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-102">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-103">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Abs' canônica com o argumento especificado, que cada um deve ter um tipo de resultado numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-104">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-104">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-105">Uma nova DbFunctionExpression que retorna o valor absoluto de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-105">A new DbFunctionExpression that returns the absolute value of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-106">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-106">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-107">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-107">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-108">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-108">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-109">Uma expressão que especifica o número de dias a ser adicionado a **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-109">An expression that specifies the number of days to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-110">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddDays' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-111">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-111">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-112">Uma nova DbFunctionExpression que adiciona o número de dias especificado por **addValue** ao valor especificado por **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-113">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-113">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-114">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-114">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-115">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-115">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-116">Uma expressão que especifica o número de horas a serem adicionadas a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-116">An expression that specifies the number of hours to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-117">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddHours' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-118">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-118">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-119">Uma nova DbFunctionExpression que adiciona o número de horas especificado por **addValue** ao valor especificado por **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-120">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-120">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-121">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-121">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-122">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-122">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-123">Uma expressão que especifica o número de microssegundos a serem adicionadas a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-123">An expression that specifies the number of microseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-124">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddMicroseconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-125">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-125">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-126">Uma nova DbFunctionExpression que adiciona o número de microssegundos especificado por **addValue** ao valor especificado por **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-127">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-127">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-128">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-128">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-129">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-129">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-130">Uma expressão que especifica o número de milissegundos a serem adicionadas a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-131">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddMilliseconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-132">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-132">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-133">Uma nova DbFunctionExpression que adiciona o número de milissegundos especificado por **addValue** ao valor especificado por **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-134">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-134">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-135">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-135">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-136">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-136">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-137">Uma expressão que especifica o número de minutos a serem adicionadas a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-137">An expression that specifies the number of minutes to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-138">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddMinutes' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-139">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-139">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-140">Uma nova DbFunctionExpression que adiciona o número de minutos especificado por **addValue** ao valor especificado por **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-141">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-141">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-142">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-142">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-143">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-143">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-144">Uma expressão que especifica o número de meses a ser adicionado a **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-144">An expression that specifies the number of months to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-145">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddMonths' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-146">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-146">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-147">Uma nova DbFunctionExpression que adiciona o número de meses especificado por **addValue** ao valor especificado por **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-148">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-148">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-149">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-149">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-150">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-150">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-151">Uma expressão que especifica o número de nanossegundos a serem adicionadas a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-152">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddNanoseconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-153">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-153">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-154">Uma nova DbFunctionExpression que adiciona o número de nanossegundos especificado por **addValue** ao valor especificado por **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-155">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-155">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-156">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-156">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-157">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-157">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-158">Uma expressão que especifica o número de segundos a serem adicionadas a **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-158">An expression that specifies the number of seconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-159">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddSeconds' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-160">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-160">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-161">Uma nova DbFunctionExpression que adiciona o número de segundos especificado por **addValue** ao valor especificado por **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-162">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-162">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-163">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-163">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-164">Uma expressão que especifica o valor ao qual **addValue** deve ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-164">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="7d69a-165">Uma expressão que especifica o número de anos a ser adicionado a **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-165">An expression that specifies the number of years to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-166">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'AddYears' canônica com os argumentos especificados, que deve ter os tipos de resultado de inteiro e DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-167">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-167">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-168">Uma nova DbFunctionExpression que adiciona o número de anos especificado por **addValue** ao valor especificado por **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-169">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-169">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-170">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-170">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-171">Uma expressão que especifica a coleção com base na qual o valor médio deve ser calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-171">An expression that specifies the collection from which the average value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-172">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Avg' canônica na coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-173">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-173">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-174">Uma nova DbFunctionExpression que produz o valor médio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-174">A new DbFunctionExpression that produces the average value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-175">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-175">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-176">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-176">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="7d69a-177">Uma expressão que especifica o primeiro operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-177">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="7d69a-178">Uma expressão que especifica o segundo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-178">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-179">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'BitwiseAnd' canônica com os argumentos especificados, que deve ter o mesmo tipo de resultado numérico inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-180">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-180">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-181">Uma nova DbFunctionExpression que retorna o valor produzido pela execução do bit a bit AND de **value1** e **value2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-182">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-182">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-183">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-183">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-184">Uma expressão que especifica o primeiro operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-184">An expression that specifies the first operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-185">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'BitwiseNot' canônica com o argumento especificado, que deve ter um tipo de resultado numérico inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-186">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-186">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-187">Uma nova DbFunctionExpression que retorna o valor produzido pela execução do bit a bit NOT de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-188">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-188">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-189">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-189">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="7d69a-190">Uma expressão que especifica o primeiro operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-190">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="7d69a-191">Uma expressão que especifica o segundo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-191">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-192">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'BitwiseOr' canônica com os argumentos especificados, que deve ter o mesmo tipo de resultado numérico inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-193">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-193">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-194">Uma nova DbFunctionExpression que retorna o valor produzido pela execução do bit a bit OR de **value1** e **value2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-195">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-195">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-196">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-196">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="7d69a-197">Uma expressão que especifica o primeiro operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-197">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="7d69a-198">Uma expressão que especifica o segundo operando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-198">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-199">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'BitwiseXor' canônica com os argumentos especificados, que deve ter o mesmo tipo de resultado numérico inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-200">O tipo de resultado da expressão é o mesmo que o tipo dos argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-200">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-201">Uma nova DbFunctionExpression que retorna o valor produzido pela execução do bit a bit XOR (OR exclusivo) de **value1** e **value2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-202">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-202">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-203">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-203">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-204">Uma expressão que especifica o valor numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-204">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-205">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Ceiling' canônica com o argumento especificado, que cada um deve ter um tipo de resultado simples, duplo ou decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="7d69a-206">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-206">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-207">Uma nova DbFunctionExpression que retorna o menor valor de inteiro não menor que **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-207">A new DbFunctionExpression that returns the smallest integer value not less than than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-208">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-208">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-209">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-209">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="7d69a-210">Uma expressão que especifica a cadeia de caracteres que deve aparecer primeiro na cadeia de caracteres de resultado concatenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-210">An expression that specifies the string that should appear first in the concatenated result string.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="7d69a-211">Uma expressão que especifica a cadeia de caracteres que deve aparecer em segundo na cadeia de caracteres de resultado concatenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-211">An expression that specifies the string that should appear second in the concatenated result string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-212">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Concat' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-213">O tipo de resultado da expressão é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-213">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-214">Uma nova DbFunctionExpression que produz a cadeia de caracteres concatenada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-214">A new DbFunctionExpression that produces the concatenated string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-215">**string1** **string2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-215">**string1** **string2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-216">**string1** **string2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-216">**string1** **string2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString">
          <span data-ttu-id="7d69a-217">Uma expressão que especifica a cadeia de caracteres a ser pesquisada quanto a qualquer ocorrência de **searchedForString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-217">An expression that specifies the string to search for any occurence of **searchedForString**.</span>
          </span>
        </param>
        <param name="searchedForString">
          <span data-ttu-id="7d69a-218">Uma expressão que especifica a cadeia de caracteres a ser pesquisada quanto a **searchedString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-218">An expression that specifies the string to search for in **searchedString**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-219">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Contains' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-220">O tipo de resultado da expressão é um booliano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-220">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-221">Uma nova DbFunctionExpression que retorna um valor booliano que indica se **searchedForString** ocorre ou não em **searchedString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-222">**searchedString** **searchedForString**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-222">**searchedString** **searchedForString**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-223">**searchedString** **searchedForString**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-223">**searchedString** **searchedForString**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-224">Uma expressão que especifica a coleção pela qual o valor da contagem deve ser calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-224">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-225">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Count' canônica na coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-226">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-226">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-227">Uma nova DbFunctionExpression que produz o valor da contagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-227">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-228">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-228">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-229">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-229">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="7d69a-230">Uma expressão que fornece o valor de ano para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-230">An expression that provides the year value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="7d69a-231">Uma expressão que fornece o valor de mês para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-231">An expression that provides the month value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="7d69a-232">Uma expressão que fornece o valor de dia para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-232">An expression that provides the day value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="7d69a-233">Uma expressão que fornece o valor de hora para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-233">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="7d69a-234">Uma expressão que fornece o valor de minuto para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-234">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="7d69a-235">Uma expressão que fornece o valor de segundo para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-235">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-236">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'CreateDateTime' canônica com os argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="7d69a-237">**second** deve ter um tipo de resultado de Edm.Double, enquanto todos os outros argumentos devem ter um tipo de resultado de Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="7d69a-238">O tipo de resultado da expressão é Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-238">The result type of the expression is Edm.DateTime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-239">Uma nova DbFunctionExpression que retorna um novo DateTime com base nos valores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-240">**year** **month** **day** **hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-240">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-241">**year** **month** **day** **hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-241">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="7d69a-242">Uma expressão que fornece o valor de ano para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-242">An expression that provides the year value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="7d69a-243">Uma expressão que fornece o valor de mês para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-243">An expression that provides the month value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="7d69a-244">Uma expressão que fornece o valor de dia para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-244">An expression that provides the day value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="7d69a-245">Uma expressão que fornece o valor de hora para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-245">An expression that provides the hour value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="7d69a-246">Uma expressão que fornece o valor de minuto para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-246">An expression that provides the minute value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="7d69a-247">Uma expressão que fornece o valor de segundo para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-247">An expression that provides the second value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="timeZoneOffset">
          <span data-ttu-id="7d69a-248">Uma expressão que fornece o número de minutos no valor de deslocamento de fuso horário para a nova instância de DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-249">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'CreateDateTimeOffset' canônica com os argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="7d69a-250">**second** deve ter um tipo de resultado de Edm.Double, enquanto todos os outros argumentos devem ter um tipo de resultado de Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="7d69a-251">O tipo de resultado da expressão é Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-251">The result type of the expression is Edm.DateTimeOffset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-252">Uma nova DbFunctionExpression que retorna um novo DateTimeOffset com base nos valores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour">
          <span data-ttu-id="7d69a-255">Uma expressão que fornece o valor de hora para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-255">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="7d69a-256">Uma expressão que fornece o valor de minuto para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-256">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="7d69a-257">Uma expressão que fornece o valor de segundo para a nova instância de DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-257">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-258">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'CreateTime' canônica com os argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="7d69a-259">**second** deve ter um tipo de resultado de Edm.Double, enquanto todos os outros argumentos devem ter um tipo de resultado de Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="7d69a-260">O tipo de resultado da expressão é Edm.Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-260">The result type of the expression is Edm.Time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-261">Uma nova DbFunctionExpression que retorna um novo Time com base nos valores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-262">**hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-262">**hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-263">**hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-263">**hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d69a-264">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'CurrentDateTime' canônica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-265">Uma nova DbFunctionExpression que retorna a data e hora atuais como uma instância de Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d69a-266">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'CurrentDateTimeOffset' canônica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-267">Uma nova DbFunctionExpression que retorna a data e hora atuais como uma instância de Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d69a-268">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'CurrentUtcDateTime' canônica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-269">Uma nova DbFunctionExpression que retorna a data e hora UTC atuais como uma instância de Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-270">Uma expressão que especifica o valor do qual o dia deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-270">An expression that specifies the value from which the day should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-271">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Day' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-272">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-272">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-273">Uma nova DbFunctionExpression que retorna o valor de dia inteiro de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-274">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-274">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-275">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-275">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-276">Uma expressão que especifica o valor do qual o dia dentro do ano deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-276">An expression that specifies the value from which the day within the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-277">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DayOfYear' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-278">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-278">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-279">Uma nova DbFunctionExpression que retorna o valor de dia do ano inteiro de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-280">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-280">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-281">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-281">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="7d69a-282">Uma expressão que especifica o primeiro argumento de valor de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-282">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="7d69a-283">Uma expressão que especifica o segundo argumento de valor de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-283">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-284">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffDays' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-285">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-285">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-286">Uma nova DbFunctionExpression que retorna o número de dias que é a diferença entre **dateValue1** e **dateValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="7d69a-287">Uma expressão que especifica o primeiro argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-287">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="7d69a-288">Uma expressão que especifica o segundo argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-288">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-289">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffHours' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-290">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-290">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-291">Uma nova DbFunctionExpression que retorna o número de horas que é a diferença entre **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="7d69a-292">Uma expressão que especifica o primeiro argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-292">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="7d69a-293">Uma expressão que especifica o segundo argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-293">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-294">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffMicroseconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-295">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-295">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-296">Uma nova DbFunctionExpression que retorna o número de microssegundos que é a diferença entre **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="7d69a-297">Uma expressão que especifica o primeiro argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-297">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="7d69a-298">Uma expressão que especifica o segundo argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-298">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-299">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffMilliseconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-300">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-300">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-301">Uma nova DbFunctionExpression que retorna o número de milissegundos que é a diferença entre **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="7d69a-302">Uma expressão que especifica o primeiro argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-302">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="7d69a-303">Uma expressão que especifica o segundo argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-303">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-304">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffMinutes' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-305">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-305">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-306">Uma nova DbFunctionExpression que retorna o número de minutos que é a diferença entre **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="7d69a-307">Uma expressão que especifica o primeiro argumento de valor de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-307">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="7d69a-308">Uma expressão que especifica o segundo argumento de valor de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-308">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-309">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffMonths' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-310">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-310">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-311">Uma nova DbFunctionExpression que retorna o número de meses que é a diferença entre **dateValue1** e **dateValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="7d69a-312">Uma expressão que especifica o primeiro argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-312">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="7d69a-313">Uma expressão que especifica o segundo argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-313">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-314">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffNanoseconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-315">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-315">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-316">Uma nova DbFunctionExpression que retorna o número de nanossegundos que é a diferença entre **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="7d69a-317">Uma expressão que especifica o primeiro argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-317">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="7d69a-318">Uma expressão que especifica o segundo argumento de valor temporal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-318">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-319">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffSeconds' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-320">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-320">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-321">Uma nova DbFunctionExpression que retorna o número de segundos que é a diferença entre **timeValue1** e **timeValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="7d69a-322">Uma expressão que especifica o primeiro argumento de valor de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-322">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="7d69a-323">Uma expressão que especifica o segundo argumento de valor de data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-323">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-324">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'DiffYears' canônica com os argumentos especificados, que cada um deve ter um tipo de resultado de DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-325">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-325">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-326">Uma nova DbFunctionExpression que retorna o número de anos que é a diferença entre **dateValue1** e **dateValue2**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-327">Uma expressão que especifica a cadeia de caracteres que é pesquisada no final quanto ao **sufixo** da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-327">An expression that specifies the string that is searched at the end for string **suffix**.</span>
          </span>
        </param>
        <param name="suffix">
          <span data-ttu-id="7d69a-328">Uma expressão que especifica a cadeia de caracteres de destino que é pesquisada no final de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-329">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'EndsWith' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-330">O tipo de resultado da expressão é um booliano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-330">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-331">Uma nova DbFunctionExpression que retorna um valor booliano que indica se **stringArgument** termina ou não com o **sufixo**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-332">Uma expressão que especifica o valor numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-332">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-333">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Floor' canônica com o argumento especificado, que cada um deve ter um tipo de resultado simples, duplo ou decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="7d69a-334">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-334">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-335">Uma nova DbFunctionExpression que retorna o maior valor inteiro não maior que **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-336">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-336">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-337">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-337">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument">
          <span data-ttu-id="7d69a-338">Uma expressão que especifica o valor de DateTimeOffset em que o deslocamento de minuto de GMT deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-339">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'GetTotalOffsetMinutes' canônica com o argumento especificado, que deve ter um tipo de resultado DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-340">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-340">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-341">Uma nova DbFunctionExpression que retorna o número de minutos que **dateTimeOffsetArgument** é deslocado de GMT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-342">**dateTimeOffsetArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-342">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-343">**dateTimeOffsetArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-343">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-344">Uma expressão que especifica o valor do qual a hora deve ser recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-344">An expression that specifies the value from which the hour should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-345">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Hour' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-346">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-346">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-347">Uma nova DbFunctionExpression que retorna o valor de hora inteiro de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-348">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-348">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-349">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-349">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString">
          <span data-ttu-id="7d69a-350">Uma expressão que especifica a cadeia de caracteres a ser pesquisada quanto a **stringToFind**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-350">An expression that specifies the string to search for **stringToFind**.</span>
          </span>
        </param>
        <param name="stringToFind">
          <span data-ttu-id="7d69a-351">Uma expressão que especifica a cadeia de caracteres a ser localizada em **searchString** deve ser verificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-351">An expression that specifies the string to locate within **searchString** should be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-352">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'IndexOf' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-353">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-353">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-354">Uma nova DbFunctionExpression que retorna o primeiro índice de **stringToFind** na **searchString**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d69a-355">É o índice retornado pela IndexOf \<b > com base em 1 \< /b >.</span><span class="sxs-lookup"><span data-stu-id="7d69a-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-356">**searchString** **stringToFind**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-356">**searchString** **stringToFind**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-357">**searchString** **stringToFind**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-357">**searchString** **stringToFind**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-358">Uma expressão que especifica a cadeia de caracteres da qual extrair a subcadeia de caracteres mais à esquerda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-358">An expression that specifies the string from which to extract the leftmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7d69a-359">Uma expressão que especifica o comprimento da subcadeia de caracteres mais à esquerda a ser extraída de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-360">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Left' canônica com os argumentos especificados, que deve ter um tipo de resultado numérico inteiro e de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-361">O tipo de resultado da expressão é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-361">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-362">Uma nova DbFunctionExpression que retorna a subcadeia de caracteres mais à esquerda de tamanho **length** de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-363">**stringArgument** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-363">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-364">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-364">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-365">Uma expressão que especifica a cadeia de caracteres para a qual o comprimento deve ser calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-365">An expression that specifies the string for which the length should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-366">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Length' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-367">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-367">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-368">Uma nova DbFunctionExpression que retorna o comprimento **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-369">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-369">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-370">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-370">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-371">Uma expressão que especifica a coleção pela qual o valor da contagem deve ser calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-371">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-372">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'BigCount' canônica na coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-373">O tipo de resultado da expressão é Edm.Int64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-373">The result type of the expression is Edm.Int64.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-374">Uma nova DbFunctionExpression que produz o valor da contagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-374">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-375">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-375">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-376">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-376">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-377">Uma expressão que especifica a coleção com base na qual o valor máximo deve ser recuperado</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-377">An expression that specifies the collection from which the maximum value should be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-378">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Max' canônica na coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-379">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-379">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-380">Uma nova DbFunctionExpression que produz o valor máximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-380">A new DbFunctionExpression that produces the maximum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-381">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-381">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-382">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-382">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-383">Uma expressão que especifica o valor do qual o milissegundo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-383">An expression that specifies the value from which the millisecond should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-384">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Millisecond' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-385">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-385">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-386">Uma nova DbFunctionExpression que retorna o valor de milissegundo inteiro de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-387">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-387">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-388">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-388">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-389">Uma expressão que especifica a coleção com base na qual o valor mínimo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-389">An expression that specifies the collection from which the minimum value should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-390">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Min' canônica na coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-391">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-391">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-392">Uma nova DbFunctionExpression que produz o valor mínimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-392">A new DbFunctionExpression that produces the minimum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-393">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-393">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-394">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-394">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-395">Uma expressão que especifica o valor do qual o minuto deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-395">An expression that specifies the value from which the minute should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-396">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Minute' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-397">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-397">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-398">Uma nova DbFunctionExpression que retorna o valor de minuto inteiro de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-399">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-399">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-400">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-400">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-401">Uma expressão que especifica o valor do qual o mês deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-401">An expression that specifies the value from which the month should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-402">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Month' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-403">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-403">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-404">Uma nova DbFunctionExpression que retorna o valor de mês inteiro de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-405">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-405">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-406">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-406">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d69a-407">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'NewGuid' canônica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-408">Uma nova DbFunctionExpression que retorna um novo valor de GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-408">A new DbFunctionExpression that returns a new GUID value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument">
          <span data-ttu-id="7d69a-409">Uma expressão que especifica o valor numérico a ser elevado à potência especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-409">An expression that specifies the numeric value to raise to the given power.</span>
          </span>
        </param>
        <param name="exponent">
          <span data-ttu-id="7d69a-410">Uma expressão que especifica a potência à qual **baseArgument** deve ser elevado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-410">An expression that specifies the power to which **baseArgument** should be raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-411">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Power' canônica com o argumento especificado, que deve ter tipos de resultado numéricos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span>
          </span>
          <span data-ttu-id="7d69a-412">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **baseArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-412">The result type of the expression is the same as the result type of **baseArgument**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-413">Uma nova DbFunctionExpression que retorna o valor de **baseArgument** elevado à potência especificada por **exponent**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-414">**baseArgument** **exponent**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-414">**baseArgument** **exponent**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-415">**baseArgument** **exponent**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-415">**baseArgument** **exponent**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-416">Uma expressão que especifica a cadeia de caracteres na qual realizar a operação de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-416">An expression that specifies the string in which to perform the replacement operation.</span>
          </span>
        </param>
        <param name="toReplace">
          <span data-ttu-id="7d69a-417">Uma expressão que especifica a cadeia de caracteres substituída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-417">An expression that specifies the string that is replaced.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="7d69a-418">Uma expressão que especifica a cadeia de caracteres de substituição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-418">An expression that specifies the replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-419">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Replace' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-420">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-420">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-421">Uma nova DbFunctionExpression que retorna uma nova cadeia de caracteres com base em **stringArgument** em que todas as ocorrências de **toReplace** são substituídas por **replacement**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurence of **toReplace** is replaced by **replacement**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-422">**stringArgument** **toReplace** **replacement**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-422">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-423">**stringArgument** **toReplace** **replacement**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-423">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-424">Uma expressão que especifica a cadeia de caracteres a ser revertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-424">An expression that specifies the string to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-425">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Reverse' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-426">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-426">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-427">Uma nova DbFunctionExpression que produz o valor revertido de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-428">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-428">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-429">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-429">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-430">Uma expressão que especifica a cadeia de caracteres da qual extrair a subcadeia de caracteres mais à direita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-430">An expression that specifies the string from which to extract the rightmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7d69a-431">Uma expressão que especifica o comprimento da subcadeia de caracteres mais à direita a ser extraída de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-432">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Right' canônica com os argumentos especificados, que deve ter um tipo de resultado numérico inteiro e de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="7d69a-433">O tipo de resultado da expressão é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-433">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-434">Uma nova DbFunctionExpression que retorna a subcadeia de caracteres mais à direita de tamanho **length** de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-435">**stringArgument** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-435">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-436">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-436">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d69a-437">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Round' canônica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-438">Uma expressão que especifica o valor numérico a ser arredondado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-438">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-439">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Round' canônica com o argumento especificado, que cada um deve ter um tipo de resultado simples, duplo ou decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="7d69a-440">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-440">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-441">Uma nova DbFunctionExpression que arredonda o argumento especificado para o valor inteiro mais próximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-442">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-442">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-443">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-443">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-444">Uma expressão que especifica o valor numérico a ser arredondado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-444">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="7d69a-445">Uma expressão que especifica o número de dígitos de precisão a ser usado ao arredondar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-445">An expression that specifies the number of digits of precision to use when rounding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-446">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Round' canônica com os argumentos especificados, que deve ter tipos de resultado simples, duplo ou decimal e inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-447">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-447">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-448">Uma nova DbFunctionExpression que arredonda o argumento especificado para o valor inteiro mais próximo, com a precisão especificada em **digits**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-449">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-449">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-450">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-450">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="7d69a-451">Uma expressão que especifica o valor do qual o segundo deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-451">An expression that specifies the value from which the second should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-452">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Second' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime, DateTimeOffset ou Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="7d69a-453">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-453">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-454">Uma nova DbFunctionExpression que retorna o valor de segundo inteiro de **timeValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-455">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-455">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-456">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-456">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-457">Uma expressão que especifica a cadeia de caracteres que é pesquisada no início quanto ao **prefixo** da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-457">An expression that specifies the string that is searched at the start for string **prefix**.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="7d69a-458">Uma expressão que especifica a cadeia de caracteres de destino que é pesquisada no início de **stringArgument**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-459">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'StartsWith' canônica com o argumento especificado, que cada um deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-460">O tipo de resultado da expressão é um booliano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-460">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-461">Uma nova DbFunctionExpression que retorna um valor booliano que indica se **stringArgument** começa ou não com o **prefixo**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-462">Uma expressão que especifica a coleção para a qual o desvio padrão deve ser calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-462">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-463">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'StDev' canônica nos membros não nulos da coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-464">O tipo de resultado da expressão é Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-464">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-465">Uma nova DbFunctionExpression que produz o valor do desvio padrão nos membros não nulos da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-466">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-466">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-467">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-467">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-468">Uma expressão que especifica a coleção para a qual o desvio padrão deve ser calculado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-468">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-469">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'StDevP' canônica na população da coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-470">O tipo de resultado da expressão é Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-470">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-471">Uma nova DbFunctionExpression que produz o valor do desvio padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-471">A new DbFunctionExpression that produces the standard deviation value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-472">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-472">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-473">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-473">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-474">Uma expressão que especifica a cadeia de caracteres da qual extrair a subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-474">An expression that specifies the string from which to extract the substring.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="7d69a-475">Uma expressão que especifica o índice inicial do qual a subcadeia de caracteres deve ser obtida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-475">An expression that specifies the starting index from which the substring should be taken.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="7d69a-476">Uma expressão que especifica o tamanho da subcadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-476">An expression that specifies the length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-477">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Substring' canônica com os argumentos especificados, que deve ter tipos de resultados numérico inteiro e de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span>
          </span>
          <span data-ttu-id="7d69a-478">O tipo de resultado da expressão é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-478">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-479">Uma nova DbFunctionExpression que retorna a subcadeia de caracteres direita de comprimento **length** de **stringArgument** a partir de **start**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d69a-480">Subcadeia de caracteres requer que o índice especificado pelo **iniciar** ser \<b > com base em 1 \< /b >.</span><span class="sxs-lookup"><span data-stu-id="7d69a-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-481">**stringArgument** **start** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-481">**stringArgument** **start** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-482">**stringArgument** **start** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-482">**stringArgument** **start** **length**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-483">Uma expressão que especifica a coleção com base na qual a soma deve ser calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-483">An expression that specifies the collection from which the sum should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-484">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Sum' canônica na coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-485">O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-485">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-486">Uma nova DbFunctionExpression que produz a soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-486">A new DbFunctionExpression that produces the sum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-487">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-487">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-488">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-488">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-489">Uma expressão que especifica a cadeia de caracteres que deve ser convertida em letras minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-489">An expression that specifies the string that should be converted to lower case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-490">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'ToLower' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-491">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-491">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-492">Uma nova DbFunctionExpression que retorna o valor de **stringArgument** convertido em letras minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-493">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-493">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-494">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-494">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-495">Uma expressão que especifica a cadeia de caracteres que deve ser convertida em letras maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-495">An expression that specifies the string that should be converted to upper case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-496">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'ToUpper' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-497">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-497">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-498">Uma nova DbFunctionExpression que retorna o valor de **stringArgument** convertido em letras maiúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-499">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-499">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-500">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-500">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-501">Uma expressão que especifica a cadeia de caracteres da qual o espaço à esquerda e o espaço à direita devem ser removidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-501">An expression that specifies the string from which leading and trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-502">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Trim' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-503">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-503">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-504">Uma nova DbFunctionExpression que retorna o valor de **stringArgument** o espaço à esquerda e o espaço à direita removidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-505">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-505">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-506">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-506">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-507">Uma expressão que especifica a cadeia de caracteres da qual o espaço à direita deve ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-507">An expression that specifies the string from which trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-508">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'RTrim' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-509">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-509">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-510">Uma nova DbFunctionExpression que retorna o valor de **stringArgument** o espaço à direita removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-511">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-511">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-512">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-512">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="7d69a-513">Uma expressão que especifica a cadeia de caracteres da qual o espaço à esquerda deve ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-513">An expression that specifies the string from which leading space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-514">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'LTrim' canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="7d69a-515">O tipo de resultado da expressão também é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-515">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-516">Uma nova DbFunctionExpression que retorna o valor de **stringArgument** o espaço à esquerda removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-517">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-517">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-518">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-518">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7d69a-519">Uma expressão que especifica o valor numérico a ser truncado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-519">An expression that specifies the numeric value to truncate.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="7d69a-520">Uma expressão que especifica o número de dígitos de precisão a ser usado ao truncar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-520">An expression that specifies the number of digits of precision to use when truncating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-521">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Truncate' canônica com os argumentos especificados, que deve ter tipos de resultado simples, duplo ou decimal e inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="7d69a-522">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **value**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-522">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-523">Uma nova DbFunctionExpression que trunca o argumento especificado para o valor inteiro mais próximo, com a precisão especificada em **digits**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-524">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-524">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-525">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-525">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-526">Uma expressão que especifica o valor para o qual a parte de hora deve ser truncada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-526">An expression that specifies the value for which the time portion should be truncated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-527">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'TruncateTime' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-528">O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-528">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-529">Uma nova DbFunctionExpression que retorna o valor de **dateValue** com hora definida como zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-530">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-530">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-531">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-531">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-532">Uma expressão que especifica a coleção para a qual a variação estatística deve ser calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-532">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-533">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Var' canônica nos membros não nulos da coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-534">O tipo de resultado da expressão é Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-534">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-535">Uma nova DbFunctionExpression que produz o valor da variação estatística dos membros não nulos da coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-536">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-536">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-537">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-537">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="7d69a-538">Uma expressão que especifica a coleção para a qual a variação estatística deve ser calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-538">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-539">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'VarP' canônica na população da coleção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="7d69a-540">O tipo de resultado da expressão Edm.Double.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-540">The result type of the expression Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-541">Uma nova DbFunctionExpression que produz o valor da variação estatística.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-541">A new DbFunctionExpression that produces the statistical variance value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-542">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-542">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-543">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-543">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="7d69a-544">Uma expressão que especifica o valor do qual o ano deve ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-544">An expression that specifies the value from which the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d69a-545">Cria um <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca a função 'Year' canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="7d69a-546">O tipo de resultado da expressão é Edm.Int32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-546">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d69a-547">Uma nova DbFunctionExpression que retorna o valor de ano inteiro de **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d69a-548">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-548">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d69a-549">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d69a-549">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>