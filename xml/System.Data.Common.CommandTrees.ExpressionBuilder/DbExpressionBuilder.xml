<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6aa47-101">Fornece uma API para construir <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s e permite que a API a seja acessada como métodos de extensão no próprio tipo de expressão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="6aa47-102">A função que define a operação de agregação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-102">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="6aa47-103">O argumento pelo qual a função de agregação deve ser calculada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-103">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="6aa47-104">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-105">Uma nova agregação de função com uma referência para a função e o argumento fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-105">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="6aa47-106">A propriedade Distinct da agregação de função terá o valor <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-107"><paramref name="function" /> ou <paramref name="argument" /> nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-107"><paramref name="function" /> or <paramref name="argument" /> null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-108"><paramref name="function" /> não é uma função de agregação ou tem mais de um argumento ou o tipo de resultado de <paramref name="argument" /> não é passível de promoção ou igual ao tipo de parâmetro de <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-108"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="6aa47-109">A função que define a operação de agregação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-109">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="6aa47-110">O argumento pelo qual a função de agregação deve ser calculada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-110">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="6aa47-111">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> que é aplicado de modo distinto.</span><span class="sxs-lookup"><span data-stu-id="6aa47-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span></span></summary>
        <returns><span data-ttu-id="6aa47-112">Uma nova agregação de função com uma referência para a função e o argumento fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-112">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="6aa47-113">A propriedade Distinct da agregação de função terá o valor <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-114"><paramref name="function" /> ou <paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-114"><paramref name="function" /> or <paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-115"><paramref name="function" /> não é uma função de agregação ou tem mais de um argumento ou o tipo de resultado de <paramref name="argument" /> não é passível de promoção ou igual ao tipo de parâmetro de <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-115"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-116">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina se o predicado em questão mantém todos os elementos do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-117">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-117">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="6aa47-118">Um método que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-118">A method representing a predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="6aa47-119">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica de predicado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="6aa47-120">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina se o predicado em questão mantém todos os elementos do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-121">Um novo DbQuantifierExpression que representa a operação All.</span><span class="sxs-lookup"><span data-stu-id="6aa47-121">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-122">A expressão produzida por <paramref name="predicate" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-122">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-123">A expressão produzida por <paramref name="Predicate" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-124">Uma expressão de associação que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-124">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="6aa47-125">Uma expressão que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-125">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-126">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina se o predicado em questão mantém todos os elementos do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-127">Um novo DbQuantifierExpression que representa a operação All.</span><span class="sxs-lookup"><span data-stu-id="6aa47-127">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-128"><paramref name="input" /> ou <paramref name="predicate" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-128"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-129"><paramref name="predicate" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-129"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-130">Uma expressão booliana que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-130">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-131">Uma expressão booliana que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-131">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-132">Cria uma <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> que executa a AND lógica dos argumentos left e right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-133">Uma nova DbAndExpression com os argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-133">A new DbAndExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-134"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-134"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-135"><paramref name="left" /> e <paramref name="right" /> não têm um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-135"><paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-136">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que determina se o argumento de conjunto especificado é não vazio.</span><span class="sxs-lookup"><span data-stu-id="6aa47-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-137">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-137">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-138">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que determina se o argumento de conjunto especificado é não vazio.</span><span class="sxs-lookup"><span data-stu-id="6aa47-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="6aa47-139">Um novo <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> aplicada a um novo <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> com o argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-140"><paramref name="source" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-140"><paramref name="source" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-141"><paramref name="source" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-141"><paramref name="source" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-142">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-142">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="6aa47-143">Um método que representa o predicado a ser avaliado para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-143">A method representing the predicate to evaluate for each member of the input set.</span></span> <span data-ttu-id="6aa47-144">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica de predicado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="6aa47-145">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina se o predicado em questão mantém algum elemento do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-146">Um novo DbQuantifierExpression que representa a operação Any.</span><span class="sxs-lookup"><span data-stu-id="6aa47-146">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-147">A expressão produzida por <paramref name="predicate" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-147">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-148">A expressão produzida por <paramref name="predicate" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-149">Uma expressão de associação que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-149">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="6aa47-150">Uma expressão que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-150">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-151">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina se o predicado em questão mantém algum elemento do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-152">Um novo DbQuantifierExpression que representa a operação Any.</span><span class="sxs-lookup"><span data-stu-id="6aa47-152">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-153"><paramref name="input" /> ou <paramref name="predicate" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-153"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-154">A expressão produzida por <paramref name="predicate" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-155">Retorna os argumentos especificados como um objeto do par chave-valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-155">Returns the specified arguments as a key/value pair object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6aa47-156">O valor no par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-156">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="6aa47-157">A chave do par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-157">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="6aa47-158">Retorna os argumentos especificados como um objeto do par chave-valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-158">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="6aa47-159">Objeto do par de chave-valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-159">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6aa47-160">O valor no par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-160">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="6aa47-161">A chave do par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-161">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="6aa47-162">Retorna os argumentos especificados como um objeto do par chave-valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-162">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="6aa47-163">Objeto do par de chave-valor.</span><span class="sxs-lookup"><span data-stu-id="6aa47-163">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-164">A expressão a ser associada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-164">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="6aa47-165">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que usa um nome de variável gerado para associar a expressão fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="6aa47-166">Uma nova associação de expressão com a expressão especificada e um nome de variável gerado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-166">A new expression binding with the specified expression and a generated variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-167"><paramref name="input" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-167"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-168"><paramref name="input" /> não tem um resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-168"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-169">A expressão a ser associada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-169">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="6aa47-170">O nome da variável deve ser usado para a associação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-170">The variable name that should be used for the binding.</span></span></param>
        <summary><span data-ttu-id="6aa47-171">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que usa o nome de variável especificado para associar a expressão fornecida</span><span class="sxs-lookup"><span data-stu-id="6aa47-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span></span></summary>
        <returns><span data-ttu-id="6aa47-172">Uma nova associação de expressão com a expressão especificada e um nome de variável.</span><span class="sxs-lookup"><span data-stu-id="6aa47-172">A new expression binding with the specified expression and variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-173"><paramref name="input" /> ou <paramref name="varName" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-173"><paramref name="input" /> or <paramref name="varName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-174"><paramref name="input" /> não tem um resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-174"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions"><span data-ttu-id="6aa47-175">Uma lista de expressões que fornecem a condicional para de cada caso.</span><span class="sxs-lookup"><span data-stu-id="6aa47-175">A list of expressions that provide the conditional for of each case.</span></span></param>
        <param name="thenExpressions"><span data-ttu-id="6aa47-176">Uma lista de expressões que fornecem o resultado de cada caso.</span><span class="sxs-lookup"><span data-stu-id="6aa47-176">A list of expressions that provide the result of each case.</span></span></param>
        <param name="elseExpression"><span data-ttu-id="6aa47-177">Uma expressão que define o resultado quando não há correspondência a nenhum caso.</span><span class="sxs-lookup"><span data-stu-id="6aa47-177">An expression that defines the result when no case is matched.</span></span></param>
        <summary><span data-ttu-id="6aa47-178">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-179">Uma nova DbCaseExpression com os casos especificados e o resultado padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-179">A new DbCaseExpression with the specified cases and default result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-180"><paramref name="whenExpressions" /> ou <paramref name="thenExpressions" /> é nulo ou contém nulo ou então <paramref name="elseExpression" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-180"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-181"><paramref name="whenExpressions" /> ou <paramref name="thenExpressions" /> está vazio ou <paramref name="whenExpressions" /> contém uma expressão com um tipo de resultado não booliano ou nenhum tipo de resultado comum existe para todas as expressões em <paramref name="thenExpressions" /> e <paramref name="elseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-181"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-182">O argumento para o qual a conversão deve ser aplicada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-182">The argument to which the cast should be applied.</span></span></param>
        <param name="toType"><span data-ttu-id="6aa47-183">Metadados de tipo que especificam o tipo para o qual converter.</span><span class="sxs-lookup"><span data-stu-id="6aa47-183">Type metadata that specifies the type to cast to.</span></span></param>
        <summary><span data-ttu-id="6aa47-184">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> que aplica uma operação de conversão a um argumento polimórfico.</span><span class="sxs-lookup"><span data-stu-id="6aa47-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-185">Uma nova DbCastExpression com o argumento e o tipo de destino especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-185">A new DbCastExpression with the specified argument and target type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-186"><paramref name="Argument" /> ou <paramref name="toType" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-186"><paramref name="Argument" /> or <paramref name="toType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-187">A conversão especificada não é válida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-187">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-188">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6aa47-189">O valor constante a ser representado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-189">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="6aa47-190">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> com o valor constante fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="6aa47-191">Uma nova DbConstantExpression com o valor fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-191">A new DbConstantExpression with the given value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-192"><paramref name="value" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-192"><paramref name="value" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-193"><paramref name="value" /> não é uma instância de um tipo de constante válido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-193"><paramref name="value" /> is not an instance of a valid constant type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType"><span data-ttu-id="6aa47-194">O tipo do valor constante.</span><span class="sxs-lookup"><span data-stu-id="6aa47-194">The type of the constant value.</span></span></param>
        <param name="value"><span data-ttu-id="6aa47-195">O valor constante a ser representado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-195">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="6aa47-196">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> do tipo primitivo especificado com o valor constante fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="6aa47-197">Um novo DbConstantExpression com o valor especificado e um tipo de resultado de <paramref name="constantType" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-198"><paramref name="value" /> ou <paramref name="constantType" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-198"><paramref name="value" /> or <paramref name="constantType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-199"><paramref name="value" /> não é uma instância de um tipo de constante válido, <paramref name="constantType" /> não representa um tipo primitivo ou <paramref name="value" /> é de um tipo primitivo diferente daquele representado por <paramref name="constantType" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-199"><paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-200">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica de um tipo fornecido com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="6aa47-201">O conjunto de entidades em que o elemento referenciado reside.</span><span class="sxs-lookup"><span data-stu-id="6aa47-201">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="6aa47-202">Uma coleção de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que fornece os valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="6aa47-203">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="6aa47-204">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="6aa47-205">Uma nova DbRefExpression que referencia o elemento com os valores de chave especificados no conjunto de entidades determinado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-206"><paramref name="entitySet" /> é nulo ou então <paramref name="keyValues" /> é nulo ou contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-206"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-207">A contagem de <paramref name="keyValues" /> não coincide com a contagem de membros de chave declarados pelo tipo de elemento de <paramref name="entitySet" /> ou então <paramref name="keyValues" /> contém uma expressão com um tipo de resultado que não é compatível com o tipo do membro de chave correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="6aa47-208">O conjunto de entidades em que o elemento referenciado reside.</span><span class="sxs-lookup"><span data-stu-id="6aa47-208">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="6aa47-209">Uma coleção de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que fornece os valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="6aa47-210">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="6aa47-211">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="6aa47-212">Uma nova DbRefExpression que referencia o elemento com os valores de chave especificados no conjunto de entidades determinado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-213"><paramref name="entitySet" /> é nulo ou então <paramref name="keyValues" /> é nulo ou contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-213"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-214">A contagem de <paramref name="keyValues" /> não coincide com a contagem de membros de chave declarados pelo tipo de elemento de <paramref name="entitySet" /> ou então <paramref name="keyValues" /> contém uma expressão com um tipo de resultado que não é compatível com o tipo do membro de chave correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="6aa47-215">O conjunto de entidades em que o elemento referenciado reside.</span><span class="sxs-lookup"><span data-stu-id="6aa47-215">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="6aa47-216">O tipo específico da entidade referenciada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-216">The specific type of the referenced entity.</span></span> <span data-ttu-id="6aa47-217">Isso deve ser um tipo de entidade da mesma hierarquia que o tipo de elemento do conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="6aa47-217">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="6aa47-218">Uma coleção de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que fornece os valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="6aa47-219">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="6aa47-220">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica de um tipo fornecido com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="6aa47-221">Uma nova DbRefExpression que referencia o elemento com os valores de chave especificados no conjunto de entidades determinado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-222"><paramref name="entitySet" /> ou <paramref name="entityType" /> é nulo ou então <paramref name="keyValues" /> é nulo ou contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-222"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-223">A contagem de <paramref name="keyValues" /> não coincide com a contagem de membros de chave declarados pelo tipo de elemento de <paramref name="entitySet" /> ou então <paramref name="keyValues" /> contém uma expressão com um tipo de resultado que não é compatível com o tipo do membro de chave correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="6aa47-224">O conjunto de entidades em que o elemento referenciado reside.</span><span class="sxs-lookup"><span data-stu-id="6aa47-224">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="6aa47-225">O tipo específico da entidade referenciada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-225">The specific type of the referenced entity.</span></span> <span data-ttu-id="6aa47-226">Isso deve ser um tipo de entidade da mesma hierarquia que o tipo de elemento do conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="6aa47-226">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="6aa47-227">Uma coleção de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que fornece os valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="6aa47-228">Essas expressões devem corresponder (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="6aa47-229">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica de um tipo fornecido com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="6aa47-230">Uma nova DbRefExpression que referencia o elemento com os valores de chave especificados no conjunto de entidades determinado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-231"><paramref name="entitySet" /> ou <paramref name="entityType" /> é nulo ou então <paramref name="keyValues" /> é nulo ou contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-231"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-232">A contagem de <paramref name="keyValues" /> não coincide com a contagem de membros de chave declarados pelo tipo de elemento de <paramref name="entitySet" /> ou então <paramref name="keyValues" /> contém uma expressão com um tipo de resultado que não é compatível com o tipo do membro de chave correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-233">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-234">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="6aa47-235">Um método que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-235">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-236">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="6aa47-237">Linhas para as quais <paramref name="apply" /> é avaliado para um conjunto vazio não são incluídas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="6aa47-238">Uma nova DbApplyExpression com a entrada e associações de aplicação especificadas e um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-239">O resultado de <paramref name="apply" /> contém um nome ou expressão que é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-240">O resultado de <paramref name="apply" /> contém um nome ou expressão que não é válida em uma associação de expressão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-241">Uma <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="6aa47-242">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-243">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="6aa47-244">Linhas para as quais <paramref name="apply" /> é avaliado para um conjunto vazio não são incluídas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="6aa47-245">Uma nova DbApplyExpression com a entrada e associações de aplicação especificadas e um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-246"><paramref name="input" /> ou <paramref name="apply" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-246"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs"><span data-ttu-id="6aa47-247">Uma lista de associações de expressão que especifica os conjuntos de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-247">A list of expression bindings that specifies the input sets.</span></span></param>
        <summary><span data-ttu-id="6aa47-248">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> que une incondicionalmente os conjuntos especificados pela lista de associações de expressão de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span></span></summary>
        <returns><span data-ttu-id="6aa47-249">Uma nova DbCrossJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossJoin, que representa a junção incondicional dos conjuntos de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-250"><paramref name="inputs" /> é nulo ou contém um elemento nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-250"><paramref name="inputs" /> is null or contains null element.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-251"><paramref name="inputs" /> contém menos de duas associações de expressão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-251"><paramref name="inputs" /> contains fewer than 2 expression bindings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-252">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que fornece a referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span></span> <span data-ttu-id="6aa47-253">Esta expressão deve ter um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-253">This expression must have a reference Type.</span></span></param>
        <summary><span data-ttu-id="6aa47-254">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> que recupera uma entidade específica com base em uma expressão de referência fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span></span></summary>
        <returns><span data-ttu-id="6aa47-255">Uma nova DbDerefExpression que recupera a entidade especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-255">A new DbDerefExpression that retrieves the specified Entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-256"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-256"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-257"><paramref name="argument" /> não tem um tipo de resultado de referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-257"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-258">Uma expressão que define o conjunto no qual executar a operação distinta.</span><span class="sxs-lookup"><span data-stu-id="6aa47-258">An expression that defines the set over which to perfom the distinct operation.</span></span></param>
        <summary><span data-ttu-id="6aa47-259">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> que remove duplicatas do argumento de conjunto fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-260">Uma nova DbDistinctExpression que representa a operação distinta aplicada ao argumento de conjunto especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-261"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-261"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-262"><paramref name="argument" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-262"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-263">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-263">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-264">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-264">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-265">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que divide o argumento left pelo argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-266">Uma nova DbArithmeticExpression que representa a operação de divisão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-266">A new DbArithmeticExpression representing the division operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-267"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-267"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-268">Nenhum tipo de resultado numérico comum existe entre <paramref name="left" /> ou <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-269">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-269">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-270">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> que converte um conjunto em um singleton.</span><span class="sxs-lookup"><span data-stu-id="6aa47-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span></span></summary>
        <returns><span data-ttu-id="6aa47-271">Uma DbElementExpression que representa a conversão do argumento de conjunto em um singleton.</span><span class="sxs-lookup"><span data-stu-id="6aa47-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-272"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-272"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-273"><paramref name="argument" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-273"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-274">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-274">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-275">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-275">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-276">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que compara os argumentos left e right quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span></span></summary>
        <returns><span data-ttu-id="6aa47-277">Uma nova DbComparisonExpression que representa a comparação de igualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-277">A new DbComparisonExpression representing the equality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-278"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-278"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-279">Não existe nenhum tipo de resultado comparável quanto à igualdade que seja comum entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-280">Uma expressão que define o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-280">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-281">Uma expressão que define o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-281">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-282">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> que calcula a subtração do argumento de conjunto right do argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-283">Uma nova DbExceptExpression que representa a diferença do argumento left para o argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-284"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-284"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-285">Nenhum tipo de resultado de coleção comum existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-286">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-286">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-287">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que determina se o argumento de conjunto especificado é não vazio.</span><span class="sxs-lookup"><span data-stu-id="6aa47-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="6aa47-288">Um novo <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> aplicada a um novo <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> com o argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-289"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-289"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-290"><paramref name="argument" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-290"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6aa47-291">Obtém um <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> com o valor booliano <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="6aa47-292">Um <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> com o valor booliano <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-293">Uma expressão de associação que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-293">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="6aa47-294">Uma expressão que representa um predicado a ser avaliado para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-294">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-295">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> que filtra os elementos no conjunto de entrada fornecido usando o predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="6aa47-296">Uma nova DbFilterExpression que produz o conjunto filtrado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-296">A new DbFilterExpression that produces the filtered set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-297"><paramref name="input" /> ou <paramref name="predicate" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-297"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-298"><paramref name="predicate" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-298"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-299">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando FullOuterJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-300">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-301">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="6aa47-302">Um método que representa a condição na qual se unir.</span><span class="sxs-lookup"><span data-stu-id="6aa47-302">A method representing the condition on which to join.</span></span> <span data-ttu-id="6aa47-303">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica da condição de junção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="6aa47-304">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando FullOuterJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-305">Uma nova DbJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de FullOuterJoin, que representa a operação de junção externa completa aplicada aos conjuntos de entrada left e right sob a condição de junção fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-306">A expressão produzida por <paramref name="joinCondition" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-306">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-307">A expressão produzida por <paramref name="joinCondition" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-308">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-309">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="6aa47-310">Uma expressão que especifica a condição na qual se unir.</span><span class="sxs-lookup"><span data-stu-id="6aa47-310">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="6aa47-311">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas associações de expressão left e right, na condição de junção especificada, usando FullOuterJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-312">Uma nova DbJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de FullOuterJoin, que representa a operação de junção externa completa aplicada aos conjuntos de entrada left e right sob a condição de junção fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-313"><paramref name="left" />, <paramref name="right" /> ou <paramref name="joinCondition" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-313"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-314">A expressão produzida por <paramref name="joinCondition" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-315">A expressão que fornece a entidade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-315">The expression that provides the entity.</span></span> <span data-ttu-id="6aa47-316">Essa expressão deve ter um tipo de resultado de entidade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-316">This expression must have an entity result type.</span></span></param>
        <summary><span data-ttu-id="6aa47-317">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> que recupera a referência da entidade especificada no formulário estrutural.</span><span class="sxs-lookup"><span data-stu-id="6aa47-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span></span></summary>
        <returns><span data-ttu-id="6aa47-318">Uma nova DbEntityRefExpression que recupera uma referência para a entidade especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-319"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-319"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-320"><paramref name="argument" /> não tem um tipo de resultado de entidade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-320"><paramref name="argument" /> does not have an entity result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-321">A expressão que fornece a referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-321">The expression that provides the reference.</span></span> <span data-ttu-id="6aa47-322">Essa expressão deve ter um tipo de referência com um tipo de elemento de entidade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-322">This expression must have a reference Type with an Entity element type.</span></span></param>
        <summary><span data-ttu-id="6aa47-323">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> que recupera os valores de chave da referência especificada de forma estrutural.</span><span class="sxs-lookup"><span data-stu-id="6aa47-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span></span></summary>
        <returns><span data-ttu-id="6aa47-324">Uma nova DbRefKeyExpression que recupera os valores de chave da referência especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-325"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-325"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-326"><paramref name="argument" /> não tem um tipo de resultado de referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-326"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-327">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-327">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-328">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-328">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-329">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina se o argumento left é maior que o argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-330">Uma nova DbComparisonExpression que representa a comparação maior que.</span><span class="sxs-lookup"><span data-stu-id="6aa47-330">A new DbComparisonExpression representing the greater-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-331"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-331"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-332">Nenhum tipo de resultado comparável quanto à ordem existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-333">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-333">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-334">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-334">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-335">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina se o argumento left é maior ou igual ao argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-336">Uma nova DbComparisonExpression que representa a comparação maior ou igual a.</span><span class="sxs-lookup"><span data-stu-id="6aa47-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-337"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-337"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-338">Nenhum tipo de resultado comparável quanto à ordem existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-339">A expressão a ser associada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-339">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="6aa47-340">Cria uma nova associação de expressão de grupo que usa a variável gerada e nomes de variáveis de grupo para associar à expressão fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="6aa47-341">Uma nova associação de expressão de grupo com a expressão especificada, um nome de variável e um nome de variável de grupo gerados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-342"><paramref name="input" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-342"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-343"><paramref name="input" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-343"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-344">A expressão a ser associada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-344">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="6aa47-345">O nome da variável deve ser usado para a associação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-345">The variable name that should be used for the binding.</span></span></param>
        <param name="groupVarName"><span data-ttu-id="6aa47-346">O nome de variável deve ser usado para fazer referência ao grupo quando a nova associação de expressão de grupo é usada em uma expressão group-by.</span><span class="sxs-lookup"><span data-stu-id="6aa47-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span></span></param>
        <summary><span data-ttu-id="6aa47-347">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> que usa o nome de variável e os nomes de variáveis de grupo especificados para associar a expressão fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="6aa47-348">Uma nova associação de expressão de grupo com a expressão, o nome de variável e o nome de variável de grupo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-348">A new group expression binding with the specified expression, variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-349"><paramref name="input" />, <paramref name="varName" /> ou <paramref name="groupVarName" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-349"><paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-350"><paramref name="input" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-350"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-351">Um <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="keys"><span data-ttu-id="6aa47-352">Uma lista de pares de expressão de cadeia de caracteres que definem as colunas de agrupamento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-352">A list of string-expression pairs that define the grouping columns.</span></span></param>
        <param name="aggregates"><span data-ttu-id="6aa47-353">Uma lista de expressões que especificam agregações a serem aplicadas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-353">A list of expressions that specify aggregates to apply.</span></span></param>
        <summary><span data-ttu-id="6aa47-354">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> que agrupa os elementos do conjunto de entrada de acordo com as chaves de grupo especificadas e aplica as agregações fornecidas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span></span></summary>
        <returns><span data-ttu-id="6aa47-355">Uma nova DbGroupByExpression com o conjunto de entrada, as chaves de agrupamento e as agregações especificadas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-356">DbGroupByExpression permite que a lista de chaves ou a lista de agregações em branco, mas não ambos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-357"><paramref name="input" />, <paramref name="keys" /> ou <paramref name="aggregates" /> é nulo, <paramref name="keys" /> contém uma expressão ou chave de coluna nula ou então <paramref name="aggregates" /> contém uma agregação nula ou um nome de coluna de agregação nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-357"><paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-358">Ambos <paramref name="keys" /> e <paramref name="aggregates" /> estão vazios ou então um nome de coluna inválido ou duplicado foi especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-359">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando InnerJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-360">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-361">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="6aa47-362">Um método que representa a condição na qual se unir.</span><span class="sxs-lookup"><span data-stu-id="6aa47-362">A method representing the condition on which to join.</span></span> <span data-ttu-id="6aa47-363">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica da condição de junção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="6aa47-364">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando InnerJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-365">Uma nova DbJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa a operação de junção interna aplicada aos conjuntos de entrada left e right sob a condição de junção fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-366">A expressão produzida por <paramref name="joinCondition" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-366">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-367">A expressão produzida por <paramref name="joinCondition" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-368">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-369">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="6aa47-370">Uma expressão que especifica a condição na qual se unir.</span><span class="sxs-lookup"><span data-stu-id="6aa47-370">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="6aa47-371">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas associações de expressão left e right, na condição de junção especificada, usando InnerJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-372">Uma nova DbJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa a operação de junção interna aplicada aos conjuntos de entrada left e right sob a condição de junção fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-373"><paramref name="left" />, <paramref name="right" /> ou <paramref name="joinCondition" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-373"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-374"><paramref name="joinCondition" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-374"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-375">Uma expressão que define o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-375">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-376">Uma expressão que define o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-376">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-377">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> que calcula a interseção dos argumentos de conjunto left e right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-378">Uma nova DbIntersectExpression que representa a interseção dos argumentos left e right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-379"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-379"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-380">Nenhum tipo de resultado de coleção comum existe entre <paramref name="left" /> ou <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-381">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que representa a aplicação da função Lambda especificada aos argumentos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="6aa47-382">Uma instância de <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> que representa a função Lambda a ser aplicada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="6aa47-383">Uma lista de expressões que fornecem os argumentos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-383">A list of expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="6aa47-384">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que representa a aplicação da função Lambda especificada aos argumentos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-385">Uma nova DbLambdaExpression que representa a aplicação da função Lambda.</span><span class="sxs-lookup"><span data-stu-id="6aa47-385">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-386"><paramref name="lambda" /> ou <paramref name="arguments" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-386"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-387">A contagem de <paramref name="arguments" /> não é igual ao número de variáveis declaradas por <paramref name="lambda" /> ou então <paramref name="arguments" /> contém uma expressão que tem um tipo de resultado que não é igual ou passível de promoção para o tipo de variável correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="6aa47-388">Uma instância de <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> que representa a função Lambda a ser aplicada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="6aa47-389">Expressões que fornecem os argumentos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-389">Expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="6aa47-390">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que representa a aplicação da função Lambda especificada aos argumentos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-391">Uma nova DbLambdaExpression que representa a aplicação da função Lambda.</span><span class="sxs-lookup"><span data-stu-id="6aa47-391">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-392"><paramref name="lambda" /> ou <paramref name="arguments" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-392"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-393">A contagem de <paramref name="arguments" /> não é igual ao número de variáveis declaradas por <paramref name="lambda" /> ou então <paramref name="arguments" /> contém uma expressão que tem um tipo de resultado que não é igual ou passível de promoção para o tipo de variável correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="6aa47-394">Metadados para a função a ser invocada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-394">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="6aa47-395">Uma lista de expressões que fornecem os argumentos à função.</span><span class="sxs-lookup"><span data-stu-id="6aa47-395">A list of expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="6aa47-396">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que representa a invocação da função especificada com os argumentos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-397">Um novo DbFunctionExpression representando a invocação de função.</span><span class="sxs-lookup"><span data-stu-id="6aa47-397">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-398"><paramref name="function" /> é nulo ou então <paramref name="arguments" /> é nulo ou contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-398"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-399">A contagem de <paramref name="arguments" /> não é igual ao número de parâmetros declarados por <paramref name="function" /> ou então <paramref name="arguments" /> contém uma expressão que tem um tipo de resultado que não é igual ou passível de promoção para o tipo de parâmetro de função correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="6aa47-400">Metadados para a função a ser invocada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-400">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="6aa47-401">Expressões que fornecem os argumentos à função.</span><span class="sxs-lookup"><span data-stu-id="6aa47-401">Expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="6aa47-402">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que representa a invocação da função especificada com os argumentos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-403">Um novo DbFunctionExpression representando a invocação de função.</span><span class="sxs-lookup"><span data-stu-id="6aa47-403">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-404"><paramref name="function" /> é nulo ou então <paramref name="arguments" /> é nulo ou contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-404"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-405">A contagem de <paramref name="arguments" /> não é igual ao número de parâmetros declarados por <paramref name="function" /> ou então <paramref name="arguments" /> contém uma expressão que tem um tipo de resultado que não é igual ou passível de promoção para o tipo de parâmetro de função correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-406">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-406">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-407">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> que determina se o argumento de conjunto especificado é um conjunto vazio.</span><span class="sxs-lookup"><span data-stu-id="6aa47-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-408">Uma nova DbIsEmptyExpression com o argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-408">A new DbIsEmptyExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-409"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-409"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-410"><paramref name="argument" /> não tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-410"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-411">Uma expressão que especifica o argumento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-411">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-412">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> que determina se o argumento especificado é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span></span></summary>
        <returns><span data-ttu-id="6aa47-413">Uma nova DbIsNullExpression com o argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-413">A new DbIsNullExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-414"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-414"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-415"><paramref name="argument" /> tem um tipo de resultado de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-415"><paramref name="argument" /> has a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-416">Uma expressão que especifica a instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-416">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="6aa47-417">Metadados de tipo que especificam o tipo ao qual o tipo de resultado da instância deve ser comparado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-417">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="6aa47-418">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> que determina se o argumento fornecido é do tipo especificado ou um de seus subtipos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span></span></summary>
        <returns><span data-ttu-id="6aa47-419">Uma nova DbIsOfExpression com o tipo e a instância especificados e DbExpressionKind IsOf.</span><span class="sxs-lookup"><span data-stu-id="6aa47-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-420">DbIsOfExpression requer que `argument` tem um tipo de resultado polimórfico e que `type` é um tipo de hierarquia de tipo como esse tipo de resultado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-421"><paramref name="argument" /> ou <paramref name="type" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-421"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-422"><paramref name="type" /> não está na mesma hierarquia de tipo que o tipo de resultado de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-422"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-423">Uma expressão que especifica a instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-423">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="6aa47-424">Metadados de tipo que especificam o tipo ao qual o tipo de resultado da instância deve ser comparado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-424">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="6aa47-425">Cria uma nova expressão <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> que determina se o argumento fornecido é somente do tipo especificado (e não um subtipo).</span><span class="sxs-lookup"><span data-stu-id="6aa47-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span></span></summary>
        <returns><span data-ttu-id="6aa47-426">Uma nova DbIsOfExpression com o tipo e a instância especificados e DbExpressionKind IsOfOnly.</span><span class="sxs-lookup"><span data-stu-id="6aa47-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-427">DbIsOfExpression requer que `argument` tem um tipo de resultado polimórfico e que `type` é um tipo de hierarquia de tipo como esse tipo de resultado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-428"><paramref name="argument" /> ou <paramref name="type" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-428"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-429"><paramref name="type" /> não está na mesma hierarquia de tipo que o tipo de resultado de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-429"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer"><span data-ttu-id="6aa47-430">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto externo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="6aa47-431">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto interno.</span><span class="sxs-lookup"><span data-stu-id="6aa47-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="6aa47-432">Um método que especifica como o valor de chave externo deve ser derivado de um elemento da coleção externa.</span><span class="sxs-lookup"><span data-stu-id="6aa47-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="6aa47-433">Um método que especifica como o valor de chave interno deve ser derivado de um elemento da coleção interna.</span><span class="sxs-lookup"><span data-stu-id="6aa47-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <summary><span data-ttu-id="6aa47-434">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões inner e outer, reunidas em uma condição de igualdade entre as chaves inner e outer especificadas usando InnerJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-435">A entrada DbJoinExpression é criada com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa a operação de junção interna aplicada aos conjuntos de entrada left e right em uma condição de junção que compara os valores de chave outer e inner com relação à igualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-436">A expressão produzida por <paramref name="outerKey" /> ou <paramref name="innerKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-437">As expressões produzidas por <paramref name="outerKey" /> e <paramref name="innerKey" /> não são comparáveis quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="6aa47-438">O tipo do <c>seletor</c>.</span><span class="sxs-lookup"><span data-stu-id="6aa47-438">The type of the <c>selector</c>.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="6aa47-439">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto externo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="6aa47-440">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto interno.</span><span class="sxs-lookup"><span data-stu-id="6aa47-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="6aa47-441">Um método que especifica como o valor de chave externo deve ser derivado de um elemento da coleção externa.</span><span class="sxs-lookup"><span data-stu-id="6aa47-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="6aa47-442">Um método que especifica como o valor de chave interno deve ser derivado de um elemento da coleção interna.</span><span class="sxs-lookup"><span data-stu-id="6aa47-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <param name="selector"><span data-ttu-id="6aa47-443">Um método que especifica como um elemento do conjunto de resultados deve ser derivado de elementos dos conjuntos interno e externo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span></span> <span data-ttu-id="6aa47-444">Esse método deve produzir uma instância de um tipo compatível com Join e pode ser resolvido em um <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="6aa47-445">Os requisitos de compatibilidade para <c>TSelector</c> estão descritos nos comentários.</span><span class="sxs-lookup"><span data-stu-id="6aa47-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="6aa47-446">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que projeta o seletor especificado nos conjuntos especificados pelas expressões externas e internas, reunidas em uma condição de igualdade entre as chaves externas e internas especificadas usando InnerJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-447">Um novo DbProjectExpression com o seletor especificado como sua projeção e uma novo DbJoinExpression como sua entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span></span> <span data-ttu-id="6aa47-448">A entrada DbJoinExpression é criada com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa a operação de junção interna aplicada aos conjuntos de entrada esquerdo e direito em uma condição de junção que compara os valores de chave externo e interno com relação à igualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-449">Para ser compatível com junção, `TSelector` deve ser derivado de <xref:System.Data.Common.CommandTrees.DbExpression>, ou deve ser um tipo anônimo com propriedades derivadas de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="6aa47-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="6aa47-450">Os seguintes são exemplos de tipos com suporte para `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="6aa47-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="6aa47-451">(`TSelector` é <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="6aa47-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="6aa47-452">(`TSelector` é um tipo anônimo com propriedades derivadas de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="6aa47-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-453">O resultado de <paramref name="selector" /> é nulo após a conversão para DbExpression.</span><span class="sxs-lookup"><span data-stu-id="6aa47-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-454">O resultado de <paramref name="Selector" /> não é compatível com SelectMany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-455">Cria um <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> com a implementação da função Lambda embutida e parâmetros formais especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="6aa47-456">Uma expressão que define a lógica da função Lambda.</span><span class="sxs-lookup"><span data-stu-id="6aa47-456">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="6aa47-457">Uma coleção de <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que representa os parâmetros formais para a função Lambda.</span><span class="sxs-lookup"><span data-stu-id="6aa47-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="6aa47-458">Essas variáveis são válidas para uso na expressão do <c>corpo</c>.</span><span class="sxs-lookup"><span data-stu-id="6aa47-458">These variables are valid for use in the <c>body</c> expression.</span></span></param>
        <summary><span data-ttu-id="6aa47-459">Cria um <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> com a implementação da função Lambda embutida e parâmetros formais especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="6aa47-460">Um novo DbLambda que descreve uma função Lambda embutida com o corpo e parâmetros formais especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-461"><paramref name="variables" /> é nulo ou contém um nulo ou então <paramref name="body" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-461"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-462"><paramref name="variables" /> contém mais de um elemento com o mesmo nome de variável.</span><span class="sxs-lookup"><span data-stu-id="6aa47-462"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="6aa47-463">Uma expressão que define a lógica da função Lambda.</span><span class="sxs-lookup"><span data-stu-id="6aa47-463">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="6aa47-464">Uma coleção de <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que representa os parâmetros formais para a função Lambda.</span><span class="sxs-lookup"><span data-stu-id="6aa47-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="6aa47-465">Essas variáveis são válidas para uso na expressão do <c>corpo</c>.</span><span class="sxs-lookup"><span data-stu-id="6aa47-465">These variables are valid for use in the <c>body</c> expression.</span></span></param>
        <summary><span data-ttu-id="6aa47-466">Cria um <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> com a implementação da função Lambda embutida e parâmetros formais especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="6aa47-467">Um novo DbLambda que descreve uma função Lambda embutida com o corpo e parâmetros formais especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-468"><paramref name="variables" /> é nulo ou contém um nulo ou então <paramref name="body" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-468"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-469"><paramref name="variables" /> contém mais de um elemento com o mesmo nome de variável.</span><span class="sxs-lookup"><span data-stu-id="6aa47-469"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-470">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando LeftOuterJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-471">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-472">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="6aa47-473">Um método que representa a condição na qual se unir.</span><span class="sxs-lookup"><span data-stu-id="6aa47-473">A method representing the condition on which to join.</span></span> <span data-ttu-id="6aa47-474">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica da condição de junção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="6aa47-475">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas expressões left e right, na condição de junção especificada, usando LeftOuterJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-476">Uma nova DbJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de LeftOuterJoin, que representa a operação de junção externa esquerda aplicada aos conjuntos de entrada left e right sob a condição de junção fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-477">A expressão produzida por <paramref name="joinCondition" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-477">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-478">A expressão produzida por <paramref name="joinCondition" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-479">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-480">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="6aa47-481">Uma expressão que especifica a condição na qual se unir.</span><span class="sxs-lookup"><span data-stu-id="6aa47-481">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="6aa47-482">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que une os conjuntos especificados pelas associações de expressão left e right, na condição de junção especificada, usando LeftOuterJoin como o <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-483">Uma nova DbJoinExpression, com um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de LeftOuterJoin, que representa a operação de junção externa esquerda aplicada aos conjuntos de entrada left e right sob a condição de junção fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-484"><paramref name="left" />, <paramref name="right" /> ou <paramref name="joinCondition" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-484"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-485"><paramref name="joinCondition" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-485"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-486">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-486">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-487">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-487">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-488">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina se o argumento left é menor que o argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-489">Uma nova DbComparisonExpression que representa a comparação menor que.</span><span class="sxs-lookup"><span data-stu-id="6aa47-489">A new DbComparisonExpression representing the less-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-490"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-490"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-491">Nenhum tipo de resultado comparável quanto à ordem existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-492">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-492">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-493">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-493">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-494">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina se o argumento left é menor ou igual ao argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-495">Uma nova DbComparisonExpression que representa a comparação menor ou igual a.</span><span class="sxs-lookup"><span data-stu-id="6aa47-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-496"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-496"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-497">Não existe nenhum tipo de resultado comum entre <paramref name="left" /> e <paramref name="right" /> que é comparável tanto em relação à igualdade quanto em relação à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-498">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que compara a cadeia de caracteres de entrada especificada ao padrão fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-499">Uma expressão que especifica a cadeia de caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-499">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="6aa47-500">Uma expressão que especifica a cadeia de caracteres de padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-500">An expression that specifies the pattern string.</span></span></param>
        <summary><span data-ttu-id="6aa47-501">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que compara a cadeia de caracteres de entrada especificada ao padrão fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
        <returns><span data-ttu-id="6aa47-502">Uma nova DbLikeExpression com a entrada, o padrão e um escape nulo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-503"><paramref name="Argument" /> ou <paramref name="pattern" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-503"><paramref name="Argument" /> or <paramref name="pattern" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-504"><paramref name="Argument" /> ou <paramref name="pattern" /> não tem um tipo de resultado de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6aa47-504"><paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-505">Uma expressão que especifica a cadeia de caracteres de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-505">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="6aa47-506">Uma expressão que especifica a cadeia de caracteres de padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-506">An expression that specifies the pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="6aa47-507">Uma expressão opcional que especifica a cadeia de caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="6aa47-507">An optional expression that specifies the escape string.</span></span></param>
        <summary><span data-ttu-id="6aa47-508">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que compara a cadeia de caracteres de entrada especificada usando o escape opcional.</span><span class="sxs-lookup"><span data-stu-id="6aa47-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span></span></summary>
        <returns><span data-ttu-id="6aa47-509">Uma nova DbLikeExpression com a entrada, o padrão e o escape especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-509">A new DbLikeExpression with the specified input, pattern and escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-510"><paramref name="argument" />, <paramref name="pattern" /> ou <paramref name="escape" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-510"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-511"><paramref name="argument" />, <paramref name="pattern" /> ou <paramref name="escape" /> não tem um tipo de resultado de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6aa47-511"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-512">Uma expressão que especifica a coleção de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-512">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="6aa47-513">Uma expressão que especifica o valor do limite.</span><span class="sxs-lookup"><span data-stu-id="6aa47-513">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="6aa47-514">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> que restringe o número de elementos na coleção de argumentos para o valor do limite da contagem especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="6aa47-515">Resultados vinculados não são incluídos na saída.</span><span class="sxs-lookup"><span data-stu-id="6aa47-515">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="6aa47-516">Uma nova DbLimitExpression com o argumento especificado e os valores de limite de contagem que não incluem resultados vinculados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-517"><paramref name="argument" /> ou <paramref name="count" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-517"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-518"><paramref name="argument" /> não tem um tipo de resultado de coleção ou <paramref name="count" /> não tem um tipo de resultado igual ou passível de promoção para um tipo inteiro de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="6aa47-518"><paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-519">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-519">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-520">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-520">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-521">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que subtrai o argumento right do argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-522">Uma nova DbArithmeticExpression que representa a operação de subtração.</span><span class="sxs-lookup"><span data-stu-id="6aa47-522">A new DbArithmeticExpression representing the subtraction operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-523"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-523"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-524">Nenhum tipo de resultado numérico comum existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-525">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-525">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-526">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-526">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-527">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que calcula o restante do argumento left dividido pelo argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-528">Uma nova DbArithmeticExpression que representa a operação de módulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-528">A new DbArithmeticExpression representing the modulo operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-529"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-529"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-530">Nenhum tipo de resultado numérico comum existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-531">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-531">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-532">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-532">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-533">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que multiplica o argumento left pelo argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-534">Uma nova DbArithmeticExpression que representa a operação de multiplicação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-534">A new DbArithmeticExpression representing the multiplication operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-535"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-535"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-536">Nenhum tipo de resultado numérico comum existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-537">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que representa o painel de navegação de uma relação de composição ou de associação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom"><span data-ttu-id="6aa47-538">Uma expressão que especifica a instância da qual a navegação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="6aa47-538">An expression that specifies the instance from which navigation should occur.</span></span></param>
        <param name="fromEnd"><span data-ttu-id="6aa47-539">Metadados para a propriedade que representa a extremidade da relação da qual a navegação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="6aa47-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEnd"><span data-ttu-id="6aa47-540">Metadados para a propriedade que representa a extremidade da relação para a qual a navegação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="6aa47-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="6aa47-541">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que representa o painel de navegação de uma relação de composição ou de associação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="6aa47-542">Uma nova DbRelationshipNavigationExpression que representa a navegação especificada de e para extremidades da relação do tipo de relação especificado da instância de origem de navegação especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requer a ocorrência de navegação sempre de uma referência e isso `navigateFrom` deve sempre ter um tipo de resultado de referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-544"><paramref name="fromEnd" />, <paramref name="toEnd" /> ou <paramref name="navigateFrom" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-544"><paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-545"><paramref name="fromEnd" /> e <paramref name="toEnd" /> não estão declarados pelo mesmo tipo de relacionamento ou então <paramref name="navigateFrom" /> tem um tipo de resultado que não é compatível com o tipo de propriedade de <paramref name="fromEnd" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-545"><paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6aa47-546">Metadados para o tipo de relação que representa a relação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-546">Metadata for the relation type that represents the relationship.</span></span></param>
        <param name="fromEndName"><span data-ttu-id="6aa47-547">O nome da propriedade do tipo de relação que representa a extremidade da relação da qual a navegação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="6aa47-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEndName"><span data-ttu-id="6aa47-548">O nome da propriedade do tipo de relação que representa a extremidade da relação para a qual a navegação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="6aa47-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span></span></param>
        <param name="navigateFrom"><span data-ttu-id="6aa47-549">Uma expressão que especifica a instância da qual a navegação deve ocorrer.</span><span class="sxs-lookup"><span data-stu-id="6aa47-549">An expression the specifies the instance from which naviagtion should occur.</span></span></param>
        <summary><span data-ttu-id="6aa47-550">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que representa o painel de navegação de uma relação de composição ou de associação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="6aa47-551">Uma nova DbRelationshipNavigationExpression que representa a navegação especificada de e para extremidades da relação do tipo de relação especificado da instância de origem de navegação especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requer a ocorrência de navegação sempre de uma referência e isso `navigateFrom` deve sempre ter um tipo de resultado de referência.</span><span class="sxs-lookup"><span data-stu-id="6aa47-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-553"><paramref name="type" />, <paramref name="fromEndName" />, <paramref name="toEndName" /> ou <paramref name="navigateFrom" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-553"><paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-554"><paramref name="type" /> não está associado ao espaço de trabalho de metadados dessa árvore de comandos, ou <paramref name="navigateFrom" /> está associado a uma árvore de comandos diferente, ou <paramref name="type" /> não declara uma propriedade de extremidade de relação com o nome <paramref name="toEndName" /> ou <paramref name="fromEndName" />, ou então <paramref name="navigateFrom" /> tem um tipo de resultado que não é compatível com o tipo de propriedade da propriedade de extremidade de relação com o nome <paramref name="fromEndName" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-554"><paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-555">Uma expressão que especifica o argumento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-555">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-556">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que nega o valor do argumento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-557">Uma nova DbArithmeticExpression que representa a operação de negação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-557">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-558"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-558"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-559">Não existe nenhum tipo de resultado numérico para <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-559">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-560">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="6aa47-561">O tipo da nova instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-561">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="6aa47-562">Expressões que especificam valores de novas instâncias, interpretadas de acordo com o tipo da instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="6aa47-563">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="6aa47-564">Se o argumento de tipo é um tipo de coleção, os argumentos especificam os elementos da coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="6aa47-565">Caso contrário, os argumentos são usados como valores de propriedade ou de coluna na nova instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-565">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="6aa47-566">Um novo DbNewInstanceExpression com os argumentos e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-566">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-567">Se `instanceType` for um tipo de coleção, cada expressão no `arguments` devem ter um tipo de resultado é passível de promoção para o tipo de elemento de `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="6aa47-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="6aa47-568">Se `instanceType` é um tipo de linha, `arguments` devem conter tantas expressões como há colunas no tipo de linha e o tipo de resultado de cada expressão deve ser igual ou passível de promoção ao tipo da coluna correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="6aa47-569">Um tipo de linha que não declarar todas as colunas é inválido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="6aa47-570">Se `instanceType` é um tipo de entidade `arguments` deve conter muitas expressões quanto são propriedades definidas pelo tipo e o tipo de resultado de cada expressão deve ser igual ou passível de promoção ao tipo da propriedade correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-571"><paramref name="instanceType" /> ou <paramref name="arguments" /> é nulo ou então <paramref name="arguments" /> contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-571"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-572"><paramref name="arguments" /> está vazio ou os tipos de resultados de independente expressões não coincidem com os requisitos de <paramref name="instanceType" /> (conforme explicado na seção de comentários).</span><span class="sxs-lookup"><span data-stu-id="6aa47-572"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="6aa47-573">O tipo da nova instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-573">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="6aa47-574">Expressões que especificam valores de novas instâncias, interpretadas de acordo com o tipo da instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="6aa47-575">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="6aa47-576">Se o argumento de tipo é um tipo de coleção, os argumentos especificam os elementos da coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="6aa47-577">Caso contrário, os argumentos são usados como valores de propriedade ou de coluna na nova instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-577">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="6aa47-578">Um novo DbNewInstanceExpression com os argumentos e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-578">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-579">Se `instanceType` for um tipo de coleção, cada expressão no `arguments` devem ter um tipo de resultado é passível de promoção para o tipo de elemento de `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="6aa47-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="6aa47-580">Se `instanceType` é um tipo de linha, `arguments` devem conter tantas expressões como há colunas no tipo de linha e o tipo de resultado de cada expressão deve ser igual ou passível de promoção ao tipo da coluna correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="6aa47-581">Um tipo de linha que não declarar todas as colunas é inválido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="6aa47-582">Se `instanceType` é um tipo de entidade `arguments` deve conter muitas expressões quanto são propriedades definidas pelo tipo e o tipo de resultado de cada expressão deve ser igual ou passível de promoção ao tipo da propriedade correspondente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-583"><paramref name="instanceType" /> ou <paramref name="arguments" /> é nulo ou então <paramref name="arguments" /> contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-583"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-584"><paramref name="arguments" /> está vazio ou os tipos de resultados de independente expressões não coincidem com os requisitos de <paramref name="instanceType" /> (conforme explicado na seção de comentários).</span><span class="sxs-lookup"><span data-stu-id="6aa47-584"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-585">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que constrói uma coleção que contém os elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="6aa47-586">Uma lista de expressões que fornecem os elementos da coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-586">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="6aa47-587">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que constrói uma coleção que contém os elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="6aa47-588">O tipo de coleção é baseado no tipo comum dos elementos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-588">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="6aa47-589">Se não existe nenhum tipo de elemento comum, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-589">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="6aa47-590">Um novo DbNewInstanceExpression com os argumentos e o tipo de coleção especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-591"><paramref name="elements" /> é nulo ou contém nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-591"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-592"><paramref name="elements" /> é vazio ou contém expressões para as quais não existe nenhum tipo de resultado comum.</span><span class="sxs-lookup"><span data-stu-id="6aa47-592"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="6aa47-593">Uma lista de expressões que fornecem os elementos da coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-593">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="6aa47-594">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que constrói uma coleção que contém os elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="6aa47-595">O tipo de coleção é baseado no tipo comum dos elementos.</span><span class="sxs-lookup"><span data-stu-id="6aa47-595">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="6aa47-596">Se não existe nenhum tipo de elemento comum, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-596">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="6aa47-597">Um novo DbNewInstanceExpression com os argumentos e o tipo de coleção especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-598"><paramref name="elements" /> é nulo ou contém nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-598"><paramref name="elements" /> is null, or contains null..</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-599"><paramref name="elements" /> é vazio ou contém expressões para as quais não existe nenhum tipo de resultado comum.</span><span class="sxs-lookup"><span data-stu-id="6aa47-599"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType"><span data-ttu-id="6aa47-600">Os metadados de tipo da coleção a ser criada</span><span class="sxs-lookup"><span data-stu-id="6aa47-600">The type metadata for the collection to create</span></span></param>
        <summary><span data-ttu-id="6aa47-601">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que constrói uma coleção vazia do tipo de coleção especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span></span></summary>
        <returns><span data-ttu-id="6aa47-602">Uma nova DbNewInstanceExpression com uma lista <paramref name="Arguments" /> vazia e o tipo de coleção especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-603"><paramref name="collectionType" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-603"><paramref name="collectionType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-604"><paramref name="collectionType" /> não é um tipo de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-604"><paramref name="collectionType" /> is not a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues"><span data-ttu-id="6aa47-605">Uma lista de pares chave-valor de cadeia de caracteres-DbExpression que define a estrutura e os valores da linha.</span><span class="sxs-lookup"><span data-stu-id="6aa47-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span></span></param>
        <summary><span data-ttu-id="6aa47-606">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que produz uma linha com as colunas nomeadas especificadas e os valores fornecidos, especificados como expressões.</span><span class="sxs-lookup"><span data-stu-id="6aa47-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span></span></summary>
        <returns><span data-ttu-id="6aa47-607">Uma nova DbNewInstanceExpression que representa a construção da linha.</span><span class="sxs-lookup"><span data-stu-id="6aa47-607">A new DbNewInstanceExpression that represents the construction of the row.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-608"><paramref name="columnValues" /> é nulo ou contém um elemento com uma expressão ou um nome de coluna nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-608"><paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-609"><paramref name="columnValues" /> está vazio ou contém um nome de coluna duplicado ou inválido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-609"><paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-610">Uma expressão booliana que especifica o argumento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-610">A Boolean expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-611">Cria um <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> que executa a negação lógica do argumento fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-612">Uma nova DbNotExpression com o argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-612">A new DbNotExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-613"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-613"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-614"><paramref name="argument" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-614"><paramref name="argument" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-615">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-615">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-616">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-616">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-617">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que compara os argumentos left e right quanto à desigualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span></span></summary>
        <returns><span data-ttu-id="6aa47-618">Uma nova DbComparisonExpression que representa a comparação de desigualdade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-618">A new DbComparisonExpression representing the inequality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-619"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-619"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-620">Não existe nenhum tipo de resultado comparável quanto à igualdade que seja comum entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType"><span data-ttu-id="6aa47-621">O tipo do valor nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-621">The type of the null value.</span></span></param>
        <summary><span data-ttu-id="6aa47-622">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> que representa um valor nulo com tipo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span></span></summary>
        <returns><span data-ttu-id="6aa47-623">Uma instância de DbNullExpression.</span><span class="sxs-lookup"><span data-stu-id="6aa47-623">An instance of DbNullExpression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-624"><paramref name="nullType" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-624"><paramref name="nullType" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-625">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="6aa47-626">Os metadados de tipo para o tipo que os elementos do conjunto de entrada devem ter para serem incluídos no conjunto resultante.</span><span class="sxs-lookup"><span data-stu-id="6aa47-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="6aa47-627">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> que produz um conjunto que consiste dos elementos do conjunto de entrada fornecido que são do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span></span></summary>
        <returns><span data-ttu-id="6aa47-628">Uma nova DbOfTypeExpression com o argumento de conjunto e o tipo especificados e um ExpressionKind de <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-629">DbOfTypeExpression requer que `argument` tem uma coleção de tipo de resultado com um tipo de elemento polimórfico e que `type` é um tipo de hierarquia de tipo como esse tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-630"><paramref name="argument" /> ou <paramref name="type" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-630"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-631"><paramref name="argument" /> não tem um tipo de resultado de coleção ou <paramref name="type" /> não é um tipo na mesma hierarquia de tipo que o tipo de elemento do tipo de resultado de coleção de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-631"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-632">Uma <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="6aa47-633">Os metadados de tipo para o tipo ao qual os elementos do conjunto de entrada devem corresponder exatamente para serem incluídos no conjunto resultante.</span><span class="sxs-lookup"><span data-stu-id="6aa47-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="6aa47-634">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> que produz um conjunto que consiste dos elementos do conjunto de entrada fornecido que são exatamente do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span></span></summary>
        <returns><span data-ttu-id="6aa47-635">Uma nova DbOfTypeExpression com o argumento de conjunto e o tipo especificados e um ExpressionKind de <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-636">DbOfTypeExpression requer que `argument` tem uma coleção de tipo de resultado com um tipo de elemento polimórfico e que `type` é um tipo de hierarquia de tipo como esse tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-637"><paramref name="argument" /> ou <paramref name="type" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-637"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-638"><paramref name="argument" /> não tem um tipo de resultado de coleção ou <paramref name="type" /> não é um tipo na mesma hierarquia de tipo que o tipo de elemento do tipo de resultado de coleção de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-638"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-639">Uma expressão booliana que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-639">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-640">Uma expressão booliana que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-640">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-641">Cria uma <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> que executa a Or lógica dos argumentos left e right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="6aa47-642">Uma nova DbOrExpression com os argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-642">A new DbOrExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-643"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-643"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-644"><paramref name="left" /> ou <paramref name="right" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-644"><paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-645">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação crescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-646">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-646">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-647">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-647">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-648">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="6aa47-649">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação crescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-650">Uma nova DbSortExpression que representa a operação order-by.</span><span class="sxs-lookup"><span data-stu-id="6aa47-650">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-651">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-651">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-652">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-653">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-653">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-654">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-654">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-655">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="6aa47-656">O agrupamento sob o qual classificar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-656">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="6aa47-657">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação crescente e o agrupamento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-658">Uma nova DbSortExpression que representa a operação order-by.</span><span class="sxs-lookup"><span data-stu-id="6aa47-658">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-659">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-659">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-660">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado de cadeia de caracteres comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6aa47-661"><paramref name="collation" /> está vazio ou contém apenas caracteres de espaço.</span><span class="sxs-lookup"><span data-stu-id="6aa47-661"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-662">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação decrescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-663">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-663">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-664">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-664">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-665">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="6aa47-666">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação decrescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-667">Uma nova DbSortExpression que representa a operação order-by.</span><span class="sxs-lookup"><span data-stu-id="6aa47-667">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-668">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-668">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-669">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-670">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-670">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-671">Um método que especifica como derivar a expressão de chave de classificação fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-671">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-672">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="6aa47-673">O agrupamento sob o qual classificar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-673">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="6aa47-674">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pela chave de classificação especificada, com ordem de classificação decrescente e o agrupamento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-675">Uma nova DbSortExpression que representa a operação order-by.</span><span class="sxs-lookup"><span data-stu-id="6aa47-675">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-676">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-676">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-677">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado de cadeia de caracteres comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6aa47-678"><paramref name="collation" /> está vazio ou contém apenas caracteres de espaço.</span><span class="sxs-lookup"><span data-stu-id="6aa47-678"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-679">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-680">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="6aa47-681">Um método que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-681">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-682">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="6aa47-683">Linhas para as quais <paramref name="apply" /> é avaliada para um conjunto vazio têm um valor de coluna apply de <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-684">Uma nova DbApplyExpression com as associações de input e apply especificadas e um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de OuterApply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-685">O resultado de <paramref name="apply" /> contém um nome ou expressão que é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-686">O resultado de <paramref name="apply" /> contém um nome ou expressão que não é válida em uma associação de expressão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-687">Uma <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="6aa47-688">Um <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-689">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="6aa47-690">Linhas para as quais <paramref name="apply" /> é avaliada para um conjunto vazio têm um valor de coluna apply de <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-691">Uma nova DbApplyExpression com as associações de input e apply especificadas e um <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de OuterApply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-692"><paramref name="input" /> ou <paramref name="apply" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-692"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6aa47-693">O tipo do parâmetro referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-693">The type of the referenced parameter.</span></span></param>
        <param name="name"><span data-ttu-id="6aa47-694">O nome do parâmetro referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-694">The name of the referenced parameter.</span></span></param>
        <summary><span data-ttu-id="6aa47-695">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> que faz referência a um parâmetro com o nome e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="6aa47-696">Uma DbParameterReferenceExpression que representa uma referência a um parâmetro com o nome e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span></span> <span data-ttu-id="6aa47-697">O tipo de resultado da expressão será o mesmo que <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-697">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-698">Uma expressão que especifica o argumento left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-698">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-699">Uma expressão que especifica o argumento direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-699">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-700">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que adiciona o argumento left ao argumento right.</span><span class="sxs-lookup"><span data-stu-id="6aa47-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-701">Uma nova DbArithmeticExpression que representa a operação de adição.</span><span class="sxs-lookup"><span data-stu-id="6aa47-701">A new DbArithmeticExpression representing the addition operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-702"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-702"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-703">Nenhum tipo de resultado numérico comum existe entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-704">Uma expressão de associação que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-704">An expression binding that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="6aa47-705">Uma expressão a projetar sobre o conjunto.</span><span class="sxs-lookup"><span data-stu-id="6aa47-705">An expression to project over the set.</span></span></param>
        <summary><span data-ttu-id="6aa47-706">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que projeta a expressão especificada no conjunto de entrada fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-707">Uma nova DbProjectExpression que representa a operação de projeção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-707">A new DbProjectExpression that represents the projection operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-708"><paramref name="input" /> ou <paramref name="projection" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-708"><paramref name="input" /> or <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-709">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa a recuperação da propriedade especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6aa47-710">A instância da qual recuperar a propriedade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-710">The instance from which to retrieve the property.</span></span> <span data-ttu-id="6aa47-711">Pode ser nulo se a propriedade é estática.</span><span class="sxs-lookup"><span data-stu-id="6aa47-711">May be null if the property is static.</span></span></param>
        <param name="propertyMetadata"><span data-ttu-id="6aa47-712">Os metadados da propriedade a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-712">Metadata for the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="6aa47-713">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa a recuperação da propriedade especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
        <returns><span data-ttu-id="6aa47-714">Uma nova DbPropertyExpression que representa a recuperação da propriedade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-714">A new DbPropertyExpression representing the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-715"><paramref name="propertyMetadata" /> é nulo ou <paramref name="instance" /> é nulo e a propriedade não é estática.</span><span class="sxs-lookup"><span data-stu-id="6aa47-715"><paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6aa47-716">A instância da qual recuperar a propriedade de navegação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-716">The instance from which to retrieve the navigation property.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="6aa47-717">Metadados da propriedade de navegação a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-717">Metadata for the navigation property to retrieve.</span></span></param>
        <summary><span data-ttu-id="6aa47-718">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa a recuperação da propriedade de navegação especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span></span></summary>
        <returns><span data-ttu-id="6aa47-719">Uma nova DbPropertyExpression que representa a recuperação da propriedade de navegação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-719">A new DbPropertyExpression representing the navigation property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-720"><paramref name="navigationProperty" /> ou <paramref name="instance" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-720"><paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6aa47-721">A instância da qual recuperar o membro de extremidade da relação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-721">The instance from which to retrieve the relationship end member.</span></span></param>
        <param name="relationshipEnd"><span data-ttu-id="6aa47-722">Metadados para o membro de extremidade da relação a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-722">Metadata for the relationship end member to retrieve.</span></span></param>
        <summary><span data-ttu-id="6aa47-723">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa a recuperação do membro de extremidade da relação especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span></span></summary>
        <returns><span data-ttu-id="6aa47-724">Uma nova DbPropertyExpression que representa a recuperação do membro de extremidade da relação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-724">A new DbPropertyExpression representing the relationship end member retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-725"><paramref name="relationshipEnd" /> é nulo ou <paramref name="instance" /> é nulo e a propriedade não é estática.</span><span class="sxs-lookup"><span data-stu-id="6aa47-725"><paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="6aa47-726">A instância da qual recuperar a propriedade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-726">The instance from which to retrieve the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="6aa47-727">O nome da propriedade a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-727">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="6aa47-728">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa a recuperação de propriedade da instância com o nome especificado da instância fornecida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span></span></summary>
        <returns><span data-ttu-id="6aa47-729">Uma nova DbPropertyExpression que representa a recuperação da propriedade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-729">A new DbPropertyExpression that represents the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-730"><paramref name="propertyName" /> é nulo ou <paramref name="instance" /> é nulo e a propriedade não é estática.</span><span class="sxs-lookup"><span data-stu-id="6aa47-730"><paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6aa47-731">Nenhuma propriedade com o nome especificado é declarada pelo tipo de <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-732">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="6aa47-733">O conjunto de entidades em que o elemento referenciado reside.</span><span class="sxs-lookup"><span data-stu-id="6aa47-733">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="6aa47-734">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que constrói um registro com colunas que correspondem (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <summary><span data-ttu-id="6aa47-735">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="6aa47-736">Uma nova DbRefExpression que referencia o elemento com os valores de chave especificados no conjunto de entidades determinado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-737">`keyRow` deve ser uma expressão que especifica os valores de chave que identificam a entidade referenciada dentro de determinada entidade definida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="6aa47-738">O tipo de resultado de `keyRow` deve conter uma coluna correspondente para cada propriedade de chave definida pelo `entitySet's` tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-739"><paramref name="entitySet" /> ou <paramref name="keyRow" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-739"><paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-740"><paramref name="keyRow" /> não tem um tipo de resultado de registro que corresponde às propriedades de chave do tipo de entidade do conjunto de entidades referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-740"><paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="6aa47-741">O conjunto de entidades em que o elemento referenciado reside.</span><span class="sxs-lookup"><span data-stu-id="6aa47-741">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="6aa47-742">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que constrói um registro com colunas que correspondem (em número, tipo e ordem) às propriedades de chave do tipo de entidade referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <param name="entityType"><span data-ttu-id="6aa47-743">O tipo da entidade à qual a referência deve referenciar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-743">The type of the Entity that the reference should refer to.</span></span></param>
        <summary><span data-ttu-id="6aa47-744">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica uma referência a uma entidade específica com base em valores de chave.</span><span class="sxs-lookup"><span data-stu-id="6aa47-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="6aa47-745">Uma nova DbRefExpression que referencia o elemento com os valores de chave especificados no conjunto de entidades determinado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-746">`keyRow` deve ser uma expressão que especifica os valores de chave que identificam a entidade referenciada dentro de determinada entidade definida.</span><span class="sxs-lookup"><span data-stu-id="6aa47-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="6aa47-747">O tipo de resultado de `keyRow` deve conter uma coluna correspondente para cada propriedade de chave definida pelo `entitySet's` tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="6aa47-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-748"><paramref name="entitySet" />, <paramref name="keyRow" /> ou <paramref name="entityType" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-748"><paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-749"><paramref name="entityType" /> não está na mesma hierarquia de tipo que o tipo de entidade do conjunto de entidades ou então <paramref name="keyRow" /> não tem um tipo de resultado de registro que corresponde às propriedades de chave do tipo de entidade do conjunto de entidades referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-749"><paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet"><span data-ttu-id="6aa47-750">Metadados para o conjunto de entidades ou de relações a ser referenciado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-750">Metadata for the entity or relationship set to reference.</span></span></param>
        <summary><span data-ttu-id="6aa47-751">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> que referencia o conjunto de entidades ou de relações especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-752">Uma nova DbScanExpression com base no conjunto de entidades ou de relações especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-752">A new DbScanExpression based on the specified entity or relationship set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-753"><paramref name="targetSet" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-753"><paramref name="targetSet" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection"><span data-ttu-id="6aa47-754">O tipo de resultado do método de <c>projeção</c>.</span><span class="sxs-lookup"><span data-stu-id="6aa47-754">The method result type of <c>projection</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="6aa47-755">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-755">An expression that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="6aa47-756">Um método que especifica como derivar a expressão projetada fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-756">A method that specifies how to derive the projected expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-757">Este método deve produzir uma instância de um tipo compatível com Select e pode ser resolvido em um <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="6aa47-758">Requisitos de compatibilidade para <c>TProjection</c> são descritos nos comentários.</span><span class="sxs-lookup"><span data-stu-id="6aa47-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="6aa47-759">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que seleciona a expressão especificada no conjunto de entrada fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-760">Uma nova DbProjectExpression que representa a operação de seleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-760">A new DbProjectExpression that represents the select operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-761">Para ser compatível com Select, `TProjection` deve ser derivado de <xref:System.Data.Common.CommandTrees.DbExpression>, ou deve ser um tipo anônimo com propriedades derivadas de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="6aa47-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="6aa47-762">Os seguintes são exemplos de tipos com suporte para `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="6aa47-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="6aa47-763">`TProjection` é <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="6aa47-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="6aa47-764">(`TProjection` é um tipo anônimo com uma propriedade derivado de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="6aa47-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-765">O resultado de <paramref name="projection" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-765">The result of <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-766">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="6aa47-767">Um método que representa a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-767">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="6aa47-768">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="6aa47-769">Linhas para as quais <paramref name="apply" /> é avaliado para um conjunto vazio não são incluídas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="6aa47-770">Um <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> é criado, o qual seleciona a coluna <paramref name="apply" /> de cada linha, produzindo a coleção geral de resultados <paramref name="apply" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span></span></summary>
        <returns><span data-ttu-id="6aa47-771">Uma nova DbProjectExpression que seleciona a coluna apply de uma nova DbApplyExpression com as associações input e apply especificadas e uma <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-772">A expressão produzida por <paramref name="apply" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-772">The expression produced by <paramref name="apply" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-773">A expressão produzida por <paramref name="apply" /> não tem um tipo de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="6aa47-774">O tipo de resultado do método de <c>seletor</c>.</span><span class="sxs-lookup"><span data-stu-id="6aa47-774">The method result type of <c>selector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="6aa47-775">Um <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="6aa47-776">Um método que representa a lógica a ser avaliada uma vez para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-776">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <param name="selector"><span data-ttu-id="6aa47-777">Um método que especifica como um elemento do conjunto de resultados deve ser derivado de um elemento fornecido dos conjuntos input e apply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span></span> <span data-ttu-id="6aa47-778">Este método deve produzir uma instância de um tipo compatível com SelectMany e pode ser resolvido em um <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="6aa47-779">Os requisitos de compatibilidade para <c>TSelector</c> estão descritos nos comentários.</span><span class="sxs-lookup"><span data-stu-id="6aa47-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="6aa47-780">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que avalia a expressão <paramref name="apply" /> fornecida uma vez para cada elemento de um determinado conjunto de entrada, produzindo um conjunto de linhas com colunas input e apply correspondentes.</span><span class="sxs-lookup"><span data-stu-id="6aa47-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="6aa47-781">Linhas para as quais <paramref name="apply" /> é avaliado para um conjunto vazio não são incluídas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="6aa47-782">Um <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> é então criado, o qual seleciona o <paramref name="selector" /> especificado sobre cada linha, produzindo a coleção geral de resultados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span></span></summary>
        <returns><span data-ttu-id="6aa47-783">Uma nova DbProjectExpression que seleciona o resultado do seletor fornecido de uma nova DbApplyExpression com as associações input e apply especificadas e uma <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="6aa47-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-784">Para ser compatível com SelectMany, `TSelector` deve ser derivado de <xref:System.Data.Common.CommandTrees.DbExpression>, ou deve ser um tipo anônimo com propriedades derivadas de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="6aa47-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="6aa47-785">Os seguintes são exemplos de tipos com suporte para `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="6aa47-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="6aa47-786">(`TSelector` é <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="6aa47-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="6aa47-787">(`TSelector` é um tipo anônimo com propriedades derivadas de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="6aa47-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-788">O resultado de <paramref name="selector" /> é nulo na conversão para DbExpression.</span><span class="sxs-lookup"><span data-stu-id="6aa47-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-789">A expressão produzida por <paramref name="apply" /> não tem um tipo de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span> <span data-ttu-id="6aa47-790">não tem um tipo de coleção.</span><span class="sxs-lookup"><span data-stu-id="6aa47-790">does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-791">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que classifica o conjunto de entrada fornecido pelas especificações de classificação fornecidas antes de ignorar o número de elementos especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-792">Um <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que especifica o conjunto de entrada classificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span></span></param>
        <param name="count"><span data-ttu-id="6aa47-793">Uma expressão que especifica quantos elementos do conjunto ordenado devem ser ignorados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-793">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="6aa47-794">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que ignora o número especificado de elementos do conjunto de entrada classificado fornecido.</span><span class="sxs-lookup"><span data-stu-id="6aa47-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span></span></summary>
        <returns><span data-ttu-id="6aa47-795">Uma nova DbSkipExpression que representa a operação skip.</span><span class="sxs-lookup"><span data-stu-id="6aa47-795">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-796"><paramref name="argument" /> ou <paramref name="count" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-796"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-797"><paramref name="count" /> não é <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> ou <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, ou então tem um tipo de resultado que não igual nem passível de promoção a um tipo inteiro de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="6aa47-797"><paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-798">Uma expressão de associação que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-798">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="6aa47-799">Uma lista de especificações de classificação que determinam como os elementos do conjunto de entrada devem ser classificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <param name="count"><span data-ttu-id="6aa47-800">Uma expressão que especifica quantos elementos do conjunto ordenado devem ser ignorados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-800">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="6aa47-801">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que classifica o conjunto de entrada fornecido pelas especificações de classificação fornecidas antes de ignorar o número de elementos especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="6aa47-802">Uma nova DbSkipExpression que representa a operação skip.</span><span class="sxs-lookup"><span data-stu-id="6aa47-802">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-803"><paramref name="input" />, <paramref name="sortOrder" /> ou <paramref name="count" /> é nulo, ou então <paramref name="sortOrder" /> contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-803"><paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-804"><paramref name="sortOrder" /> está vazio, ou <paramref name="count" /> não é <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> ou <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, ou então tem um tipo de resultado que não igual nem passível de promoção a um tipo inteiro de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="6aa47-804"><paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="6aa47-805">Uma expressão de associação que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-805">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="6aa47-806">Uma lista de especificações de classificação que determinam como os elementos do conjunto de entrada devem ser classificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <summary><span data-ttu-id="6aa47-807">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que classifica o conjunto de entrada fornecido pelas especificações de classificação especificadas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span></span></summary>
        <returns><span data-ttu-id="6aa47-808">Uma nova DbSortExpression que representa a operação de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-808">A new DbSortExpression that represents the sort operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-809"><paramref name="input" /> ou <paramref name="sortOrder" /> é nulo ou então <paramref name="sortOrder" /> contém um nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-809"><paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-810"><paramref name="sortOrder" /> está vazio.</span><span class="sxs-lookup"><span data-stu-id="6aa47-810"><paramref name="sortOrder" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-811">Uma expressão que especifica a coleção de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-811">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="6aa47-812">Uma expressão que especifica o valor do limite.</span><span class="sxs-lookup"><span data-stu-id="6aa47-812">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="6aa47-813">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> que restringe o número de elementos na coleção de argumentos para o valor do limite da contagem especificada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="6aa47-814">Resultados vinculados não são incluídos na saída.</span><span class="sxs-lookup"><span data-stu-id="6aa47-814">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="6aa47-815">Uma nova DbLimitExpression com o argumento especificado e os valores de limite de contagem que não incluem resultados vinculados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-816"><paramref name="argument" /> ou <paramref name="count" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-816"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-817"><paramref name="argument" /> não tem um tipo de resultado de coleção, <paramref name="count" /> não tem um tipo de resultado igual ou passível de promoção para um tipo inteiro de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="6aa47-817"><paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-818">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação crescente e com o agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-819">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-819">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-820">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-821">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="6aa47-822">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação crescente e com o agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-823">Uma nova DbSortExpression que representa a nova operação order-by geral.</span><span class="sxs-lookup"><span data-stu-id="6aa47-823">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-824">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-824">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-825"><paramref name="sortKey" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-825"><paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-826">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-826">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-827">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-828">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="6aa47-829">O agrupamento sob o qual classificar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-829">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="6aa47-830">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação crescente e com o agrupamento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-831">Uma nova DbSortExpression que representa a nova operação order-by geral.</span><span class="sxs-lookup"><span data-stu-id="6aa47-831">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-832">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-832">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-833">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado de cadeia de caracteres comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6aa47-834"><paramref name="collation" /> está vazio ou contém apenas caracteres de espaço.</span><span class="sxs-lookup"><span data-stu-id="6aa47-834"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-835">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação decrescente e com o agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-836">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-836">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-837">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-838">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="6aa47-839">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação decrescente e com o agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-840">Uma nova DbSortExpression que representa a nova operação order-by geral.</span><span class="sxs-lookup"><span data-stu-id="6aa47-840">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-841">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-841">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-842">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-843">Uma DbSortExpression que especifica o conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-843">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="6aa47-844">Um método que especifica como derivar a expressão de chave de classificação adicional fornecida a um membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="6aa47-845">Este método deve produzir uma expressão com um tipo de resultado comparável quanto à ordem que fornece a definição da chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="6aa47-846">O agrupamento sob o qual classificar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-846">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="6aa47-847">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que, com uma ordem de classificação que inclui a ordem de classificação do conjunto de entrada de classificação fornecido, juntamente com a chave de classificação especificada em ordem de classificação decrescente e com o agrupamento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-848">Uma nova DbSortExpression que representa a nova operação order-by geral.</span><span class="sxs-lookup"><span data-stu-id="6aa47-848">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-849">A expressão produzida por <paramref name="sortKey" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-849">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-850">A expressão produzida por <paramref name="sortKey" /> não tem um tipo de resultado de cadeia de caracteres comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6aa47-851"><paramref name="collation" /> está vazio ou contém apenas caracteres de espaço.</span><span class="sxs-lookup"><span data-stu-id="6aa47-851"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-852">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> com ordem de classificação crescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="6aa47-853">A expressão que define a chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-853">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="6aa47-854">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> com ordem de classificação crescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-855">Uma nova cláusula de classificação com a chave de classificação fornecida e em ordem de classificação crescente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-855">A new sort clause with the given sort key and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-856"><paramref name="key" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-856"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-857"><paramref name="key" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-857"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="6aa47-858">A expressão que define a chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-858">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="6aa47-859">O agrupamento sob o qual classificar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-859">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="6aa47-860">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> com uma ordem de classificação crescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-861">Uma nova cláusula de classificação com a chave de classificação e o agrupamento fornecidos e ordem de classificação crescente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-861">A new sort clause with the given sort key and collation, and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-862"><paramref name="key" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-862"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6aa47-863"><paramref name="collation" /> está vazio ou contém apenas caracteres de espaço.</span><span class="sxs-lookup"><span data-stu-id="6aa47-863"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-864"><paramref name="key" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-864"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-865">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> com ordem de classificação decrescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="6aa47-866">A expressão que define a chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-866">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="6aa47-867">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> com ordem de classificação decrescente e agrupamento padrão.</span><span class="sxs-lookup"><span data-stu-id="6aa47-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-868">Uma nova cláusula de classificação com a chave de classificação fornecida e em ordem de classificação decrescente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-868">A new sort clause with the given sort key and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-869"><paramref name="key" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-869"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-870"><paramref name="key" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-870"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="6aa47-871">A expressão que define a chave de classificação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-871">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="6aa47-872">O agrupamento sob o qual classificar.</span><span class="sxs-lookup"><span data-stu-id="6aa47-872">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="6aa47-873">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> com ordem de classificação decrescente e agrupamento especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="6aa47-874">Uma nova cláusula de classificação com a chave de classificação e o agrupamento fornecidos e ordem de classificação decrescente.</span><span class="sxs-lookup"><span data-stu-id="6aa47-874">A new sort clause with the given sort key and collation, and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-875"><paramref name="key" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-875"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6aa47-876"><paramref name="collation" /> está vazio ou contém apenas caracteres de espaço.</span><span class="sxs-lookup"><span data-stu-id="6aa47-876"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-877"><paramref name="key" /> não tem um tipo de resultado comparável quanto à ordem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-877"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-878">Uma expressão que especifica a instância.</span><span class="sxs-lookup"><span data-stu-id="6aa47-878">An expression that specifies the instance.</span></span></param>
        <param name="treatType"><span data-ttu-id="6aa47-879">Tipo de metadados para o tipo tratar-como.</span><span class="sxs-lookup"><span data-stu-id="6aa47-879">Type metadata for the treat-as type.</span></span></param>
        <summary><span data-ttu-id="6aa47-880">Cria um novo <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-881">Uma nova DbTreatExpression com o argumento e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-881">A new DbTreatExpression with the specified argument and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-882">DbTreatExpression requer que `argument` tem um tipo de resultado polimórfico e que `treatType` é um tipo de hierarquia de tipo como esse tipo de resultado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-883"><paramref name="argument" /> ou <paramref name="treatType" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-883"><paramref name="argument" /> or <paramref name="treatType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6aa47-884"><paramref name="treatType" /> não está na mesma hierarquia de tipo que o tipo de resultado de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-884"><paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6aa47-885">Obtém um <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> com o valor booliano <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="6aa47-886">Um <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> com o valor booliano <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="6aa47-887">Uma expressão que especifica o argumento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-887">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-888">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que nega o valor do argumento.</span><span class="sxs-lookup"><span data-stu-id="6aa47-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="6aa47-889">Uma nova DbArithmeticExpression que representa a operação de negação.</span><span class="sxs-lookup"><span data-stu-id="6aa47-889">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-890"><paramref name="argument" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-890"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-891">Não existe nenhum tipo de resultado numérico para <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-891">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-892">Uma expressão que define o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-892">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-893">Uma expressão que define o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-893">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-894">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que calcula a união dos argumentos de conjunto left e right, removendo as duplicatas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span></span></summary>
        <returns><span data-ttu-id="6aa47-895">Uma nova DbExpression que calcula a união, sem duplicatas, dos argumentos esquerdo e direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-896"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-896"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-897">Não existe nenhum tipo de resultado de coleção com um tipo de elemento comparável por igualdade que seja comum entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="6aa47-898">Uma expressão que define o argumento de conjunto left.</span><span class="sxs-lookup"><span data-stu-id="6aa47-898">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="6aa47-899">Uma expressão que define o argumento de conjunto direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-899">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="6aa47-900">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> que calcula a união dos argumentos de conjunto left e right e não remove as duplicatas.</span><span class="sxs-lookup"><span data-stu-id="6aa47-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span></span></summary>
        <returns><span data-ttu-id="6aa47-901">Uma nova DbUnionAllExpression que calcula a união, incluindo as duplicatas, dos argumentos esquerdo e direito.</span><span class="sxs-lookup"><span data-stu-id="6aa47-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6aa47-902"><paramref name="left" /> ou <paramref name="right" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="6aa47-902"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-903">Não existe nenhum tipo de resultado de coleção com um tipo de elemento comparável por igualdade que seja comum entre <paramref name="left" /> e <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6aa47-904">O tipo da variável referenciada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-904">The type of the referenced variable.</span></span></param>
        <param name="name"><span data-ttu-id="6aa47-905">O nome da variável referenciada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-905">The name of the referenced variable.</span></span></param>
        <summary><span data-ttu-id="6aa47-906">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que faz referência a uma variável com o nome e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="6aa47-907">Uma DbVariableReferenceExpression que representa uma referência a uma variável com o nome e o tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="6aa47-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span></span> <span data-ttu-id="6aa47-908">O tipo de resultado da expressão será o mesmo que <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-908">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="6aa47-909">Uma expressão que especifica o conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-909">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="6aa47-910">Um método que representa o predicado a ser avaliado para cada membro do conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="6aa47-910">A method representing the predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="6aa47-911">Este método deve produzir uma expressão com um tipo de resultado booliano que fornece a lógica de predicado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="6aa47-912">Cria uma nova <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> que filtra os elementos no conjunto de entrada fornecido usando o predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="6aa47-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="6aa47-913">Um novo DbQuantifierExpression que representa a operação Any.</span><span class="sxs-lookup"><span data-stu-id="6aa47-913">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-914">A expressão produzida por <paramref name="predicate" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="6aa47-914">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6aa47-915">A expressão produzida por <paramref name="predicate" /> não tem um tipo de resultado booliano.</span><span class="sxs-lookup"><span data-stu-id="6aa47-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>