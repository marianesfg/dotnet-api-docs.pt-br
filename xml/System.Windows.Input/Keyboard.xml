<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Keyboard.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a7f573a4ba18bded8545efa1eed98e40782d2d79.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7f573a4ba18bded8545efa1eed98e40782d2d79</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.Keyboard">
          <source>Represents the keyboard device.</source>
          <target state="translated">Representa o dispositivo de teclado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> classe fornece eventos de teclado, métodos e propriedades que fornecem informações sobre o estado do teclado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Each of the events that <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> defines as an attached event is also re-exposed by the base element classes <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> as a new routed event.</source>
          <target state="translated">Cada um dos eventos que <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> define como um evento anexado novamente também é exposto pelas classes de elemento base <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> como um novo evento roteado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Generally, it is more convenient to handle keyboard events for an application on <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>, rather than using the <ph id="ph3">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> events.</source>
          <target state="translated">Geralmente, é mais conveniente manipular eventos de teclado para um aplicativo em <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>, em vez de usar o <ph id="ph3">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>For details, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>In order for an element to receive keyboard input, the element must be focusable.</source>
          <target state="translated">Para um elemento receber entrada do teclado, o elemento deve ser Focusable é.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Most <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> derived objects are focusable by default.</source>
          <target state="translated">A maioria dos <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> objetos derivados são Focusable é por padrão.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Otherwise, to make an element focusable, set the <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> property on the base element to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Caso contrário, para criar um elemento de controle, defina a <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> propriedade no elemento base para <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>For more information on the base elements, see <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os elementos base, consulte <bpt id="p1">[</bpt>visão geral de elementos Base<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> classes, such as <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, set the default value of <ph id="ph4">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> classes, como <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, defina o valor padrão de <ph id="ph4">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> para <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Therefore, for these objects to obtain keyboard focus, <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Portanto, para esses objetos obter o foco do teclado, <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> deve ser definido como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Keyboard focus refers to the object that is receiving keyboard input.</source>
          <target state="translated">O foco do teclado refere-se ao objeto que está recebendo a entrada do teclado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>The element with keyboard focus has <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O elemento com o foco do teclado tem <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> definido como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>There can be only one element with keyboard focus on the entire desktop.</source>
          <target state="translated">Pode haver apenas um elemento com o foco do teclado na área de trabalho inteira.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>Logical focus refers to the object within a focus scope that has focus.</source>
          <target state="translated">Foco lógico refere-se ao objeto dentro de um escopo de foco que tem foco.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>For more information on focus, keyboard focus, and logical focus, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> and <bpt id="p2">[</bpt>Focus Overview<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o foco, o foco do teclado e foco lógico, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> e <bpt id="p2">[</bpt>visão geral de foco<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>The static members of the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class delegate to the primary <ph id="ph2">&lt;xref:System.Windows.Input.KeyboardDevice&gt;</ph> of the calling thread, so they are not necessarily thread-safe.</source>
          <target state="translated">Os membros estáticos do <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> classe delegate para o primário <ph id="ph2">&lt;xref:System.Windows.Input.KeyboardDevice&gt;</ph> do thread de chamada, portanto, não são necessariamente thread-safe.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> method to determine if a key is in the toggled state.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> método para determinar se uma chave está no estado alternado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.Keyboard">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.Key&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> is toggled, the background of a button is changed.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.Input.Key&gt;</ph> passado para <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> é alternado, o plano de fundo de um botão é alterado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyDown" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyUp" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be added.</source>
          <target state="translated">O manipulador de eventos a ser adicionado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Adiciona um manipulador ao evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso ao código e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processamento do atributo do <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.ClearFocus">
          <source>Clears focus.</source>
          <target state="translated">Limpa o foco.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.ClearFocus">
          <source>If focus is within a Win32 window, WPF calls the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.ClearFocus%2A&gt;</ph> method on restoration of focus when a menu is closed.</source>
          <target state="translated">Se o foco estiver em uma janela do Win32, WPF chama o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.ClearFocus%2A&gt;</ph> método na restauração de foco quando um menu é fechado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.ClearFocus">
          <source>When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</source>
          <target state="translated">Quando sair do modo de menu, foco do Win32 é retornado para o filho hospedado HWND e nenhum elemento tem o foco do WPF.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode">
          <source>Gets or sets the behavior of <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> when restoring focus.</source>
          <target state="translated">Obtém ou define o comportamento de <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> ao restaurar o foco.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode">
          <source>An enumeration value that specifies the behavior of <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> when restoring focus.</source>
          <target state="translated">Um valor de enumeração que especifica o comportamento de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> ao restaurar o foco.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode">
          <source>The default in <ph id="ph1">&lt;see cref="F:System.Windows.Input.RestoreFocusMode.Auto" /&gt;</ph>.</source>
          <target state="translated">O padrão em <ph id="ph1">&lt;see cref="F:System.Windows.Input.RestoreFocusMode.Auto" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>The element on which to set keyboard focus.</source>
          <target state="translated">O elemento no qual definir o foco do teclado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>Sets keyboard focus on the specified element.</source>
          <target state="translated">Determina o foco do teclado no elemento especificado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>The element with keyboard focus.</source>
          <target state="translated">O elemento com foco do teclado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>For an element to receive keyboard input, the element must be focusable.</source>
          <target state="translated">Para um elemento receber entrada do teclado, o elemento deve ser um controle.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>To make an element focusable, set the <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> property on the base element to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Para criar um elemento de controle, defina a <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> propriedade no elemento base para <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>For more information on the base elements, see <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os elementos base, consulte <bpt id="p1">[</bpt>visão geral de elementos Base<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> classes, such as <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, set the default value of <ph id="ph4">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> to <ph id="ph5">`false`</ph>; therefore, for these objects to obtain keyboard focus, <ph id="ph6">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> must be set to <ph id="ph7">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> classes, como <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, defina o valor padrão de <ph id="ph4">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> para <ph id="ph5">`false`</ph>; portanto, para esses objetos obter o foco do teclado, <ph id="ph6">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> deve ser definido como <ph id="ph7">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>Keyboard focus refers to the object that is receiving keyboard input.</source>
          <target state="translated">O foco do teclado refere-se ao objeto que está recebendo a entrada do teclado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>The element with keyboard focus has <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O elemento com o foco do teclado tem <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> definido como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>There can be only one element with keyboard focus on the entire desktop.</source>
          <target state="translated">Pode haver apenas um elemento com o foco do teclado na área de trabalho inteira.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>Logical focus refers to the object within a focus scope that has focus.</source>
          <target state="translated">Foco lógico refere-se ao objeto dentro de um escopo de foco que tem foco.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>For more information on focus, keyboard focus, and logical focus, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> and <bpt id="p2">[</bpt>Focus Overview<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o foco, o foco do teclado e foco lógico, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> e <bpt id="p2">[</bpt>visão geral de foco<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>An element with keyboard focus also has logical focus for the focus scope the element belongs to.</source>
          <target state="translated">Um elemento com o foco do teclado também tem foco lógico para o escopo de foco que ao qual o elemento pertence.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>An element with logical focus may or may not have keyboard focus.</source>
          <target state="translated">Um elemento com foco lógico pode ou não pode ter o foco do teclado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event handler that sets keyboard focus on a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">A exemplo a seguir mostra um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> manipulador de eventos que define o foco do teclado em um <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>Gets the element that has keyboard focus.</source>
          <target state="translated">Obtém o elemento que tem o foco do teclado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>The focused element.</source>
          <target state="translated">O elemento focalizado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>Keyboard focus refers to the object that is receiving keyboard input.</source>
          <target state="translated">O foco do teclado refere-se ao objeto que está recebendo a entrada do teclado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>The element with keyboard focus has <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O elemento com o foco do teclado tem <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> definido como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>There can be only one element with keyboard focus on the entire desktop.</source>
          <target state="translated">Pode haver apenas um elemento com o foco do teclado na área de trabalho inteira.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>Logical focus refers to the object within a focus scope that has focus.</source>
          <target state="translated">Foco lógico refere-se ao objeto dentro de um escopo de foco que tem foco.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>For more information on focus, keyboard focus, and logical focus, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> and <bpt id="p2">[</bpt>Focus Overview<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o foco, o foco do teclado e foco lógico, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> e <bpt id="p2">[</bpt>visão geral de foco<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>An element with keyboard focus also has logical focus for the focus scope the element belongs to.</source>
          <target state="translated">Um elemento com o foco do teclado também tem foco lógico para o escopo de foco que ao qual o elemento pertence.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>An element with logical focus may or may not have keyboard focus.</source>
          <target state="translated">Um elemento com foco lógico pode ou não pode ter o foco do teclado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>The following example gets the element with keyboard focus and casts it to a <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir obtém o elemento com o foco do teclado e converte-o para um <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.FocusedElement">
          <source>If the element with keyboard focus is a <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>, the background of the element is changed.</source>
          <target state="translated">Se o elemento com o foco do teclado é um <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>, o plano de fundo do elemento é alterado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>The specified key.</source>
          <target state="translated">A tecla especificada.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>Gets the set of key states for the specified key.</source>
          <target state="translated">Obtém o conjunto de estados principais para a chave especificada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyStates" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyStates" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> é um pouco a enumeração do campo; Portanto, é possível que uma chave para estar em vários estados.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>For example, a key could be in the pressed state as well as in the toggled state.</source>
          <target state="translated">Por exemplo, uma chave pode ser no estado pressionado, bem como o estado alternado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>Use bit comparison operations to determine the exact state or states the key is in.</source>
          <target state="translated">Use as operações de comparação de bits para determinar o estado exato ou estados em que a chave está.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class provides a number of static methods which can also be used to obtain key state information.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> classe fornece um número de métodos estáticos que também pode ser usado para obter informações de estado da chave.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>The methods are: <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph>.</source>
          <target state="translated">Os métodos são: <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method to determine if the <ph id="ph2">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> key is in the <ph id="ph3">&lt;xref:System.Windows.Input.KeyStates.Down&gt;</ph> state.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> método para determinar se o <ph id="ph2">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> chave está no <ph id="ph3">&lt;xref:System.Windows.Input.KeyStates.Down&gt;</ph> estado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>A bit AND operation is used to compare the <ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Input.Key.Down&gt;</ph> state.</source>
          <target state="translated">Um pouco e operação é usada para comparar o <ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> retornado de <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Input.Key.Down&gt;</ph> estado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)">
          <source>If the key is down, the background of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is changed.</source>
          <target state="translated">Se a chave estiver inativo, o plano de fundo de um <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> é alterado.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source>The specified key.</source>
          <target state="translated">A tecla especificada.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source>Determines whether the specified key is pressed.</source>
          <target state="translated">Determina se a tecla especificada está pressionada.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is in the down state; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="key" /&gt;</ph> estiver no estado desativado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method can be used to determine the set of states of a specific key.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> método pode ser usado para determinar o conjunto de estados de uma chave específica.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph> method to determine the state of a specific key.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph> método para determinar o estado de uma chave específica.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> key is passed to the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> chave é passada para o <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)">
          <source>If the method returns <ph id="ph1">`true`</ph>, the background of a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> is changed.</source>
          <target state="translated">Se o método retornar <ph id="ph1">`true`</ph>, o plano de fundo de um <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> é alterado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source>The specified key.</source>
          <target state="translated">A tecla especificada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source>Determines whether the specified key is toggled.</source>
          <target state="translated">Determina se a tecla especificada está ativada.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is in the toggled state; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a <ph id="ph2">&lt;paramref name="key" /&gt;</ph> estiver no estado ativado, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method can be used to determine the set of states of a specific key.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> método pode ser usado para determinar o conjunto de estados de uma chave específica.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> method to determine the state of a specific key.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> método para determinar o estado de uma chave específica.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> key is passed to the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> chave é passada para o <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)">
          <source>If the method returns <ph id="ph1">`true`</ph>, then the background of a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> is changed.</source>
          <target state="translated">Se o método retornar <ph id="ph1">`true`</ph>, em seguida, o plano de fundo de um <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> é alterado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source>The key to check.</source>
          <target state="translated">A tecla a ser verificada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source>Determines whether the specified key is released.</source>
          <target state="translated">Determina se a tecla especificada está solta.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is in the up state; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="key" /&gt;</ph> estiver no estado ativado, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method can be used to determine the set of states of a specific key.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> método pode ser usado para determinar o conjunto de estados de uma chave específica.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph> method to determine the state of a specific key.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph> método para determinar o estado de uma chave específica.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> key is passed to the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> chave é passada para o <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)">
          <source>If the method returns <ph id="ph1">`true`</ph>, then the background of a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> is changed.</source>
          <target state="translated">Se o método retornar <ph id="ph1">`true`</ph>, em seguida, o plano de fundo de um <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> é alterado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.KeyDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyDown" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyDown" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyDownEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyDownEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyDownEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.KeyUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyUp" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyUp" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyUpEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyUpEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.KeyUpEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Keyboard.Modifiers">
          <source>Gets the set of <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> that are currently pressed.</source>
          <target state="translated">Obtém o conjunto de <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> pressionadas no momento.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.Modifiers">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph> values.</source>
          <target state="translated">Uma combinação bit a bit dos valores <ph id="ph1">&lt;see cref="T:System.Windows.Input.ModifierKeys" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.Modifiers">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> é um pouco a enumeração do campo, portanto, é possível que várias teclas modificadoras seja pressionado ao mesmo tempo.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.Modifiers">
          <source>Use bit operations to determine the exact set of modifier keys pressed.</source>
          <target state="translated">Use as operações de bits para determinar o conjunto exato de teclas modificadoras pressionado.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.Modifiers">
          <source>The following example uses a bit AND comparison to determine if the <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> modifier key is pressed.</source>
          <target state="translated">O exemplo a seguir usa um pouco e comparação para determinar se o <ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> tecla modificadora é pressionada.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Identifica o evento <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /&gt;</ph> anexado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
          <target state="translated">Você geralmente usa esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um determinado evento roteado.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.Keyboard.PrimaryDevice">
          <source>Gets the primary keyboard input device.</source>
          <target state="translated">Obtém o dispositivo de entrada do teclado primário.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.PrimaryDevice">
          <source>The device.</source>
          <target state="translated">O dispositivo.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.Keyboard.PrimaryDevice">
          <source>This property supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Esta propriedade oferece suporte à <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infraestrutura e não se destina a ser usada diretamente no seu código.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyDown" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyUp" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.KeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to this event.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> que escuta esse evento.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>The event handler to be removed.</source>
          <target state="translated">O manipulador de eventos a ser removido.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /&gt;</ph> attached event.</source>
          <target state="translated">Remove um manipulador para o evento anexado <ph id="ph1">&lt;see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType&gt;</ph> attached event.</source>
          <target state="translated">Esse método fornece acessadores de propriedade anexada para acesso de código para o <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType&gt;</ph> evento anexado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>