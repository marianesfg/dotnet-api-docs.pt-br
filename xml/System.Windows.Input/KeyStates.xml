<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyStates.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac553703f404f9e23ffeb9ce3140fc396aa23e3b853.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53703f404f9e23ffeb9ce3140fc396aa23e3b853</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyStates">
          <source>Specifies constants that define the state of a key.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> class is a bit field (flagwise) enumeration.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> classe é um pouco enumeração (flagwise) campo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>Therefore, a key can be in multiple states.</source>
          <target state="translated">Portanto, uma chave pode estar em vários estados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>For example, a key could be in the Down state as well as in the Toggled state.</source>
          <target state="translated">Por exemplo, uma chave pode ser em estado inativo, bem como o estado de Toggled.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>Use bit operations to determine the exact state or states the key is in.</source>
          <target state="translated">Use operações de bits para determinar o estado exato ou estados em que a chave está.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>The following example changes the color of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> if the <ph id="ph2">&lt;xref:System.Windows.Input.KeyStates.Toggled&gt;</ph> of the key passed in the <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is Down.</source>
          <target state="translated">O exemplo a seguir altera a cor de um <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> se o <ph id="ph2">&lt;xref:System.Windows.Input.KeyStates.Toggled&gt;</ph> da chave transmitido a <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> está inativo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>The state of the key is determined by using a bitwise <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">O estado da chave é determinado por meio de bit a bit <ph id="ph1">`AND`</ph> operação.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyStates">
          <source>The same technique can be used to determine whether a key has multiple states, such as being in the Toggled state and the Down state.</source>
          <target state="translated">A mesma técnica pode ser usada para determinar se uma chave tem vários estados, como sendo o estado de Toggled e o estado inativo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyStates.Down">
          <source>The key is pressed.</source>
          
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyStates.None">
          <source>The key is not pressed.</source>
          
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.KeyStates.Toggled">
          <source>The key is toggled.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>