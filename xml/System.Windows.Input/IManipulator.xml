<Type Name="IManipulator" FullName="System.Windows.Input.IManipulator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27ab42a96ae87e0ed51e3df5392ff5b495f53fbb" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48676929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.IManipulator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IManipulator" />
  <TypeSignature Language="F#" Value="type IManipulator = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f7cfa-101">Fornece a posição de entrada necessária para criar uma manipulação.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7cfa-101">Provides the position of input that is needed to create a manipulation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7cfa-102">Cada ponto de toque é um <xref:System.Windows.Input.IManipulator> objeto.</span><span class="sxs-lookup"><span data-stu-id="f7cfa-102">Each touch point is an <xref:System.Windows.Input.IManipulator> object.</span></span>  <span data-ttu-id="f7cfa-103">Por exemplo, se você usar dois dedos para redimensionar um objeto, uma <xref:System.Windows.Input.TouchDevice>, que implementa <xref:System.Windows.Input.IManipulator>, é criado para cada dedo.</span><span class="sxs-lookup"><span data-stu-id="f7cfa-103">For example, if you use two fingers to resize an object, a <xref:System.Windows.Input.TouchDevice>, which implements <xref:System.Windows.Input.IManipulator>, is created for each finger.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="iManipulator.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="f7cfa-104">O elemento a ser usado como o quadro de referência para calcular a posição do <see cref="T:System.Windows.Input.IManipulator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-104">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7cfa-105">Retorna a posição do objeto <see cref="T:System.Windows.Input.IManipulator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-105">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7cfa-106">A posição do objeto <see cref="T:System.Windows.Input.IManipulator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-106">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.Input.IManipulator.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7cfa-107">Obtém ou define um identificador exclusivo para o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-107">Gets or sets a unique identifier for the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f7cfa-108">Um identificador exclusivo para o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-108">A unique identifier for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7cfa-109">O <xref:System.Windows.Input.IManipulator.Id%2A> propriedade deve ser exclusiva para cada objeto de um determinado tipo.</span><span class="sxs-lookup"><span data-stu-id="f7cfa-109">The <xref:System.Windows.Input.IManipulator.Id%2A> property should be unique for each object of a certain type.</span></span>  <span data-ttu-id="f7cfa-110">Por exemplo, se os tipos `Manipulator1` e `Manipulator2` implementar <xref:System.Windows.Input.IManipulator>, todos os objetos do tipo `Maniplulator1` deve ter um único <xref:System.Windows.Input.IManipulator.Id%2A> valores, mas um objeto do tipo `Manipulator1` talvez tenham as mesmas <xref:System.Windows.Input.IManipulator.Id%2A> como um objeto do tipo `Manipulator2`.</span><span class="sxs-lookup"><span data-stu-id="f7cfa-110">For example, if the types `Manipulator1` and `Manipulator2` implement <xref:System.Windows.Input.IManipulator>, all of the objects of type `Maniplulator1` must have unique <xref:System.Windows.Input.IManipulator.Id%2A> values, but an object of type `Manipulator1` might have the same <xref:System.Windows.Input.IManipulator.Id%2A> as an object of type `Manipulator2`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationEnded">
      <MemberSignature Language="C#" Value="public void ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ManipulationEnded(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member ManipulationEnded : bool -&gt; unit" Usage="iManipulator.ManipulationEnded cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="f7cfa-111">
            <see langword="true" /> se a manipulação estiver cancelada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-111">
              <see langword="true" /> if the manipulation is canceled; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7cfa-112">Chamado quando a manipulação termina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-112">Called when the manipulation ends.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.IManipulator.Updated" />
      <MemberSignature Language="VB.NET" Value="Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler " Usage="member this.Updated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f7cfa-113">Ocorre quando o objeto <see cref="T:System.Windows.Input.IManipulator" /> muda de posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7cfa-113">Occurs when the <see cref="T:System.Windows.Input.IManipulator" /> object changes position.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>