<Type Name="Stylus" FullName="System.Windows.Input.Stylus">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b9ef0958341e8a24f3851d5e0f9bc88a61e6d5b" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59015842" /></Metadata><TypeSignature Language="C#" Value="public static class Stylus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stylus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Stylus" />
  <TypeSignature Language="VB.NET" Value="Public Class Stylus" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stylus abstract sealed" />
  <TypeSignature Language="F#" Value="type Stylus = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a3ad0-101">Fornece acesso a informações gerais sobre uma caneta eletrônica.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-101">Provides access to general information about a tablet pen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-102">O exemplo a seguir demonstra como registrar as coordenadas da caneta, mesmo se a caneta sai dos limites de um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-102">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a3ad0-103">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, e <xref:System.Windows.Input.Stylus.StylusMove> eventos estão conectados a manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-103">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-104">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-104">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-105">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-105">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-106">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-106">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-107">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-108">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-108">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-109">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-109">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-110">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-111">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-111">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-112">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-112">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-113">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-114">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-114">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-115">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-115">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-116">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-117">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-117">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-118">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-118">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-119">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-120">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-120">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-121">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-121">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-122">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-123">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-123">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-124">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-124">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-125">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-126">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-126">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-127">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-127">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-128">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-129">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-129">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-130">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-130">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-131">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-132">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-132">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-133">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-133">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-134">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-135">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-135">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-136">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-136">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-137">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-138">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-138">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-139">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-139">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-140">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-141">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-141">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-142">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-142">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-143">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-144">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-144">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-145">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-145">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-146">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-147">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-147">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-148">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-148">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-149">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-150">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-150">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-151">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-151">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-152">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-153">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-153">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-154">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-154">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-155">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-155">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-156">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-156">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-157">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-157">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-158">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-158">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-159">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-159">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-160">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-160">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-161">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-161">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-162">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-162">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-163">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-163">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-164">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-164">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-165">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-165">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-166">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-166">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-167">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-167">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-168">O manipulador de eventos a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-168">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="a3ad0-169">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Stylus.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-169">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-170">Captura a caneta associada a um determinado elemento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-170">Captures the stylus that is bound to a particular element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Stylus.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-171">O elemento para o qual a caneta será capturada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-171">The element to capture the stylus to.</span></span></param>
        <summary><span data-ttu-id="a3ad0-172">Captura a caneta para o elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-172">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="a3ad0-173"><see langword="true" /> se a caneta for capturada para <paramref name="element" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-173"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-174">Use o <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> método para garantir que `element` recebe eventos de caneta, mesmo quando o cursor vai para fora dos limites dos elementos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-174">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="a3ad0-175">Para liberar a caneta, chame <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> com o <xref:System.Windows.Input.CaptureMode> definido como <xref:System.Windows.Input.CaptureMode.None>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-175">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="a3ad0-176">O <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> retorn `false` se `element` não é visível ou habilitado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-176">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-177">O exemplo a seguir demonstra como registrar as coordenadas da caneta, mesmo se a caneta sai dos limites de um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-177">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a3ad0-178">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, e <xref:System.Windows.Input.Stylus.StylusMove> eventos estão conectados a manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-178">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Stylus.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-179">O elemento para o qual a caneta será capturada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-179">The element to capture the stylus to.</span></span></param>
        <param name="captureMode"><span data-ttu-id="a3ad0-180">Um dos valores de <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-180">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</span></span></param>
        <summary><span data-ttu-id="a3ad0-181">Captura a caneta para o elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-181">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="a3ad0-182"><see langword="true" /> se a caneta for capturada para <paramref name="element" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-182"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-183">Use o <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> método para garantir que `element` recebe eventos de caneta, mesmo quando o cursor vai para fora dos limites dos elementos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-183">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="a3ad0-184">Para liberar a caneta, chame <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> com o <xref:System.Windows.Input.CaptureMode> definido como <xref:System.Windows.Input.CaptureMode.None>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-184">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="a3ad0-185">O <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> retorn `false` se `element` não é visível ou habilitado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-185">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-186">O exemplo a seguir demonstra como registrar as coordenadas da caneta, mesmo se a caneta sai dos limites de um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-186">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a3ad0-187">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, e <xref:System.Windows.Input.Stylus.StylusMove> eventos estão conectados aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-187">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-188">Obtém o elemento ao qual a caneta está associada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-188">Gets the element to which the stylus is bound.</span></span></summary>
        <value><span data-ttu-id="a3ad0-189">O <see cref="T:System.Windows.IInputElement" /> ao qual a caneta está associada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-189">The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-190">O exemplo a seguir demonstra como garantir que a caneta é capturada não quando o usuário toca a caneta do digitalizador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-190">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</span></span> <span data-ttu-id="a3ad0-191">Este exemplo supõe que o <xref:System.Windows.Input.Stylus.PreviewStylusDown> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-191">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStylusDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusDevice CurrentStylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.StylusDevice CurrentStylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentStylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::StylusDevice ^ CurrentStylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentStylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-192">Obtém a caneta que representa a caneta que está sendo usada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-192">Gets the stylus that represents the stylus currently in use.</span></span></summary>
        <value><span data-ttu-id="a3ad0-193">O <see cref="T:System.Windows.Input.StylusDevice" /> que representa a caneta em uso no momento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-193">The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-194">O exemplo a seguir demonstra como apagar o texto selecionado com uma caneta invertida.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-194">The following example demonstrates how to erase the text that is selected with an inverted stylus.</span></span> <span data-ttu-id="a3ad0-195">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.StylusUpEvent> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusUpEvent> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[StylusSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-196">Obtém o elemento que está logo abaixo da caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-196">Gets the element that is directly beneath the stylus.</span></span></summary>
        <value><span data-ttu-id="a3ad0-197">O <see cref="T:System.Windows.IInputElement" /> que está diretamente abaixo da caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-197">The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-198">O exemplo a seguir demonstra como determinar qual elemento a caneta está posicionada sobre.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-198">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="a3ad0-199">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.StylusInAirMove> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-199">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsFlicksEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFlicksEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFlicksEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFlicksEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFlicksEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsFlicksEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-200">Um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual será determinado se movimentos estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-200">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</span></span></param>
        <summary><span data-ttu-id="a3ad0-201">Obtém o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-201">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="a3ad0-202"><see langword="true" /> se o elemento especificado tiver movimentos habilitados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-202"><see langword="true" /> if the specified element has flicks enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-203">No Windows Vista, um movimento, um dos gestos possíveis do sistema, é um traço curto, rápido, reto que pode ser mapeado para um comando de atalho ou navegação.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-203">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="a3ad0-204">Por padrão, os movimentos estão desabilitados na <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, e <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-204">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="a3ad0-205">Movimentos estão habilitados em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-205">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-206">O exemplo a seguir demonstra como determinar se os movimentos estão habilitados em um <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-206">The following example demonstrates how to determine whether flicks are enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#6)]
 [!code-vb[GestureSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsPressAndHoldEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPressAndHoldEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsPressAndHoldEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsPressAndHoldEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsPressAndHoldEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-207">Um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual será determinado se pressionar e manter pressionado está habilitado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-207">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</span></span></param>
        <summary><span data-ttu-id="a3ad0-208">Obtém o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-208">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="a3ad0-209"><see langword="true" /> se o elemento especificado tiver pressionar e manter pressionado habilitado; caso contrário, <see langword="false" />;</span><span class="sxs-lookup"><span data-stu-id="a3ad0-209"><see langword="true" /> if the specified element has press and hold enabled; otherwise, <see langword="false" />;</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-210">O exemplo a seguir demonstra como habilitar pressionar e manter um <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-210">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="a3ad0-211">Este exemplo supõe que haja uma <xref:System.Windows.Controls.Slider> chamado `horizontalSlider1`.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-211">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTapFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTapFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTapFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTapFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTapFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-212">Um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual será determinado se os comentários de toque estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-212">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</span></span></param>
        <summary><span data-ttu-id="a3ad0-213">Obtém o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-213">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="a3ad0-214"><see langword="true" /> se o elemento especificado tiver os comentários de toque habilitados; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-214"><see langword="true" /> if the specified element has tap feedback enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-215">No Windows Vista, uma pequena animação ocorre quando o usuário toca no controle.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-215">In Windows Vista, a short animation occurs when the user taps the control.</span></span>  <span data-ttu-id="a3ad0-216">Por padrão, os comentários de toque é desabilitado no <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-216">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="a3ad0-217">Ele é habilitado em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-217">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-218">O exemplo a seguir demonstra como determinar se os comentários de toque está habilitado em um <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-218">The following example demonstrates how to determine whether tap feedback is enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#5)]
 [!code-vb[GestureSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTouchFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTouchFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTouchFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-219">Um <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual será determinado se os comentários de toque recebido estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-219">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</span></span></param>
        <summary><span data-ttu-id="a3ad0-220">Obtém o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-220">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="a3ad0-221"><see langword="true" /> se os comentários de toque recebido estiver habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-221"><see langword="true" /> if touch input feedback is enabled, otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-222">O exemplo a seguir demonstra como determinar se os comentários de toque está habilitado em um <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-222">The following example demonstrates how to determine whether tap feedback is enabled on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#7)]
 [!code-vb[GestureSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" Usage="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-223">Ocorre quando um elemento captura os eventos da caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-223">Occurs when an element captures the stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-224">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-224">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-225">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-225">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-226">Eventos anexados são, essencialmente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-226">Attached events are, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> <span data-ttu-id="a3ad0-227">O [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-227">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-228">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-228">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-229">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-229">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-230">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-230">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-231">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-231">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.GotStylusCaptureEvent>|  
|<span data-ttu-id="a3ad0-232">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-232">Routing strategy</span></span>|<span data-ttu-id="a3ad0-233">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-233">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-234">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-234">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-235">O exemplo a seguir demonstra como alterar a cor do plano de fundo de um <xref:System.Windows.Controls.TextBox> quando o <xref:System.Windows.Controls.TextBox> captura e libera eventos de caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-235">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="a3ad0-236">Este exemplo assume que há uma caixa de texto chamada `textBox1`e que o <xref:System.Windows.Input.Stylus.GotStylusCapture> e <xref:System.Windows.Input.Stylus.LostStylusCapture> eventos estão conectados a manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-236">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-237">Identifica o evento <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-237">Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabled">
      <MemberSignature Language="C#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsFlicksEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="F#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" Usage="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-238">Obtém ou define um valor que se os movimentos estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-238">Gets or sets a value indicating whether flicks are enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-239">No [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], um movimento, um dos gestos possíveis do sistema, é um traço curto, rápido, reto que pode ser mapeado para um comando de atalho ou navegação.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="a3ad0-240">Por padrão, os movimentos estão desabilitados na <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, e <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-240">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="a3ad0-241">Movimentos estão habilitados em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-241">Flicks are enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsFlicksEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a3ad0-242">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="a3ad0-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-243">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-243">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsFlicksEnabledProperty>|  
|<span data-ttu-id="a3ad0-244">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="a3ad0-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="a3ad0-245">Nenhum</span><span class="sxs-lookup"><span data-stu-id="a3ad0-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-246">O exemplo a seguir demonstra como desabilitar movimentos em um <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-246">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsFlicksEnabled="False" ></Canvas>
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFlicksEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFlicksEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFlicksEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFlicksEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFlicksEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-247">Identifica a propriedade <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> anexada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-247">Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="F#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" Usage="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-248">Obtém ou define um valor que indica se a função pressionar e segurar está habilitada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-248">Gets or sets a values indicating whether press and hold is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-249">Pressione e segure mapeia para o botão direito do mouse em um mouse.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-249">Press and hold maps to a right-click on a mouse.</span></span> <span data-ttu-id="a3ad0-250">No [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] você pode desabilitar esse comportamento em elementos, se você prevê uma situação em que o usuário poderá armazenar a caneta eletrônica para baixo sem limitações simular o botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
<a name="dependencyPropertyInfo_IsPressAndHoldEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a3ad0-251">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="a3ad0-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-252">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-252">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty>|  
|<span data-ttu-id="a3ad0-253">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="a3ad0-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="a3ad0-254">Nenhum</span><span class="sxs-lookup"><span data-stu-id="a3ad0-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-255">O exemplo a seguir demonstra como habilitar pressionar e manter um <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-255">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span>  

```xaml
<Slider Name="horizontalSlider1" Stylus.IsPressAndHoldEnabled="True" />
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressAndHoldEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressAndHoldEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-256">Identifica a propriedade <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> anexada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-256">Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" Usage="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-257">Obtém ou define um valor que indica se comentários de toque estão habilitados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-257">Gets or sets whether a value indicating whether tap feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-258">No [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], uma pequena animação ocorre quando o usuário toca no controle.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="a3ad0-259">Por padrão, os comentários de toque é desabilitado no <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-259">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="a3ad0-260">Ele é habilitado em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-260">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTapFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a3ad0-261">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="a3ad0-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-262">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-262">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty>|  
|<span data-ttu-id="a3ad0-263">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="a3ad0-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="a3ad0-264">Nenhum</span><span class="sxs-lookup"><span data-stu-id="a3ad0-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-265">O exemplo a seguir desabilita os comentários de toque em um <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-265">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsTapFeedbackEnabled="False"></Canvas>
```
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTapFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTapFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-266">Identifica a propriedade <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> anexada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-266">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" Usage="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-267">Obtém ou define um valor que indica se os comentários de toque são habilitados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-267">Gets or sets whether a value indicating whether touch feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-268">No [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], uma pequena animação ocorre quando o usuário toca o controle com um dedo.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user touches the control with a finger.</span></span> <span data-ttu-id="a3ad0-269">Por padrão, os comentários de toque é desabilitado no <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-269">By default, touch feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="a3ad0-270">Ele é habilitado em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-270">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTouchFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a3ad0-271">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="a3ad0-271">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-272">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-272">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty>|  
|<span data-ttu-id="a3ad0-273">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="a3ad0-273">Metadata properties set to `true`</span></span>|<span data-ttu-id="a3ad0-274">Nenhum</span><span class="sxs-lookup"><span data-stu-id="a3ad0-274">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-275">O exemplo a seguir habilita os comentários de toque em um <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-275">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  

```xaml
<InkCanvas Name="inkCanvas1" Stylus.IsTouchFeedbackEnabled="True" />
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTouchFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTouchFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-276">Identifica a propriedade <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> anexada.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-276">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" Usage="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-277">Ocorre quando um elemento libera eventos de caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-277">Occurs when an element releases stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-278">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-278">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-279">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-279">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-280">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-280">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-281">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-281">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-282">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-282">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-283">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-283">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-284">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-284">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-285">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-285">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.LostStylusCaptureEvent>|  
|<span data-ttu-id="a3ad0-286">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-286">Routing strategy</span></span>|<span data-ttu-id="a3ad0-287">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-287">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-288">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-288">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-289">O exemplo a seguir demonstra como alterar a cor do plano de fundo de um <xref:System.Windows.Controls.TextBox> quando o <xref:System.Windows.Controls.TextBox> captura e libera eventos de caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-289">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="a3ad0-290">Este exemplo assume que há uma caixa de texto chamada `textBox1`e que o <xref:System.Windows.Input.Stylus.GotStylusCapture> e <xref:System.Windows.Input.Stylus.LostStylusCapture> eventos estão conectados aos manipuladores de eventos no exemplo.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-290">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-291">Identifica o evento <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-291">Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" Usage="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-292">Ocorre quando o usuário pressiona um dos botões na caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-292">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-293">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-293">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-294">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-294">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-295">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-295">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-296">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-296">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-297">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-297">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-298">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-298">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-299">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-299">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-300">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-300">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="a3ad0-301">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-301">Routing strategy</span></span>|<span data-ttu-id="a3ad0-302">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-302">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-303">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-303">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-304">O exemplo a seguir demonstra como determinar qual botão elevou o <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-304">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event.</span></span> <span data-ttu-id="a3ad0-305">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-305">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[StylusSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-306">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-306">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" Usage="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-307">Ocorre quando o usuário solta um dos botões na caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-307">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-308">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-308">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-309">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-309">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-310">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-310">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-311">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-311">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-312">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-312">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-313">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-313">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-314">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-315">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-315">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="a3ad0-316">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-316">Routing strategy</span></span>|<span data-ttu-id="a3ad0-317">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-317">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-318">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-318">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-319">O exemplo a seguir demonstra como determinar qual botão elevou o <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-319">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event.</span></span> <span data-ttu-id="a3ad0-320">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-320">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[StylusSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-321">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-321">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" Usage="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-322">Ocorre quando o usuário encosta a ponta da caneta no tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-322">Occurs when user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-323">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-323">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-324">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-324">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-325">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-325">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-326">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-326">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-327">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-328">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-329">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-330">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-330">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusDownEvent>|  
|<span data-ttu-id="a3ad0-331">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-331">Routing strategy</span></span>|<span data-ttu-id="a3ad0-332">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-332">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-333">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-334">O exemplo a seguir demonstra como garantir que a caneta é capturada não quando o usuário toca a caneta no Tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-334">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the tablet.</span></span> <span data-ttu-id="a3ad0-335">Este exemplo supõe que o <xref:System.Windows.Input.Stylus.PreviewStylusDown> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-335">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-336">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-336">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" Usage="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-337">Ocorre quando a caneta se move enquanto está dentro do alcance do tablet (mas sem tocá-lo).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-337">Occurs if the stylus moves while it is within range of (but not touching) the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-338">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-338">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-339">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-339">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-340">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-340">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-341">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-341">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-342">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-342">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-343">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-343">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-344">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-345">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-345">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="a3ad0-346">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-346">Routing strategy</span></span>|<span data-ttu-id="a3ad0-347">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-347">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-348">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-348">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-349">O exemplo a seguir demonstra como determinar qual elemento a caneta está posicionada sobre.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-349">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="a3ad0-350">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-350">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[StylusSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-351">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-351">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" Usage="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-352">Ocorre quando a caneta fica dentro do alcance do tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-352">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-353">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-353">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-354">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-354">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-355">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-355">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-356">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-356">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-357">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-357">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-358">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-358">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-359">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-359">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-360">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-360">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="a3ad0-361">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-361">Routing strategy</span></span>|<span data-ttu-id="a3ad0-362">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-362">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-363">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-363">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-364">O exemplo a seguir demonstra como determinar se a caneta está invertida.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-364">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="a3ad0-365">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusInRange> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-365">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusInRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[StylusSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-366">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-366">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" Usage="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-367">Ocorre quando a caneta se move enquanto está tocando o tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-367">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-368">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-369">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-369">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-370">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-370">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-371">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-371">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-372">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-372">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-373">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-373">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-374">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-375">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-375">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusMoveEvent>|  
|<span data-ttu-id="a3ad0-376">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-376">Routing strategy</span></span>|<span data-ttu-id="a3ad0-377">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-377">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-378">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-378">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-379">O exemplo demonstra como determinar a posição da caneta quando ele se move.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-379">The example demonstrates how to determine the position of the stylus when it moves.</span></span> <span data-ttu-id="a3ad0-380">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusMove> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-380">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusMove> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[StylusSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-381">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-381">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" Usage="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-382">Ocorre quando a caneta fica fora do alcance do tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-382">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-383">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-383">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-384">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-384">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-385">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-385">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-386">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-386">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-387">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-388">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-389">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-390">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-390">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="a3ad0-391">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-391">Routing strategy</span></span>|<span data-ttu-id="a3ad0-392">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-392">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-393">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-393">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-394">O exemplo a seguir demonstra como determinar se a caneta está invertida.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-394">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="a3ad0-395">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-395">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[StylusSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-396">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-396">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" Usage="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-397">Ocorre quando o usuário faz um gesto do sistema com essa caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-397">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-398">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-399">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-399">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-400">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-400">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-401">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-401">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-402">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-402">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-403">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-403">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-404">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-405">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-405">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="a3ad0-406">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-406">Routing strategy</span></span>|<span data-ttu-id="a3ad0-407">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-407">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-408">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-408">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-409">O exemplo a seguir demonstra como determinar o gesto do sistema que gerou o <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-409">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event.</span></span> <span data-ttu-id="a3ad0-410">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-410">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#17)]
 [!code-vb[StylusSamples#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-411">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-411">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" Usage="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-412">Ocorre quando o usuário levanta a caneta do tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-412">Occurs when the user lifts the stylus from the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-413">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-413">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-414">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-414">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-415">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-415">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-416">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-416">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-417">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-417">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-418">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-418">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-419">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-420">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-420">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusUpEvent>|  
|<span data-ttu-id="a3ad0-421">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-421">Routing strategy</span></span>|<span data-ttu-id="a3ad0-422">O túnel</span><span class="sxs-lookup"><span data-stu-id="a3ad0-422">Tunneling</span></span>|  
|<span data-ttu-id="a3ad0-423">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-423">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-424">O exemplo a seguir demonstra como determinar a posição da caneta quando o usuário levante-lo do tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-424">The following example demonstrates how to determine the position of the stylus when the user lifts it from the tablet.</span></span> <span data-ttu-id="a3ad0-425">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.PreviewStylusUp> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-425">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[StylusSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-426">Identifica o evento <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-426">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-427">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-427">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-428">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-428">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-429">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-429">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-430">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-430">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-431">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-431">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-432">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-432">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-433">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-433">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-434">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-434">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-435">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-435">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-436">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-437">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-437">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-438">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-438">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-439">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-439">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-440">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-440">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-441">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-441">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-442">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-442">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-443">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-443">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-444">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-444">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-445">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-445">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-446">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-446">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-447">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-447">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-448">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-449">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-449">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-450">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-450">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-451">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-451">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-452">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-452">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-453">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-453">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-454">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-454">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-455">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-455">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-456">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-456">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-457">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-457">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-458">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-458">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-459">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-459">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-460">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-461">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-461">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-462">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-462">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-463">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-463">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-464">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-464">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-465">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-465">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-466">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-466">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-467">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-467">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-468">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-468">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-469">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-469">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-470">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-470">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-471">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-471">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-472">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-472">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-473">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-473">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-474">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-474">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-475">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-475">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-476">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-476">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-477">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-477">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-478">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-478">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-479">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-479">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-480">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-480">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-481">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-481">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-482">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-482">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-483">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-483">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-484">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-484">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-485">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-485">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-486">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-486">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-487">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-487">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-488">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-488">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-489">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-489">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-490">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-490">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="a3ad0-491">O manipulador de eventos a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-491">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="a3ad0-492">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Stylus.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-492">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsFlicksEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFlicksEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFlicksEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFlicksEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsFlicksEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsFlicksEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-493">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual habilitar movimentos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-493">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</span></span></param>
        <param name="enabled"><span data-ttu-id="a3ad0-494"><see langword="true" /> para habilitar movimentos; <see langword="false" /> para desabilitar movimentos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-494"><see langword="true" /> to enable flicks; <see langword="false" /> to disable flicks.</span></span></param>
        <summary><span data-ttu-id="a3ad0-495">Obtém o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-495">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-496">No Windows Vista, um movimento, um dos gestos possíveis do sistema, é um traço curto, rápido, reto que pode ser mapeado para um comando de atalho ou navegação.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-496">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="a3ad0-497">Por padrão, os movimentos estão desabilitados na <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, e <xref:System.Windows.Controls.Primitives.ScrollBar>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-497">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="a3ad0-498">Movimentos estão habilitados em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-498">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-499">O exemplo a seguir demonstra como desabilitar movimentos em um <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-499">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#2)]
 [!code-vb[GestureSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsPressAndHoldEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsPressAndHoldEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsPressAndHoldEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsPressAndHoldEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsPressAndHoldEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-500">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual habilitar pressionar e manter pressionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-500">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</span></span></param>
        <param name="enabled"><span data-ttu-id="a3ad0-501"><see langword="true" /> para habilitar pressionar e manter pressionado; <see langword="false" /> para desabilitar pressionar e manter pressionado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-501"><see langword="true" /> to enable press and hold; <see langword="false" /> to disable press and hold.</span></span></param>
        <summary><span data-ttu-id="a3ad0-502">Define o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-502">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-503">Pressione e segure mapeia para o botão direito do mouse em um mouse.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-503">Press and hold maps to the right-click on a mouse.</span></span> <span data-ttu-id="a3ad0-504">No Windows Vista, você pode desativar esse comportamento em elementos, se você prevê uma situação em que o usuário poderá armazenar a caneta eletrônica para baixo sem limitações simular o botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-504">In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-505">O exemplo a seguir demonstra como habilitar pressionar e manter um <xref:System.Windows.Controls.Slider>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-505">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="a3ad0-506">Este exemplo supõe que haja uma <xref:System.Windows.Controls.Slider> chamado `horizontalSlider1`.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-506">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTapFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTapFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTapFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTapFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTapFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-507">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual habilitar os comentários de toque.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-507">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="a3ad0-508"><see langword="true" /> para habilitar os comentários de toque; <see langword="false" /> para desabilitar os comentários de toque.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-508"><see langword="true" /> to enable tap feedback; <see langword="false" /> to disable tap feedback.</span></span></param>
        <summary><span data-ttu-id="a3ad0-509">Define o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-509">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-510">No Windows Vista, uma pequena animação ocorre quando o usuário toca no controle.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-510">In Windows Vista, a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="a3ad0-511">Por padrão, os comentários de toque é desabilitado no <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-511">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="a3ad0-512">Ele é habilitado em todos os outros controles.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-512">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-513">O exemplo a seguir desabilita os comentários de toque em um <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-513">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#4)]
 [!code-vb[GestureSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTouchFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTouchFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTouchFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a3ad0-514">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> no qual habilitar os comentários de toque.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-514">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="a3ad0-515"><see langword="true" /> para habilitar os comentários de toque recebido; <see langword="false" /> para desabilitar os comentários de toque recebidos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-515"><see langword="true" /> to enable touch input feedback; <see langword="false" /> to disable touch input feedback.</span></span></param>
        <summary><span data-ttu-id="a3ad0-516">Define o valor da propriedade anexada <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-516">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3ad0-517">O exemplo a seguir habilita os comentários de toque em um <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-517">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#8)]
 [!code-vb[GestureSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" Usage="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-518">Ocorre quando o usuário pressiona um dos botões na caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-518">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-519">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-519">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-520">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-520">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-521">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-521">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-522">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-522">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-523">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-523">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-524">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-524">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-525">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-525">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-526">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-526">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonDownEvent>|  
|<span data-ttu-id="a3ad0-527">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-527">Routing strategy</span></span>|<span data-ttu-id="a3ad0-528">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-528">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-529">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-529">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-530">O exemplo a seguir demonstra como mostrar um menu de atalho quando o usuário pressiona o botão de rosca em uma caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-530">The following example demonstrates how to show a shortcut menu when the user presses the barrel button on a stylus.</span></span> <span data-ttu-id="a3ad0-531">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e um <xref:System.Windows.Controls.ContextMenu> chamado `textBoxContextMenu`e que o <xref:System.Windows.Input.Stylus.StylusButtonDown> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-531">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and a <xref:System.Windows.Controls.ContextMenu> called `textBoxContextMenu`, and that the <xref:System.Windows.Input.Stylus.StylusButtonDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[StylusSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-532">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-532">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" Usage="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-533">Ocorre quando o usuário solta um dos botões na caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-533">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-534">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-534">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-535">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-535">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-536">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-536">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-537">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-537">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-538">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-538">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-539">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-539">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-540">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-541">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-541">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonUpEvent>|  
|<span data-ttu-id="a3ad0-542">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-542">Routing strategy</span></span>|<span data-ttu-id="a3ad0-543">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-543">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-544">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-544">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-545">O exemplo a seguir demonstra como copiar o texto selecionado quando o usuário libera o botão de rosca em uma caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-545">The following example demonstrates how to copy the selected text when the user releases the barrel button on a stylus.</span></span> <span data-ttu-id="a3ad0-546">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusButtonUp> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-546">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[StylusSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-547">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-547">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" Usage="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-548">Ocorre quando o usuário encosta a ponta da caneta no tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-548">Occurs when the user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-549">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-549">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-550">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-550">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-551">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-551">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-552">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-552">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-553">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-553">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-554">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-554">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-555">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-556">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-556">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusDownEvent>|  
|<span data-ttu-id="a3ad0-557">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-557">Routing strategy</span></span>|<span data-ttu-id="a3ad0-558">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-558">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-559">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-559">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-560">O exemplo a seguir demonstra como registrar as coordenadas da caneta, mesmo se a caneta sai dos limites de um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-560">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a3ad0-561">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, e <xref:System.Windows.Input.Stylus.StylusMove> eventos estão conectados aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-561">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-562">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusDown" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-562">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="F#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" Usage="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-563">Ocorre quando o cursor da caneta entra nos limites de um elemento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-563">Occurs when the stylus cursor enters the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-564">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-564">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-565">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-565">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-566">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-566">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-567">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-567">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-568">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-568">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-569">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-569">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-570">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-571">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-571">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusEnterEvent>|  
|<span data-ttu-id="a3ad0-572">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-572">Routing strategy</span></span>|<span data-ttu-id="a3ad0-573">Direto</span><span class="sxs-lookup"><span data-stu-id="a3ad0-573">Direct</span></span>|  
|<span data-ttu-id="a3ad0-574">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-574">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-575">O exemplo a seguir demonstra como alterar a cor de um <xref:System.Windows.Controls.Button> quando o cursor da caneta entra e sai seus limites.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-575">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="a3ad0-576">Este exemplo supõe que haja uma <xref:System.Windows.Controls.Button> chamado `button1` e que o <xref:System.Windows.Input.Stylus.StylusEnter> e <xref:System.Windows.Input.Stylus.StylusLeave> eventos estão conectados aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-576">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-577">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-577">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" Usage="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-578">Ocorre quando a caneta se move enquanto está dentro do alcance do tablet (mas sem tocá-lo).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-578">Occurs when the stylus moves while it is in range of, but not touching, the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-579">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-579">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-580">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-580">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-581">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-581">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-582">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-582">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-583">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-583">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-584">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-584">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-585">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-586">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-586">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInAirMoveEvent>|  
|<span data-ttu-id="a3ad0-587">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-587">Routing strategy</span></span>|<span data-ttu-id="a3ad0-588">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-588">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-589">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-589">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-590">O exemplo a seguir demonstra como determinar qual elemento a caneta está posicionada sobre.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-590">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="a3ad0-591">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.StylusInAirMove> evento está conectado ao manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-591">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-592">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-592">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" Usage="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-593">Ocorre quando a caneta fica dentro do alcance do tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-593">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-594">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-594">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-595">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-595">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-596">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-596">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-597">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-597">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-598">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-598">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-599">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-599">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-600">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-601">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-601">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInRangeEvent>|  
|<span data-ttu-id="a3ad0-602">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-602">Routing strategy</span></span>|<span data-ttu-id="a3ad0-603">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-603">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-604">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-604">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-605">O exemplo a seguir demonstra como definir a <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> propriedade de um <xref:System.Windows.Controls.InkCanvas> para <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> quando a caneta está invertida.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-605">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of an <xref:System.Windows.Controls.InkCanvas> to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> when the stylus is inverted.</span></span> <span data-ttu-id="a3ad0-606">Este exemplo supõe que haja uma <xref:System.Windows.Controls.InkCanvas> chamado `inkCanvas1` e que o <xref:System.Windows.Input.Stylus.StylusInRange> evento está conectado aos manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-606">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusInRange> event is connected to the event handlers.</span></span> <span data-ttu-id="a3ad0-607">Para ver o cursor alterar, defina as <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> propriedade para `true` em `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-607">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#18)]
 [!code-vb[StylusSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-608">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-608">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" Usage="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-609">Ocorre quando o cursor da caneta sai dos limites de um elemento.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-609">Occurs when the stylus cursor leaves the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-610">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-610">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-611">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-611">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-612">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-612">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-613">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-613">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-614">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-614">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-615">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-615">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-616">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-616">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-617">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-617">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusLeaveEvent>|  
|<span data-ttu-id="a3ad0-618">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-618">Routing strategy</span></span>|<span data-ttu-id="a3ad0-619">Direto</span><span class="sxs-lookup"><span data-stu-id="a3ad0-619">Direct</span></span>|  
|<span data-ttu-id="a3ad0-620">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-620">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-621">O exemplo a seguir demonstra como alterar a cor de um <xref:System.Windows.Controls.Button> quando o cursor da caneta entra e sai seus limites.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-621">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="a3ad0-622">Este exemplo supõe que haja uma <xref:System.Windows.Controls.Button> chamado `button1` e que o <xref:System.Windows.Input.Stylus.StylusEnter> e <xref:System.Windows.Input.Stylus.StylusLeave> eventos estão conectados a manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-622">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-623">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-623">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" Usage="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-624">Ocorre quando a caneta se move enquanto está tocando o tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-624">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-625">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-625">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-626">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-626">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-627">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-627">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-628">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-628">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-629">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-629">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-630">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-630">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-631">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-631">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-632">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-632">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusMoveEvent>|  
|<span data-ttu-id="a3ad0-633">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-633">Routing strategy</span></span>|<span data-ttu-id="a3ad0-634">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-634">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-635">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-635">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-636">O exemplo a seguir demonstra como registrar as coordenadas da caneta, mesmo se a caneta sai dos limites de um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-636">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a3ad0-637">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, e <xref:System.Windows.Input.Stylus.StylusMove> eventos estão conectados a manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-637">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-638">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusMove" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-638">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" Usage="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-639">Ocorre quando a caneta fica fora do alcance do tablet.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-639">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-640">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-640">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-641">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-641">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-642">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-642">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-643">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-643">further expands an attached event's capabilities, allowing it to traverse a route.</span></span>  <span data-ttu-id="a3ad0-644">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-644">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-645">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-645">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-646">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-647">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-647">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusOutOfRangeEvent>|  
|<span data-ttu-id="a3ad0-648">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-648">Routing strategy</span></span>|<span data-ttu-id="a3ad0-649">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-649">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-650">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-650">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-651">O exemplo a seguir demonstra como alterar o cursor para uma seta quando a caneta fica fora do intervalo.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-651">The following example demonstrates how to change the cursor to an arrow when the stylus goes out of range.</span></span> <span data-ttu-id="a3ad0-652">Este exemplo supõe que haja uma <xref:System.Windows.Controls.InkCanvas> chamado `inkCanvas1` e que o <xref:System.Windows.Input.Stylus.StylusOutOfRange> evento está conectado a um manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-652">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusOutOfRange> event is connected to an event handler.</span></span> <span data-ttu-id="a3ad0-653">Para ver o cursor alterar, defina as <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> propriedade para `true` em `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-653">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#19)]
 [!code-vb[StylusSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-654">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-654">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" Usage="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-655">Ocorre quando o usuário faz um gesto do sistema com essa caneta.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-655">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-656">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-656">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-657">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-657">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-658">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-658">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-659">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-659">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-660">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-660">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-661">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-661">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-662">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-662">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-663">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-663">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusSystemGestureEvent>|  
|<span data-ttu-id="a3ad0-664">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-664">Routing strategy</span></span>|<span data-ttu-id="a3ad0-665">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-665">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-666">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-666">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-667">O exemplo a seguir demonstra como determinar o gesto do sistema que gerou o <xref:System.Windows.Input.Stylus.StylusSystemGesture> eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-667">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event.</span></span> <span data-ttu-id="a3ad0-668">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1` e que o <xref:System.Windows.Input.Stylus.StylusSystemGesture> evento está conectado a um manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-668">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event is connected to an event handler.</span></span>  
  
 [!code-csharp[StylusSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[StylusSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-669">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-669">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" Usage="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3ad0-670">Ocorre quando o usuário levanta a caneta do Tablet PC.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-670">Occurs when the user raises the stylus from the Tablet PC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-671">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-671">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-672">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-672">implements attached events as routed events.</span></span> <span data-ttu-id="a3ad0-673">Um evento anexado é, basicamente, um [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem usado para fazer referência a eventos que são tratados em objetos que não requerem, em si, definem os eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-673">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a3ad0-674">expande ainda mais recursos de um evento anexado, permitindo que ele atravessar uma rota.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-674">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="a3ad0-675">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, use um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-675">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="a3ad0-676">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a3ad0-676">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a3ad0-677">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-677">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a3ad0-678">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a3ad0-678">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusUpEvent>|  
|<span data-ttu-id="a3ad0-679">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="a3ad0-679">Routing strategy</span></span>|<span data-ttu-id="a3ad0-680">Propagação</span><span class="sxs-lookup"><span data-stu-id="a3ad0-680">Bubbling</span></span>|  
|<span data-ttu-id="a3ad0-681">delegado</span><span class="sxs-lookup"><span data-stu-id="a3ad0-681">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-682">O exemplo a seguir demonstra como registrar as coordenadas da caneta, mesmo se a caneta sai dos limites de um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-682">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a3ad0-683">Este exemplo supõe que haja uma <xref:System.Windows.Controls.TextBox> chamado `textBox1`e que o <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, e <xref:System.Windows.Input.Stylus.StylusMove> eventos estão conectados a manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-683">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3ad0-684">Identifica o evento <see cref="E:System.Windows.Input.Stylus.StylusUp" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-684">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Stylus.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3ad0-685">Sincroniza o cursor e a interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-685">Synchronizes the cursor and the user interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3ad0-686">Aplicativos talvez precise determinar o elemento no qual o cursor está localizado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-686">Applications may need to determine the element on which the cursor is located.</span></span> <span data-ttu-id="a3ad0-687">Se o aplicativo usa a animação, o <xref:System.Windows.Input.Stylus.DirectlyOver%2A> método pode retornar um elemento que foi removido do cursor.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-687">If the application uses animation, the <xref:System.Windows.Input.Stylus.DirectlyOver%2A> method might return an element that has moved out from under the cursor.</span></span> <span data-ttu-id="a3ad0-688">Chame <xref:System.Windows.Input.Stylus.Synchronize%2A> para ter certeza de que <xref:System.Windows.Input.Stylus.DirectlyOver%2A> retorna o elemento adequado.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-688">Call <xref:System.Windows.Input.Stylus.Synchronize%2A> to be sure that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the proper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3ad0-689">O exemplo a seguir demonstra como obter o elemento que está sob o cursor.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-689">The following example demonstrates how to get the element that is under the cursor.</span></span> <span data-ttu-id="a3ad0-690">Chamando <xref:System.Windows.Input.Stylus.Synchronize%2A> garante que <xref:System.Windows.Input.Stylus.DirectlyOver%2A> retorna o elemento correto.</span><span class="sxs-lookup"><span data-stu-id="a3ad0-690">Calling <xref:System.Windows.Input.Stylus.Synchronize%2A> ensures that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the correct element.</span></span>  
  
 [!code-csharp[StylusSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#24)]
 [!code-vb[StylusSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#24)]  
[!code-csharp[StylusSamples#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#25)]
[!code-vb[StylusSamples#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>