<Type Name="ManipulationBoundaryFeedbackEventArgs" FullName="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb16129cf522b4dc4e71d8c34a5f756ad32dcb22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30654640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationBoundaryFeedbackEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationBoundaryFeedbackEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationBoundaryFeedbackEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationBoundaryFeedbackEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cd2be-101">Fornece dados para o evento de <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> .</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd2be-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BoundaryFeedback">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta BoundaryFeedback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta BoundaryFeedback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundaryFeedback As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ BoundaryFeedback { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd2be-102">Obtém a parte não usada da manipulação direta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd2be-102">Gets the unused portion of the direct manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd2be-103">Parte não usada a manipulação direta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd2be-103">The unused portion of the direct manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd2be-104">Obtém o contêiner a que a propriedade <see cref="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback" /> é relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd2be-104">Gets the container that the <see cref="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback" /> property is relative to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd2be-105">O contêiner a que a propriedade <see cref="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback" /> é relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd2be-105">The container that the <see cref="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback" /> property is relative to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd2be-106">Obtém uma coleção de objetos que representa os contatos de toque da manipulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd2be-106">Gets a collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd2be-107">Uma coleção de objetos que representa o contata o toque para a manipulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd2be-107">A collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>