<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75d0a8febbde12a538aa8f3a75dd36c3555615da" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52232741" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Associa um <see cref="T:System.Windows.Input.KeyGesture" /> a um <see cref="T:System.Windows.Input.RoutedCommand" /> (ou outra implementação <see cref="T:System.Windows.Input.ICommand" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.Input.KeyBinding> associa um <xref:System.Windows.Input.KeyGesture> com um <xref:System.Windows.Input.ICommand>, como um <xref:System.Windows.Input.RoutedCommand>. <xref:System.Windows.Input.RoutedCommand> é a implementação principal do <xref:System.Windows.Input.ICommand> a interface para o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dos comandos de sistema.  Em geral, quando o <xref:System.Windows.Input.KeyGesture> é executado o comando é invocado, embora o comportamento do comando adicional é influenciado por fatores específicos do comando, como o <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> valor.  Para obter mais informações sobre comandos, consulte [Visão geral de comandos](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 Com a exceção as teclas de função e as teclas do teclado numérico, válidas <xref:System.Windows.Input.KeyGesture> deve conter exatamente um <xref:System.Windows.Input.Key> e um ou mais <xref:System.Windows.Input.ModifierKeys>.  Teclas de função e teclas do teclado numérico não exigem uma tecla modificadora para ser um válido <xref:System.Windows.Input.KeyGesture>. É possível especificar um inválido <xref:System.Windows.Input.KeyGesture> e uma <xref:System.Windows.Input.KeyBinding> inválido associado gesto, por meio do [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ou código. Por exemplo, não há nenhuma validação que impede a criar e associar um <xref:System.Windows.Input.KeyGesture> que contém somente uma chave correspodência, ou somente modificadores, mas nenhuma chave. Tal um <xref:System.Windows.Input.KeyBinding> nunca tentar invocar o comando associado.  
  
 Ao definir uma <xref:System.Windows.Input.KeyBinding> na [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] há duas maneiras para especificar o <xref:System.Windows.Input.KeyGesture>. A primeira maneira para estabelecer uma <xref:System.Windows.Input.KeyBinding> na [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] é definir o <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo do <xref:System.Windows.Input.KeyBinding> elemento, que permite uma sintaxe especificar modificadores e as chaves como uma única cadeia de caracteres, por exemplo "CTRL + P". A segunda maneira é definir a <xref:System.Windows.Input.KeyBinding.Key%2A> atributo e o <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atributos do <xref:System.Windows.Input.KeyBinding> elemento. As duas maneiras de configuração de <xref:System.Windows.Input.KeyGesture> são equivalentes e modificar o mesmo objeto subjacente, mas haverá um conflito se ambos são usados.  No caso de quando o <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>e o <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos são definidos, o atributo que é definido pela última vez será usado para o <xref:System.Windows.Input.KeyGesture>. É possível ter situações onde, por exemplo um <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto pela última vez serão substituir apenas o componente de chave de um gesto anterior, mas deixar os modificadores do gesto a mesma. Em geral, é recomendável que você use apenas o <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributos de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; isso irá evitar ambiguidade, fornece a sintaxe mais simplificada e fornece a representação mais simples para serialização.  
  
 Um <xref:System.Windows.Input.KeyBinding> podem ser definidas em um objeto específico ou no nível de classe, registrando um <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> sobre o <xref:System.Windows.Input.CommandManager> classe. A maneira mais comum para definir um <xref:System.Windows.Input.KeyBinding> está dentro do modelo de controle, definindo o <xref:System.Windows.UIElement.InputBindings%2A> propriedade na [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] declarando uma ou mais <xref:System.Windows.Input.MouseBinding> ou <xref:System.Windows.Input.KeyBinding> elementos.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Windows.Input.KeyBinding> e adiciona-o para o <xref:System.Windows.Input.InputBindingCollection> da janela de raiz.  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">O comando a ser associado a <paramref name="gesture" />.</param>
        <param name="gesture">A combinação de teclas a associar a <paramref name="command" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyBinding" /> usando o <see cref="T:System.Windows.Input.ICommand" /> e <see cref="T:System.Windows.Input.KeyGesture" /> especificados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" /> ou <paramref name="gesture" /> é <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">O comando a ser invocado.</param>
        <param name="key">A tecla a ser associada a <paramref name="command" />.</param>
        <param name="modifiers">Os modificadores a serem associados a <paramref name="command" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyBinding" /> usando o <see cref="T:System.Windows.Input.ICommand" /> especificado e o <see cref="T:System.Windows.Input.Key" /> e o <see cref="T:System.Windows.Input.ModifierKeys" /> especificados que serão convertidos em um <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma instância de um <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <returns>O novo objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o gesto associado a essa <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>A sequência de teclas. O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Com exceção de chaves de função e o teclado numérico, uma <xref:System.Windows.Input.KeyGesture> deve conter um <xref:System.Windows.Input.Key> e um ou mais <xref:System.Windows.Input.ModifierKeys>.  
  
   
  
## Examples  
 O exemplo a seguir mostra como associar um <xref:System.Windows.Input.KeyGesture> para um <xref:System.Windows.Input.RoutedCommand> usando um <xref:System.Windows.Input.KeyBinding> (os exemplos de código e marcação especificar chaves diferentes, mas caso contrário, são equivalentes).  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">o valor para o qual o <paramref name="gesture" /> está sendo definido não é um <see cref="T:System.Windows.Input.KeyGesture" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a <see cref="T:System.Windows.Input.Key" /> do <see cref="T:System.Windows.Input.KeyGesture" /> associado a essa <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>A parte principal do <see cref="T:System.Windows.Input.KeyGesture" />. O valor padrão é <see cref="F:System.Windows.Input.Key.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Com exceção de chaves de função e o teclado numérico, uma <xref:System.Windows.Input.KeyGesture> deve conter um <xref:System.Windows.Input.Key> e um ou mais <xref:System.Windows.Input.ModifierKeys>.  
  
 Ao definir uma <xref:System.Windows.Input.KeyBinding> na [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] há duas maneiras para especificar o <xref:System.Windows.Input.KeyGesture>. A primeira maneira para estabelecer uma <xref:System.Windows.Input.KeyBinding> na [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] é definir o <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo do <xref:System.Windows.Input.KeyBinding> elemento, que permite uma sintaxe especificar modificadores e as chaves como uma única cadeia de caracteres, por exemplo "CTRL + P". A segunda maneira é definir a <xref:System.Windows.Input.KeyBinding.Key%2A> atributo e o <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atributos do <xref:System.Windows.Input.KeyBinding> elemento. As duas maneiras de configuração de <xref:System.Windows.Input.KeyGesture> são equivalentes e modificar o mesmo objeto subjacente, mas haverá um conflito se ambos são usados.  No caso de quando o <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>e o <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos são definidos, o atributo que é definido pela última vez será usado para o <xref:System.Windows.Input.KeyGesture>. É possível ter situações onde, por exemplo um <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto pela última vez serão substituir apenas o componente de chave de um gesto anterior, mas deixar os modificadores do gesto a mesma. Em geral, é recomendável que você use apenas o <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributos de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; isso irá evitar ambiguidade, fornece a sintaxe mais simplificada e fornece a representação mais simples para serialização.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Input.KeyBinding.Key" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a <see cref="T:System.Windows.Input.ModifierKeys" /> do <see cref="T:System.Windows.Input.KeyGesture" /> associado a essa <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <value>As teclas modificadoras do <see cref="T:System.Windows.Input.KeyGesture" />.  O valor padrão é <see cref="F:System.Windows.Input.ModifierKeys.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Com exceção de chaves de função e o teclado numérico, uma <xref:System.Windows.Input.KeyGesture> deve conter um <xref:System.Windows.Input.Key> e um ou mais <xref:System.Windows.Input.ModifierKeys>.  
  
 Ao definir uma <xref:System.Windows.Input.KeyBinding> na [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] há duas maneiras para especificar o <xref:System.Windows.Input.KeyGesture>. A primeira maneira para estabelecer uma <xref:System.Windows.Input.KeyBinding> na [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] é definir o <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo do <xref:System.Windows.Input.KeyBinding> elemento, que permite uma sintaxe especificar modificadores e as chaves como uma única cadeia de caracteres, por exemplo "CTRL + P". A segunda maneira é definir a <xref:System.Windows.Input.KeyBinding.Key%2A> atributo e o <xref:System.Windows.Input.KeyBinding.Modifiers%2A> atributos do <xref:System.Windows.Input.KeyBinding> elemento. As duas maneiras de configuração de <xref:System.Windows.Input.KeyGesture> são equivalentes e modificar o mesmo objeto subjacente, mas haverá um conflito se ambos são usados.  No caso de quando o <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>e o <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos são definidos, o atributo que é definido pela última vez será usado para o <xref:System.Windows.Input.KeyGesture>. É possível ter situações onde, por exemplo um <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto pela última vez serão substituir apenas o componente de chave de um gesto anterior, mas deixar os modificadores do gesto a mesma. Em geral, é recomendável que você use apenas o <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributos de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; isso irá evitar ambiguidade, fornece a sintaxe mais simplificada e fornece a representação mais simples para serialização.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Uso do Atributo XAML  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *oneOrMoreModifierKeys*  
 Um ou mais teclas modificadoras, definidas pelo <xref:System.Windows.Input.ModifierKeys> enumeração, delimitada por um caractere "+".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>