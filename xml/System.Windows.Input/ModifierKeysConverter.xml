<Type Name="ModifierKeysConverter" FullName="System.Windows.Input.ModifierKeysConverter">
  <TypeSignature Language="C#" Value="public class ModifierKeysConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModifierKeysConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ModifierKeysConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ModifierKeysConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModifierKeysConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5061e-101">Converte um objeto <see cref="T:System.Windows.Input.ModifierKeys" /> de e em outros tipos.</span><span class="sxs-lookup"><span data-stu-id="5061e-101">Converts a <see cref="T:System.Windows.Input.ModifierKeys" /> object to and from other types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5061e-102">O <xref:System.Windows.Input.ModifierKeysConverter> converte para e de um <xref:System.String> usando o caractere "+" como o delimitador.</span><span class="sxs-lookup"><span data-stu-id="5061e-102">The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the "+" character as the delimiter.</span></span>  <span data-ttu-id="5061e-103">Por exemplo, a cadeia de caracteres `Control+ALT` será convertida em uma <xref:System.Windows.Input.ModifierKeys> objeto consiste de <xref:System.Windows.Input.ModifierKeys.Control> e <xref:System.Windows.Input.ModifierKeys.Alt> chaves.</span><span class="sxs-lookup"><span data-stu-id="5061e-103">For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> object consisting of the <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.ModifierKeys.Alt> keys.</span></span> <span data-ttu-id="5061e-104">Esse comportamento é diferente do padrão XAML enumeração de nível de analisador a combinação de caracteres de ",".</span><span class="sxs-lookup"><span data-stu-id="5061e-104">This behavior differs from the default XAML parser-level enumeration combine character of ",".</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModifierKeysConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ModifierKeysConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5061e-105">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</span><span class="sxs-lookup"><span data-stu-id="5061e-105">Initializes a new instance of the <see cref="T:System.Windows.Input.ModifierKeysConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5061e-106">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</span><span class="sxs-lookup"><span data-stu-id="5061e-106">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="5061e-107">O tipo que está sendo avaliado para conversão.</span><span class="sxs-lookup"><span data-stu-id="5061e-107">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="5061e-108">Determina se um objeto do tipo especificado pode ser convertido em uma instância do <see cref="T:System.Windows.Input.ModifierKeys" />, usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="5061e-108">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ModifierKeys" />, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="5061e-109"><see langword="true" /> se <paramref name="sourceType" /> for do tipo <see cref="T:System.String" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5061e-109"><see langword="true" /> if <paramref name="sourceType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5061e-110">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</span><span class="sxs-lookup"><span data-stu-id="5061e-110">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5061e-111">O tipo que está sendo avaliado para conversão.</span><span class="sxs-lookup"><span data-stu-id="5061e-111">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="5061e-112">Determina se uma instância do <see cref="T:System.Windows.Input.ModifierKeys" /> pode ser convertida no tipo especificado, usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="5061e-112">Determines whether an instance of <see cref="T:System.Windows.Input.ModifierKeys" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="5061e-113"><see langword="true" /> se <paramref name="destinationType" /> for do tipo <see cref="T:System.String" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5061e-113"><see langword="true" /> if <paramref name="destinationType" /> is type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5061e-114">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</span><span class="sxs-lookup"><span data-stu-id="5061e-114">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="5061e-115">Informações específicas à cultura.</span><span class="sxs-lookup"><span data-stu-id="5061e-115">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="5061e-116">O objeto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="5061e-116">The object to convert.</span></span></param>
        <summary><span data-ttu-id="5061e-117">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Input.ModifierKeys" />, usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="5061e-117">Attempts to convert the specified object to a <see cref="T:System.Windows.Input.ModifierKeys" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5061e-118">O objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="5061e-118">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5061e-119">O <xref:System.Windows.Input.ModifierKeysConverter> converte para e de um <xref:System.String> usando a chave "+" como o delimitador.</span><span class="sxs-lookup"><span data-stu-id="5061e-119">The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter.</span></span>  <span data-ttu-id="5061e-120">Por exemplo, a cadeia de caracteres `Control+ALT` será convertida em uma <xref:System.Windows.Input.ModifierKeys> consiste de <xref:System.Windows.Input.ModifierKeys.Control> e <xref:System.Windows.Input.ModifierKeys.Alt> chaves.</span><span class="sxs-lookup"><span data-stu-id="5061e-120">For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.ModifierKeys.Alt> keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5061e-121"><paramref name="source" /> não pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="5061e-121"><paramref name="source" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5061e-122">Um contexto de formato que fornece informações sobre o ambiente do qual este conversor está sendo invocado.</span><span class="sxs-lookup"><span data-stu-id="5061e-122">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="5061e-123">Informações específicas à cultura.</span><span class="sxs-lookup"><span data-stu-id="5061e-123">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="5061e-124">O objeto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="5061e-124">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="5061e-125">O tipo no qual converter o objeto.</span><span class="sxs-lookup"><span data-stu-id="5061e-125">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="5061e-126">Tenta converter um <see cref="T:System.Windows.Input.ModifierKeys" /> no tipo especificado, usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="5061e-126">Attempts to convert a <see cref="T:System.Windows.Input.ModifierKeys" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="5061e-127">O objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="5061e-127">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5061e-128">`destinationType` deve ser <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="5061e-128">`destinationType` must be <xref:System.String>.</span></span>  
  
 <span data-ttu-id="5061e-129">O <xref:System.Windows.Input.ModifierKeysConverter> converte para e de um <xref:System.String> usando a chave "+" como o delimitador.</span><span class="sxs-lookup"><span data-stu-id="5061e-129">The <xref:System.Windows.Input.ModifierKeysConverter> converts to and from a <xref:System.String> using the "+" key as the delimiter.</span></span>  <span data-ttu-id="5061e-130">Por exemplo, a cadeia de caracteres `Control+ALT` será convertida em uma <xref:System.Windows.Input.ModifierKeys> consiste de <xref:System.Windows.Input.ModifierKeys.Control> e <xref:System.Windows.Input.ModifierKeys.Alt> chaves.</span><span class="sxs-lookup"><span data-stu-id="5061e-130">For example, the string `Control+ALT` would be converted into a <xref:System.Windows.Input.ModifierKeys> consisting of the <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.ModifierKeys.Alt> keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5061e-131"><paramref name="destinationType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5061e-131"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="5061e-132"><paramref name="value" /> não é mapeado para um <see cref="T:System.Windows.Input.ModifierKeys" /> válido.</span><span class="sxs-lookup"><span data-stu-id="5061e-132"><paramref name="value" /> does not map to a valid <see cref="T:System.Windows.Input.ModifierKeys" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5061e-133"><paramref name="value" /> não pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="5061e-133"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedModifierKeys">
      <MemberSignature Language="C#" Value="public static bool IsDefinedModifierKeys (System.Windows.Input.ModifierKeys modifierKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedModifierKeys(valuetype System.Windows.Input.ModifierKeys modifierKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedModifierKeys(System::Windows::Input::ModifierKeys modifierKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifierKeys" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="modifierKeys"><span data-ttu-id="5061e-134">O valor para verificar a validade.</span><span class="sxs-lookup"><span data-stu-id="5061e-134">The value to check for validity.</span></span></param>
        <summary><span data-ttu-id="5061e-135">Determina se o valor especificado é um valor <see cref="T:System.Windows.Input.ModifierKeys" /> válido.</span><span class="sxs-lookup"><span data-stu-id="5061e-135">Determines whether the specified value is a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="5061e-136"><see langword="true" /> se a entrada for um valor <see cref="T:System.Windows.Input.ModifierKeys" /> válido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5061e-136"><see langword="true" /> if input is a valid <see cref="T:System.Windows.Input.ModifierKeys" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>