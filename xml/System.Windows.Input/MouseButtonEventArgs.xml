<Type Name="MouseButtonEventArgs" FullName="System.Windows.Input.MouseButtonEventArgs">
  <TypeSignature Language="C#" Value="public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseButtonEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseButtonEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseButtonEventArgs : System::Windows::Input::MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7ed53-101">Fornece dados para eventos relacionados ao botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ed53-101">Provides data for mouse button related events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ed53-102"><xref:System.Windows.Input.MouseButtonEventArgs> é usado com os seguintes eventos: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>e o túnel de eventos correspondente.</span><span class="sxs-lookup"><span data-stu-id="7ed53-102"><xref:System.Windows.Input.MouseButtonEventArgs> is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events.</span></span>  
  
 <span data-ttu-id="7ed53-103">O <xref:System.Windows.Input.Mouse> classe fornece métodos e propriedades adicionais para determinar o estado do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ed53-103">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ed53-104">O exemplo a seguir cria um manipulador de eventos de botão do mouse que muda a cor do objeto que gerou o evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-104">The following example creates a mouse button event handler that changes the color of the object that raised the event.</span></span>  <span data-ttu-id="7ed53-105">A cor escolhida depende do botão do mouse que foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ed53-105">The color chosen depends on the mouse button which was pressed.</span></span>  <span data-ttu-id="7ed53-106">O <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> propriedade é verificada para determinar qual botão foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ed53-106">The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="T:System.Windows.Input.MouseAction" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ed53-107">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="7ed53-107">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="7ed53-108">O dispositivo de Mouse lógico associado a este evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-108">The logical Mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="7ed53-109">A hora em que ocorreu a entrada.</span><span class="sxs-lookup"><span data-stu-id="7ed53-109">The time when the input occurred.</span></span></param>
        <param name="button"><span data-ttu-id="7ed53-110">O botão do mouse cujo estado está sendo descrito.</span><span class="sxs-lookup"><span data-stu-id="7ed53-110">The mouse button whose state is being described.</span></span></param>
        <summary><span data-ttu-id="7ed53-111">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> usando o <see cref="T:System.Windows.Input.MouseDevice" />, o carimbo de data/hora e o <see cref="T:System.Windows.Input.MouseButton" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="7ed53-111">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class by using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, and <see cref="T:System.Windows.Input.MouseButton" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button, System::Windows::Input::StylusDevice ^ stylusDevice);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="7ed53-112">O dispositivo de mouse lógico associado a este evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-112">The logical mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="7ed53-113">A hora em que o evento ocorreu.</span><span class="sxs-lookup"><span data-stu-id="7ed53-113">The time the event occurred.</span></span></param>
        <param name="button"><span data-ttu-id="7ed53-114">O botão associado a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-114">The button associated with this event.</span></span></param>
        <param name="stylusDevice"><span data-ttu-id="7ed53-115">O dispositivo de caneta associado a este evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-115">The stylus device associated with this event.</span></span></param>
        <summary><span data-ttu-id="7ed53-116">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> usando o <see cref="T:System.Windows.Input.MouseDevice" />, o carimbo de data/hora, o <see cref="T:System.Windows.Input.MouseButton" /> e o <see cref="T:System.Windows.Input.StylusDevice" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="7ed53-116">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class by using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, <see cref="T:System.Windows.Input.MouseButton" />, and <see cref="T:System.Windows.Input.StylusDevice" />.</span></span>  <span data-ttu-id="7ed53-117">.</span><span class="sxs-lookup"><span data-stu-id="7ed53-117">.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonState As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState ButtonState { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ed53-118">Obtém o estado do botão associado ao evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-118">Gets the state of the button associated with the event.</span></span></summary>
        <value><span data-ttu-id="7ed53-119">O estado em que o botão está.</span><span class="sxs-lookup"><span data-stu-id="7ed53-119">The state the button is in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ed53-120">O <xref:System.Windows.Input.Mouse> classe fornece métodos e propriedades adicionais para determinar o estado do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ed53-120">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ed53-121">O exemplo a seguir cria um manipulador de eventos de botão do mouse que muda a cor do objeto que manipula o evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-121">The following example creates a mouse button event handler that changes the color of the object that handles the event.</span></span>  <span data-ttu-id="7ed53-122">A cor que é escolhida depende se o botão do mouse foi pressionado ou liberado.</span><span class="sxs-lookup"><span data-stu-id="7ed53-122">The color that is chosen depends on whether the mouse button was pressed or released.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]
 [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsbuttonstatepressed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ChangedButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButton ChangedButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButton ChangedButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangedButton As MouseButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButton ChangedButton { System::Windows::Input::MouseButton get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ed53-123">Obtém o botão associado ao evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-123">Gets the button associated with the event.</span></span></summary>
        <value><span data-ttu-id="7ed53-124">O botão que foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ed53-124">The button which was pressed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ed53-125">O <xref:System.Windows.Input.Mouse> classe fornece métodos e propriedades adicionais para determinar o estado do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ed53-125">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ed53-126">O exemplo a seguir cria um manipulador de eventos de botão do mouse que muda a cor de um objeto dependendo de qual foi pressionado o botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ed53-126">The following example creates a mouse button event handler that changes the color of an object depending on the mouse button which was pressed.</span></span>  <span data-ttu-id="7ed53-127">O <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> propriedade é verificada para determinar qual botão foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ed53-127">The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ClickCount">
      <MemberSignature Language="C#" Value="public int ClickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClickCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClickCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ed53-128">Obtém o número de vezes que o botão recebeu um clique.</span><span class="sxs-lookup"><span data-stu-id="7ed53-128">Gets the number of times the button was clicked.</span></span></summary>
        <value><span data-ttu-id="7ed53-129">O número de vezes que o botão do mouse recebeu um clique.</span><span class="sxs-lookup"><span data-stu-id="7ed53-129">The number of times the mouse button was clicked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ed53-130">Um uso de <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> é determinar se um clique duplo ocorreu.</span><span class="sxs-lookup"><span data-stu-id="7ed53-130">One use of <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is to determine whether a double mouse click has occurred.</span></span>  <span data-ttu-id="7ed53-131">Algumas classes expõem eventos de um clique duplo, como o <xref:System.Windows.Controls.Control.MouseDoubleClick> evento no <xref:System.Windows.Controls.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="7ed53-131">Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class.</span></span> <span data-ttu-id="7ed53-132">Quando um evento de clique duplo não é exposto em uma classe, um clique duplo pode ser detectado usando o <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> propriedade nos dados de evento.</span><span class="sxs-lookup"><span data-stu-id="7ed53-132">When a double click event is not exposed on a class, a double click can be detected by using the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property on the event data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ed53-133">O exemplo a seguir cria um <xref:System.Windows.Input.MouseButtonEventHandler> que determina se um clique único, duplo ou triplo ocorreu.</span><span class="sxs-lookup"><span data-stu-id="7ed53-133">The following example creates a <xref:System.Windows.Input.MouseButtonEventHandler> which determines if a single, double, or triple click occurred.</span></span>  <span data-ttu-id="7ed53-134"><xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> propriedade é usada para determinar o número de cliques.</span><span class="sxs-lookup"><span data-stu-id="7ed53-134"><xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property is used to determine the number of clicks.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseclickcountdoubleclick)]
 [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseclickcountdoubleclick)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="7ed53-135">O manipulador genérico a ser chamado de uma forma específica ao tipo.</span><span class="sxs-lookup"><span data-stu-id="7ed53-135">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="7ed53-136">O destino no qual chamar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="7ed53-136">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="7ed53-137">Invoca manipuladores de eventos em uma forma específica de tipo, o que pode aumentar a eficiência do sistema de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ed53-137">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ed53-138">Essa implementação converte o manipulador genérico como um <xref:System.Windows.Input.MouseEventHandler> e, em seguida, invoca.</span><span class="sxs-lookup"><span data-stu-id="7ed53-138">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it.</span></span> <span data-ttu-id="7ed53-139">Para obter detalhes sobre esse padrão de implementação e os motivos para ele, consulte <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> e [visão geral sobre eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ed53-139">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
  </Members>
</Type>