<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53db9f986636f3d10b370f1e9e248937fbe4827b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507886" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">O objeto em que o manipulador de eventos está anexado.</param>
    <param name="e">Os dados do evento.</param>
    <summary>Representa o método que manipulará os eventos roteados <see cref="E:System.Windows.Input.CommandBinding.Executed" /> e <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, bem como os eventos anexados relacionados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este delegado contém a lógica de implementação para um <xref:System.Windows.Input.RoutedCommand>.  Separando a lógica de implementação do comando permite que o comando a ser invocado de origens diferentes e tipos e permite a centralização da lógica de comando.  
  
 Este delegado também é usado para <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> e <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, que são anexados a eventos de <xref:System.Windows.Input.CommandManager> classe que implementa muito da infraestrutura de comando. Mas manipuladores mais práticos tratará o <xref:System.Windows.Input.CommandBinding.Executed> eventos de um determinado <xref:System.Windows.Input.CommandBinding>, em vez de trabalhar no <xref:System.Windows.Input.CommandManager> nível.  
  
 Em <xref:System.Windows.Input.ExecutedRoutedEventArgs>, as propriedades a seguir geralmente são de interesse quando você escreve um manipulador de eventos para um evento roteado que os resultados de um comando executado:  
  
-   <xref:System.Windows.RoutedEventArgs.Source%2A> relata o destino onde o comando foi executado. Quando o comando for executado, você também pode considerar o <xref:System.Windows.RoutedEventArgs.Source%2A> mais geralmente em roteados termos de evento, como o objeto que disparou um evento roteado.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> informa o comando a ser executado. Essa propriedade é útil se você usar associações de comandos e se você escrever manipuladores que potencialmente lidar com vários comandos.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> informa os parâmetros de comando específico que foram passados pelo comando de execução. Nem todos os comandos usam ou esperam parâmetros específicos de comando.  
  
-   <xref:System.Windows.RoutedEventArgs.Handled%2A> informa se o evento roteado que resultaram do comando executado já foi definido por um elemento diferente no caminho. Para manipuladores de eventos roteados, é recomendável ter que fazer um trabalho significativo ao manipular o evento ao definir manipuladores <xref:System.Windows.RoutedEventArgs.Handled%2A> para `true`. Isso impede que os manipuladores típicos para o evento tratamento de evento mais novamente na rota. Para obter mais informações sobre como tratar eventos roteados, consulte [marcar eventos roteados como Handled e tratamento de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Este delegado também representa manipuladores para <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> e <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, que são anexados a eventos de <xref:System.Windows.Input.CommandManager> classe que implementa muito da infraestrutura de comando. Mas manipuladores mais práticos tratará o <xref:System.Windows.Input.CommandBinding.Executed> eventos de um determinado <xref:System.Windows.Input.CommandBinding>, em vez de trabalhar no <xref:System.Windows.Input.CommandManager> nível.  
  
 Para obter mais informações sobre comandos, consulte [Visão geral dos comandos](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
   
  
## Examples  
 Este exemplo cria um <xref:System.Windows.Input.ExecutedRoutedEventHandler> que define uma propriedade visual no destino quando o comando é executado. O exemplo também inclui o <xref:System.Windows.Input.CanExecuteRoutedEventHandler> para o mesmo comando.  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>