<Type Name="TraversalRequest" FullName="System.Windows.Input.TraversalRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df61e30f0edeefdda87f03a98a308dd4a18acfd0" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52371543" /></Metadata><TypeSignature Language="C#" Value="public class TraversalRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TraversalRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TraversalRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class TraversalRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraversalRequest" />
  <TypeSignature Language="F#" Value="type TraversalRequest = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa uma solicitação para mover o foco para outro controle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada como um parâmetro de entrada para o <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType> método. O <xref:System.Windows.UIElement.MoveFocus%2A> o método tem uma substituição de nível de estrutura do WPF que fornece uma implementação mais prática (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType>), bem como uma implementação paralela na <xref:System.Windows.ContentElement> e <xref:System.Windows.FrameworkContentElement>. Você normalmente irá definir propriedades em <xref:System.Windows.Input.TraversalRequest> para personalizar o comportamento de foco quando você solicita que o foco ser movido para outro elemento.  
  
 Essa classe também é usada como parâmetros de entrada para os seguintes métodos:  
  
-   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>e implementações de método que são usadas para interoperação (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).  
  
-   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>.  
  
   
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Windows.Input.TraversalRequest> da instância como entrada para um <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> chamar.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.FocusNavigationDirection focusNavigationDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraversalRequest(System::Windows::Input::FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TraversalRequest : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.Input.TraversalRequest" Usage="new System.Windows.Input.TraversalRequest focusNavigationDirection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="focusNavigationDirection" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="focusNavigationDirection">A direção pretendida da travessia do foco, como um valor da enumeração.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir cria uma <xref:System.Windows.Input.TraversalRequest> da instância como entrada para um <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> chamar.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      </Docs>
    </Member>
    <Member MemberName="FocusNavigationDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.FocusNavigationDirection FocusNavigationDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusNavigationDirection As FocusNavigationDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::FocusNavigationDirection FocusNavigationDirection { System::Windows::Input::FocusNavigationDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusNavigationDirection : System.Windows.Input.FocusNavigationDirection" Usage="System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.FocusNavigationDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a direção de passagem.</summary>
        <value>Um dos valores de enumeração da direção de passagem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é somente leitura porque o <xref:System.Windows.Input.FocusNavigationDirection> é um parâmetro de entrada obrigatório do <xref:System.Windows.Input.TraversalRequest> construtor de classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapped">
      <MemberSignature Language="C#" Value="public bool Wrapped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrapped" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberSignature Language="VB.NET" Value="Public Property Wrapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Wrapped { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrapped : bool with get, set" Usage="System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a travessia do foco atingiu o fim dos elementos filho que podem ter foco.</summary>
        <value><see langword="true" /> Se essa passagem alcançou o final dos elementos filho que pode ter o foco; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementos focalizáveis são esses elementos em que o <xref:System.Windows.UIElement.Focusable%2A> é de propriedade `true`.  
  
 Esse parâmetro é usado principalmente para se comunicar se passagem usando as paradas de tabulação deve quebrar ao chamar os métodos <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>, ou.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. Se você estiver passando o foco para um objeto que implementa <xref:System.Windows.Interop.IKeyboardInputSink>, em seguida, especificar true para <xref:System.Windows.Input.TraversalRequest.Wrapped%2A> resultará em que `true` valor que está sendo passado para o <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementação.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>