<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad0dfb834b31186d348d87b3d66c5ce6942392ae" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56350835" /></Metadata><TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="96c22-101">Representa o dispositivo de mouse para um thread específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-101">Represents the mouse device to a specific thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-102">O <xref:System.Windows.Input.Mouse> classe fornece mouse relacionados a eventos, métodos e propriedades que fornecem informações sobre o estado do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="96c22-103">Cada evento que <xref:System.Windows.Input.Mouse> define como um evento anexado é também exposto novamente pelas classes de elemento base <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement> como um novo evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="96c22-104">Em geral, é mais conveniente manipular eventos de mouse para um aplicativo no <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement>, em vez de usar o <xref:System.Windows.Input.Mouse> eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="96c22-105">Para obter detalhes, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-106">Os membros estáticos do <xref:System.Windows.Input.Mouse> delegado de classe para o primário <xref:System.Windows.Input.MouseDevice> do Gerenciador de entrada do thread de chamada.</span><span class="sxs-lookup"><span data-stu-id="96c22-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-107">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-108">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-108">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-109">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-110">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-111">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-111">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-112">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-113">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-114">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-114">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-115">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-116">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-117">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-117">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-118">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-119">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-120">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-120">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-121">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-122">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-123">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-123">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-124">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-125">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-126">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-126">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-127">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-128">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-129">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-129">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-130">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-131">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-132">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-132">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-133">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-134">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-135">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-135">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-136">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-137">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-138">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-138">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-139">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-140">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-141">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-141">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-142">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-143">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-144">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-144">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-145">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-146">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-147">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-147">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-148">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-149">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-150">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-150">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-151">Adiciona um manipulador ao evento anexado <see cref="E:System.Windows.Input.Mouse.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-152">Captura a entrada de mouse no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="96c22-152">Captures mouse input to the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-153">Quando um elemento captura o mouse, ele recebe entrada do mouse se o cursor estiver dentro de suas bordas.</span><span class="sxs-lookup"><span data-stu-id="96c22-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="96c22-154">Se um <xref:System.Windows.Input.CaptureMode> não for especificado, o padrão <xref:System.Windows.Input.CaptureMode> é <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="96c22-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="96c22-155">Para liberar a captura do mouse, chame <xref:System.Windows.Input.Mouse.Capture%2A> passando `null` como o elemento para capturar.</span><span class="sxs-lookup"><span data-stu-id="96c22-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="96c22-156">Se o mouse é capturado quando um <xref:System.Windows.Input.Mouse.MouseDown> ou <xref:System.Windows.Input.Mouse.MouseUp> é gerado e a entrada não vai para o elemento sob o mouse <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> e <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> são gerados pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="96c22-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="96c22-157">Isso permite que o elemento capturado a chance de captura antes de liberar o <xref:System.Windows.Input.Mouse.MouseDown> e <xref:System.Windows.Input.Mouse.MouseUp> eventos são roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Mouse.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-158">O elemento do qual o mouse é capturado.</span><span class="sxs-lookup"><span data-stu-id="96c22-158">The element to capture the mouse.</span></span></param>
        <summary><span data-ttu-id="96c22-159">Captura a entrada de mouse no elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="96c22-159">Captures mouse input to the specified element.</span></span></summary>
        <returns><span data-ttu-id="96c22-160"><see langword="true" /> se o elemento conseguiu capturar o mouse, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-160"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-161">Quando um elemento captura o mouse, ele recebe entrada do mouse se o cursor estiver dentro de suas bordas.</span><span class="sxs-lookup"><span data-stu-id="96c22-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="96c22-162">Se um <xref:System.Windows.Input.CaptureMode> não for especificado, o padrão <xref:System.Windows.Input.CaptureMode> é <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="96c22-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="96c22-163">Para liberar a captura do mouse, chame <xref:System.Windows.Input.Mouse.Capture%2A> passando `null` como o elemento para capturar.</span><span class="sxs-lookup"><span data-stu-id="96c22-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="96c22-164">Se o mouse é capturado quando um <xref:System.Windows.Input.Mouse.MouseDown> ou <xref:System.Windows.Input.Mouse.MouseUp> é gerado e a entrada não vai para o elemento sob o mouse <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> e <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> são gerados pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="96c22-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="96c22-165">Isso permite que o elemento capturado a chance de captura antes de liberar o <xref:System.Windows.Input.Mouse.MouseDown> e <xref:System.Windows.Input.Mouse.MouseUp> eventos são roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c22-166">O exemplo a seguir mostra como capturar o mouse para um elemento específico usando o <xref:System.Windows.Input.Mouse.Capture%2A> método.</span><span class="sxs-lookup"><span data-stu-id="96c22-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Mouse.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-167">O elemento do qual o mouse é capturado.</span><span class="sxs-lookup"><span data-stu-id="96c22-167">The element to capture the mouse.</span></span></param>
        <param name="captureMode"><span data-ttu-id="96c22-168">A política de captura a ser usada.</span><span class="sxs-lookup"><span data-stu-id="96c22-168">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="96c22-169">Captura a entrada do mouse para o elemento especificado usando o <see cref="T:System.Windows.Input.CaptureMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="96c22-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="96c22-170"><see langword="true" /> se o elemento conseguiu capturar o mouse, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-170"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-171">Quando um elemento captura o mouse, ele recebe entrada do mouse se o cursor estiver dentro de suas bordas.</span><span class="sxs-lookup"><span data-stu-id="96c22-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="96c22-172">Para liberar a captura do mouse, chame <xref:System.Windows.Input.Mouse.Capture%2A> passando `null` como o elemento para capturar.</span><span class="sxs-lookup"><span data-stu-id="96c22-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="96c22-173">Se o mouse é capturado quando um <xref:System.Windows.Input.Mouse.MouseDown> ou <xref:System.Windows.Input.Mouse.MouseUp> é gerado e a entrada não vai para o elemento sob o mouse <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> e <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> são gerados pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="96c22-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="96c22-174">Isso permite que o elemento capturado a chance de captura antes de liberar o <xref:System.Windows.Input.Mouse.MouseDown> e <xref:System.Windows.Input.Mouse.MouseUp> eventos são roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c22-175">O exemplo a seguir mostra como capturar o mouse para um elemento específico usando o <xref:System.Windows.Input.Mouse.Capture%2A> método.</span><span class="sxs-lookup"><span data-stu-id="96c22-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-176">Obtém o elemento que capturou o mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-176">Gets the element that has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="96c22-177">O elemento capturado pelo mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-177">The element captured by the mouse.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-178">Quando um elemento captura o mouse, ele recebe entrada do mouse se o cursor estiver dentro de suas bordas.</span><span class="sxs-lookup"><span data-stu-id="96c22-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="96c22-179">O mouse é capturado normalmente dessa maneira somente durante as operações de arrastar-e-soltar e retém captura até que ocorra a ação drop da operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="96c22-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c22-180">O exemplo a seguir mostra como obter o elemento que tem captura do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-181">Obtém o elemento sobre o qual o ponteiro do mouse está diretamente acima.</span><span class="sxs-lookup"><span data-stu-id="96c22-181">Gets the element the mouse pointer is directly over.</span></span></summary>
        <value><span data-ttu-id="96c22-182">O elemento sobre o qual o ponteiro do mouse está acima.</span><span class="sxs-lookup"><span data-stu-id="96c22-182">The element the mouse pointer is over.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-183">Controles podem ser compostos de vários elementos.</span><span class="sxs-lookup"><span data-stu-id="96c22-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="96c22-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> relata o elemento específico no controle de composição, que o ponteiro do mouse está sobre e não o próprio controle.</span><span class="sxs-lookup"><span data-stu-id="96c22-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="96c22-185">Por exemplo, dependendo de qual parte de uma <xref:System.Windows.Controls.Button> o ponteiro está sobre o, o <xref:System.Windows.Input.Mouse.DirectlyOver%2A> propriedade poderia relatar a <xref:System.Windows.Controls.TextBox> da <xref:System.Windows.Controls.ContentControl.Content%2A> propriedade ou o <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="96c22-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="96c22-186">Use o <xref:System.Windows.IInputElement.IsMouseOver%2A> propriedade na <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement> para determinar se o mouse está sobre um elemento, que inclui seus elementos filhos visuais ou elementos de composição de controle.</span><span class="sxs-lookup"><span data-stu-id="96c22-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="96c22-187">Se um elemento tem captura do mouse, o ponteiro do mouse será considerado diretamente sobre o elemento, independentemente de onde está o ponteiro do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="static member GetIntermediatePoints : System.Windows.IInputElement * System.Windows.Point[] -&gt; int" Usage="System.Windows.Input.Mouse.GetIntermediatePoints (relativeTo, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="96c22-188">Os elementos com relação aos quais está o <paramref name="points" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-188">The elements <paramref name="points" /> are in relation to.</span></span></param>
        <param name="points"><span data-ttu-id="96c22-189">Uma matriz de objetos.</span><span class="sxs-lookup"><span data-stu-id="96c22-189">An array of objects.</span></span></param>
        <summary><span data-ttu-id="96c22-190">Recupera até 64 coordenadas anteriores do ponteiro do mouse desde o último evento de movimentação do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span></span></summary>
        <returns><span data-ttu-id="96c22-191">O número de pontos retornado.</span><span class="sxs-lookup"><span data-stu-id="96c22-191">The number of points returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="static member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="System.Windows.Input.Mouse.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="96c22-192">O espaço de coordenadas no qual a posição do mouse será calculada.</span><span class="sxs-lookup"><span data-stu-id="96c22-192">The coordinate space in which to calculate the position of the mouse.</span></span></param>
        <summary><span data-ttu-id="96c22-193">Obtém a posição do mouse em relação a um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="96c22-193">Gets the position of the mouse relative to a specified element.</span></span></summary>
        <returns><span data-ttu-id="96c22-194">A posição do mouse em relação ao parâmetro <paramref name="relativeTo" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-195">A posição do ponteiro do mouse é calculada em relação ao elemento especificado com o canto superior esquerdo do elemento sendo o ponto de origem, 0,0.</span><span class="sxs-lookup"><span data-stu-id="96c22-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="96c22-196">Durante as operações de arrastar e soltar, a posição do mouse não é possível determinar com confiança por meio de <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="96c22-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="96c22-197">Isso ocorre porque o controle do mouse (incluindo, possivelmente, captura) é mantida pelo elemento de origem de arrastar até que o descarte é concluído, com grande parte do comportamento controlado por subjacente [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] chamadas.</span><span class="sxs-lookup"><span data-stu-id="96c22-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="96c22-198">Tente em vez disso, as seguintes abordagens:</span><span class="sxs-lookup"><span data-stu-id="96c22-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="96c22-199">Chame o <xref:System.Windows.DragEventArgs.GetPosition%2A> método da <xref:System.Windows.DragEventArgs> que é passado para os eventos de arrastar (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span><span class="sxs-lookup"><span data-stu-id="96c22-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="96c22-200">Chame [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), usando P/Invoke.</span><span class="sxs-lookup"><span data-stu-id="96c22-200">Call [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c22-201">O exemplo a seguir mostra como usar <xref:System.Windows.Input.Mouse.GetPosition%2A> para determinar a posição do ponteiro do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="96c22-202">A posição do ponteiro do mouse é armazenada em um <xref:System.Windows.Point> estrutura.</span><span class="sxs-lookup"><span data-stu-id="96c22-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="96c22-203">O <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> valores da <xref:System.Windows.Point> objeto são exibidos em um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="96c22-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" Usage="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-204">Ocorre quando um elemento captura o mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-204">Occurs when an element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-205">Quando um elemento captura o mouse, ele recebe entrada do mouse se o cursor estiver dentro de suas bordas.</span><span class="sxs-lookup"><span data-stu-id="96c22-205">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="96c22-206">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-206">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-207">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-207">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-208">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-208">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-209">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-209">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-210">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-210">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-211">Por causa o roteamento por propagação, o elemento real que tem captura pode ser um elemento filho, não necessariamente o elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-211">Because of the bubbling routing, the actual element that has capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="96c22-212">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> capturam no evento de argumentos para determinar o elemento real que tem o mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-212">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that has mouse capture.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-213">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-214">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-214">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.GotMouseCaptureEvent>|  
|<span data-ttu-id="96c22-215">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-215">Routing strategy</span></span>|<span data-ttu-id="96c22-216">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-216">Bubbling</span></span>|  
|<span data-ttu-id="96c22-217">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-217">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="96c22-218">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="96c22-218">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-219">Identifica o evento <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-219">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-220">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-220">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-221">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-222">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-222">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-223">Obtém o estado do botão esquerdo do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-223">Gets the state of the left button of the mouse.</span></span></summary>
        <value><span data-ttu-id="96c22-224">O estado do botão esquerdo do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-224">The state of the left mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96c22-225">O exemplo a seguir mostra como determinar se o botão esquerdo do mouse é pressionado, verificando se o estado do <xref:System.Windows.Input.Mouse.LeftButton%2A> é igual de <xref:System.Windows.Input.MouseButtonState> valor de enumeração <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="96c22-225">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="96c22-226">Se o botão é pressionado, um método é chamado de quais atualizações exibem elementos no exemplo.</span><span class="sxs-lookup"><span data-stu-id="96c22-226">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" Usage="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-227">Ocorre quando um elemento perde a captura do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-227">Occurs when an element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-228">Quando um elemento captura o mouse, ele recebe entrada do mouse se o cursor estiver dentro de suas bordas.</span><span class="sxs-lookup"><span data-stu-id="96c22-228">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="96c22-229">T</span><span class="sxs-lookup"><span data-stu-id="96c22-229">T</span></span>  
  
 <span data-ttu-id="96c22-230">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-230">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-231">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-231">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-232">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-232">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-233">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-233">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-234">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-234">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-235">Por causa o roteamento por propagação, o elemento real que perdeu a captura pode ser um elemento filho, não necessariamente o elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-235">Because of the bubbling routing, the actual element that lost capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="96c22-236">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos argumentos de evento para determinar o elemento real que perdeu a captura.</span><span class="sxs-lookup"><span data-stu-id="96c22-236">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that lost capture.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-237">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-238">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-238">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.LostMouseCaptureEvent>|  
|<span data-ttu-id="96c22-239">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-239">Routing strategy</span></span>|<span data-ttu-id="96c22-240">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-240">Bubbling</span></span>|  
|<span data-ttu-id="96c22-241">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-241">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="96c22-242">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="96c22-242">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-243">Identifica o evento <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-243">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-244">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-244">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-245">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-245">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-246">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-246">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-247">Obtém o estado do botão do meio do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-247">Gets the state of the middle button of the mouse.</span></span></summary>
        <value><span data-ttu-id="96c22-248">O estado do botão do meio do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-248">The state of the middle mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96c22-249">O exemplo a seguir mostra como determinar se o botão do meio do mouse é pressionado, verificando se o estado do <xref:System.Windows.Input.Mouse.MiddleButton%2A> é igual de <xref:System.Windows.Input.MouseButtonState> valor de enumeração <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="96c22-249">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="96c22-250">Se o botão é pressionado, um método é chamado de quais atualizações exibem elementos no exemplo.</span><span class="sxs-lookup"><span data-stu-id="96c22-250">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" Usage="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-251">Ocorre quando qualquer botão do mouse é pressionado.</span><span class="sxs-lookup"><span data-stu-id="96c22-251">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-252">Para determinar qual botão do mouse foi pressionado, verifique as <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> propriedade no <xref:System.Windows.Input.MouseButtonEventArgs> passado para o manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-252">To determine which mouse button was depressed, check the <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property in the <xref:System.Windows.Input.MouseButtonEventArgs> passed to the handler.</span></span>  
  
 <span data-ttu-id="96c22-253">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-253">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-254">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-254">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-255">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-255">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-256">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-256">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-257">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-257">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-258">O [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework se baseia nesse evento anexado, exibindo-os como dois diferentes [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] eventos nos <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> e <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="96c22-258">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="96c22-259">Essas implementações tratam subjacente <xref:System.Windows.Input.Mouse.MouseDown> eventos e ler os argumentos do evento para determinar se o botão esquerdo ou direito do mouse foi envolvido.</span><span class="sxs-lookup"><span data-stu-id="96c22-259">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="96c22-260">Para um mouse de três botões, não há nenhum suporte de evento de nível de estrutura para o botão central.</span><span class="sxs-lookup"><span data-stu-id="96c22-260">For a three-button mouse, there is no framework-level event support for the center button.</span></span> <span data-ttu-id="96c22-261">Você deve usar o <xref:System.Windows.Input.Mouse.MouseDown> evento e verificar o <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> argumentos no evento de estado.</span><span class="sxs-lookup"><span data-stu-id="96c22-261">You should use the <xref:System.Windows.Input.Mouse.MouseDown> event and check the <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> state in the event arguments.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="96c22-262">Alguns <xref:System.Windows.ContentElement> as classes derivadas que têm o comportamento do tipo de controle, por exemplo, <xref:System.Windows.Documents.Hyperlink>, pode ter inerentes a manipulação de classe para eventos do botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-262">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="96c22-263">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="96c22-263">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="96c22-264">A classe tratamento geralmente marca subjacente <xref:System.Windows.Input.Mouse> eventos de classe como manipulado.</span><span class="sxs-lookup"><span data-stu-id="96c22-264">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="96c22-265">Depois que o evento é marcado como manipulado, outros manipuladores de instância que são anexados a esse elemento não são acionados normalmente.</span><span class="sxs-lookup"><span data-stu-id="96c22-265">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="96c22-266">Qualquer outras classe ou instância manipuladores que estão anexados a elementos na direção por propagação na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</span><span class="sxs-lookup"><span data-stu-id="96c22-266">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="96c22-267">Você pode resolver o problema descrito na observação importante anterior e ainda receber <xref:System.Windows.UIElement.MouseDown> eventos para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem, usando qualquer uma dessas soluções de manipulação de classe:</span><span class="sxs-lookup"><span data-stu-id="96c22-267">You can resolve the issue that is outlined in the preceding Important note and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="96c22-268">Anexar manipuladores para o <xref:System.Windows.UIElement.PreviewMouseDown> evento, que não está marcado como manipulado pelos controles.</span><span class="sxs-lookup"><span data-stu-id="96c22-268">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="96c22-269">Observe que, como esse é um evento de visualização, a rota é iniciado na raiz e túneis ao controle.</span><span class="sxs-lookup"><span data-stu-id="96c22-269">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="96c22-270">Registrar um manipulador no controle de forma procedimental chamando <xref:System.Windows.UIElement.AddHandler%2A> e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos do mesmo se eles já estão marcados como manipulados nos dados do evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-270">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="96c22-271">Para eventos roteados relacionados ao mouse, tenha cuidado como ou quando você marcá-los manipulado.</span><span class="sxs-lookup"><span data-stu-id="96c22-271">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="96c22-272">A dificuldade de fazer as escolhas apropriadas sobre se os elementos pai devem também ser informados sobre qualquer ação do mouse na verdade é por isso que o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework escolheu o modelo de ter o evento roteado de mouse subjacente ser apresentados como [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] eventos ao longo da rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-272">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying mouse routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span> <span data-ttu-id="96c22-273">Existem problemas semelhantes com o túnel de eventos de mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-273">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="96c22-274">Você manipular o evento e não tem ser manipulada por mais filhos em direção a origem e como seria que afetam a composição de um controle em que as partes de composição talvez esperasse mouse comportamentos?</span><span class="sxs-lookup"><span data-stu-id="96c22-274">Should you handle the event and not have it be handled by further children toward the source, and how would that affect compositing a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-275">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-276">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-276">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseDownEvent>|  
|<span data-ttu-id="96c22-277">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-277">Routing strategy</span></span>|<span data-ttu-id="96c22-278">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-278">Bubbling</span></span>|  
|<span data-ttu-id="96c22-279">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="96c22-280">O evento por túnel correspondente é <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="96c22-280">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-281">Identifica o evento <see cref="E:System.Windows.Input.Mouse.MouseDown" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-281">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-282">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-282">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-283">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-284">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-284">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="F#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" Usage="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-285">Ocorre quando o ponteiro do mouse entra nos limites de um elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-285">Occurs when the mouse pointer enters the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-286">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-286">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-287">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-287">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-288">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-288">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-289">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-289">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-290">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-290">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-291">Este evento usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="96c22-291">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="96c22-292">Eventos roteados diretos não são gerados ao longo de uma rota (eles apenas são manipulados no mesmo elemento no qual eles são gerados).</span><span class="sxs-lookup"><span data-stu-id="96c22-292">Direct routed events are not raised along a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="96c22-293">No entanto, eles, habilitar outros aspectos dos comportamentos de evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="96c22-293">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="96c22-294">Embora esse evento é usado para controlar quando o mouse entra em um elemento, ele também está relatando a <xref:System.Windows.UIElement.IsMouseOver%2A> propriedade foi alterado de `false` para `true` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-294">Although this event is used to track when the mouse enters an element, it is also reporting the <xref:System.Windows.UIElement.IsMouseOver%2A> property has changed from `false` to `true` on this element.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-295">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-295">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-296">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-296">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseEnterEvent>|  
|<span data-ttu-id="96c22-297">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-297">Routing strategy</span></span>|<span data-ttu-id="96c22-298">Direto</span><span class="sxs-lookup"><span data-stu-id="96c22-298">Direct</span></span>|  
|<span data-ttu-id="96c22-299">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-299">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-300">Identifica o evento <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-300">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-301">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-301">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-302">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-303">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-303">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" Usage="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-304">Ocorre quando o ponteiro do mouse deixa os limites de um elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-304">Occurs when the mouse pointer leaves the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-305">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-305">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-306">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-306">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-307">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-307">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-308">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-308">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-309">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-309">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-310">Este evento usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="96c22-310">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="96c22-311">Eventos roteados diretos não seguem uma rota (eles apenas são manipulados no mesmo elemento no qual eles são gerados).</span><span class="sxs-lookup"><span data-stu-id="96c22-311">Direct routed events do not follow a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="96c22-312">No entanto, eles, habilitar outros aspectos dos comportamentos de evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="96c22-312">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="96c22-313">Embora esse evento é usado para controlar quando o mouse sai de um elemento, ele também está relatando que o <xref:System.Windows.UIElement.IsMouseOver%2A> o valor da propriedade foi alterado de `true` para `false` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-313">Although this event is used to track when the mouse leaves an element, it is also reporting that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="96c22-314">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-315">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-315">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseLeaveEvent>|  
|<span data-ttu-id="96c22-316">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-316">Routing strategy</span></span>|<span data-ttu-id="96c22-317">Direto</span><span class="sxs-lookup"><span data-stu-id="96c22-317">Direct</span></span>|  
|<span data-ttu-id="96c22-318">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-318">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-319">Identifica o evento <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-319">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-320">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-320">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-321">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-321">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-322">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-322">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" Usage="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-323">Ocorre quando o ponteiro do mouse se movimenta.</span><span class="sxs-lookup"><span data-stu-id="96c22-323">Occurs when the mouse pointer moves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-324">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-324">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-325">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-325">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-326">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-326">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-327">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-328">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="96c22-329">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-330">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-330">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseMoveEvent>|  
|<span data-ttu-id="96c22-331">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-331">Routing strategy</span></span>|<span data-ttu-id="96c22-332">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-332">Bubbling</span></span>|  
|<span data-ttu-id="96c22-333">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-333">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="96c22-334">O evento por túnel correspondente é <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="96c22-334">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-335">Identifica o evento <see cref="E:System.Windows.Input.Mouse.MouseMove" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-335">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-336">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-336">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-337">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-338">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-338">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" Usage="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-339">Ocorre quando qualquer botão do mouse é liberado.</span><span class="sxs-lookup"><span data-stu-id="96c22-339">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-340">Qual botão do mouse foi liberado é determinado verificando os argumentos do evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-340">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="96c22-341">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-341">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-342">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-342">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-343">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-343">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-344">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-344">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-345">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-345">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-346">O [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework se baseia nesse evento anexado, exibindo-os como dois diferentes [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] eventos nos <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> e <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="96c22-346">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="96c22-347">Essas implementações tratam subjacente <xref:System.Windows.Input.Mouse.MouseUp> eventos e ler os argumentos do evento para determinar se o botão esquerdo ou direito do mouse foi envolvido.</span><span class="sxs-lookup"><span data-stu-id="96c22-347">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="96c22-348">Para três botões, não há nenhum suporte de evento de nível de estrutura para o botão central, e você deve usar o <xref:System.Windows.Input.Mouse.MouseUp> eventos e procure o botão central da condição no evento argumentos.</span><span class="sxs-lookup"><span data-stu-id="96c22-348">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.MouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="96c22-349">Para eventos roteados relacionados ao mouse, tenha cuidado como ou quando você marcá-los manipulado.</span><span class="sxs-lookup"><span data-stu-id="96c22-349">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="96c22-350">A dificuldade de fazer as escolhas apropriadas sobre se os elementos pai devem também ser informados sobre qualquer ação do mouse na verdade é por isso que o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework escolheu o modelo de ter subjacente <xref:System.Windows.Input.Mouse> evento roteado ser apresentados como [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] eventos em todo o roteiro.</span><span class="sxs-lookup"><span data-stu-id="96c22-350">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events all along the route.</span></span>  
  
 <span data-ttu-id="96c22-351">Existem problemas semelhantes com o túnel de eventos de mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-351">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="96c22-352">Você manipular o evento e não tem ser manipulada por filhos ainda mais em direção a origem e como seria que afetam a composição em um controle em que as partes de composição talvez esperasse mouse comportamentos?</span><span class="sxs-lookup"><span data-stu-id="96c22-352">Should you handle the event and not have it be handled by children further towards the source, and how would that affect compositing in a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="96c22-353">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-353">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-354">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-354">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseUpEvent>|  
|<span data-ttu-id="96c22-355">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-355">Routing strategy</span></span>|<span data-ttu-id="96c22-356">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-356">Bubbling</span></span>|  
|<span data-ttu-id="96c22-357">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-357">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 <span data-ttu-id="96c22-358">O evento por túnel correspondente é <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="96c22-358">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-359">Identifica o evento <see cref="E:System.Windows.Input.Mouse.MouseUp" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-359">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-360">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-360">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-361">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-361">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-362">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-362">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" Usage="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-363">Ocorre quando o botão de rolagem do mouse é girado.</span><span class="sxs-lookup"><span data-stu-id="96c22-363">Occurs when the mouse wheel is rotated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-364">Captura de foco ou de mouse têm precedência sobre onde é o ponteiro do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-364">Focus or mouse capture take precedence over where the mouse pointer is.</span></span>  <span data-ttu-id="96c22-365">Se você receber esse evento de um elemento com foco ou capturado, o ponteiro do mouse pode ser de fato em outro elemento no momento.</span><span class="sxs-lookup"><span data-stu-id="96c22-365">If you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="96c22-366">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-366">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-367">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-367">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-368">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-368">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-369">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-369">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-370">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-370">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-371">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-372">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-372">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseWheelEvent>|  
|<span data-ttu-id="96c22-373">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-373">Routing strategy</span></span>|<span data-ttu-id="96c22-374">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-374">Bubbling</span></span>|  
|<span data-ttu-id="96c22-375">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-375">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="96c22-376">O evento por túnel correspondente é <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="96c22-376">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="F#" Value="val mutable MouseWheelDeltaForOneLine : int" Usage="System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary><span data-ttu-id="96c22-377">Representa o número de unidades que a roda do mouse gira para rolar uma linha.</span><span class="sxs-lookup"><span data-stu-id="96c22-377">Represents the number of units the mouse wheel is rotated to scroll one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-378">No atual [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], o valor desse campo é 120.</span><span class="sxs-lookup"><span data-stu-id="96c22-378">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="96c22-379">A intenção da exposição do campo é permitir a fornecedores para criar os discos resolução mais detalhada do mouse no futuro, que talvez incluiria uma roda giratória livremente sem cortes.</span><span class="sxs-lookup"><span data-stu-id="96c22-379">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="96c22-380">A expectativa é que um dispositivo desse tipo seria enviar mais mensagens por rotação, mas com um valor menor em cada mensagem.</span><span class="sxs-lookup"><span data-stu-id="96c22-380">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="96c22-381">Para dar suporte a essa possibilidade, você deve adicionar os valores de delta de entrada até que o <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> quantidade é atingida (portanto, para uma rotação de delta é obter a mesma resposta), ou role linhas parciais em resposta às mensagens mais frequentes.</span><span class="sxs-lookup"><span data-stu-id="96c22-381">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="96c22-382">Você também pode escolher seu próprios granularidade de rolagem e acumular deltas de sua escolha, até que esse delta é atingido, ou talvez fazer referência a parâmetros de sistema controlável pelo usuário para a sensibilidade do mouse e extrapolar esses para os limites de delta de roda do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-382">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-383">Identifica o evento <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-383">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-384">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-384">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-385">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-386">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-386">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.Mouse.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-387">Obtém ou define o cursor para o aplicativo inteiro.</span><span class="sxs-lookup"><span data-stu-id="96c22-387">Gets or sets the cursor for the entire application.</span></span></summary>
        <value><span data-ttu-id="96c22-388">O cursor de substituição ou <see langword="null" /> se o <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> não está definido.</span><span class="sxs-lookup"><span data-stu-id="96c22-388">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-389">O <xref:System.Windows.Input.Cursor> que <xref:System.Windows.Input.Mouse.OverrideCursor%2A> é definido como será aplicado a todo o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="96c22-389">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="96c22-390">Para limpar a substituição <xref:System.Windows.Input.Cursor>, defina <xref:System.Windows.Input.Mouse.OverrideCursor%2A> para `null`.</span><span class="sxs-lookup"><span data-stu-id="96c22-390">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="96c22-391">Definindo <xref:System.Windows.Input.Mouse.OverrideCursor%2A> para <xref:System.Windows.Input.Cursors.None%2A> forçará o cursor do mouse para não ser exibidos, mas os eventos de mouse ainda são processados.</span><span class="sxs-lookup"><span data-stu-id="96c22-391">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96c22-392">O exemplo a seguir mostra um manipulador de eventos para um <xref:System.Windows.Controls.RadioButton> que é usado para alternar o escopo de uma alteração de cursor entre o aplicativo inteiro e de um único elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-392">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="96c22-393">Se o controle que acionou o evento é o `rbScopeElement` <xref:System.Windows.Controls.RadioButton>, um sinalizador que indica o escopo da alteração do cursor é definido e <xref:System.Windows.Input.Mouse.OverrideCursor%2A> é definido como `null`.</span><span class="sxs-lookup"><span data-stu-id="96c22-393">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="96c22-394">Se o controle que acionou o evento é o `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, um sinalizador que indica o escopo da alteração do cursor é definido e <xref:System.Windows.Input.Mouse.OverrideCursor%2A> é definido como o <xref:System.Windows.FrameworkElement.Cursor%2A> propriedade do <xref:System.Windows.Controls.Border> controle chamado `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="96c22-394">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" Usage="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-395">Ocorre quando qualquer botão do mouse é pressionado.</span><span class="sxs-lookup"><span data-stu-id="96c22-395">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-396">Qual botão do mouse foi pressionado é determinado verificando os argumentos do evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-396">Which mouse button was depressed is determined by checking the arguments of the event.</span></span> <span data-ttu-id="96c22-397">Isso é um evento anexado (usando a estratégia de roteamento por túnel) que se destina-se por meio da sintaxe de evento anexado por serem referenciados pelo existente [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementos que obtêm entrados.</span><span class="sxs-lookup"><span data-stu-id="96c22-397">This is an attached event (using tunneling routing strategy) that is intended through attached event syntax to be referenced by existing [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements that take input.</span></span>  
  
 <span data-ttu-id="96c22-398">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-399">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-399">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-400">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-400">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-401">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-401">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-402">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-402">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-403">O [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework se baseia nesse evento anexado, exibindo-os como dois diferentes [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] eventos nos <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> e <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="96c22-403">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="96c22-404">Essas implementações tratam subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown> eventos e ler os argumentos do evento para determinar se o botão esquerdo ou direito do mouse foi envolvido.</span><span class="sxs-lookup"><span data-stu-id="96c22-404">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="96c22-405">Para três botões, não há nenhum suporte de evento de nível de estrutura para o botão central, e você deve usar o <xref:System.Windows.Input.Mouse.PreviewMouseDown> eventos e procure o botão central da condição no evento argumentos.</span><span class="sxs-lookup"><span data-stu-id="96c22-405">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="96c22-406">Para eventos roteados relacionados ao mouse, tenha cuidado como ou quando você marcá-los manipulado.</span><span class="sxs-lookup"><span data-stu-id="96c22-406">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="96c22-407">Manipulando o evento próximo à raiz e manipulá-lo por um filho em direção a fonte podem não ser apropriadas para controles compostos, onde as partes da composição talvez esperasse que os comportamentos de mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-407">Handling the event near the root and handling it by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="96c22-408">A dificuldade de fazer as escolhas apropriadas sobre se outros elementos devem também ser informados sobre qualquer ação do mouse na verdade é por isso que o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework escolheu o modelo de ter subjacente <xref:System.Windows.Input.Mouse> evento roteado ser apresentados como [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] eventos ao longo da rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-408">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-409">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-410">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-410">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownEvent>|  
|<span data-ttu-id="96c22-411">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-411">Routing strategy</span></span>|<span data-ttu-id="96c22-412">O túnel</span><span class="sxs-lookup"><span data-stu-id="96c22-412">Tunneling</span></span>|  
|<span data-ttu-id="96c22-413">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="96c22-414">O evento por propagação correspondente é <xref:System.Windows.Input.Mouse.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="96c22-414">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-415">Identifica o evento <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-415">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-416">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-416">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-417">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-417">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-418">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-418">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" Usage="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-419">Ocorre quando o botão principal do mouse é pressionado fora do elemento que está capturando os eventos do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-419">Occurs when the primary mouse button is pressed outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-420">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-420">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-421">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-421">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-422">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-422">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-423">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-423">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-424">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-424">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-425">Esse evento não é ressurgiu nos elementos base.</span><span class="sxs-lookup"><span data-stu-id="96c22-425">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="96c22-426">É principalmente de interesse para autores de controle que estão tentando reconciliar captura do mouse e entrada do mouse dentro de sua composição de controle.</span><span class="sxs-lookup"><span data-stu-id="96c22-426">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDownOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-427">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-428">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-428">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent>|  
|<span data-ttu-id="96c22-429">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-429">Routing strategy</span></span>|<span data-ttu-id="96c22-430">O túnel</span><span class="sxs-lookup"><span data-stu-id="96c22-430">Tunneling</span></span>|  
|<span data-ttu-id="96c22-431">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-431">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-432">Identifica o evento <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-432">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-433">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-433">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-434">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-435">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-435">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" Usage="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-436">Ocorre quando o mouse se move sobre um elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-436">Occurs when the mouse moves over an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-437">Esse evento ocorre quando o ponteiro do mouse é movido recentemente nos limites do elemento, e também quando o ponteiro do mouse se move enquanto ainda permanecem nos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="96c22-437">This event occurs both when the mouse pointer is newly moved in the element bounds, and also when the mouse pointer moves while still remaining in the element bounds.</span></span>  
  
 <span data-ttu-id="96c22-438">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-438">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-439">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-439">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-440">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-440">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-441">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-441">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-442">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-442">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-443">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-444">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-444">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseMoveEvent>|  
|<span data-ttu-id="96c22-445">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-445">Routing strategy</span></span>|<span data-ttu-id="96c22-446">O túnel</span><span class="sxs-lookup"><span data-stu-id="96c22-446">Tunneling</span></span>|  
|<span data-ttu-id="96c22-447">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-447">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="96c22-448">O evento por propagação correspondente é <xref:System.Windows.Input.Mouse.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="96c22-448">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-449">Identifica o evento <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-449">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-450">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-450">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-451">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-451">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-452">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-452">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" Usage="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-453">Ocorre quando qualquer botão do mouse é liberado.</span><span class="sxs-lookup"><span data-stu-id="96c22-453">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-454">Qual botão do mouse foi liberado é determinado verificando os argumentos do evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-454">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="96c22-455">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-455">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-456">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-456">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-457">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-457">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-458">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-458">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-459">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-459">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-460">O [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework se baseia nesse evento anexado, exibindo-os como dois diferentes [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] eventos nos <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> e <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="96c22-460">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="96c22-461">Essas implementações tratam subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp> eventos e ler os argumentos do evento para determinar se o botão esquerdo ou direito do mouse foi envolvido.</span><span class="sxs-lookup"><span data-stu-id="96c22-461">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="96c22-462">Para três botões, não há nenhum suporte de evento de nível de estrutura para o botão central, e você deve usar o <xref:System.Windows.Input.Mouse.PreviewMouseUp> eventos e procure o botão central da condição no evento argumentos.</span><span class="sxs-lookup"><span data-stu-id="96c22-462">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="96c22-463">Para eventos roteados relacionados ao mouse, tenha cuidado como ou quando você marcá-los manipulado.</span><span class="sxs-lookup"><span data-stu-id="96c22-463">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="96c22-464">Manipulando o evento próximo à raiz e não tratamento por um filho em direção a fonte podem não ser apropriadas para controles compostos, onde as partes da composição talvez esperasse que os comportamentos de mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-464">Handling the event near the root and not handling by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="96c22-465">A dificuldade de fazer as escolhas apropriadas sobre se outros elementos devem também ser informados sobre qualquer ação do mouse na verdade é por isso que o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework escolheu o modelo de ter subjacente <xref:System.Windows.Input.Mouse> evento roteado ser apresentados como [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] eventos ao longo da rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-465">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="96c22-466">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-467">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-467">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpEvent>|  
|<span data-ttu-id="96c22-468">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-468">Routing strategy</span></span>|<span data-ttu-id="96c22-469">O túnel</span><span class="sxs-lookup"><span data-stu-id="96c22-469">Tunneling</span></span>|  
|<span data-ttu-id="96c22-470">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-470">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="96c22-471">O evento por propagação correspondente é <xref:System.Windows.Input.Mouse.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="96c22-471">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-472">Identifica o evento <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-472">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-473">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-473">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-474">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-474">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-475">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-475">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" Usage="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-476">Ocorre quando o botão principal do mouse é solto fora do elemento que está capturando os eventos do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-476">Occurs when the primary mouse button is released outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-477">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-477">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-478">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-478">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-479">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-479">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-480">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-480">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-481">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-481">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="96c22-482">Esse evento não é ressurgiu nos elementos base.</span><span class="sxs-lookup"><span data-stu-id="96c22-482">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="96c22-483">É principalmente de interesse para autores de controle que estão tentando reconciliar captura do mouse e entrada do mouse dentro de sua composição de controle.</span><span class="sxs-lookup"><span data-stu-id="96c22-483">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUpOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-484">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-485">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-485">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent>|  
|<span data-ttu-id="96c22-486">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-486">Routing strategy</span></span>|<span data-ttu-id="96c22-487">O túnel</span><span class="sxs-lookup"><span data-stu-id="96c22-487">Tunneling</span></span>|  
|<span data-ttu-id="96c22-488">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-488">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="96c22-489">Não há nenhum evento de propagação correspondente.</span><span class="sxs-lookup"><span data-stu-id="96c22-489">There is no corresponding bubbling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-490">Identifica o evento <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-490">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-491">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-491">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-492">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-492">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-493">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-493">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" Usage="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-494">Ocorre quando a roda do mouse gira.</span><span class="sxs-lookup"><span data-stu-id="96c22-494">Occurs when the mouse wheel rotates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-495">Captura de foco ou de mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber esse evento de um elemento com foco ou capturado, o ponteiro do mouse pode ser de fato em outro elemento no momento.</span><span class="sxs-lookup"><span data-stu-id="96c22-495">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="96c22-496">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-496">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-497">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-497">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-498">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-498">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-499">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-499">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-500">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-500">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-501">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-501">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-502">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-502">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseWheelEvent>|  
|<span data-ttu-id="96c22-503">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-503">Routing strategy</span></span>|<span data-ttu-id="96c22-504">O túnel</span><span class="sxs-lookup"><span data-stu-id="96c22-504">Tunneling</span></span>|  
|<span data-ttu-id="96c22-505">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-505">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="96c22-506">O evento por propagação correspondente é <xref:System.Windows.Input.Mouse.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="96c22-506">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-507">Identifica o evento <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-507">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-508">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-508">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-509">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-509">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-510">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-510">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-511">Obtém o dispositivo primário de mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-511">Gets the primary mouse device.</span></span></summary>
        <value><span data-ttu-id="96c22-512">O dispositivo.</span><span class="sxs-lookup"><span data-stu-id="96c22-512">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-513">Essa propriedade dá suporte à infraestrutura do Windows Presentation Foundation e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="96c22-513">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="F#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" Usage="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96c22-514">Ocorre quando um elemento consulta o cursor do mouse atual.</span><span class="sxs-lookup"><span data-stu-id="96c22-514">Occurs when an element queries for the current mouse cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-515">Isso é um evento anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-515">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="96c22-516">implementa eventos anexados como eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="96c22-516">implements attached events as routed events.</span></span> <span data-ttu-id="96c22-517">Eventos anexados são basicamente uma [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] conceito de linguagem para a referência de eventos que podem ser manipulados em objetos que não definem esse evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expande, também permitindo que o evento percorrer uma rota.</span><span class="sxs-lookup"><span data-stu-id="96c22-517">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="96c22-518">Eventos anexados não tem uma sintaxe de tratamento direto no código; Para anexar manipuladores para um evento roteado no código, você usa um adicionar designado \* método do manipulador.</span><span class="sxs-lookup"><span data-stu-id="96c22-518">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="96c22-519">Para obter detalhes, consulte [visão geral de eventos anexados](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-519">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_Querycursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="96c22-520">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="96c22-520">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="96c22-521">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="96c22-521">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.QueryCursorEvent>|  
|<span data-ttu-id="96c22-522">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="96c22-522">Routing strategy</span></span>|<span data-ttu-id="96c22-523">Propagação</span><span class="sxs-lookup"><span data-stu-id="96c22-523">Bubbling</span></span>|  
|<span data-ttu-id="96c22-524">delegado</span><span class="sxs-lookup"><span data-stu-id="96c22-524">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
 <span data-ttu-id="96c22-525">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="96c22-525">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-526">Identifica o evento <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> anexado.</span><span class="sxs-lookup"><span data-stu-id="96c22-526">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-527">Identificadores de eventos roteados são criados quando os eventos roteados são registrados e o resultado é armazenado como um campo na classe que registra o evento roteado.</span><span class="sxs-lookup"><span data-stu-id="96c22-527">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="96c22-528">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e um método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-528">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="96c22-529">Você geralmente usar esses identificadores como parâmetros para métodos de sistema de eventos, para identificar um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="96c22-529">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-530">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-530">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-531">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-531">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-532">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-532">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-533">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-533">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-534">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-534">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-535">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-535">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-536">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-536">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-537">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-537">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-538">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-538">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-539">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-539">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-540">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-540">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-541">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-541">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-542">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-542">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-543">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-543">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-544">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-544">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-545">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-545">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-546">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-546">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-547">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-547">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-548">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-548">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-549">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-549">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-550">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-550">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-551">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-551">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-552">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-552">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-553">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-553">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-554">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-554">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-555">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-555">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-556">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-556">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-557">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-557">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-558">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-558">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-559">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-559">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-560">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-560">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-561">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-561">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-562">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-562">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-563">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-563">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-564">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-564">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-565">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-565">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-566">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-566">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-567">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-567">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-568">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-568">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-569">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-569">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-570">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-570">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-571">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-571">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="96c22-572">O <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> que escuta esse evento.</span><span class="sxs-lookup"><span data-stu-id="96c22-572">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="96c22-573">O manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="96c22-573">The event handler.</span></span></param>
        <summary><span data-ttu-id="96c22-574">Remove um manipulador para o evento anexado <see cref="E:System.Windows.Input.Mouse.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-574">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-575">Obtém o estado do botão direito.</span><span class="sxs-lookup"><span data-stu-id="96c22-575">Gets the state of the right button.</span></span></summary>
        <value><span data-ttu-id="96c22-576">O estado do botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-576">The state of the right mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96c22-577">O exemplo a seguir mostra como determinar se o botão direito do mouse é pressionado, verificando se o estado do <xref:System.Windows.Input.Mouse.RightButton%2A> é igual de <xref:System.Windows.Input.MouseButtonState> valor de enumeração <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="96c22-577">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="96c22-578">Se o botão é pressionado, um método é chamado de quais atualizações exibem elementos no exemplo.</span><span class="sxs-lookup"><span data-stu-id="96c22-578">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="static member SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="System.Windows.Input.Mouse.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor"><span data-ttu-id="96c22-579">O cursor para o qual definir o ponteiro do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-579">The cursor to set the mouse pointer to.</span></span></param>
        <summary><span data-ttu-id="96c22-580">Define o ponteiro do mouse para o <see cref="T:System.Windows.Input.Cursor" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="96c22-580">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="96c22-581"><see langword="true" />, se o cursor foi definido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96c22-581"><see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c22-582">O cursor que está sendo definido não se aplica a qualquer elemento específico, mas em vez disso, ele se aplica a todo o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="96c22-582">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="96c22-583">Portanto, se depois de definir o cursor que se move o ponteiro do mouse sobre um objeto que define o cursor, o cursor será alterado novamente.</span><span class="sxs-lookup"><span data-stu-id="96c22-583">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="96c22-584">Para forçar o ponteiro do mouse para um determinado <xref:System.Windows.Input.Cursor> e para forçar <xref:System.Windows.Input.Cursor> em todos os elementos, defina o <xref:System.Windows.Input.Mouse.OverrideCursor%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="96c22-584">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="96c22-585">Para definir o cursor sobre um elemento específico, use o <xref:System.Windows.FrameworkElement.Cursor%2A> propriedade quanto <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="96c22-585">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="96c22-586">Para obter mais informações sobre os elementos base, consulte o [visão geral de elementos Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="96c22-586">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Mouse.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96c22-587">Força o mouse a sincronizar novamente.</span><span class="sxs-lookup"><span data-stu-id="96c22-587">Forces the mouse to resynchronize.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberSignature Language="F#" Value="static member UpdateCursor : unit -&gt; unit" Usage="System.Windows.Input.Mouse.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96c22-588">Força a atualização do cursor do mouse.</span><span class="sxs-lookup"><span data-stu-id="96c22-588">Forces the mouse cursor to be updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-589">Obtém o estado do primeiro botão estendido.</span><span class="sxs-lookup"><span data-stu-id="96c22-589">Gets the state of the first extended button.</span></span></summary>
        <value><span data-ttu-id="96c22-590">O estado do primeiro botão do mouse estendido.</span><span class="sxs-lookup"><span data-stu-id="96c22-590">The state of the first extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96c22-591">O exemplo a seguir mostra como determinar se o primeiro botão estendido do mouse é pressionado, verificando se o estado de <xref:System.Windows.Input.Mouse.XButton1%2A> é igual a <xref:System.Windows.Input.MouseButtonState> valor de enumeração <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="96c22-591">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="96c22-592">Se o botão é pressionado, um método é chamado de quais atualizações exibem elementos no exemplo.</span><span class="sxs-lookup"><span data-stu-id="96c22-592">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96c22-593">Obtém o estado do segundo botão estendido.</span><span class="sxs-lookup"><span data-stu-id="96c22-593">Gets the state of the second extended button.</span></span></summary>
        <value><span data-ttu-id="96c22-594">O estado do segundo botão do mouse estendido.</span><span class="sxs-lookup"><span data-stu-id="96c22-594">The state of the second extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="96c22-595">O exemplo a seguir mostra como determinar se o segundo botão estendido do mouse é pressionado, verificando se o estado de <xref:System.Windows.Input.Mouse.XButton2%2A> é igual a <xref:System.Windows.Input.MouseButtonState> valor de enumeração <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="96c22-595">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="96c22-596">Se o botão é pressionado, um método é chamado de quais atualizações exibem elementos no exemplo.</span><span class="sxs-lookup"><span data-stu-id="96c22-596">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>