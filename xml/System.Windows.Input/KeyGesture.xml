<Type Name="KeyGesture" FullName="System.Windows.Input.KeyGesture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0502ad4878935fe7a08def19c5e36b616ab6ce52" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGesture : System::Windows::Input::InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cc3ed-101">Define um gesto de entrada de teclado que pode ser usado para invocar um comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc3ed-101">Defines a keyboard combination that can be used to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-102">Na maioria dos casos, um <xref:System.Windows.Input.KeyGesture> deve estar associado um ou mais <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-102">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="cc3ed-103">As exceções a essa regra são as teclas de função e as chaves de teclado numérico, que podem ser um válido <xref:System.Windows.Input.KeyGesture> por si mesmos.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-103">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="cc3ed-104">Por exemplo, você pode criar um <xref:System.Windows.Input.KeyGesture> usando somente a tecla F12, mas usar o X da chave em um <xref:System.Windows.Input.KeyGesture> ele deve estar combinado com uma tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-104">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 <span data-ttu-id="cc3ed-105">Em geral, você pode</span><span class="sxs-lookup"><span data-stu-id="cc3ed-105">In general, you can</span></span>  
  
 <span data-ttu-id="cc3ed-106">Você pode usar um <xref:System.Windows.Input.KeyBinding> para associar um <xref:System.Windows.Input.KeyGesture> para um <xref:System.Windows.Input.ICommand>, de modo que o comando é invocado quando o <xref:System.Windows.Input.KeyGesture> ocorre.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-106">You can use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to an <xref:System.Windows.Input.ICommand>, so that the command is invoked when the <xref:System.Windows.Input.KeyGesture> occurs.</span></span>  
  
 <span data-ttu-id="cc3ed-107">Para <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usos, a propriedade que geralmente é definida em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] é <xref:System.Windows.Input.KeyBinding.Gesture%2A>, em casos onde o gesto representa uma chave padrão e uma chave de modificador.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-107">For <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.KeyBinding.Gesture%2A>, in cases where the gesture represents both a standard key and a modifier key.</span></span> <span data-ttu-id="cc3ed-108">Você também pode definir o <xref:System.Windows.Input.KeyBinding.Gesture%2A> combinação da chave de propriedade para ser uma tecla de função ou apenas um modificador.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-108">You can also set the <xref:System.Windows.Input.KeyBinding.Gesture%2A> property to be just a function key, or just a modifier key combination.</span></span> <span data-ttu-id="cc3ed-109">No entanto, é mais comum para definir a <xref:System.Windows.Input.KeyBinding.Key%2A> propriedade se a associação de comando pretendido é uma tecla de função com nenhum modificador ou <xref:System.Windows.Input.KeyBinding.Modifiers%2A> se a associação de comando pretendido é apenas as teclas modificadoras.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-109">However, it is more common to set the <xref:System.Windows.Input.KeyBinding.Key%2A> property if the intended command binding is a function key with no modifiers, or <xref:System.Windows.Input.KeyBinding.Modifiers%2A> if the intended command binding is for modifier keys only.</span></span>  
  
<a name="xamlAttributeUsage_KeyGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="cc3ed-110">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="cc3ed-110">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreModifierKeys+key"/>  
- or -  
<object property="functionKey"/>  
```  
  
<a name="xamlValues_KeyGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="cc3ed-111">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="cc3ed-111">XAML Values</span></span>  
 `functionKey`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="cc3ed-112">Um único valor de chave, que deve ser uma das teclas de função (F1-12) ou chaves de teclado numérico.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-112">A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="cc3ed-113">Um ou mais teclas modificadoras, definidas pelo <xref:System.Windows.Input.ModifierKeys> enumeração, delimitada por um caractere "+".</span><span class="sxs-lookup"><span data-stu-id="cc3ed-113">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 `key`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="cc3ed-114">Um valor de chave único.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-114">A single key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3ed-115">O exemplo a seguir mostra como associar o <xref:System.Windows.Input.ApplicationCommands.Close%2A> comando um <xref:System.Windows.Input.KeyGesture> usando um <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-115">The following example shows how to bind the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command to a <xref:System.Windows.Input.KeyGesture> using a <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 <span data-ttu-id="cc3ed-116">O exemplo a seguir mostra como usar <xref:System.Windows.Input.KeyGesture> em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="cc3ed-116">The following example shows how to use <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="cc3ed-117">Observe que o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uso diretamente não declara um `<KeyGesture>` elemento.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-117">Note that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage does not directly declare a `<KeyGesture>` element.</span></span> <span data-ttu-id="cc3ed-118">Uso do elemento de objeto não é possível porque <xref:System.Windows.Input.KeyGesture> não expõe um construtor padrão público.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-118">That object element usage is not possible because <xref:System.Windows.Input.KeyGesture> does not expose a public default constructor.</span></span> <span data-ttu-id="cc3ed-119">Em vez disso, o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uso usa o comportamento de typeconverter para declarar um inteiro <xref:System.Windows.Input.KeyGesture> embutidos como o `Gesture` valor do atributo.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-119">Instead, the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage uses the typeconverter behavior to declare an entire <xref:System.Windows.Input.KeyGesture> inline as the `Gesture` attribute value.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc3ed-120">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cc3ed-121">A chave associada a este gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-121">The key associated with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc3ed-122">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyGesture" /> com o <see cref="T:System.Windows.Input.Key" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-123">Na maioria dos casos, um <xref:System.Windows.Input.KeyGesture> deve estar associado um ou mais <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-123">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="cc3ed-124">As exceções a essa regra são as teclas de função e as chaves de teclado numérico, que podem ser um válido <xref:System.Windows.Input.KeyGesture> por si mesmos.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-124">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3ed-125">O exemplo a seguir mostra como usar o construtor para criar um <xref:System.Windows.Input.KeyGesture> e associá-la a um <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-125">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span>  <span data-ttu-id="cc3ed-126">O <xref:System.Windows.Input.KeyBinding> é adicionada para o <xref:System.Windows.Input.InputBindingCollection> de um <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-126">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithnomodifier)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithnomodifier)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="cc3ed-127">
            <paramref name="key" /> não é um <see cref="T:System.Windows.Input.Key" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-127">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cc3ed-128">
            <paramref name="key" /> não é um <see cref="T:System.Windows.Input.KeyGesture" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-128">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cc3ed-129">A chave associada ao gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-129">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="cc3ed-130">As teclas modificadoras associadas ao gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-130">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc3ed-131">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyGesture" /> com o <see cref="T:System.Windows.Input.Key" /> e <see cref="T:System.Windows.Input.ModifierKeys" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-132">Na maioria dos casos, um <xref:System.Windows.Input.KeyGesture> deve estar associado um ou mais <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-132">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="cc3ed-133">As exceções a essa regra são as teclas de função e as chaves de teclado numérico, que podem ser um válido <xref:System.Windows.Input.KeyGesture> por si mesmos.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-133">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3ed-134">O exemplo a seguir mostra como usar o construtor para criar um <xref:System.Windows.Input.KeyGesture> e associá-la a um <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-134">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span> <span data-ttu-id="cc3ed-135">O <xref:System.Windows.Input.KeyBinding> é adicionada para o <xref:System.Windows.Input.InputBindingCollection> de um <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-135">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="cc3ed-136">
            <paramref name="modifiers" /> não é um <see cref="T:System.Windows.Input.ModifierKeys" /> válido</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-136">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          </span>
          <span data-ttu-id="cc3ed-137">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-137">-or-</span>
          </span>
          <span data-ttu-id="cc3ed-138">
            <paramref name="key" /> não é um <see cref="T:System.Windows.Input.Key" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-138">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cc3ed-139">
            <paramref name="key" /> e <paramref name="modifiers" /> não formam um <see cref="T:System.Windows.Input.KeyGesture" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-139">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers, string displayString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers, string displayString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers, System::String ^ displayString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
        <Parameter Name="displayString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cc3ed-140">A chave associada ao gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-140">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="cc3ed-141">As teclas modificadoras associadas ao gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-141">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <param name="displayString">
          <span data-ttu-id="cc3ed-142">Uma representação da cadeia de caracteres do <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-142">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc3ed-143">Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.KeyGesture" /> com a cadeia de caracteres de exibição, <see cref="T:System.Windows.Input.Key" /> e <see cref="T:System.Windows.Input.ModifierKeys" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-143">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-144">O <xref:System.Windows.Input.KeyGesture.DisplayString%2A> está definida como o `displayString` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-144">The <xref:System.Windows.Input.KeyGesture.DisplayString%2A> property is set to the `displayString` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="cc3ed-145">
            <paramref name="modifiers" /> não é um <see cref="T:System.Windows.Input.ModifierKeys" /> válido</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-145">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" /></span>
          </span>
          <span data-ttu-id="cc3ed-146">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-146">-or-</span>
          </span>
          <span data-ttu-id="cc3ed-147">
            <paramref name="key" /> não é um <see cref="T:System.Windows.Input.Key" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-147">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc3ed-148">
            <paramref name="displayString" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-148">
              <paramref name="displayString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cc3ed-149">
            <paramref name="key" /> e <paramref name="modifiers" /> não formam um <see cref="T:System.Windows.Input.KeyGesture" /> válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-149">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="DisplayString">
      <MemberSignature Language="C#" Value="public string DisplayString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.DisplayString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc3ed-150">Obtém uma representação da cadeia de caracteres desse <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-150">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc3ed-151">A cadeia de caracteres de exibição de <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-151">The display string for this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="cc3ed-152">O valor padrão é <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-152">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-153">Se uma cadeia de caracteres de exibição não foi definida no construtor, uma cadeia de caracteres vazia é retornada.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-153">If a display string was not set in the constructor, an empty string is returned.</span></span>  
  
 <span data-ttu-id="cc3ed-154">Se essa propriedade estiver vazia, o <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> método retorna uma cadeia de caracteres criada a partir de <xref:System.Windows.Input.KeyGesture.Key%2A> e <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-154">If this property is empty, the <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> method returns a string created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStringForCulture">
      <MemberSignature Language="C#" Value="public string GetDisplayStringForCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDisplayStringForCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDisplayStringForCulture (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDisplayStringForCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="cc3ed-155">As informações específicas à cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-155">The culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc3ed-156">Retorna uma cadeia de caracteres que pode ser usada para exibir o <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-156">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc3ed-157">A cadeia de caracteres a exibir</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-157">The string to display</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-158">Se a cadeia de caracteres de exibição foi definida pelo construtor, cadeia de caracteres retornada; Caso contrário, uma cadeia de caracteres é criada a partir de <xref:System.Windows.Input.KeyGesture.Key%2A> e <xref:System.Windows.Input.KeyGesture.Modifiers%2A> com qualquer conversões necessárias sejam regidos por especificado <xref:System.Globalization.CultureInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-158">If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A> with any necessary conversions being governed by the specified <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc3ed-159">Obtém a chave associada a este <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-159">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc3ed-160">A chave associada ao gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-160">The key associated with the gesture.</span>
          </span>
          <span data-ttu-id="cc3ed-161">O valor padrão é <see cref="F:System.Windows.Input.Key.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-161">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-162">Na maioria dos casos, um <xref:System.Windows.Input.KeyGesture> deve estar associado um ou mais <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-162">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="cc3ed-163">As exceções a essa regra são as teclas de função e as chaves de teclado numérico, que podem ser um válido <xref:System.Windows.Input.KeyGesture> por si mesmos.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-163">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">
          <span data-ttu-id="cc3ed-164">O destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-164">The target.</span>
          </span>
        </param>
        <param name="inputEventArgs">
          <span data-ttu-id="cc3ed-165">Os dados de evento de entrada aos quais comparar esse gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-165">The input event data to compare this gesture to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc3ed-166">Determina se este <see cref="T:System.Windows.Input.KeyGesture" /> corresponde à entrada associada ao objeto <see cref="T:System.Windows.Input.InputEventArgs" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-166">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc3ed-167">
            <see langword="true" /> se os dados do evento corresponderem a este <see cref="T:System.Windows.Input.KeyGesture" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-167">
              <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-168">`targetElement` pode ser usado para tomar uma decisão mais específica sobre se um comando deve ser chamado em um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-168">`targetElement` can be used to make a more specific decision on whether a command should be invoked on a specific element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc3ed-169">O exemplo a seguir mostra como testar se um <xref:System.Windows.Input.KeyGesture> corresponde a entrada associada a uma instância de um <xref:System.Windows.Input.InputEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-169">The following example shows how to test whether a <xref:System.Windows.Input.KeyGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="cc3ed-170">Um <xref:System.Windows.UIElement.KeyDown> manipulador de eventos é criado que compara os dados de evento com o <xref:System.Windows.Input.KeyGesture> usando o <xref:System.Windows.Input.KeyGesture.Matches%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-170">A <xref:System.Windows.UIElement.KeyDown> event handler is created that compares the event data with the <xref:System.Windows.Input.KeyGesture> by using the <xref:System.Windows.Input.KeyGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlerkeygesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlerkeygesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc3ed-171">Obtém as teclas modificadoras associadas a este <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-171">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc3ed-172">As teclas modificadoras associadas ao gesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-172">The modifier keys associated with the gesture.</span>
          </span>
          <span data-ttu-id="cc3ed-173">O valor padrão é <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc3ed-173">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc3ed-174">Na maioria dos casos, um <xref:System.Windows.Input.KeyGesture> deve estar associado um ou mais <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-174">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="cc3ed-175">As exceções a essa regra são as teclas de função e as chaves de teclado numérico, que podem ser um válido <xref:System.Windows.Input.KeyGesture> por si mesmos.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-175">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="cc3ed-176">Por exemplo, você pode criar um <xref:System.Windows.Input.KeyGesture> usando somente a tecla F12, mas usar o X da chave em um <xref:System.Windows.Input.KeyGesture> ele deve estar combinado com uma tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="cc3ed-176">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
  </Members>
</Type>