<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6a35c8921b834456b837012f8343063f421434a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27a0a-101">Define um objeto que sabe como invocar um comando.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27a0a-101">Defines an object that knows how to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a0a-102">A fonte de comando define como um comando é invocado por esse objeto em particular.</span><span class="sxs-lookup"><span data-stu-id="27a0a-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="27a0a-103">Por exemplo, se um <xref:System.Windows.Controls.Button> está associado um comando, o comando é invocado quando o <xref:System.Windows.Controls.Button> é clicado.</span><span class="sxs-lookup"><span data-stu-id="27a0a-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="27a0a-104">Uma fonte de comando normalmente será desabilitado se o comando que é associado não é possível executar o destino de comando atual.</span><span class="sxs-lookup"><span data-stu-id="27a0a-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="27a0a-105">Por exemplo, um <xref:System.Windows.Controls.MenuItem> associados a <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comando cinza em si-out quando o <xref:System.Windows.Input.ApplicationCommands.Paste%2A> não é possível executar comando de destino do comando atual.</span><span class="sxs-lookup"><span data-stu-id="27a0a-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="27a0a-106">Normalmente, uma fonte de comando escutará o <xref:System.Windows.Input.ICommand.CanExecuteChanged> evento no comando.</span><span class="sxs-lookup"><span data-stu-id="27a0a-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="27a0a-107">Isso informa a fonte de comando quando alterar condições no destino de comando, como perda de foco do teclado.</span><span class="sxs-lookup"><span data-stu-id="27a0a-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="27a0a-108">A fonte de comando, em seguida, pode consultar o comando usando o <xref:System.Windows.Input.ICommand.CanExecute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="27a0a-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="27a0a-109">Algumas das classes em [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] que implementam <xref:System.Windows.Input.ICommandSource> são: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, e <xref:System.Windows.Documents.Hyperlink>.</span><span class="sxs-lookup"><span data-stu-id="27a0a-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="27a0a-110">No [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] comandos de sistema, o <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriedade em uma <xref:System.Windows.Input.ICommandSource> só é aplicável quando o <xref:System.Windows.Input.ICommand> é um <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="27a0a-110">In the [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="27a0a-111">Se o <xref:System.Windows.Input.InputBinding.CommandTarget%2A> é definido em um <xref:System.Windows.Input.ICommandSource> e o comando correspondente não é um <xref:System.Windows.Input.RoutedCommand>, o destino do comando será ignorado.</span><span class="sxs-lookup"><span data-stu-id="27a0a-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a0a-112">Obtém o comando que será executado quando a fonte do comando for invocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a0a-112">Gets the command that will be executed when the command source is invoked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a0a-113">O comando que será executado quando a fonte do comando for invocada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a0a-113">The command that will be executed when the command source is invoked.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a0a-114">Representa um valor de dados definido pelo usuário que pode ser passado para o comando quando ele é executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a0a-114">Represents a user defined data value that can be passed to the command when it is executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a0a-115">Os dados específicos do comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a0a-115">The command specific data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a0a-116">Normalmente, o <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> é usado para transmitir informações específicas para o comando quando ele é executado.</span><span class="sxs-lookup"><span data-stu-id="27a0a-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="27a0a-117">O tipo de dados é definido pelo comando.</span><span class="sxs-lookup"><span data-stu-id="27a0a-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a0a-118">O objeto no qual o comando está sendo executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a0a-118">The object that the command is being executed on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a0a-119">O objeto no qual o comando está sendo executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a0a-119">The object that the command is being executed on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a0a-120">No [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] comandos de sistema, o <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriedade em uma <xref:System.Windows.Input.ICommandSource> só é aplicável quando o <xref:System.Windows.Input.ICommand> é um <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="27a0a-120">In the [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="27a0a-121">Se o <xref:System.Windows.Input.InputBinding.CommandTarget%2A> é definido em um <xref:System.Windows.Input.ICommandSource> e o comando correspondente não é um <xref:System.Windows.Input.RoutedCommand>, o destino do comando será ignorado.</span><span class="sxs-lookup"><span data-stu-id="27a0a-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="27a0a-122">Quando usado com um <xref:System.Windows.Input.RoutedCommand>, o destino do comando é o objeto no qual o <xref:System.Windows.Input.CommandManager.Executed> e <xref:System.Windows.Input.CommandManager.CanExecute> os eventos são gerados.</span><span class="sxs-lookup"><span data-stu-id="27a0a-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="27a0a-123">Se o <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> propriedade não for definida, o elemento com o foco do teclado será usado como o destino.</span><span class="sxs-lookup"><span data-stu-id="27a0a-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>