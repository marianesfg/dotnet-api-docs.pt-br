<Type Name="InputMethod" FullName="System.Windows.Input.InputMethod">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9c79fd6234b942ea2df53f714fd98b70c25bb0c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660070" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InputMethod : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputMethod extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class InputMethod&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputMethod : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece recursos para gerenciar e interagir com a Estrutura de Serviços de Texto, que dá suporte para métodos de entrada de texto alternativos como fala e manuscrito.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar um <xref:System.Windows.Input.InputMethod> objeto.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.InputLanguageManager" />
    <altmember cref="T:System.Windows.Input.TextComposition" />
    <altmember cref="T:System.Windows.Input.InputMethodState" />
    <altmember cref="T:System.Windows.Input.InputMethodStateChangedEventArgs" />
    <altmember cref="T:System.Windows.Input.InputMethodStateChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CanShowConfigurationUI">
      <MemberSignature Language="C#" Value="public bool CanShowConfigurationUI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShowConfigurationUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShowConfigurationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShowConfigurationUI { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se esse método de entrada pode ou não exibir [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de configuração.</summary>
        <value>**True** se configuração [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] pode ser exibido; caso contrário, **false**.  
  
 Esta propriedade não tem valor padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.InputMethod.CanShowConfigurationUI%2A> para determinar se a configuração da interface do usuário é visível.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
      </Docs>
    </Member>
    <Member MemberName="CanShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public bool CanShowRegisterWordUI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShowRegisterWordUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanShowRegisterWordUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShowRegisterWordUI { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se esse método de entrada pode exibir [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de registro de palavras.</summary>
        <value>**True** se registro de palavras [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] pode ser exibido; caso contrário, **false**.  
  
 Esta propriedade não tem valor padrão.</value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputMethod Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.InputMethod Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As InputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::InputMethod ^ Current { System::Windows::Input::InputMethod ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma referência a qualquer método de entrada ativo atualmente associado ao contexto atual.</summary>
        <value>Uma referência a um <see cref="T:System.Windows.Input.InputMethod" /> objeto associado ao contexto atual, ou **nulo** se não houver nenhum método de entrada ativado.  
  
 Esta propriedade não tem valor padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.InputMethod.Current%2A> propriedade.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInputScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputScope GetInputScope (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.InputScope GetInputScope(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetInputScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInputScope (target As DependencyObject) As InputScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::InputScope ^ GetInputScope(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência para o qual recuperar o escopo de entrada.</param>
        <summary>Retorna o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.InputScope" /> para um objeto de dependência especificado.</summary>
        <returns>Um objeto <see cref="T:System.Windows.Input.InputScope" /> que representa o escopo de entrada atual para o objeto de dependência especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetInputScope(System.Windows.DependencyObject,System.Windows.Input.InputScope)" />
      </Docs>
    </Member>
    <Member MemberName="GetIsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsInputMethodEnabled (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsInputMethodEnabled(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsInputMethodEnabled (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsInputMethodEnabled(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência para o qual recuperar o valor de <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" />.</param>
        <summary>Retorna o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> para um objeto de dependência especificado.</summary>
        <returns>O valor atual do <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> para o objeto de dependência especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetIsInputMethodSuspended">
      <MemberSignature Language="C#" Value="public static bool GetIsInputMethodSuspended (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsInputMethodSuspended(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetIsInputMethodSuspended(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsInputMethodSuspended (target As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsInputMethodSuspended(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência para o qual recuperar o valor de <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" />.</param>
        <summary>Retorna o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> para um objeto de dependência especificado.</summary>
        <returns>O valor atual do <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> para o objeto de dependência especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetIsInputMethodSuspended(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredImeConversionMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ImeConversionModeValues GetPreferredImeConversionMode (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ImeConversionModeValues GetPreferredImeConversionMode(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreferredImeConversionMode (target As DependencyObject) As ImeConversionModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ImeConversionModeValues GetPreferredImeConversionMode(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeConversionModeValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência para o qual recuperar o valor de <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />.</param>
        <summary>Retorna o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> para um objeto de dependência especificado.</summary>
        <returns>Um membro da enumeração <see cref="T:System.Windows.Input.ImeConversionModeValues" /> especificando o atual <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> para o objeto de dependência especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredImeSentenceMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ImeSentenceModeValues GetPreferredImeSentenceMode (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ImeSentenceModeValues GetPreferredImeSentenceMode(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetPreferredImeSentenceMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreferredImeSentenceMode (target As DependencyObject) As ImeSentenceModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ImeSentenceModeValues GetPreferredImeSentenceMode(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeSentenceModeValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência para o qual recuperar o valor de <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />.</param>
        <summary>Retorna o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> para um objeto de dependência especificado.</summary>
        <returns>Um membro da enumeração <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> especificando o atual <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> para o objeto de dependência especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetPreferredImeSentenceMode(System.Windows.DependencyObject,System.Windows.Input.ImeSentenceModeValues)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredImeState">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputMethodState GetPreferredImeState (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.InputMethodState GetPreferredImeState(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreferredImeState (target As DependencyObject) As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::InputMethodState GetPreferredImeState(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência para o qual recuperar o valor de <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" />.</param>
        <summary>Retorna o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> para um objeto de dependência especificado.</summary>
        <returns>Um membro da enumeração <see cref="T:System.Windows.Input.InputMethodState" /> especificando o atual <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> para o objeto de dependência especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)" />
      </Docs>
    </Member>
    <Member MemberName="HandwritingState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputMethodState HandwritingState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputMethodState HandwritingState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.HandwritingState" />
      <MemberSignature Language="VB.NET" Value="Public Property HandwritingState As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputMethodState HandwritingState { System::Windows::Input::InputMethodState get(); void set(System::Windows::Input::InputMethodState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estado atual da entrada do manuscrito para esse método de entrada.</summary>
        <value>Membro de <see cref="T:System.Windows.Input.InputMethodState" /> enumeração que especifica o estado atual do método de entrada para a entrada de manuscrito.  
  
 O valor padrão é <see cref="F:System.Windows.Input.InputMethodState.Off" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.InputMethod.Current%2A> propriedade.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeState" />
        <altmember cref="P:System.Windows.Input.InputMethod.MicrophoneState" />
      </Docs>
    </Member>
    <Member MemberName="ImeConversionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ImeConversionModeValues ImeConversionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ImeConversionModeValues ImeConversionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.ImeConversionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeConversionMode As ImeConversionModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ImeConversionModeValues ImeConversionMode { System::Windows::Input::ImeConversionModeValues get(); void set(System::Windows::Input::ImeConversionModeValues value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeConversionModeValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de conversão atual para o editor do método de entrada associado a este método de entrada.</summary>
        <value>Membro de <see cref="T:System.Windows.Input.ImeConversionModeValues" /> enumeração que especifica o modo de conversão.  
  
 O valor padrão é <see cref="F:System.Windows.Input.ImeConversionModeValues.Alphanumeric" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeSentenceMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeSentenceMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ImeSentenceModeValues ImeSentenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ImeSentenceModeValues ImeSentenceMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.ImeSentenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeSentenceMode As ImeSentenceModeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ImeSentenceModeValues ImeSentenceMode { System::Windows::Input::ImeSentenceModeValues get(); void set(System::Windows::Input::ImeSentenceModeValues value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ImeSentenceModeValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de sentença atual para o editor do método de entrada associado a este método de entrada.</summary>
        <value>Membro de <see cref="T:System.Windows.Input.ImeSentenceModeValues" /> enumerações especificando o modo de sentença.  
  
 O valor padrão é <see cref="F:System.Windows.Input.ImeSentenceModeValues.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.InputMethod.ImeSentenceMode%2A> propriedade.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeConversionMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputMethodState ImeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputMethodState ImeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.ImeState" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeState As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputMethodState ImeState { System::Windows::Input::InputMethodState get(); void set(System::Windows::Input::InputMethodState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estado atual para o editor do método de entrada associado a este método de entrada.</summary>
        <value>Membro de <see cref="T:System.Windows.Input.InputMethodState" /> enumeração que especifica o estado do editor de método de entrada associado a este método de entrada.  
  
 O valor padrão é <see cref="F:System.Windows.Input.InputMethodState.Off" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.HandwritingState" />
        <altmember cref="P:System.Windows.Input.InputMethod.MicrophoneState" />
      </Docs>
    </Member>
    <Member MemberName="InputScope">
      <MemberSignature Language="C#" Value="see GetInputScope, and SetInputScope" />
      <MemberSignature Language="ILAsm" Value="see GetInputScope, and SetInputScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.InputScope" />
      <MemberSignature Language="VB.NET" Value="see GetInputScope, and SetInputScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.InputScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputScopeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Input.InputMethod.InputScope" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsInputMethodEnabled, and SetIsInputMethodEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInputMethodEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInputMethodEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.IsInputMethodEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInputMethodEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInputMethodEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodSuspended">
      <MemberSignature Language="C#" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberSignature Language="ILAsm" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" />
      <MemberSignature Language="VB.NET" Value="see GetIsInputMethodSuspended, and SetIsInputMethodSuspended" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodSuspendedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInputMethodSuspendedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInputMethodSuspendedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.IsInputMethodSuspendedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInputMethodSuspendedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInputMethodSuspendedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrophoneState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputMethodState MicrophoneState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.InputMethodState MicrophoneState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.MicrophoneState" />
      <MemberSignature Language="VB.NET" Value="Public Property MicrophoneState As InputMethodState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputMethodState MicrophoneState { System::Windows::Input::InputMethodState get(); void set(System::Windows::Input::InputMethodState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o estado atual da entrada do microfone para esse método de entrada.</summary>
        <value>Um membro da enumeração <see cref="T:System.Windows.Input.InputMethodState" /> que especifica o estado do método de entrada atual para a entrada do microfone.  
  
 O valor padrão é <see cref="F:System.Windows.Input.InputMethodState.Off" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para acessar informações sobre o estado do microfone.  Enumeração associada: <see cref="T:System.Security.Permissions.PermissionState" />.** Irrestrito**.</permission>
        <altmember cref="P:System.Windows.Input.InputMethod.ImeState" />
        <altmember cref="P:System.Windows.Input.InputMethod.HandwritingState" />
      </Docs>
    </Member>
    <Member MemberName="PreferredImeConversionMode">
      <MemberSignature Language="C#" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberSignature Language="ILAsm" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />
      <MemberSignature Language="VB.NET" Value="see GetPreferredImeConversionMode, and SetPreferredImeConversionMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeConversionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PreferredImeConversionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PreferredImeConversionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.PreferredImeConversionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreferredImeConversionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PreferredImeConversionModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeSentenceMode">
      <MemberSignature Language="C#" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberSignature Language="ILAsm" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />
      <MemberSignature Language="VB.NET" Value="see GetPreferredImeSentenceMode, and SetPreferredImeSentenceMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeSentenceModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PreferredImeSentenceModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PreferredImeSentenceModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.PreferredImeSentenceModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreferredImeSentenceModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PreferredImeSentenceModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeState">
      <MemberSignature Language="C#" Value="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberSignature Language="ILAsm" Value="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.PreferredImeState" />
      <MemberSignature Language="VB.NET" Value="see GetPreferredImeState, and SetPreferredImeState" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImeStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PreferredImeStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PreferredImeStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputMethod.PreferredImeStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreferredImeStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PreferredImeStateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> anexada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputScope">
      <MemberSignature Language="C#" Value="public static void SetInputScope (System.Windows.DependencyObject target, System.Windows.Input.InputScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInputScope(class System.Windows.DependencyObject target, class System.Windows.Input.InputScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetInputScope(System.Windows.DependencyObject,System.Windows.Input.InputScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetInputScope (target As DependencyObject, value As InputScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetInputScope(System::Windows::DependencyObject ^ target, System::Windows::Input::InputScope ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.InputScope" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência no qual a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.InputScope" /> é definida.</param>
        <param name="value">Um objeto <see cref="T:System.Windows.Input.InputScope" /> que representa o novo valor para a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.InputScope" />.</param>
        <summary>Define o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.InputScope" /> no objeto de dependência especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.InputMethod.SetInputScope%2A> método para determinar a <xref:System.Windows.Input.InputScope> associado com um <xref:System.Windows.Controls.TextBox> objeto.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetInputScope(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetIsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsInputMethodEnabled (System.Windows.DependencyObject target, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsInputMethodEnabled(class System.Windows.DependencyObject target, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsInputMethodEnabled (target As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsInputMethodEnabled(System::Windows::DependencyObject ^ target, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência no qual a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> é definida.</param>
        <param name="value">O novo valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" />.</param>
        <summary>Define o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> no objeto de dependência especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetIsInputMethodSuspended">
      <MemberSignature Language="C#" Value="public static void SetIsInputMethodSuspended (System.Windows.DependencyObject target, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsInputMethodSuspended(class System.Windows.DependencyObject target, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetIsInputMethodSuspended(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsInputMethodSuspended (target As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsInputMethodSuspended(System::Windows::DependencyObject ^ target, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência no qual a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> é definida.</param>
        <param name="value">O novo valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" />.</param>
        <summary>Define o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.IsInputMethodSuspended" /> no objeto de dependência especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetIsInputMethodSuspended(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredImeConversionMode">
      <MemberSignature Language="C#" Value="public static void SetPreferredImeConversionMode (System.Windows.DependencyObject target, System.Windows.Input.ImeConversionModeValues value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredImeConversionMode(class System.Windows.DependencyObject target, valuetype System.Windows.Input.ImeConversionModeValues value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetPreferredImeConversionMode (target As DependencyObject, value As ImeConversionModeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPreferredImeConversionMode(System::Windows::DependencyObject ^ target, System::Windows::Input::ImeConversionModeValues value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.ImeConversionModeValues" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência no qual a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> é definida.</param>
        <param name="value">Um membro da enumeração <see cref="T:System.Windows.Input.ImeConversionModeValues" /> que representa o novo valor para a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" />.</param>
        <summary>Define o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> no objeto de dependência especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredImeSentenceMode">
      <MemberSignature Language="C#" Value="public static void SetPreferredImeSentenceMode (System.Windows.DependencyObject target, System.Windows.Input.ImeSentenceModeValues value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredImeSentenceMode(class System.Windows.DependencyObject target, valuetype System.Windows.Input.ImeSentenceModeValues value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetPreferredImeSentenceMode(System.Windows.DependencyObject,System.Windows.Input.ImeSentenceModeValues)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetPreferredImeSentenceMode (target As DependencyObject, value As ImeSentenceModeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPreferredImeSentenceMode(System::Windows::DependencyObject ^ target, System::Windows::Input::ImeSentenceModeValues value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.ImeSentenceModeValues" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência no qual a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> é definida.</param>
        <param name="value">Um membro da enumeração <see cref="T:System.Windows.Input.ImeConversionModeValues" /> que representa o novo valor para a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" />.</param>
        <summary>Define o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeSentenceMode" /> no objeto de dependência especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetPreferredImeSentenceMode(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredImeState">
      <MemberSignature Language="C#" Value="public static void SetPreferredImeState (System.Windows.DependencyObject target, System.Windows.Input.InputMethodState value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredImeState(class System.Windows.DependencyObject target, valuetype System.Windows.Input.InputMethodState value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetPreferredImeState (target As DependencyObject, value As InputMethodState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPreferredImeState(System::Windows::DependencyObject ^ target, System::Windows::Input::InputMethodState value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Input.InputMethodState" />
      </Parameters>
      <Docs>
        <param name="target">O objeto de dependência no qual a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> é definida.</param>
        <param name="value">Um membro da enumeração <see cref="T:System.Windows.Input.ImeConversionModeValues" /> que representa o novo valor para a propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" />.</param>
        <summary>Define o valor da propriedade anexada <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> no objeto de dependência especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Acionado quando <paramref name="target" /> é **null**.</exception>
        <altmember cref="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowConfigureUI">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exibe a UI (interface do usuário) de configuração associada ao serviço de texto do teclado ativo no momento.</summary>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowConfigureUI">
      <MemberSignature Language="C#" Value="public void ShowConfigureUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowConfigureUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowConfigureUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowConfigureUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowConfigureUI();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exibe o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de configuração associado ao serviço de texto do teclado ativo no momento.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowConfigureUI(System.Windows.UIElement)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      </Docs>
    </Member>
    <Member MemberName="ShowConfigureUI">
      <MemberSignature Language="C#" Value="public void ShowConfigureUI (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowConfigureUI(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowConfigureUI(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowConfigureUI (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowConfigureUI(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">Um <see cref="T:System.Windows.UIElement" /> que será usado como o elemento pai para o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de configuração.  Esse parâmetro pode ser <see langword="null" />.</param>
        <summary>Exibe o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de configuração associado ao serviço de texto do teclado ativo no momento, usando um <see cref="T:System.Windows.UIElement" /> especificado como o elemento pai do [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de configuração.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowConfigurationUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowConfigureUI" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowRegisterWordUI">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exibe a UI (interface do usuário) de registro de palavras associada ao serviço de texto do teclado ativo no momento.</summary>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public void ShowRegisterWordUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowRegisterWordUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowRegisterWordUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowRegisterWordUI();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exibe o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de registro de palavras associado ao serviço de texto do teclado ativo no momento.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.String)" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </Member>
    <Member MemberName="ShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public void ShowRegisterWordUI (string registeredText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowRegisterWordUI(string registeredText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowRegisterWordUI (registeredText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowRegisterWordUI(System::String ^ registeredText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registeredText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registeredText">Uma cadeia de caracteres que especifica um valor a ser registrado.</param>
        <summary>Exibe o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de registro de palavras associado ao serviço de texto do teclado ativo no momento.  Aceita uma cadeia de caracteres especificada como o valor padrão a ser registrado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente o valor especificado pelo *registeredText* é usado para preencher previamente o registro de palavras [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </Member>
    <Member MemberName="ShowRegisterWordUI">
      <MemberSignature Language="C#" Value="public void ShowRegisterWordUI (System.Windows.UIElement element, string registeredText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowRegisterWordUI(class System.Windows.UIElement element, string registeredText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowRegisterWordUI (element As UIElement, registeredText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowRegisterWordUI(System::Windows::UIElement ^ element, System::String ^ registeredText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="registeredText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">Um <see cref="T:System.Windows.UIElement" /> que será usado como o elemento pai para o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de registro de palavras.  Esse parâmetro pode ser <see langword="null" />.</param>
        <param name="registeredText">Uma cadeia de caracteres que especifica um valor a ser registrado.</param>
        <summary>Exibe o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de registro de palavras associado ao serviço de texto do teclado ativo no momento.  Aceita uma cadeia de caracteres especificada como o valor padrão a ser registrado, bem como um <see cref="T:System.Windows.UIElement" /> especificado como o elemento pai para o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de configuração.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente o valor especificado pelo *registeredText* é usado para preencher previamente o registro de palavras [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.InputMethod.CanShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI" />
        <altmember cref="M:System.Windows.Input.InputMethod.ShowRegisterWordUI(System.Windows.UIElement,System.String)" />
        <altmember cref="Overload:System.Windows.Input.InputMethod.ShowConfigureUI" />
      </Docs>
    </Member>
    <Member MemberName="SpeechMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.SpeechMode SpeechMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.SpeechMode SpeechMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputMethod.SpeechMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeechMode As SpeechMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::SpeechMode SpeechMode { System::Windows::Input::SpeechMode get(); void set(System::Windows::Input::SpeechMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.SpeechMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o modo de fala para esse método de entrada.</summary>
        <value>Membro de <see cref="T:System.Windows.Input.SpeechMode" /> enumeração que especifica o modo de fala atual.  
  
 O valor padrão é <see cref="F:System.Windows.Input.SpeechMode.Indeterminate" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra como usar o <xref:System.Windows.Input.InputMethod.SpeechMode%2A> propriedade.  
  
 [!code-csharp[languageManager#2](~/samples/snippets/csharp/VS_Snippets_Wpf/languageManager/CSharp/Window1.xaml.cs#2)]
 [!code-vb[languageManager#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/languageManager/visualbasic/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">para acessar informações sobre as configurações do modo de fala.  Enumeração associada: <see cref="T:System.Security.Permissions.PermissionState" />.** Irrestrito**.</permission>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.InputMethodStateChangedEventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.InputMethodStateChangedEventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputMethod.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As InputMethodStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::InputMethodStateChangedEventHandler ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputMethodStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o estado do método de entrada (representado pela propriedade <see cref="P:System.Windows.Input.InputMethod.ImeState" />) é alterado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.InputMethodStateChangedEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>