<Type Name="ManipulationDelta" FullName="System.Windows.Input.ManipulationDelta">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b0a48875a97e5f72317831a9e6c1caea75c593f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39991588" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationDelta" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationDelta extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDelta" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationDelta" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDelta" />
  <TypeSignature Language="F#" Value="type ManipulationDelta = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém dados de transformação acumulados quando ocorrem eventos de manipulação.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Input.ManipulationDelta> classe contém informações sobre as alterações na posição de uma manipulação.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interpreta as alterações como uma <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, ou <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. Quando o <xref:System.Windows.UIElement.ManipulationDelta> evento ocorre em um <xref:System.Windows.UIElement>, use as propriedades de um <xref:System.Windows.Input.ManipulationDelta> objeto para transformar o objeto que deve ser manipulado.  O <xref:System.Windows.Input.ManipulationDeltaEventArgs> classe fornece duas propriedades do tipo <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> e <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.  
  
 Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).  Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
   
  
## Examples  
 O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Windows.UIElement.ManipulationDelta> eventos.  O exemplo aplica-se a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, e <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propriedades para mover, redimensionar e girar um <xref:System.Windows.Shapes.Rectangle>. Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Vector translation, float64 rotation, valuetype System.Windows.Vector scale, valuetype System.Windows.Vector expansion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (translation As Vector, rotation As Double, scale As Vector, expansion As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationDelta(System::Windows::Vector translation, double rotation, System::Windows::Vector scale, System::Windows::Vector expansion);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.ManipulationDelta : System.Windows.Vector * double * System.Windows.Vector * System.Windows.Vector -&gt; System.Windows.Input.ManipulationDelta" Usage="new System.Windows.Input.ManipulationDelta (translation, rotation, scale, expansion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="translation" Type="System.Windows.Vector" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="scale" Type="System.Windows.Vector" />
        <Parameter Name="expansion" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="translation">O movimento linear da manipulação em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="rotation">A rotação da manipulação em graus.</param>
        <param name="scale">A quantidade de redimensionamento de uma manipulação como um multiplicador.</param>
        <param name="expansion">A quantidade de manipulação foi redimensionada em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Input.ManipulationDelta" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Expansion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Expansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Expansion { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Expansion : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a quantidade de redimensionamento da manipulação em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</summary>
        <value>A quantidade de manipulação foi redimensionada em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Input.ManipulationDelta.Scale%2A> e <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> ambas as propriedades de relatório uma manipulação de redimensionamento.  A diferença entre os dois é a maneira na qual o valor é relatado.  O <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> propriedade relata a manipulação de redimensionamento de [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. O <xref:System.Windows.Input.ManipulationDelta.Scale%2A> propriedade informa o valor como um multiplicador.  Se <xref:System.Windows.Input.ManipulationDelta.Scale%2A> é 0,5, a manipulação é interpretada como reduzir o tamanho em 50%.  Se <xref:System.Windows.Input.ManipulationDelta.Scale%2A> for 2, a manipulação é interpretada como aumentar o tamanho em 100 por cento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : double" Usage="System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a rotação da manipulação em graus.</summary>
        <value>A rotação da manipulação em graus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propriedade relatórios tal como uma manipulação é interpretada como girar em torno de um eixo.  O eixo geralmente é o ponto entre os dois pontos de contato que iniciou a manipulação.  
  
   
  
## Examples  
 O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Windows.UIElement.ManipulationDelta> eventos.  O exemplo aplica-se a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, e <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propriedades para mover, redimensionar e girar um <xref:System.Windows.Shapes.Rectangle>. Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Scale { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor que a manipulação redimensionou como um multiplicador.</summary>
        <value>O valor da manipulação foi redimensionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Input.ManipulationDelta.Scale%2A> e <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> ambas as propriedades de relatório uma manipulação de redimensionamento.  A diferença entre os dois é a maneira na qual o valor é relatado.  O <xref:System.Windows.Input.ManipulationDelta.Scale%2A> propriedade informa o valor como um multiplicador.  Se <xref:System.Windows.Input.ManipulationDelta.Scale%2A> é 0,5, a manipulação é interpretada como reduzir o tamanho em 50%.  Se <xref:System.Windows.Input.ManipulationDelta.Scale%2A> for 2, a manipulação é interpretada como aumentar o tamanho em 100 por cento. O <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> propriedade relata a manipulação de redimensionamento de [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].  
  
   
  
## Examples  
 O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Windows.UIElement.ManipulationDelta> eventos.  O exemplo aplica-se a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, e <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propriedades para mover, redimensionar e girar um <xref:System.Windows.Shapes.Rectangle>. Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Translation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Translation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Translation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Translation As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Translation { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Translation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o movimento linear da manipulação.</summary>
        <value>O movimento linear da manipulação em [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Input.ManipulationDelta.Translation%2A> propriedade relatórios tal como uma manipulação é interpretada como movimentação horizontalmente e verticalmente na tela.  
  
   
  
## Examples  
 O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Windows.UIElement.ManipulationDelta> eventos.  O exemplo aplica-se a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, e <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> propriedades para mover, redimensionar e girar um <xref:System.Windows.Shapes.Rectangle>. Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>