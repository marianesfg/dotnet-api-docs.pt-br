<Type Name="Freezable" FullName="System.Windows.Freezable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1d1529115d328a1d811aa8b586bd2a77931b537" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36460235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Freezable : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Freezable extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Freezable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Freezable&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Freezable abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Freezable = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ef21b-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      </span>
      <span data-ttu-id="ef21b-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-103">O <xref:System.Windows.Freezable> classe fornece recursos especiais que podem ajudar a melhoram o desempenho do aplicativo ao usar objetos que são caros de modificar ou copiar.</span><span class="sxs-lookup"><span data-stu-id="ef21b-103">The <xref:System.Windows.Freezable> class provides special features that can help improve application performance when using objects that are expensive to modify or copy.</span></span> <span data-ttu-id="ef21b-104">Exemplos de <xref:System.Windows.Freezable> objetos incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="ef21b-104">Examples of <xref:System.Windows.Freezable> objects include the following:</span></span>  
  
-   <xref:System.Windows.Media.Brush>  
  
-   <xref:System.Windows.Media.Pen>  
  
-   <xref:System.Windows.Media.Geometry>  
  
-   <xref:System.Windows.Media.Transform>  
  
-   <xref:System.Windows.Media.Animation.AnimationTimeline>  
  
## <a name="deriving-from-freezable"></a><span data-ttu-id="ef21b-105">Derivando de Freezable</span><span class="sxs-lookup"><span data-stu-id="ef21b-105">Deriving From Freezable</span></span>  
 <span data-ttu-id="ef21b-106">Uma classe que deriva de <xref:System.Windows.Freezable> obtém os recursos a seguir:</span><span class="sxs-lookup"><span data-stu-id="ef21b-106">A class that derives from <xref:System.Windows.Freezable> gains the following features:</span></span>  
  
-   <span data-ttu-id="ef21b-107">Estados especiais: estado somente leitura ("congelado") e um estado gravável.</span><span class="sxs-lookup"><span data-stu-id="ef21b-107">Special states: a read-only (frozen) state and a writable state.</span></span>  
  
-   <span data-ttu-id="ef21b-108">Segurança de thread: um congelada <xref:System.Windows.Freezable> objeto pode ser compartilhado entre threads.</span><span class="sxs-lookup"><span data-stu-id="ef21b-108">Thread safety: a frozen <xref:System.Windows.Freezable> object can be shared across threads.</span></span>  
  
-   <span data-ttu-id="ef21b-109">Notificação de alteração detalhada: ao contrário de outras <xref:System.Windows.DependencyObject> objetos, uma <xref:System.Windows.Freezable> objeto fornece notificações de alteração ao alterar valores de propriedade sub.</span><span class="sxs-lookup"><span data-stu-id="ef21b-109">Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a <xref:System.Windows.Freezable> object provides change notifications when sub-property values change.</span></span>  
  
-   <span data-ttu-id="ef21b-110">Fácil clonagem: a classe Congelável tem vários métodos já implementados que produzem clones profundos.</span><span class="sxs-lookup"><span data-stu-id="ef21b-110">Easy cloning: the Freezable class has already implemented several methods that produce deep clones.</span></span>  
  
 <span data-ttu-id="ef21b-111">Para obter informações sobre como usar e criar seu próprio <xref:System.Windows.Freezable> objetos, consulte [visão geral de objetos Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ef21b-111">For information on using and creating your own <xref:System.Windows.Freezable> objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ef21b-112">Qualquer público <see langword="static" /> membros desse tipo são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-112">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="ef21b-113">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-113">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="ef21b-114">Quando o <see cref="P:System.Windows.Freezable.IsFrozen" /> é de propriedade <see langword="false" />, um <see cref="T:System.Windows.Freezable" /> objeto pode ser acessado somente do thread no qual ele foi criado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-114">When the <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />, a <see cref="T:System.Windows.Freezable" /> object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="ef21b-115">Tentativa de acessá-lo de outra lança de thread um <see cref="T:System.InvalidOperationException" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-115">Attempting to access it from another thread throws an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="ef21b-116">O <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> e <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> métodos fornecem suporte de empacotamento do thread correto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-116">The <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> and <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> methods provide support for marshalling to the correct thread.</span>
      </span>
      <span data-ttu-id="ef21b-117">Quando seus <see cref="P:System.Windows.Freezable.IsFrozen" /> é de propriedade <see langword="true" />, <see cref="T:System.Windows.Freezable" /> objetos são free-thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-117">When their <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, <see cref="T:System.Windows.Freezable" /> objects are free-threaded.</span>
      </span>
      <span data-ttu-id="ef21b-118">Para obter mais informações, consulte [Freezable objetos Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef21b-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Freezable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Freezable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-120">Este é o construtor de acessibilidade protegido de uma classe abstrata.</span><span class="sxs-lookup"><span data-stu-id="ef21b-120">This is the protected-accessibility constructor of an abstract class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFreeze">
      <MemberSignature Language="C#" Value="public bool CanFreeze { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFreeze" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.CanFreeze" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFreeze As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFreeze { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFreeze : bool" Usage="System.Windows.Freezable.CanFreeze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef21b-122">
            <see langword="true" /> se o objeto atual puder se tornar não modificável ou já for não modificável, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-122">
              <see langword="true" /> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-123">
            <para>Essa implementação de método usa o <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> método com <paramref name="isChecking" /> definida como <see langword="true" /> para determinar se um <see cref="T:System.Windows.Freezable" /> podem ser feitas não modificável. Para modificar o comportamento dessa propriedade em uma classe derivada, substituir o <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-123">
              <para>This method implementation uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method with <paramref name="isChecking" /> set to <see langword="true" /> to determine whether a <see cref="T:System.Windows.Freezable" /> can be made unmodifiable. To modify the way this property behaves in a derived class, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Freezable.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-125">Se você tentar adicionar ou remover manipuladores de eventos quando o objeto atual não é modificável (quando o <xref:System.Windows.Freezable.IsFrozen%2A> é de propriedade `true`), uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="ef21b-125">If you attempt to add or remove event handlers when the current object is not modifiable (when the <xref:System.Windows.Freezable.IsFrozen%2A> property is `true`), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Freezable" Usage="freezable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          </span>
          <span data-ttu-id="ef21b-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-128">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-128">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="ef21b-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-130">O <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> métodos produzem clones modificáveis de congelada <xref:System.Windows.Freezable> objetos (os métodos também clonagem <xref:System.Windows.Freezable> objetos que não sejam congelados).</span><span class="sxs-lookup"><span data-stu-id="ef21b-130">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="ef21b-131">O clone é efetivamente uma cópia em profundidade do objeto atual.</span><span class="sxs-lookup"><span data-stu-id="ef21b-131">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="ef21b-132">A tabela a seguir resume as diferenças entre o <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ef21b-132">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="ef21b-133">Ação</span><span class="sxs-lookup"><span data-stu-id="ef21b-133">Action</span></span>|<span data-ttu-id="ef21b-134">Comportamento do método clone</span><span class="sxs-lookup"><span data-stu-id="ef21b-134">Clone method behavior</span></span>|<span data-ttu-id="ef21b-135">Comportamento do método CloneCurrentValue</span><span class="sxs-lookup"><span data-stu-id="ef21b-135">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="ef21b-136">Copiando uma propriedade de dependência que tenha uma expressão</span><span class="sxs-lookup"><span data-stu-id="ef21b-136">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ef21b-137">A expressão é copiada, mas não poderá ser resolvido.</span><span class="sxs-lookup"><span data-stu-id="ef21b-137">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="ef21b-138">Para obter mais informações, consulte a [Visão geral de objetos congeláveis](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ef21b-138">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="ef21b-139">O valor atual da expressão é copiado, mas não a própria expressão.</span><span class="sxs-lookup"><span data-stu-id="ef21b-139">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ef21b-140">Copiando uma propriedade de dependência animada</span><span class="sxs-lookup"><span data-stu-id="ef21b-140">Copying an animated dependency property</span></span>|<span data-ttu-id="ef21b-141">O valor da propriedade base (não animado) é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-141">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ef21b-142">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-142">Animations are not copied.</span></span>|<span data-ttu-id="ef21b-143">O valor da propriedade atual animado é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-143">The property's current animated value is copied.</span></span> <span data-ttu-id="ef21b-144">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-144">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ef21b-145">Observe que as propriedades não definidas não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-145">Note that unset properties are not copied.</span></span> <span data-ttu-id="ef21b-146">Se uma propriedade não definida tem um valor padrão que é um congelada <xref:System.Windows.Freezable>, que o valor da propriedade permaneça congelado no clone modificável caso contrário.</span><span class="sxs-lookup"><span data-stu-id="ef21b-146">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="ef21b-147">Mover um Freezable entre Threads</span><span class="sxs-lookup"><span data-stu-id="ef21b-147">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="ef21b-148">Esse método pode ser útil para mover um <xref:System.Windows.Freezable> entre threads.</span><span class="sxs-lookup"><span data-stu-id="ef21b-148">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="ef21b-149">Primeiro, verifique o <xref:System.Windows.Freezable> não modificável chamando seu <xref:System.Windows.Freezable.Freeze%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-149">First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="ef21b-150">Agora, outro thread pode acessar o <xref:System.Windows.Freezable> e fazer uma local <xref:System.Windows.Freezable.Clone%2A> que ele pode acessar.</span><span class="sxs-lookup"><span data-stu-id="ef21b-150">Now another thread can access the <xref:System.Windows.Freezable> and make a local <xref:System.Windows.Freezable.Clone%2A> that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-151">
            <para>Esse método usa <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> para produzir o clone. Para modificar o comportamento desse método em uma classe derivada, substituir o <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-151">
              <para>This method uses <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> to produce the clone. To modify the behavior of this method in a derived class, override the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ef21b-152">The object to clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-152">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-154">Este método é chamado pelo <xref:System.Windows.Freezable.Clone%2A> método e não deve ser chamado diretamente no seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-154">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ef21b-155">Para criar uma cópia modificável do objeto atual, chame <xref:System.Windows.Freezable.Clone%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="ef21b-155">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-156">
            <para>Se você derivar de <see cref="T:System.Windows.Freezable" />, talvez seja necessário substituir esse método. Motivos para substituir o seguinte:-a classe derivada tem dados que não são expostos por meio de propriedades de dependência.  -A classe derivada deve executar o trabalho de inicialização extra não pode ser obtido por meio da substituição simplesmente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Por exemplo, isso se aplica se sua classe derivada implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes que armazenam todos os seus dados em Propriedades de dependência e que não é necessário executar o trabalho de inicialização extra não precisam substituir <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  É essencial que todas as implementações de chamar a implementação base deste método. Implementações só devem executar o trabalho que não é executado pela implementação do padrão. A implementação padrão faz cópias profundas de todas as propriedades graváveis, definidas localmente, incluindo expressões internas.  Se o objeto tem propriedades de dependência associada a dados, as expressões são copiadas, mas não poderá ser resolvido. Para obter mais informações sobre objetos de associação de dados de clonagem, consulte [Freezable objetos Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Se o objeto tem propriedades de dependência animada, o valor base (não animado) dessas propriedades é copiado. Animações não são copiadas.  Observe que as propriedades não definidas não são copiadas, nem são propriedades somente leitura. Se essa propriedade tem um valor padrão que é um congelada <see cref="T:System.Windows.Freezable" />, que o valor da propriedade permaneça congelado no clone modificável caso contrário.  A lista a seguir resume o comportamento esperado para este método:-a cópia produzida contém cópias de todos os <see cref="T:System.Windows.Freezable" /> subobjetos.  -Propriedades unset e somente leitura não são copiadas.  -Expressões são copiadas.  -Nenhum desses objetos sub congeladas na criação.  -A cópia em si não está congelada.  -Animações não são copiados.  -Apenas os valores base de propriedades são valores animados copiados, não atuais.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-156">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties, including internal expressions.  If the object has data-bound dependency properties, the expressions are copied but might no longer resolve. For more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) value of those properties is copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method:  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   Expressions are copied.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.  -   Animations are not copied.  -   Only property base values are copied, not current animated values.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Freezable" Usage="freezable.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-158">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-158">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="ef21b-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-160">O <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> métodos produzem clones modificáveis de congelada <xref:System.Windows.Freezable> objetos (os métodos também clonagem <xref:System.Windows.Freezable> objetos que não sejam congelados).</span><span class="sxs-lookup"><span data-stu-id="ef21b-160">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="ef21b-161">O clone é efetivamente uma cópia em profundidade do objeto atual.</span><span class="sxs-lookup"><span data-stu-id="ef21b-161">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="ef21b-162">A tabela a seguir resume as diferenças entre o <xref:System.Windows.Freezable.Clone%2A> e <xref:System.Windows.Freezable.CloneCurrentValue%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ef21b-162">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="ef21b-163">Ação</span><span class="sxs-lookup"><span data-stu-id="ef21b-163">Action</span></span>|<span data-ttu-id="ef21b-164">Comportamento do método clone</span><span class="sxs-lookup"><span data-stu-id="ef21b-164">Clone method behavior</span></span>|<span data-ttu-id="ef21b-165">Comportamento do método CloneCurrentValue</span><span class="sxs-lookup"><span data-stu-id="ef21b-165">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="ef21b-166">Copiando uma propriedade de dependência que tenha uma expressão</span><span class="sxs-lookup"><span data-stu-id="ef21b-166">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ef21b-167">A expressão é copiada, mas não poderá ser resolvido.</span><span class="sxs-lookup"><span data-stu-id="ef21b-167">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="ef21b-168">Para obter mais informações, consulte a [Visão geral de objetos congeláveis](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ef21b-168">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="ef21b-169">O valor atual da expressão é copiado, mas não a própria expressão.</span><span class="sxs-lookup"><span data-stu-id="ef21b-169">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ef21b-170">Copiando uma propriedade de dependência animada</span><span class="sxs-lookup"><span data-stu-id="ef21b-170">Copying an animated dependency property</span></span>|<span data-ttu-id="ef21b-171">O valor da propriedade base (não animado) é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-171">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ef21b-172">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-172">Animations are not copied.</span></span>|<span data-ttu-id="ef21b-173">O valor da propriedade atual animado é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-173">The property's current animated value is copied.</span></span> <span data-ttu-id="ef21b-174">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-174">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ef21b-175">Observe que as propriedades não definidas não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-175">Note that unset properties are not copied.</span></span> <span data-ttu-id="ef21b-176">Se uma propriedade não definida tem um valor padrão que é um congelada <xref:System.Windows.Freezable>, que o valor da propriedade permaneça congelado no clone modificável caso contrário.</span><span class="sxs-lookup"><span data-stu-id="ef21b-176">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="ef21b-177">Mover um Freezable entre Threads</span><span class="sxs-lookup"><span data-stu-id="ef21b-177">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="ef21b-178">Esse método pode ser útil para mover um <xref:System.Windows.Freezable> entre threads.</span><span class="sxs-lookup"><span data-stu-id="ef21b-178">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="ef21b-179">Primeiro, verifique o <xref:System.Windows.Freezable> não modificável usando seu <xref:System.Windows.Freezable.Freeze%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-179">First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="ef21b-180">Agora, outro thread pode acessar o <xref:System.Windows.Freezable> e faça uma cópia local que possa acessar.</span><span class="sxs-lookup"><span data-stu-id="ef21b-180">Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-181">
            <para>Esse método usa o <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> método para produzir o clone; <see cref="T:System.Windows.Freezable" /> implementadores que substituam <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> deve garantir que a cópia não está congelada na criação.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-181">
              <para>This method uses the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> method to produce the clone; <see cref="T:System.Windows.Freezable" /> implementers who override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> must ensure that the copy is not frozen on creation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ef21b-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-184">Este método é chamado pelo <xref:System.Windows.Freezable.CloneCurrentValue%2A> método e não deve ser chamado diretamente no seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-184">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ef21b-185">Para criar uma cópia modificável do objeto atual, chame <xref:System.Windows.Freezable.CloneCurrentValue%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="ef21b-185">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-186">
            <para>Se você derivar de <see cref="T:System.Windows.Freezable" />, talvez seja necessário substituir esse método. Motivos para substituir o seguinte:-a classe derivada tem dados que não são expostos por meio de propriedades de dependência.  -A classe derivada deve executar o trabalho de inicialização extra não pode ser obtido por meio da substituição simplesmente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Por exemplo, isso se aplica se sua classe derivada implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes que armazenam todos os seus dados em Propriedades de dependência e que não é necessário executar o trabalho de inicialização extra não precisam substituir <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  É essencial que todas as implementações de chamar a implementação base deste método. Implementações só devem executar o trabalho que não é executado pela implementação do padrão. A implementação padrão faz cópias profundas de todas as propriedades graváveis, definidas localmente. Se o objeto contém propriedades de dependência com expressões (como uma associação de dados), o valor atual da expressão é copiado, mas não a própria expressão.  Se o objeto tem propriedades de dependência de animação, o valor atual animado dessas propriedades é copiado, mas as animações não são.  Observe que as propriedades não definidas não são copiadas, nem são propriedades somente leitura. Se essa propriedade tem um valor padrão que é um congelada <see cref="T:System.Windows.Freezable" />, que o valor da propriedade permaneça congelado no clone modificável caso contrário.  A lista a seguir resume o comportamento esperado para esse método.  -A cópia produzida contém cópias de todos os <see cref="T:System.Windows.Freezable" /> subobjetos.  -Propriedades unset e somente leitura não são copiadas.  -Se uma propriedade é animada, seu valor atual é copiado, mas a animação em si não é.  -Nenhum desses objetos sub congeladas na criação.  -A cópia em si não está congelada.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-186">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties. If the object contains dependency properties with expressions (such as a data binding), the current value of the expression is copied but not the expression itself.  If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method.  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   If a property is animated, its current value is copied, but the animation itself is not.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected System.Windows.Freezable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Freezable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Freezable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-188">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-188">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-189">Este é um método protegido e as implementações específicas do objeto reais para o comportamento são dependentes de implementação de substituição do <xref:System.Windows.Freezable.CreateInstanceCore%2A> método, que este método chama internamente.</span><span class="sxs-lookup"><span data-stu-id="ef21b-189">This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-191">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-191">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-192">Não chame este método diretamente (exceto quando chamar base em uma implementação).</span><span class="sxs-lookup"><span data-stu-id="ef21b-192">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="ef21b-193">Este método é chamado internamente pelo <xref:System.Windows.Freezable.CreateInstance%2A> método sempre que uma nova instância do <xref:System.Windows.Freezable> é criado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-193">This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ef21b-194">O exemplo a seguir mostra uma implementação típica de <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef21b-194">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-195">
            <para>Cada <see cref="T:System.Windows.Freezable" /> classe derivada deve implementar esse método. Uma implementação típica é simplesmente chamar o construtor padrão e retornar o resultado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-195">
              <para>Every <see cref="T:System.Windows.Freezable" /> derived class must implement this method. A typical implementation is to simply call the default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstance" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Freeze">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze();" />
      <MemberSignature Language="F#" Value="member this.Freeze : unit -&gt; unit" Usage="freezable.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-198">Para evitar a possibilidade de um <xref:System.InvalidOperationException> ao chamar esse método, verifique o <xref:System.Windows.Freezable.CanFreeze%2A> propriedade para determinar se o <xref:System.Windows.Freezable> podem ser feitas não modificável antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-198">To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ef21b-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-200">
            <para>Esse método usa o <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> método para fazer o <see cref="T:System.Windows.Freezable" /> não modificável. Para modificar o comportamento de congelamento, substituir o <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-200">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="protected internal static bool Freeze (System.Windows.Freezable freezable, bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool Freeze(class System.Windows.Freezable freezable, bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool Freeze(System::Windows::Freezable ^ freezable, bool isChecking);" />
      <MemberSignature Language="F#" Value="static member Freeze : System.Windows.Freezable * bool -&gt; bool" Usage="System.Windows.Freezable.Freeze (freezable, isChecking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="freezable" Type="System.Windows.Freezable" />
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="freezable">
          <span data-ttu-id="ef21b-201">The object to check or make unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-201">The object to check or make unmodifiable.</span>
          </span>
          <span data-ttu-id="ef21b-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ef21b-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          </span>
        </param>
        <param name="isChecking">
          <span data-ttu-id="ef21b-204">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-204">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ef21b-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ef21b-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-209">Não chame este método, a menos que você estiver derivando de <xref:System.Windows.Freezable> e substituindo o <xref:System.Windows.Freezable.FreezeCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-209">Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.</span></span>  <span data-ttu-id="ef21b-210">Esse método pode ser usado no <xref:System.Windows.Freezable.FreezeCore%2A> método congelar membros de dados de classe são <xref:System.Windows.Freezable> objetos.</span><span class="sxs-lookup"><span data-stu-id="ef21b-210">This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.</span></span>  
  
 <span data-ttu-id="ef21b-211">É muito bem para chamar esse método novamente em um <xref:System.Windows.Freezable> objeto que já está congelado (não modificável).</span><span class="sxs-lookup"><span data-stu-id="ef21b-211">It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ef21b-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-213">
            <para>Esse método usa o <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> método para fazer o <see cref="T:System.Windows.Freezable" /> não modificável. Para modificar o comportamento de congelamento, substituir o <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-213">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected virtual bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="freezable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="ef21b-214">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-214">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ef21b-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-218">Não chame este método diretamente (exceto quando chamar base em uma implementação).</span><span class="sxs-lookup"><span data-stu-id="ef21b-218">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="ef21b-219">Este método é chamado internamente pelo <xref:System.Windows.Freezable.CanFreeze%2A> propriedade (com `isChecking` igual a `true`) e o <xref:System.Windows.Freezable.Freeze%2A> método (com `isChecking` igual a `false`).</span><span class="sxs-lookup"><span data-stu-id="ef21b-219">This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-220">
            <para>
              <see cref="T:System.Windows.Freezable" /> os implementadores devem substituir este método quando a classe contém dados que não são armazenados usando as propriedades de dependência.  Uma implementação típica seria chamada base, em seguida, chame estático <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> método em todos os <see cref="T:System.Windows.Freezable" /> digitado propriedades que contém a classe, retornando <see langword="true" /> apenas se todas as propriedades estavam congeladas (ou foi congeladas, no caso de especificação <see langword="true" /> para <paramref name="isChecking" />).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-220">
              <para>
                <see cref="T:System.Windows.Freezable" /> implementers must override this method when the class contains data that is not stored using dependency properties.  A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of specifying <see langword="true" /> for <paramref name="isChecking" />).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
        <altmember cref="P:System.Windows.Freezable.CanFreeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          </span>
          <span data-ttu-id="ef21b-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="ef21b-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-225">Você deve verificar o <xref:System.Windows.Freezable.CanFreeze%2A> propriedade antes de chamar este método para verificar se o <xref:System.Windows.Freezable> pode ser congelado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-225">You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen.</span></span> <span data-ttu-id="ef21b-226">Usando esse método é semelhante à criação de uma cópia usando o <xref:System.Windows.Freezable.Clone%2A> e, em seguida, congelamento com o <xref:System.Windows.Freezable.Freeze%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-226">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="ef21b-227">O <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> métodos podem melhorar o desempenho de cópia porque eles não clonagem <xref:System.Windows.Freezable> subobjetos que já estão congelados; eles apenas copiá-los por referência.</span><span class="sxs-lookup"><span data-stu-id="ef21b-227">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="ef21b-228">A tabela a seguir resume as diferenças entre o <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ef21b-228">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="ef21b-229">Ação</span><span class="sxs-lookup"><span data-stu-id="ef21b-229">Action</span></span>|<span data-ttu-id="ef21b-230">Comportamento do método GetAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ef21b-230">GetAsFrozen method behavior</span></span>|<span data-ttu-id="ef21b-231">Comportamento do método GetCurrentValueAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ef21b-231">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="ef21b-232">Copiando uma propriedade de dependência que tenha uma expressão</span><span class="sxs-lookup"><span data-stu-id="ef21b-232">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ef21b-233">O método gera uma <xref:System.InvalidOperationException> porque ele não é possível <xref:System.Windows.Freezable.Freeze%2A> a propriedade.</span><span class="sxs-lookup"><span data-stu-id="ef21b-233">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="ef21b-234">O valor atual da expressão é copiado, mas não a própria expressão.</span><span class="sxs-lookup"><span data-stu-id="ef21b-234">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ef21b-235">Copiando uma propriedade de dependência animada</span><span class="sxs-lookup"><span data-stu-id="ef21b-235">Copying an animated dependency property</span></span>|<span data-ttu-id="ef21b-236">O valor da propriedade base (não animado) é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-236">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ef21b-237">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-237">Animations are not copied.</span></span>|<span data-ttu-id="ef21b-238">O valor da propriedade atual animado é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-238">The property's current animated value is copied.</span></span> <span data-ttu-id="ef21b-239">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-239">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ef21b-240">Observe que as propriedades não definidas não são copiadas, nem são propriedades somente leitura.</span><span class="sxs-lookup"><span data-stu-id="ef21b-240">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="ef21b-241">Para criar uma cópia do <xref:System.Windows.Freezable> que é não congelada, use o <xref:System.Windows.Freezable.Clone%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-241">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ef21b-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-243">
            <para>Esse método usa virtual <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> método para produzir o clone.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-243">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ef21b-244">The instance to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-244">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-246">Este método é chamado pelo <xref:System.Windows.Freezable.GetAsFrozen%2A> método e não deve ser chamado diretamente no seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-246">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ef21b-247">Para criar uma cópia congelada do objeto atual, chame <xref:System.Windows.Freezable.GetAsFrozen%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="ef21b-247">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-248">
            <para>Se você derivar de <see cref="T:System.Windows.Freezable" /> talvez seja necessário substituir esse método. Motivos para substituir o seguinte:-a classe derivada tem dados que não são expostos por meio de propriedades de dependência.  -A classe derivada deve executar o trabalho de inicialização extra não pode ser obtido por meio da substituição simplesmente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Por exemplo, isso se aplica se sua classe derivada implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes que armazenam todos os seus dados em Propriedades de dependência e que não é necessário executar o trabalho de inicialização extra não precisam substituir <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  É essencial que todas as implementações de chamar a implementação base deste método. Implementações só devem executar o trabalho que não é executado pela implementação do padrão. A implementação padrão faz cópias profundas de qualquer congeláveis descongelada e superficiais cópias de todos os outros gravável, localmente definir propriedades que ele contém. Se o objeto tem propriedades de dependência associada a dados, as expressões são copiadas, mas não podem resolver; Para obter mais informações sobre objetos de associação de dados de clonagem, consulte [Freezable objetos Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Se o objeto tem propriedades de dependência animada, os valores base (não animado) dessas propriedades são copiados. Animações não são copiadas.  Observe que as propriedades não definidas não são copiadas, nem são propriedades somente leitura.  Se você substituir esse método, você deve chamar a implementação base.  Você não precisa <see cref="M:System.Windows.Freezable.Freeze" /> valores conforme são copiadas.  O resultado é congelado pelo <see cref="M:System.Windows.Freezable.GetAsFrozen" /> antes de serem retornados.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-248">
              <para>If you derive from <see cref="T:System.Windows.Freezable" /> you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of any unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the expressions are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) values of those properties are copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozen" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetCurrentValueAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetCurrentValueAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValueAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetCurrentValueAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentValueAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetCurrentValueAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
          <span data-ttu-id="ef21b-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef21b-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="ef21b-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-253">Usando esse método é semelhante à criação de uma cópia usando o <xref:System.Windows.Freezable.CloneCurrentValue%2A> e, em seguida, congelamento com o <xref:System.Windows.Freezable.Freeze%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-253">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="ef21b-254">O <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> métodos podem melhorar o desempenho de cópia porque eles não clonagem <xref:System.Windows.Freezable> subobjetos que já estão congelados; eles apenas copiá-los por referência.</span><span class="sxs-lookup"><span data-stu-id="ef21b-254">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="ef21b-255">A tabela a seguir resume as diferenças entre o <xref:System.Windows.Freezable.GetAsFrozen%2A> e <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ef21b-255">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="ef21b-256">Ação</span><span class="sxs-lookup"><span data-stu-id="ef21b-256">Action</span></span>|<span data-ttu-id="ef21b-257">Comportamento do método GetAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ef21b-257">GetAsFrozen method behavior</span></span>|<span data-ttu-id="ef21b-258">Comportamento do método GetCurrentValueAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ef21b-258">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="ef21b-259">Copiando uma propriedade de dependência que tenha uma expressão</span><span class="sxs-lookup"><span data-stu-id="ef21b-259">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ef21b-260">O método gera uma <xref:System.InvalidOperationException> porque ele não é possível <xref:System.Windows.Freezable.Freeze%2A> a propriedade.</span><span class="sxs-lookup"><span data-stu-id="ef21b-260">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="ef21b-261">O valor atual da expressão é copiado, mas não a própria expressão.</span><span class="sxs-lookup"><span data-stu-id="ef21b-261">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ef21b-262">Copiando uma propriedade de dependência animada</span><span class="sxs-lookup"><span data-stu-id="ef21b-262">Copying an animated dependency property</span></span>|<span data-ttu-id="ef21b-263">O valor da propriedade base (não animado) é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-263">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ef21b-264">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-264">Animations are not copied.</span></span>|<span data-ttu-id="ef21b-265">O valor da propriedade atual animado é copiado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-265">The property's current animated value is copied.</span></span> <span data-ttu-id="ef21b-266">Animações não são copiadas.</span><span class="sxs-lookup"><span data-stu-id="ef21b-266">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ef21b-267">Observe que as propriedades não definidas não são copiadas, nem são propriedades somente leitura.</span><span class="sxs-lookup"><span data-stu-id="ef21b-267">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="ef21b-268">Para criar uma cópia do <xref:System.Windows.Freezable> que é não congelada, use o <xref:System.Windows.Freezable.CloneCurrentValue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-268">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-269">
            <para>Esse método usa virtual <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> método para produzir o clone.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-269">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ef21b-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="ef21b-272">If the object has animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-272">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-273">Este método é chamado pelo <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> método e não deve ser chamado diretamente no seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="ef21b-273">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ef21b-274">Para criar uma cópia congelada do objeto atual, chame <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="ef21b-274">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-275">
            <para>Se você derivar de <see cref="T:System.Windows.Freezable" />, talvez seja necessário substituir esse método. Motivos para substituir o seguinte:-a classe derivada tem dados que não são expostos por meio de propriedades de dependência.  -A classe derivada deve executar o trabalho de inicialização extra não pode ser obtido por meio da substituição simplesmente <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Por exemplo, isso se aplica se sua classe derivada implementa <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes que armazenam todos os seus dados em Propriedades de dependência e que não é necessário executar o trabalho de inicialização extra não precisam substituir <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  É essencial que todas as implementações de chamar a implementação base deste método. Implementações só devem executar o trabalho que não é executado pela implementação do padrão. A implementação padrão cria um novo <see cref="T:System.Windows.Freezable" /> usando o <see cref="M:System.Windows.Freezable.CreateInstance" /> método e faz cópias profundas de congeláveis descongelada e superficiais cópias de todos os outros gravável, propriedades de conjunto contém. Se o objeto tem propriedades de dependência associada a dados, as associações de dados são copiadas, mas não podem resolver; Para obter mais informações sobre objetos de associação de dados de clonagem, consulte [Freezable objetos Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). Se o objeto tem propriedades de dependência de animação, o valor atual animado dessas propriedades é copiado, mas as animações não são.  Propriedades de dependência somente leitura em um <see cref="T:System.Windows.Freezable" /> não são copiadas por esta implementação padrão.  Se você substituir esse método, você deve chamar a implementação base.  Você não precisa <see cref="M:System.Windows.Freezable.Freeze" /> valores conforme são copiadas.  O resultado é congelado pelo <see cref="M:System.Windows.Freezable.GetAsFrozen" /> antes de serem retornados.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-275">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation creates a new <see cref="T:System.Windows.Freezable" /> using the <see cref="M:System.Windows.Freezable.CreateInstance" /> method and makes deep copies of unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the data bindings are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Read-only dependency properties within a <see cref="T:System.Windows.Freezable" /> are not copied by this default implementation.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="System.Windows.Freezable.IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-276">Gets a value that indicates whether the object is currently modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-276">Gets a value that indicates whether the object is currently modifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ef21b-277">
            <see langword="true" /> se o objeto estiver congelado e não puder ser modificado; <see langword="false" /> se o objeto poderá ser modificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-277">
              <see langword="true" /> if the object is frozen and cannot be modified; <see langword="false" /> if the object can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-278">Tentativa de modificar um objeto quando seu <xref:System.Windows.Freezable.IsFrozen%2A> é de propriedade `true` lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ef21b-278">Attempting to modify an object when its <xref:System.Windows.Freezable.IsFrozen%2A> property is `true` throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="ef21b-279">Essa propriedade é somente leitura sob a perspectiva do modelo de objeto.</span><span class="sxs-lookup"><span data-stu-id="ef21b-279">This property is read-only from the object model perspective.</span></span> <span data-ttu-id="ef21b-280">Parte da documentação sobre <xref:System.Windows.Freezable> comportamentos podem mencionar "define <xref:System.Windows.Freezable.IsFrozen%2A> para `true`" ou idioma semelhante ao discutir o comportamento de outros métodos de <xref:System.Windows.Freezable>, mas esse comportamento acontece internamente nas instâncias de classe Quando os métodos da instância do manipulam as variáveis particulares que existem dentro da classe abstrata.</span><span class="sxs-lookup"><span data-stu-id="ef21b-280">Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention "sets <xref:System.Windows.Freezable.IsFrozen%2A> to `true`" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class.</span></span> <span data-ttu-id="ef21b-281">Para definir o valor dessa propriedade, você deve chamar <xref:System.Windows.Freezable.Freeze%2A>.</span><span class="sxs-lookup"><span data-stu-id="ef21b-281">To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>.</span></span> <span data-ttu-id="ef21b-282">Isso é efetivamente uma operação única para alterar o <xref:System.Windows.Freezable.IsFrozen%2A> propriedade inicial padrão `false` estado para o `true` estado.</span><span class="sxs-lookup"><span data-stu-id="ef21b-282">This effectively is a one-time operation to change the <xref:System.Windows.Freezable.IsFrozen%2A> property from the initial default `false` state to the `true` state.</span></span> <span data-ttu-id="ef21b-283">Não há nenhum significa disponíveis para definir o valor para `false`.</span><span class="sxs-lookup"><span data-stu-id="ef21b-283">There is no available means to set the value back to `false`.</span></span> <span data-ttu-id="ef21b-284">Em vez disso, você pode alterar qualquer cópia em profundidade feita do original (consulte o <xref:System.Windows.Freezable.Clone%2A> método).</span><span class="sxs-lookup"><span data-stu-id="ef21b-284">Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method).</span></span> <span data-ttu-id="ef21b-285">Isso ocorre por design e é como qualquer classe derivada deve se comportar quando aplicado aos casos em que o <xref:System.Windows.Freezable> padrão é útil.</span><span class="sxs-lookup"><span data-stu-id="ef21b-285">This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="freezable.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-287">Este método é chamado sempre que o <xref:System.Windows.Freezable.Changed> evento ocorre.</span><span class="sxs-lookup"><span data-stu-id="ef21b-287">This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-288">
            <para>Quando você implementa uma classe que deriva de <see cref="T:System.Windows.Freezable" />, você pode substituir esse método para executar tarefas.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-288">
              <para>When you implement a class that derives from <see cref="T:System.Windows.Freezable" />, you may override this method to perform tasks.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Freezable.Changed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnFreezablePropertyChanged">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="ef21b-290">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-290">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="ef21b-291">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-291">The current value of the data member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-293">Esse método deve ser chamado <xref:System.Windows.Freezable> herdeiros cada vez que um <xref:System.Windows.DependencyObject> membro de dados que não é armazenado como um <xref:System.Windows.DependencyProperty> está definido.</span><span class="sxs-lookup"><span data-stu-id="ef21b-293">This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.</span></span>  
  
 <span data-ttu-id="ef21b-294">Esse método não precisa ser chamado para <xref:System.Windows.DependencyObject> membros de dados que são armazenados usando um <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="ef21b-294">This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue, class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject, property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue, System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="ef21b-295">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-295">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="ef21b-296">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-296">The current value of the data member.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="ef21b-297">The property that changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-297">The property that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="freezable.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ef21b-299">Event data that contains information about which property changed, and its old and new values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-299">Event data that contains information about which property changed, and its old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef21b-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-301">Os dados do evento contém apenas informações sobre o <xref:System.Windows.Freezable> em si.</span><span class="sxs-lookup"><span data-stu-id="ef21b-301">The event data contains information about only the <xref:System.Windows.Freezable> itself.</span></span> <span data-ttu-id="ef21b-302">Qualquer informação de propriedade sub deve ser obtida por meio de <xref:System.Windows.Freezable.Changed> manipuladores.</span><span class="sxs-lookup"><span data-stu-id="ef21b-302">Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="freezable.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          </span>
          <span data-ttu-id="ef21b-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-305">
            <para>Classes que derivam de <see cref="T:System.Windows.Freezable" /> devem chamar o <see cref="M:System.Windows.Freezable.ReadPreamble" /> método antes de tentar acessar todos os membros que não são propriedades de dependência. O <see cref="M:System.Windows.Freezable.WritePreamble" /> método deve ser chamado antes de qualquer esses membros são gravados.  Esse método efetivamente não faz nada mais do que chamar <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-305">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call the <see cref="M:System.Windows.Freezable.ReadPreamble" /> method before they attempt to access any members that are not dependency properties. The <see cref="M:System.Windows.Freezable.WritePreamble" /> method should be called before any such members are written to.  This method effectively does nothing more than call <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.WritePreamble" />
      </Docs>
    </Member>
    <Member MemberName="WritePostscript">
      <MemberSignature Language="C#" Value="protected void WritePostscript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePostscript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePostscript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePostscript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePostscript();" />
      <MemberSignature Language="F#" Value="member this.WritePostscript : unit -&gt; unit" Usage="freezable.WritePostscript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          </span>
          <span data-ttu-id="ef21b-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-308">
            <para>Classes que derivam de <see cref="T:System.Windows.Freezable" /> devem chamar este método no final de API que modifica um membro de classe que não é armazenado como um <see cref="T:System.Windows.DependencyProperty" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-308">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies a class member that is not stored as a <see cref="T:System.Windows.DependencyProperty" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="freezable.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef21b-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          </span>
          <span data-ttu-id="ef21b-310">
            <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-310">
              <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef21b-311">Este método chama <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> para verificar o contexto de threading está acessível e gera uma exceção se o <xref:System.Windows.Freezable> instância já está congelada.</span><span class="sxs-lookup"><span data-stu-id="ef21b-311">This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ef21b-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef21b-313">
            <para>Classes que derivam de <see cref="T:System.Windows.Freezable" /> devem chamar <see cref="M:System.Windows.Freezable.WritePreamble" /> antes de tentar gravar em todos os membros que não são propriedades de dependência. Se você chamar <see cref="M:System.Windows.Freezable.WritePreamble" /> em um [! INCLUDE[TLA#tla_api](~/Includes/tlasharptla-API-MD.MD)], você pode omitir uma chamada para <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef21b-313">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call <see cref="M:System.Windows.Freezable.WritePreamble" /> before attempting to write to any members that are not dependency properties. If you call <see cref="M:System.Windows.Freezable.WritePreamble" /> in an [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can omit a call to <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.ReadPreamble" />
      </Docs>
    </Member>
  </Members>
</Type>