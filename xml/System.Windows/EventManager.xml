<Type Name="EventManager" FullName="System.Windows.EventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c77ae0f0dbeb2878102af1c07c306ec83ccf92c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30678560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c2f42-101">Fornece métodos de utilitário relacionados a eventos que registram eventos roteados de proprietários de classe e adicionam manipuladores de classe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c2f42-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f42-102">Geralmente, essa classe é usada para registrar um novo evento roteado com <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c2f42-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="c2f42-103">O segundo mais comuns [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] uso é <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c2f42-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="c2f42-104">Você pode usar esse método para habilitar a manipulação de classe de um evento roteado na classe ou um evento.</span><span class="sxs-lookup"><span data-stu-id="c2f42-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="c2f42-105">Para obter detalhes, consulte [marcar eventos roteados como Handled e tratamento de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="c2f42-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f42-106">O exemplo a seguir mostram como usar essa classe para registrar um novo evento roteado como um membro de classe, junto com a técnica de "wrapper" do evento roteado de substituição a adicionar e remover implementações para um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] eventos.</span><span class="sxs-lookup"><span data-stu-id="c2f42-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2f42-107">Retorna identificadores para eventos roteados que foram registrados para o sistema de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-107">Returns identifiers for routed events that have been registered to the event system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2f42-108">Uma matriz do tipo <see cref="T:System.Windows.RoutedEvent" /> que contém os objetos registrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f42-109">Mais <xref:System.Windows.RoutedEvent> objetos podem ser registrados mais tarde.</span><span class="sxs-lookup"><span data-stu-id="c2f42-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="c2f42-110">Esse método obtém um instantâneo e a coleção de eventos roteados é gravável ao longo do tempo de vida do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c2f42-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="c2f42-111">A coleção retornada pode ser muito grande.</span><span class="sxs-lookup"><span data-stu-id="c2f42-111">The collection returned might be quite large.</span></span> <span data-ttu-id="c2f42-112">Até mesmo contar os eventos que fazem parte do [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], a contagem de coleta for alta centenas.</span><span class="sxs-lookup"><span data-stu-id="c2f42-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">
          <span data-ttu-id="c2f42-113">O tipo com o qual iniciar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-113">The type to start the search with.</span>
          </span>
          <span data-ttu-id="c2f42-114">Classes base são incluídas na pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-114">Base classes are included in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2f42-115">Localiza todos os identificadores de eventos roteados para eventos que são registrados com o tipo de proprietário fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2f42-116">Uma matriz de identificadores de evento roteado correspondente se nenhuma correspondência for encontrada; caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c2f42-117">Registra um manipulador de classes para um evento roteado particular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-117">Registers a class handler for a particular routed event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType">
          <span data-ttu-id="c2f42-118">O tipo da classe que está declarando a manipulação de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-118">The type of the class that is declaring class handling.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="c2f42-119">O identificador de evento roteado do evento a ser manipulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-119">The routed event identifier of the event to handle.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c2f42-120">Uma referência à implementação do manipulador de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-120">A reference to the class handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2f42-121">Registra um manipulador de classes para um evento roteado particular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-121">Registers a class handler for a particular routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f42-122">Tratamento de classe é um recurso que está disponível para eventos roteados, incluindo eventos anexados que são implementados com eventos roteados fazendo.</span><span class="sxs-lookup"><span data-stu-id="c2f42-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="c2f42-123">Um manipulador de classe é como um manipulador estático que existe para todas as instâncias da classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="c2f42-124">Porque o manipulador é estático, você não pode alterar as propriedades de instância diretamente com um manipulador de classe, mas você pode acessar instâncias por meio de `sender` parâmetro e/ou os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="c2f42-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="c2f42-125">Manipuladores de classe são chamados antes de manipuladores de instância.</span><span class="sxs-lookup"><span data-stu-id="c2f42-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="c2f42-126">Você pode implementar um manipulador de classe que tem o comportamento de marcar o evento como manipulado.</span><span class="sxs-lookup"><span data-stu-id="c2f42-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="c2f42-127">Portanto, manipuladores de instância para um evento de classe tratado não serão chamados a menos que os manipuladores de instância registrarem especificamente para eventos manipulados.</span><span class="sxs-lookup"><span data-stu-id="c2f42-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="c2f42-128">Muitas do [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] eventos do elemento base fornecem métodos virtuais de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="c2f42-129">Substituindo esses métodos em classes que herdam as classes base, você pode implementar classe tratamento sem chamar <xref:System.Windows.EventManager.RegisterClassHandler%2A> em construtores estáticos.</span><span class="sxs-lookup"><span data-stu-id="c2f42-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="c2f42-130">Esses métodos de manipulação de classe normalmente existem para eventos de entrada e têm nomes que começam com "On" e termina com o nome do evento que está sendo tratado de classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="c2f42-131">Para obter mais informações sobre tratamento de classe, consulte [marcar eventos roteados como Handled e tratamento de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="c2f42-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="c2f42-132">Usando essa assinatura, manipuladores de classe serão registrados para invocar apenas em resposta a eventos sem tratamento.</span><span class="sxs-lookup"><span data-stu-id="c2f42-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="c2f42-133">Você também pode registrar manipuladores de classe para chamar, mesmo que os argumentos de evento são marcados como manipulados, usando o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura, com `handledEventsToo` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="c2f42-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2f42-134">O exemplo a seguir adiciona um manipulador para <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, chamar <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="c2f42-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType">
          <span data-ttu-id="c2f42-135">O tipo da classe que está declarando a manipulação de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-135">The type of the class that is declaring class handling.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="c2f42-136">O identificador de evento roteado do evento a ser manipulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-136">The routed event identifier of the event to handle.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c2f42-137">Uma referência à implementação do manipulador de classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-137">A reference to the class handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="c2f42-138">
            <see langword="true" /> para invocar esse manipulador de classe, mesmo se os argumentos do evento roteado tiverem sido marcados como manipulados; <see langword="false" /> para reter o comportamento padrão de não invocar o manipulador em nenhum evento manipulado marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-138">
              <see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2f42-139">Registra um manipulador de classes para um evento roteado específico, com a opção de manipular eventos em que os dados do evento já estão marcados como manipulados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f42-140">Tratamento de classe é um recurso que está disponível para eventos roteados, incluindo eventos anexados que são implementados com eventos roteados fazendo.</span><span class="sxs-lookup"><span data-stu-id="c2f42-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="c2f42-141">Um manipulador de classe é como um manipulador estático que existe para todas as instâncias da classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="c2f42-142">Porque o manipulador é estático, você não pode alterar as propriedades de instância diretamente com um manipulador de classe, mas você pode acessar instâncias por meio de `sender` parâmetro e/ou os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="c2f42-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="c2f42-143">Manipuladores de classe são chamados antes de manipuladores de instância.</span><span class="sxs-lookup"><span data-stu-id="c2f42-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="c2f42-144">Você pode implementar um manipulador de classe que tem o comportamento de marcar o evento como manipulado.</span><span class="sxs-lookup"><span data-stu-id="c2f42-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="c2f42-145">Portanto, manipuladores de instância para um evento de classe tratado não serão chamados a menos que os manipuladores de instância registrarem especificamente para eventos manipulados.</span><span class="sxs-lookup"><span data-stu-id="c2f42-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="c2f42-146">Muitas do [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] eventos do elemento base fornecem métodos virtuais de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="c2f42-147">Substituindo esses métodos em classes que herdam as classes base, você pode implementar classe tratamento sem chamar <xref:System.Windows.EventManager.RegisterClassHandler%2A> em construtores estáticos.</span><span class="sxs-lookup"><span data-stu-id="c2f42-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="c2f42-148">Esses métodos de manipulação de classe normalmente existem para eventos de entrada e têm nomes que começam com "On" e termina com o nome do evento que está sendo tratado de classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="c2f42-149">Para obter mais informações sobre tratamento de classe, consulte [marcar eventos roteados como Handled e tratamento de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="c2f42-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="c2f42-150">Usando essa assinatura, manipuladores de classe podem ser registrados para invocar após eventos manipulados, definindo `handledEventsToo` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="c2f42-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="c2f42-151">Em geral, você deve fazer isso somente se houver um problema de tratamento conhecidos que você está tentando solucionar o problema, como o sistema de entrada de tratamento de eventos de mouse ou teclado.</span><span class="sxs-lookup"><span data-stu-id="c2f42-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c2f42-152">O nome do evento roteado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-152">The name of the routed event.</span>
          </span>
          <span data-ttu-id="c2f42-153">O nome deve ser exclusivo dentro do tipo de proprietário e não pode ser <see langword="null" /> ou uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="routingStrategy">
          <span data-ttu-id="c2f42-154">A estratégia de roteamento do evento como um valor da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-154">The routing strategy of the event as a value of the enumeration.</span>
          </span>
        </param>
        <param name="handlerType">
          <span data-ttu-id="c2f42-155">O tipo de manipulador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-155">The type of the event handler.</span>
          </span>
          <span data-ttu-id="c2f42-156">Esse deve ser um tipo de delegado e não pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-156">This must be a delegate type and cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="c2f42-157">O tipo de classe do proprietário do evento roteado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-157">The owner class type of the routed event.</span>
          </span>
          <span data-ttu-id="c2f42-158">Esse não pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-158">This cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2f42-159">Registra um novo evento roteado com o sistema de eventos [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2f42-160">O identificador para o evento roteado registrado recentemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-160">The identifier for the newly registered routed event.</span>
          </span>
          <span data-ttu-id="c2f42-161">Esse objeto de identificador agora pode ser armazenado como um campo estático em uma classe e, em seguida, usado como um parâmetro para métodos que anexam manipuladores ao evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span>
          </span>
          <span data-ttu-id="c2f42-162">O identificador de evento roteado também é usado para outro sistema de evento [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2f42-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2f42-163">Use o valor de retorno desse método para criar a declaração estática para uma única <xref:System.Windows.RoutedEvent> campo de identificador.</span><span class="sxs-lookup"><span data-stu-id="c2f42-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="c2f42-164">Este campo deve ser armazenado no tipo do proprietário.</span><span class="sxs-lookup"><span data-stu-id="c2f42-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="c2f42-165">Há um número considerável de convenções e práticas recomendadas associadas a eventos roteados como devem ser chamadas, registradas e expostas em uma classe.</span><span class="sxs-lookup"><span data-stu-id="c2f42-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="c2f42-166">Para obter mais informações, consulte [Visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c2f42-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>