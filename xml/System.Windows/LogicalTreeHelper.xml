<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3794828e1dd9f6d221f59f069553788f01bde108" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37491972" /></Metadata><TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="43b1a-101">Fornece métodos auxiliares estáticos para consultar os objetos na árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-101">Provides static helper methods for querying objects in the logical tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b1a-102">O <xref:System.Windows.LogicalTreeHelper> classe fornece métodos que você pode usar para retornar coleções filho de objetos ou específicos de objetos a partir de subnós da árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="43b1a-103">No entanto, a maioria das operações de árvore de objeto que você executa normalmente também é exposta por propriedades ou métodos semelhantes no <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43b1a-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="43b1a-104">Por exemplo, tente o seguinte:</span><span class="sxs-lookup"><span data-stu-id="43b1a-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="43b1a-105">Em vez de chamar estático <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> método, que retorna um enumerador para o filho lógico de objetos, use a coleção de dedicado exposta no modelo de conteúdo para esse objeto.</span><span class="sxs-lookup"><span data-stu-id="43b1a-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="43b1a-106">Quase todos os objetos que dão suporte a um modelo de conteúdo expõem alguma propriedade que contém a coleção de objetos filho e fornece suporte de interface de coleção diretamente nessa coleção.</span><span class="sxs-lookup"><span data-stu-id="43b1a-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="43b1a-107">Em vez de chamar estático <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> método para obter um objeto filho especificando seu nome, a chamada a <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> ou <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> método em objetos específicos.</span><span class="sxs-lookup"><span data-stu-id="43b1a-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="43b1a-108"><xref:System.Windows.LogicalTreeHelper> é mais útil para cenários de análise em que você estiver viajando para cima ou para baixo recursivamente a árvore lógica por meio de vários níveis e quiser usar uma abordagem consistente para examinar os diversos objetos pai ou filho.</span><span class="sxs-lookup"><span data-stu-id="43b1a-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="43b1a-109">Nesse caso, você pode estar acessando uma mistura de modelos de conteúdo, e usando o modelo de conteúdo mais APIs específicas seria muito complexas.</span><span class="sxs-lookup"><span data-stu-id="43b1a-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="43b1a-110">O elemento de interface do usuário a ser colocado na exibição.</span><span class="sxs-lookup"><span data-stu-id="43b1a-110">The UI element to bring into view.</span></span></param>
        <summary><span data-ttu-id="43b1a-111">Tenta colocar o elemento de interface do usuário solicitado na exibição e aciona o evento <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> no destino para relatar os resultados.</span><span class="sxs-lookup"><span data-stu-id="43b1a-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b1a-112">Ele é normalmente mais conveniente chamar os métodos de instância <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> ou <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> em vez desse método utilitário estático.</span><span class="sxs-lookup"><span data-stu-id="43b1a-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="43b1a-113">O comportamento dos métodos de instância é equivalente ao comportamento do método estático.</span><span class="sxs-lookup"><span data-stu-id="43b1a-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="43b1a-114">Mesmo se o `current` elemento de interface do usuário fornecido foi uma <xref:System.Windows.FrameworkContentElement>, o evento resultante ainda é o mesmo <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> evento, com a origem <xref:System.Windows.FrameworkContentElement> identificáveis, verificando os dados de evento do evento.</span><span class="sxs-lookup"><span data-stu-id="43b1a-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode"><span data-ttu-id="43b1a-115">O objeto do qual a pesquisa se inicia.</span><span class="sxs-lookup"><span data-stu-id="43b1a-115">The object to start searching from.</span></span> <span data-ttu-id="43b1a-116">Este objeto deve ser um <see cref="T:System.Windows.FrameworkElement" /> ou <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="43b1a-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <param name="elementName"><span data-ttu-id="43b1a-117">O nome do objeto a ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-117">The name of the object to find.</span></span></param>
        <summary><span data-ttu-id="43b1a-118">Tenta localizar e retornar um objeto que tem o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-118">Attempts to find and return an object that has the specified name.</span></span> <span data-ttu-id="43b1a-119">A pesquisa começa do objeto especificado e continua em subnós da árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-119">The search starts from the specified object and continues into subnodes of the logical tree.</span></span></summary>
        <returns><span data-ttu-id="43b1a-120">O objeto com o nome correspondente, caso seja encontrado; retorna <see langword="null" /> se nenhum nome correspondente foi encontrado na árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b1a-121">Os métodos <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> e <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> são superficialmente semelhante ao <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, mas operam por uma lógica diferente:</span><span class="sxs-lookup"><span data-stu-id="43b1a-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="43b1a-122">A direção de pesquisa para <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> aponta para objetos filho (abaixo da árvore); a direção de pesquisa para o `FindName` métodos corresponde à direção objetos pai (para cima a árvore).</span><span class="sxs-lookup"><span data-stu-id="43b1a-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="43b1a-123">O `FindName` métodos são governados pelo conceito de um namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="43b1a-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="43b1a-124">Usando `FindName` terá a garantia de que apenas um objeto com esse nome existe, porque os namescopes XAML impor exclusividade.</span><span class="sxs-lookup"><span data-stu-id="43b1a-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="43b1a-125">Em contraste, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignora o namescope XAML e pode entre limites de namescope XAML durante a pesquisa.</span><span class="sxs-lookup"><span data-stu-id="43b1a-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="43b1a-126">Como tal, não há nenhuma garantia de exclusividade do `elementName` nomeie depois que os limites são atingidos.</span><span class="sxs-lookup"><span data-stu-id="43b1a-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="43b1a-127">Para obter mais informações sobre os namescopes XAML, consulte [Namescopes de XAML do WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="43b1a-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43b1a-128">Por meio do processamento da árvore lógica, retorna a coleção dos objetos filhos imediatos do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="43b1a-129">O objeto do qual iniciar o processamento da árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-129">The object from which to start processing the logical tree.</span></span> <span data-ttu-id="43b1a-130">Espera-se que isso seja um <see cref="T:System.Windows.FrameworkElement" /> ou <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="43b1a-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <summary><span data-ttu-id="43b1a-131">Por meio do processamento da árvore lógica, retorna a coleção dos objetos filho imediatos do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="43b1a-132">A coleção enumerável dos objetos filho imediatos da árvore lógica do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b1a-133">Use esse método de assinatura e auxiliar, principalmente quando você não tiver certeza se `current` é um <xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement> e também tiver certeza se a classe do objeto oferece suporte a sua própria coleção de modelo de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="43b1a-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="43b1a-134">Se você pode determinar o tipo do objeto que você está consultando, verifique a propriedade de conteúdo específica que você sabe que existe nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="43b1a-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="43b1a-135">Por exemplo, se você souber que o objeto que você está consultando é um <xref:System.Windows.Controls.ItemsControl>, verifique o <xref:System.Windows.Controls.ItemsControl.Items%2A> propriedade para obter uma coleção fortemente tipada, que tem suporte de interface de coleção e é provavelmente mais úteis do que um enumerador.</span><span class="sxs-lookup"><span data-stu-id="43b1a-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="43b1a-136">O objeto do qual iniciar o processamento da árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-136">The object from which to start processing the logical tree.</span></span></param>
        <summary><span data-ttu-id="43b1a-137">Retorna uma coleção de objetos filho imediatos do <see cref="T:System.Windows.FrameworkContentElement" /> especificado processando a árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="43b1a-138">A coleção enumerável dos objetos filho imediatos começando do <paramref name="current" /> na árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="43b1a-139">O objeto do qual iniciar o processamento da árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-139">The object from which to start processing the logical tree.</span></span></param>
        <summary><span data-ttu-id="43b1a-140">Retorna uma coleção de objetos filho imediatos do <see cref="T:System.Windows.FrameworkElement" /> especificado processando a árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="43b1a-141">A coleção enumerável dos objetos filho imediatos começando do <paramref name="current" /> na árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="43b1a-142">O objeto cujo objeto pai será localizado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-142">The object to find the parent object for.</span></span> <span data-ttu-id="43b1a-143">Espera-se que seja um <see cref="T:System.Windows.FrameworkElement" /> ou <see cref="T:System.Windows.FrameworkContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="43b1a-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <summary><span data-ttu-id="43b1a-144">Retorna o objeto pai do objeto especificado processando a árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="43b1a-144">Returns the parent object of the specified object by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="43b1a-145">O objeto pai solicitado.</span><span class="sxs-lookup"><span data-stu-id="43b1a-145">The requested parent object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b1a-146">Esse método é apenas um wrapper que obtém a versão do tipo apropriado (<xref:System.Windows.FrameworkElement> ou <xref:System.Windows.FrameworkContentElement>) da <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> ou <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> propriedade; por isso, a menos que você não conseguir determinar o `current` tipo, você talvez queira verificar os respectivos Propriedades da instância em vez disso.</span><span class="sxs-lookup"><span data-stu-id="43b1a-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>