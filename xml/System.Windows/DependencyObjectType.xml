<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyObjectType.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac582fb7814e22f512058a33e227f6da12781e34e22.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82fb7814e22f512058a33e227f6da12781e34e22</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.DependencyObjectType">
          <source>Implements an underlying type cache for all <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> derived types.</source>
          <target state="translated">Implementa um cache do tipo subjacente para todos os tipos derivados <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> represents a specific underlying system (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) <ph id="ph3">&lt;xref:System.Type&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> representa um determinado sistema subjacente (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) <ph id="ph3">&lt;xref:System.Type&gt;</ph> de um <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> is essentially a wrapper for the (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) <ph id="ph3">&lt;xref:System.Type&gt;</ph> so that it can extend some of its capabilities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> é essencialmente um wrapper para a (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) <ph id="ph3">&lt;xref:System.Type&gt;</ph> para que ela pode estender alguns de seus recursos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source>This class has no public constructor.</source>
          <target state="translated">Essa classe não tem construtor público.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObjectType">
          <source>Instances of this class can only be obtained through properties on other objects (such as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType&gt;</ph>), or through the static method <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph>.</source>
          <target state="translated">As instâncias dessa classe só podem ser obtidas por meio de propriedades em outros objetos (como <ph id="ph1">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType&gt;</ph>), ou por meio do método estático <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.BaseType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> of the immediate base class of the current <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> da classe base imediata do <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.BaseType">
          <source>The type of the base class.</source>
          <target state="translated">O tipo da classe base.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>The system (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) type to convert.</source>
          <target state="translated">O tipo (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) do sistema a ser convertido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> that represents a given system (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) type.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> que representa determinado tipo (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) do sistema.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> that represents the system (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) type.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> que representa o tipo (<ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>) do sistema.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> maintains a <ph id="ph2">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt;</ph> property that returns a <ph id="ph3">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>, but this requires having a particular <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> instance.</source>
          <target state="translated">Cada <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> mantém um <ph id="ph2">&lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt;</ph> propriedade que retorna um <ph id="ph3">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>, mas isso é necessário ter um determinado <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>You can use this static utility method if you do not yet have a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> instance and require a <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>.</source>
          <target state="translated">Você pode usar esse método utilitário estático, se você ainda não tiver um <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> instância e exigem um <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph> , creating a <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> based on the type of the <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> class.</source>
          <target state="translated">A exemplo a seguir chama <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;</ph> , criando um <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> com base no tipo do <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">Retorna o código hash para este <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash do inteiro assinado de 32 bits.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.GetHashCode">
          <source>This implementation is linked to the value of the <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Id%2A&gt;</ph> property.</source>
          <target state="translated">Essa implementação é vinculada ao valor da <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Id%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.Id">
          <source>Gets a zero-based unique identifier for constant-time array lookup operations.</source>
          <target state="translated">Obtém um identificador exclusivo de base zero para operações de pesquisa de matriz de tempo constante.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>An internal identifier.</source>
          <target state="translated">Um identificador interno.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>Do not use for general hashing functions.</source>
          <target state="translated">Não use para funções gerais de hash.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>There is no guarantee on this value.</source>
          <target state="translated">Não há nenhuma garantia nesse valor.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Id">
          <source>It can vary between application runs.</source>
          <target state="translated">Ela pode variar entre o aplicativo é executado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser comparado com o <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source>Determines whether the specified object is an instance of the current <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">Determina se o objeto especificado é uma instância do <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the class represented by the current <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> is in the inheritance hierarchy of the <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> passed as <ph id="ph4">&lt;paramref name="d" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a classe representado pelo <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual estiver na hierarquia de herança do <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> passado como <ph id="ph4">&lt;paramref name="d" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
          <source>Objects of the exact same type return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Objetos de exatamente o mesmo tipo de retorno <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> to compare.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> de comparação.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> derives from the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual deriva do <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> parameter and the current <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> represent types of classes, and the class represented by the current <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> derives from the class represented by <ph id="ph5">&lt;paramref name="dependencyObjectType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o parâmetro <ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> e o <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual representarem os tipos de classes e a classe representada pelo <ph id="ph4">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual é derivada da classe representada por <ph id="ph5">&lt;paramref name="dependencyObjectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> and the current <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> represent the same class.</source>
          <target state="translated">Esse método também retornará <ph id="ph1">&lt;see langword="false" /&gt;</ph> se <ph id="ph2">&lt;paramref name="dependencyObjectType" /&gt;</ph> e o <ph id="ph3">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> atual representarem a mesma classe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.Name">
          <source>Gets the name of the represented <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> system type.</source>
          <target state="translated">Obtém o nome do tipo de sistema <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> representado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Name">
          <source>The name of the represented <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> system type.</source>
          <target state="translated">O nome do representado <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> tipo de sistema.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.Name">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Name%2A&gt;</ph> is the same string as the name of the type name of the <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType.Name%2A&gt;</ph> é a mesma cadeia de caracteres como o nome do nome do tipo de <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObjectType.SystemType">
          <source>Gets the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> system type represented by this <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">Obtém o tipo de sistema <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> representado por este <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObjectType.SystemType">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> system type represented by this <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> tipo de sistema representado por esse <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>