<Type Name="LostFocusEventManager" FullName="System.Windows.LostFocusEventManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aeee2c8c1dccfc3b5965b8ffc5ac8c1ebc5ad87d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LostFocusEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LostFocusEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LostFocusEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class LostFocusEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class LostFocusEventManager : System::Windows::WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="69073-101">Fornece uma implementação <see cref="T:System.Windows.WeakEventManager" /> para que seja possível usar o padrão de "ouvinte de eventos fraco" para anexar ouvintes aos eventos <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69073-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69073-102">Para ser ouvintes nesse padrão, os objetos de ouvinte devem implementar <xref:System.Windows.IWeakEventListener>.</span><span class="sxs-lookup"><span data-stu-id="69073-102">In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>.</span></span> <span data-ttu-id="69073-103">Você não precisa implementar <xref:System.Windows.IWeakEventListener> na classe que é a origem dos eventos.</span><span class="sxs-lookup"><span data-stu-id="69073-103">You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="69073-104"> associação de dados usa esse <xref:System.Windows.WeakEventManager> para que as classes internas que atualizam associações podem anexar ouvintes para um <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> ou <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> evento em um objeto que é o destino de uma associação.</span><span class="sxs-lookup"><span data-stu-id="69073-104"> data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> event on an object that is the target of a binding.</span></span> <span data-ttu-id="69073-105">Isso dá suporte à notificação para o <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> modo de associação de dados, sem criar forte faz referência aos destinos de vinculação de dados.</span><span class="sxs-lookup"><span data-stu-id="69073-105">This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> mode of data binding, without creating strong references to data binding targets.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.Windows.DependencyObject source, EventHandler&lt;System.Windows.RoutedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.Windows.DependencyObject source, class System.EventHandler`1&lt;class System.Windows.RoutedEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As DependencyObject, handler As EventHandler(Of RoutedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::Windows::DependencyObject ^ source, EventHandler&lt;System::Windows::RoutedEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.RoutedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="69073-106">O objeto de origem que aciona o evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-106">The source object that the raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="69073-107">O delegado que manipula o evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-107">The delegate that handles the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69073-108">Adiciona o manipulador de eventos especificado, que é chamado quando a origem especificada aciona o evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-108">Adds the specified event handler, which is called when specified source raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69073-109">Use esse método para especificar o manipulador de eventos que você deseja usar para assinar o <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> ou <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="69073-109">Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=nameWithType> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=nameWithType> event..</span></span>  <span data-ttu-id="69073-110">Quando você usar esse método, o objeto de escuta não precisa implementar o <xref:System.Windows.IWeakEventListener> interface.</span><span class="sxs-lookup"><span data-stu-id="69073-110">When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69073-111">
            <paramref name="handler" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-111">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.Windows.DependencyObject source, class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As DependencyObject, listener As IWeakEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::Windows::DependencyObject ^ source, System::Windows::IWeakEventListener ^ listener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="69073-112">O objeto com o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-112">The object with the event.</span>
          </span>
        </param>
        <param name="listener">
          <span data-ttu-id="69073-113">O objeto a ser adicionado como um ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-113">The object to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69073-114">Adiciona o ouvinte fornecido à lista de ouvintes na origem fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-114">Adds the provided listener to the list of listeners on the provided source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::WeakEventManager::ListenerList ^ NewListenerList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69073-115">Retorna um novo objeto para conter ouvintes do evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-115">Returns a new object to contain listeners to the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69073-116">Um novo objeto para conter ouvintes do evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-116">A new object to contain listeners to the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler&lt;System.Windows.RoutedEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.Windows.DependencyObject source, class System.EventHandler`1&lt;class System.Windows.RoutedEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As DependencyObject, handler As EventHandler(Of RoutedEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::Windows::DependencyObject ^ source, EventHandler&lt;System::Windows::RoutedEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.RoutedEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="69073-117">O objeto de origem que aciona o evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-117">The source object that the raises the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="69073-118">O delegado que manipula o evento <see cref="E:System.Windows.UIElement.LostFocus" /> ou <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-118">The delegate that handles the <see cref="E:System.Windows.UIElement.LostFocus" /> or <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69073-119">Remove o manipulador de eventos especificado da fonte especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-119">Removes the specified event handler from the specified source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69073-120">
            <paramref name="handler" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-120">
              <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.Windows.DependencyObject source, class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As DependencyObject, listener As IWeakEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::Windows::DependencyObject ^ source, System::Windows::IWeakEventListener ^ listener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="69073-121">O objeto do qual remover o ouvinte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-121">The object to remove the listener from.</span>
          </span>
        </param>
        <param name="listener">
          <span data-ttu-id="69073-122">O ouvinte a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-122">The listener to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69073-123">Remove o ouvinte especificado da lista de ouvintes na origem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-123">Removes the specified listener from the list of listeners on the provided source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="69073-124">O objeto no qual começar a escutar o evento <see cref="E:System.Windows.UIElement.LostFocus" /> pertinente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-124">The object on which to start listening for the pertinent <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69073-125">Começa a escutar em busca do evento <see cref="E:System.Windows.UIElement.LostFocus" /> na origem fornecida, anexando um manipulador de classe interna a essa origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-125">Begins listening for the <see cref="E:System.Windows.UIElement.LostFocus" /> event on the given source, attaching an internal class handler to that source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69073-126">A fonte fornecida é verificada para o tipo ver se ele está <xref:System.Windows.UIElement> ou <xref:System.Windows.ContentElement> , e, em seguida, adiciona o manipulador de classe para o evento apropriado para essa fonte.</span><span class="sxs-lookup"><span data-stu-id="69073-126">The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LostFocusEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="69073-127">O objeto de origem no qual deixar de escutar <see cref="E:System.Windows.UIElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-127">The source object on which to stop listening for <see cref="E:System.Windows.UIElement.LostFocus" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69073-128">Para de escutar o evento <see cref="E:System.Windows.UIElement.LostFocus" /> na origem fornecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69073-128">Stops listening for the <see cref="E:System.Windows.UIElement.LostFocus" /> event on the given source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.WeakEventManager" />
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>