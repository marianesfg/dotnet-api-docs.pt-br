<Type Name="ValueSource" FullName="System.Windows.ValueSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c64500fcc9768d42490c1ff18e54293bdc46149c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValueSource" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueSource extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValueSource" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueSource" />
  <TypeSignature Language="C++ CLI" Value="public value class ValueSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c638b-101">Relata as informações retornadas de <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c638b-101">Reports the information returned from <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-102">A maioria das informações que <xref:System.Windows.ValueSource> transmite está contida no <xref:System.Windows.ValueSource.BaseValueSource%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c638b-102">Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property.</span></span> <span data-ttu-id="c638b-103">Esta propriedade contém um valor de enumeração que especifica exatamente um aspecto da geral [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sistema de propriedade que é responsável por valor efetivo de uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="c638b-103">This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.</span></span>  
  
 <span data-ttu-id="c638b-104">O valor base, além de outras informações que podem ser interessantes sobre o valor de propriedade de dependência são se o valor está sendo animado e se o valor envolve uma expressão (por exemplo, uma associação, ou uma referência de recurso dinâmico).</span><span class="sxs-lookup"><span data-stu-id="c638b-104">Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</span></span> <span data-ttu-id="c638b-105">Estas informações são relatadas por <xref:System.Windows.ValueSource.IsAnimated%2A> e <xref:System.Windows.ValueSource.IsExpression%2A> respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c638b-105">This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively.</span></span> <span data-ttu-id="c638b-106">Além disso, se coerção está atuando em um valor de propriedade, a propriedade mantém um valor desejado, e o valor da propriedade tentará alcançar esse valor desejado se as restrições da coerção específica são alteradas ou eliminadas.</span><span class="sxs-lookup"><span data-stu-id="c638b-106">Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</span></span> <span data-ttu-id="c638b-107">Uma propriedade forçada que não está em seu valor desejado relatará que <xref:System.Windows.ValueSource.IsCoerced%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="c638b-107">A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyHelper" />
    <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
  </Docs>
  <Members>
    <Member MemberName="BaseValueSource">
      <MemberSignature Language="C#" Value="public System.Windows.BaseValueSource BaseValueSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.BaseValueSource BaseValueSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.BaseValueSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseValueSource As BaseValueSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::BaseValueSource BaseValueSource { System::Windows::BaseValueSource get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.BaseValueSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c638b-108">Obtém um valor da enumeração <see cref="T:System.Windows.BaseValueSource" />, que informa a fonte que forneceu um valor ao sistema de propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-108">Gets a value of the <see cref="T:System.Windows.BaseValueSource" /> enumeration, which reports the source that provided the dependency property system with a value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c638b-109">Um valor da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-109">A value of the enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-110">O valor base não é o valor efetivo se animação ou coerção atua na propriedade.</span><span class="sxs-lookup"><span data-stu-id="c638b-110">The base value is not the effective value if either coercion or animation is acting on the property.</span></span> <span data-ttu-id="c638b-111">Verificar <xref:System.Windows.ValueSource.IsAnimated%2A> e <xref:System.Windows.ValueSource.IsCoerced%2A> para determinar se o valor base é o valor efetivo.</span><span class="sxs-lookup"><span data-stu-id="c638b-111">Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.</span></span>  
  
 <span data-ttu-id="c638b-112">Talvez você também queira verificar <xref:System.Windows.ValueSource.IsExpression%2A> para ver se o valor base foi avaliado fora de uma expressão.</span><span class="sxs-lookup"><span data-stu-id="c638b-112">You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="c638b-113">O objeto a ser comparado com este <see cref="T:System.Windows.ValueSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-113">The object to compare with this <see cref="T:System.Windows.ValueSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c638b-114">Retorna um valor que indica se essa instância de <see cref="T:System.Windows.ValueSource" /> é igual a um objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-114">Returns a value indicating whether this <see cref="T:System.Windows.ValueSource" /> is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c638b-115">
            <see langword="true" /> se o objeto fornecido for equivalente ao <see cref="T:System.Windows.ValueSource" /> atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-115">
              <see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.ValueSource" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-116">Essa implementação oferece suporte a igualdade de valor, com base em cada um dos valores de propriedade de cada <xref:System.Windows.ValueSource> estrutura.</span><span class="sxs-lookup"><span data-stu-id="c638b-116">This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c638b-117">Retorna o código hash para este <see cref="T:System.Windows.ValueSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-117">Returns the hash code for this <see cref="T:System.Windows.ValueSource" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c638b-118">Um código hash de inteiro sem sinal de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-118">A 32-bit unsigned integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-119">Esse código de hash se baseia o <xref:System.Windows.ValueSource.BaseValueSource%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="c638b-119">This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="IsAnimated">
      <MemberSignature Language="C#" Value="public bool IsAnimated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnimated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsAnimated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnimated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnimated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c638b-120">Obtém um valor que declara se a propriedade está sendo animada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-120">Gets a value that declares whether the property is being animated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c638b-121">
            <see langword="true" /> Se a propriedade é animada; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-121">
              <see langword="true" /> if the property is animated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-122">Para qualquer propriedade que está sendo animada no momento, a origem é relatado pelo <xref:System.Windows.ValueSource.BaseValueSource%2A> não é imediatamente relevante, porque a animação opera a precedência de propriedade de dependência maior que o valor base.</span><span class="sxs-lookup"><span data-stu-id="c638b-122">For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</span></span> <span data-ttu-id="c638b-123">Para obter mais informações sobre precedência e animações, consulte [precedência de valor de propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="c638b-123">For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsCoerced">
      <MemberSignature Language="C#" Value="public bool IsCoerced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCoerced" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsCoerced" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCoerced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCoerced { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c638b-124">Obtém um valor que declara se este valor resultou de uma implementação de <see cref="T:System.Windows.CoerceValueCallback" /> aplicada a uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-124">Gets a value that declares whether this value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c638b-125">
            <see langword="true" /> Se o valor de resultado de uma <see cref="T:System.Windows.CoerceValueCallback" /> implementação aplicada a uma propriedade de dependência; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-125">
              <see langword="true" /> if the value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-126">Se a coerção está atuando em um valor de propriedade, a propriedade mantém um valor desejado e o valor da propriedade tentará alcançar esse valor desejado se as restrições da coerção específica são alteradas ou eliminadas.</span><span class="sxs-lookup"><span data-stu-id="c638b-126">If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</span></span> <span data-ttu-id="c638b-127">Uma propriedade forçada que não está em seu valor desejado relatará que <xref:System.Windows.ValueSource.IsCoerced%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="c638b-127">A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c638b-128">Coerção age precedência maior que o valor base e não é estritamente um participante em como o valor base é definido.</span><span class="sxs-lookup"><span data-stu-id="c638b-128">Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</span></span> <span data-ttu-id="c638b-129">Portanto, o estado do que está sendo forçado é relatado por essa propriedade, em vez de um valor da <xref:System.Windows.BaseValueSource> enumeração.</span><span class="sxs-lookup"><span data-stu-id="c638b-129">Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration.</span></span> <span data-ttu-id="c638b-130">Para obter mais informações sobre a coerção, valores de base e a precedência, consulte [precedência de valor de propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="c638b-130">For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrent">
      <MemberSignature Language="C#" Value="public bool IsCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsCurrent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c638b-131">Obtém se o valor foi definido pelo método <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-131">Gets whether the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c638b-132">
            <see langword="true" /> Se o valor foi definido com o <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> método; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-132">
              <see langword="true" /> if the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpression">
      <MemberSignature Language="C#" Value="public bool IsExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpression" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpression { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c638b-133">Obtém um valor que declara se este valor resultou de uma expressão avaliada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-133">Gets a value that declares whether this value resulted from an evaluated expression.</span>
          </span>
          <span data-ttu-id="c638b-134">Pode ser uma <see cref="T:System.Windows.Data.BindingExpression" /> compatível com uma associação ou uma expressão interna, como as compatíveis com a [Extensão de marcação DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-134">This might be a <see cref="T:System.Windows.Data.BindingExpression" /> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c638b-135">
            <see langword="true" /> Se o valor for proveniente de uma expressão avaliada. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-135">
              <see langword="true" /> if the value came from an evaluated expression; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-136">Uma expressão avaliada reportará também o valor base específico, definir condição em que a expressão foi aplicada, como um valor em <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="c638b-136">An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span></span> <span data-ttu-id="c638b-137">O <xref:System.Windows.ValueSource.BaseValueSource%2A> ainda é muito relevante para qualquer propriedade onde <xref:System.Windows.ValueSource.IsExpression%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="c638b-137">The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`.</span></span> <span data-ttu-id="c638b-138">Saber se um valor fornecido por meio de uma expressão pode ser particularmente útil se o valor foi definido indiretamente, por exemplo, por meio de um modelo ou um valor de propriedade herdada.</span><span class="sxs-lookup"><span data-stu-id="c638b-138">Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</span></span>  
  
 <span data-ttu-id="c638b-139">Se uma expressão não avaliada (Falha na associação; não foi encontrado nenhum recurso do nome), o valor será proveniente do algum outro participante no sistema de propriedade, provavelmente, o valor padrão.</span><span class="sxs-lookup"><span data-stu-id="c638b-139">If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</span></span> <span data-ttu-id="c638b-140">Fonte, em seguida, é relatada em <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="c638b-140">That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span></span> <span data-ttu-id="c638b-141">Avaliações de expressão com falha retornará `false` para <xref:System.Windows.ValueSource.IsExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="c638b-141">Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.ValueSource vs1, valuetype System.Windows.ValueSource vs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (vs1 As ValueSource, vs2 As ValueSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::ValueSource vs1, System::Windows::ValueSource vs2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vs1" Type="System.Windows.ValueSource" />
        <Parameter Name="vs2" Type="System.Windows.ValueSource" />
      </Parameters>
      <Docs>
        <param name="vs1">
          <span data-ttu-id="c638b-142">O primeiro <see cref="T:System.Windows.ValueSource" /> a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-142">The first <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <param name="vs2">
          <span data-ttu-id="c638b-143">O segundo <see cref="T:System.Windows.ValueSource" /> a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-143">The second <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c638b-144">Determina se duas instâncias <see cref="T:System.Windows.ValueSource" /> têm o mesmo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-144">Determines whether two <see cref="T:System.Windows.ValueSource" /> instances have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c638b-145">
            <see langword="true" /> se as duas instâncias <see cref="T:System.Windows.ValueSource" /> forem equivalentes, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-145">
              <see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-146">Essa implementação chama <xref:System.Windows.ValueSource.Equals%2A>, e dá suporte ao valor de igualdade com base em todas as propriedades de <xref:System.Windows.ValueSource>.</span><span class="sxs-lookup"><span data-stu-id="c638b-146">This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.ValueSource vs1, valuetype System.Windows.ValueSource vs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (vs1 As ValueSource, vs2 As ValueSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::ValueSource vs1, System::Windows::ValueSource vs2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vs1" Type="System.Windows.ValueSource" />
        <Parameter Name="vs2" Type="System.Windows.ValueSource" />
      </Parameters>
      <Docs>
        <param name="vs1">
          <span data-ttu-id="c638b-147">O primeiro <see cref="T:System.Windows.ValueSource" /> a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-147">The first <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <param name="vs2">
          <span data-ttu-id="c638b-148">O segundo <see cref="T:System.Windows.ValueSource" /> a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-148">The second <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c638b-149">Determina se duas instâncias de <see cref="T:System.Windows.ValueSource" /> não têm o mesmo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-149">Determines whether two <see cref="T:System.Windows.ValueSource" /> instances do not have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c638b-150">
            <see langword="true" /> se as duas instâncias de <see cref="T:System.Windows.ValueSource" /> não forem equivalentes, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c638b-150">
              <see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are not equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c638b-151">Essa implementação chama <xref:System.Windows.ValueSource.Equals%2A>, retornando a negação e dá suporte a igualdade de valor com base em todas as propriedades de <xref:System.Windows.ValueSource>.</span><span class="sxs-lookup"><span data-stu-id="c638b-151">This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
  </Members>
</Type>