<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FrameworkElement.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef8252bb34d9daddff99314e23014e5d61909a488206.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52bb34d9daddff99314e23014e5d61909a488206</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkElement">
          <source>Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements.</source>
          <target state="translated">Fornece um conjunto de propriedades, eventos e métodos de nível de estrutura do WPF para elementos WPF (Windows Presentation Foundation).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkElement">
          <source>This class represents the provided WPF framework-level implementation that is built on the WPF core-level APIs that are defined by <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</source>
          <target state="translated">Essa classe representa a implementação de nível de estrutura do WPF fornecida que se baseia nas APIs de nível de núcleo do WPF definidos pelo <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> is the connecting point between WPF framework-level element classes and the WPF core-level set of <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> presentation services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> é o ponto de conexão entre classes de elemento de nível de framework do WPF e o conjunto de nível de núcleo do WPF de <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> serviços de apresentação.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For more information about these concepts, see <bpt id="p1">[</bpt>WPF Architecture<ept id="p1">](~/docs/framework/wpf/advanced/wpf-architecture.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre esses conceitos, consulte <bpt id="p1">[</bpt>arquitetura WPF<ept id="p1">](~/docs/framework/wpf/advanced/wpf-architecture.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> extends <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and adds the following capabilities:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> estende <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> e adiciona os seguintes recursos:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><bpt id="p1">**</bpt>Layout system definition<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> provides specific WPF framework-level implementations for certain methods that were defined as virtual members in  <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Definição de layout do sistema<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> fornece implementações de nível de framework WPF específicas para determinados métodos que foram definidos como membros virtuais em <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>Most notably, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> seals certain WPF core-level layout overrides, and instead provides a WPF framework-level equivalent that derived classes should override instead.</source>
          <target state="translated">Notadamente, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> lacra determinadas substituições de layout de nível de núcleo do WPF e, em vez disso, fornece um equivalente em nível de framework WPF que classes derivadas deve substituir em vez disso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For example, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> seals <ph id="ph2">&lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;</ph> but provides <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph>.</source>
          <target state="translated">Por exemplo, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> selos <ph id="ph2">&lt;xref:System.Windows.UIElement.ArrangeCore%2A&gt;</ph> , mas fornece <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>These changes reflect the fact that at the WPF framework-level there is a full layout system in place that can render any <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class.</source>
          <target state="translated">Essas alterações refletem o fato de que em nível de framework WPF há um sistema completo de layout que pode processar qualquer <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classe derivada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>At the WPF core level, certain members that will structure a general <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> based layout solution are in place, but the actual engine of the layout system is not defined.</source>
          <target state="translated">No WPF principal níveis, determinados membros que serão estrutura geral <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> solução de layout com base estão em vigor, mas o mecanismo real do sistema de layout não está definido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For more information, see <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Layout<ept id="p1">](~/docs/framework/wpf/advanced/layout.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><bpt id="p1">**</bpt>The logical tree:<ept id="p1">**</ept> The general <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> programming model is often expressed in terms of being a tree of elements.</source>
          <target state="translated"><bpt id="p1">**</bpt>A árvore lógica:<ept id="p1">**</ept> geral <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> modelo de programação geralmente é expressa em termos de sendo uma árvore de elementos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>Support for expressing the tree of elements as a logical tree, and accompanying support for defining that tree in markup is implemented at the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> level.</source>
          <target state="translated">Suporte para expressar a árvore de elementos como uma árvore lógica e que acompanha o suporte para definição de árvore na marcação é implementada no <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> nível.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>Note however that <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> deliberately does not define a content model, and leaves that responsibility to derived classes.</source>
          <target state="translated">Observe no entanto, esse <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> deliberadamente não define um modelo de conteúdo e deixa essa responsabilidade para classes derivadas.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For more information, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Árvores no WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><bpt id="p1">**</bpt>Object lifetime events:<ept id="p1">**</ept> It is often useful to know when an element is initialized (the constructor is called) or when the element is first loaded into a logical tree.</source>
          <target state="translated"><bpt id="p1">**</bpt>Eventos de tempo de vida do objeto:<ept id="p1">**</ept> geralmente é útil saber quando um elemento é inicializado (o construtor seja chamado) ou quando o elemento é carregado pela primeira vez em uma árvore lógica.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> defines several events related to object lifetime that provide useful hooks for code-behind operations that involve elements, such as adding more child elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> define vários eventos relacionados a vida útil do objeto que fornecem ganchos útil para operações de lógica que envolvem elementos, como a adição de mais elementos filho.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For more information, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/docs/framework/wpf/advanced/object-lifetime-events.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>eventos de tempo de vida do objeto<ept id="p1">](~/docs/framework/wpf/advanced/object-lifetime-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><bpt id="p1">**</bpt>Support for data binding and dynamic resource references:<ept id="p1">**</ept> The property-level support for data binding and resources is implemented by the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> class and embodied in the property system, but the ability to resolve a member value that is stored as an <ph id="ph2">&lt;xref:System.Windows.Expression&gt;</ph> (the programming construct that underlies both data binding and dynamic resources) is implemented by <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Suporte para associação de dados e referências a recursos dinâmicos:<ept id="p1">**</ept> o suporte de nível de propriedade para associação de dados e recursos é implementado pelo <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> classe e incorporada no sistema de propriedade, mas a capacidade de resolver um valor do membro que é armazenado como um <ph id="ph2">&lt;xref:System.Windows.Expression&gt;</ph> (a construção de programação que dá suporte a associação de dados e recursos dinâmicos) é implementada por <ph id="ph3">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For more information, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept> and <bpt id="p2">[</bpt>XAML Resources<ept id="p2">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>visão geral de associação de dados<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept> e <bpt id="p2">[</bpt>recursos XAML<ept id="p2">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><bpt id="p1">**</bpt>Styles:<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> defines the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated"><bpt id="p1">**</bpt>Estilos:<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> define o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> does not yet define support for templates, or support decorators.</source>
          <target state="translated">No entanto, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> ainda não definir o suporte para modelos ou suporte decoradores.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>These features are introduced by control classes such as <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</source>
          <target state="translated">Esses recursos são apresentados por classes de controle, como <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><bpt id="p1">**</bpt>More animation support:<ept id="p1">**</ept> Some animation support was already defined at the WPF core level, but <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> extends this by implementing <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt;</ph> and related members.</source>
          <target state="translated"><bpt id="p1">**</bpt>Suporte de animação mais:<ept id="p1">**</ept> algum suporte de animação já foi definido no nível de núcleo do WPF, mas <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> estende isso Implementando <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BeginStoryboard%2A&gt;</ph> e relacionadas a membros.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>As can be seen from the class hierarchy, many <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> classes derive from <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, either directly or through intermediate base classes such as <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</source>
          <target state="translated">Como pode ser deduzido da hierarquia de classe, muitos <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> derivam de <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, diretamente ou por meio de classes de base intermediárias, como <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>If you intend to use <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> as a base class, you might want to first examine the existing derived classes.</source>
          <target state="translated">Se você pretende usar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> como uma classe base, convém primeiro examinar as classes derivadas existentes.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> provides support for a number of basic scenarios, but also lacks a number of features that are desirable for an "element" in the sense of a building block that you use to create <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> fornece suporte para vários cenários básicos, mas também não tem um número de recursos que são desejáveis para um "element" no sentido de um bloco de construção que você usa para criar <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> em <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>For instance, a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> does not define any true content model; <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> as a base class does not define a property that can create <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> child elements.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> não define qualquer modelo de conteúdo true; <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> como uma classe base não define uma propriedade que pode criar <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> elementos filho.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.FrameworkElement">
          <source>In particular, you might want to look at <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</source>
          <target state="translated">Em particular, talvez você queira examinar <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>Gets the rendered height of this element.</source>
          <target state="translated">Obtém a altura renderizada desse elemento.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>The element's height, as a value in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A altura do elemento, como um valor em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>The default value is 0 (zero).</source>
          <target state="translated">O valor padrão é 0 (zero).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>This property is a calculated value based on other height inputs, and the layout system.</source>
          <target state="translated">Esta propriedade é um valor calculado com base nas outras entradas de altura e o sistema de layout.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> that are the basis of the input change.</source>
          <target state="translated">O valor é definido pelo sistema de layout em si, com base em uma passagem de renderização e pode, portanto, ficar um pouco diferente do valor de conjunto de propriedades, como <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> que são a base das alterações de entrada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph> is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph> é um valor calculado, você deve estar ciente de que podem haver várias mudanças ou alterações incrementais a ele como resultado de várias operações pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</source>
          <target state="translated">O sistema de layout pode estar calculando o espaço de medição necessário para elementos filhos, as restrições do elemento pai e assim por diante.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>Although you cannot set this property from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, you can base a <ph id="ph2">&lt;xref:System.Windows.Trigger&gt;</ph> upon its value in a style.</source>
          <target state="translated">Embora você não pode definir essa propriedade da <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, você pode basear um <ph id="ph2">&lt;xref:System.Windows.Trigger&gt;</ph> em seu valor em um estilo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualHeight">
          <source>The following example displays various height properties.</source>
          <target state="translated">O exemplo a seguir exibe várias propriedades de altura.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ActualHeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ActualHeight" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ActualHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>Gets the rendered width of this element.</source>
          <target state="translated">Obtém a largura renderizada desse elemento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>The element's width, as a value in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">Largura do elemento, como um valor em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>The default value is 0 (zero).</source>
          <target state="translated">O valor padrão é 0 (zero).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>This property is a calculated value based on other width inputs, and the layout system.</source>
          <target state="translated">Esta propriedade é um valor calculado com base nas outras entradas de largura e o sistema de layout.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> that are the basis of the input change.</source>
          <target state="translated">O valor é definido pelo sistema de layout em si, com base em uma passagem de renderização e pode, portanto, ficar um pouco diferente do valor de conjunto de propriedades, como <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> que são a base das alterações de entrada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</source>
          <target state="translated">Porque <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> é um valor calculado, você deve estar ciente de que podem haver várias mudanças ou alterações incrementais a ele como resultado de várias operações pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</source>
          <target state="translated">O sistema de layout pode estar calculando o espaço de medição necessário para elementos filhos, as restrições do elemento pai e assim por diante.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>Although you cannot set this property from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, you can base a <ph id="ph2">&lt;xref:System.Windows.Trigger&gt;</ph> upon its value in a style.</source>
          <target state="translated">Embora você não pode definir essa propriedade da <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, você pode basear um <ph id="ph2">&lt;xref:System.Windows.Trigger&gt;</ph> em seu valor em um estilo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ActualWidth">
          <source>The following example displays various width properties.</source>
          <target state="translated">O exemplo a seguir exibe várias propriedades de largura.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ActualWidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ActualWidth" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ActualWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>Child element to be added.</source>
          <target state="translated">Elemento filho a ser adicionado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>Adds the provided object to the logical tree of this element.</source>
          <target state="translated">Adiciona o objeto fornecido à árvore lógica desse elemento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>Use this method for the implementation of collections on objects that represent logical child elements of an element.</source>
          <target state="translated">Use esse método para a implementação de coleções de objetos que representam os elementos filho de um elemento.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>Collection maintenance for child element collections might be done in property getters or setters, class handling of Changed events, constructors, or within the collection types themselves.</source>
          <target state="translated">Manutenção de coleção para coleções de elementos filho pode ser feita em getters de propriedade ou setters, manipulação de eventos Changed, construtores, ou se os tipos de coleção de classe.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the content models for available base control classes are appropriate for your control scenario.</source>
          <target state="translated">Para autores de controle, manipulando a árvore lógica esse nível não é a prática recomendada, a menos que nenhum dos modelos de conteúdo para classes de controle base disponíveis são apropriados para seu cenário de controle.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>Consider subclassing at the level of <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph>.</source>
          <target state="translated">Considere subclassificação no nível de <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>These classes provide a content model with particular enforcement of logical tree child elements through dedicated <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, as well as support for other features typically desirable in a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> control such as styling through templates.</source>
          <target state="translated">Essas classes fornecem um modelo de conteúdo com a imposição de específico de elementos filho de árvore lógica por meio de dedicado <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, bem como suporte para outros recursos normalmente desejáveis em um <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> controle como estilo por meio de modelos.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>For more information on how to use <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</ph>, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como usar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>árvores no WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</ph> may throw an exception if called at a time when the logical tree is being iterated by another process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</ph> pode lançar uma exceção se for chamado em um momento quando a árvore lógica está sendo iterada por outro processo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>The following example implements a <ph id="ph1">`Child`</ph> property on a custom <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that does its own visual layer implementation.</source>
          <target state="translated">O exemplo a seguir implementa um <ph id="ph1">`Child`</ph> propriedade em um personalizado <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que faz a sua própria implementação de camada visual.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>The property setter is designed so that if the value changes, the old value is removed from the logical tree, as well as a class-specific visual collection.</source>
          <target state="translated">O setter da propriedade foi projetado para que se o valor for alterado, o valor antigo é removido da árvore lógica, bem como uma coleção visual específicas de classe.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
          <source>The property value is cached, and then the new value is added to both the logical tree and the custom visual collection.</source>
          <target state="translated">O valor da propriedade é armazenado em cache e, em seguida, o novo valor é adicionado à árvore lógica e a coleção visual personalizada.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source>Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</source>
          <target state="translated">Cria a árvore visual do modelo atual, se necessário, e retorna um valor que indica se a árvore visual foi recriada por essa chamada.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if visuals were added to the tree; returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os visuais tiverem sido adicionados à árvore; caso contrário, retornará <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source>Applications can call this method to guarantee that the visual tree of an element is complete.</source>
          <target state="translated">Aplicativos podem chamar este método para garantir que a árvore visual de um elemento está concluída.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source>This guarantee step might be necessary if code will be checking the child elements in the tree.</source>
          <target state="translated">Essa etapa de garantia pode ser necessária se o código verificar os elementos filho na árvore.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source>For typical element logic within applications, calling <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ApplyTemplate%2A&gt;</ph> is not necessary, because templates will be applied to elements at an appropriate point in their lifetimes automatically.</source>
          <target state="translated">Lógica de elemento típico em aplicativos que chamam <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ApplyTemplate%2A&gt;</ph> não é necessário, porque os modelos serão aplicados a elementos em um momento apropriado em suas vidas úteis automaticamente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ApplyTemplate%2A&gt;</ph> is called on every Measure pass by the WPF framework-level layout system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ApplyTemplate%2A&gt;</ph> é chamado em cada medida passar pelo sistema de layout de nível de framework do WPF.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived classes can use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;</ph> class handler to be notified of cases where this method was called explicitly, or by the layout system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classes derivadas podem usar o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;</ph> manipulador da classe a ser notificado de casos em que esse método foi chamado explicitamente ou pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ApplyTemplate">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;</ph> is called after the template is completely generated and attached to the logical tree.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnApplyTemplate%2A&gt;</ph> é chamado depois que o modelo é gerado e anexado à árvore de lógica de completamente.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">A área final no pai que esse elemento deve usar para organizar a si próprio e seus filhos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <source>Implements <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /&gt;</ph> (defined as virtual in <ph id="ph2">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>) and seals the implementation.</source>
          <target state="translated">Implementa <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /&gt;</ph> (definido como virtual em <ph id="ph2">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>) e lacra a implementação.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <source>This method is sealed.</source>
          <target state="translated">Esse método está lacrado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
          <source>In order to override the logic in your custom element specifically for the arrange pass of element layout, your <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class must override <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph>.</source>
          <target state="translated">Para substituir a lógica em seu elemento personalizado especificamente para a etapa de organização de layout do elemento, o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classe derivada deve substituir <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>The final area within the parent that this element should use to arrange itself and its children.</source>
          <target state="translated">A área final no pai que esse elemento deve usar para organizar a si próprio e seus filhos.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>When overridden in a derived class, positions child elements and determines a size for a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> derived class.</source>
          <target state="translated">Quando substituído em uma classe derivada, posiciona os elementos filho e determina um tamanho para uma classe derivada <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>The actual size used.</source>
          <target state="translated">O tamanho real usado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>Control authors who want to customize the arrange pass of layout processing should override this method.</source>
          <target state="translated">Autores de controle que deseja personalizar a etapa de organização de processamento de layout devem substituir este método.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>The implementation pattern should call <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /&gt;</ph> on each visible child element, and pass the final desired size for each child element as the <ph id="ph2">&lt;paramref name="finalRect" /&gt;</ph> parameter.</source>
          <target state="translated">O padrão de implementação deve chamar <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /&gt;</ph> em cada elemento filho visível e a fase final desejado de tamanho de cada elemento filho como o <ph id="ph2">&lt;paramref name="finalRect" /&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>Parent elements should call <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /&gt;</ph> on each child, otherwise the child elements will not be rendered.</source>
          <target state="translated">Elementos pai devem chamar <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /&gt;</ph> em cada filho, caso contrário, os elementos filho não serão processados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>Many derived classes offer implementations of this method.</source>
          <target state="translated">Muitas classes derivadas oferecem implementações desse método.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
          <source>Prominent ones include: <ph id="ph1">&lt;see cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /&gt;</ph>.</source>
          <target state="translated">Destaque aquelas incluem: <ph id="ph1">&lt;see cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" /&gt;</ph> e <ph id="ph3">&lt;see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>Starts the initialization process for this element.</source>
          <target state="translated">Inicia o processo de inicialização desse elemento.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>You can call this method on individual elements if you are adjusting them in ways that do not yet expose or connect the element to any element tree.</source>
          <target state="translated">Você pode chamar esse método em elementos individuais se você está ajustando-los de maneiras que ainda não expor ou conectar-se o elemento de qualquer árvore de elementos.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>For instance, you might have created a new <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, but have not yet attached it to any logical tree.</source>
          <target state="translated">Por exemplo, talvez você tenha criado um novo <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, mas não tiver ainda conectado-lo para qualquer árvore lógica.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>Or, the logical tree where your element is a child element within it might not be connected to a window or page of the application.</source>
          <target state="translated">Ou, a árvore lógica em que o elemento é um elemento filho dentro dele pode não estar conectada a uma janela ou página do aplicativo.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>Implement this method to provide special handling that should happen before your element is initialized during the element loading process.</source>
          <target state="translated">Implemente esse método para fornecer um tratamento especial que deve acontecer antes que o elemento é inicializado durante o processo de carregamento de elemento.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</source>
          <target state="translated">Sua implementação deve chamar a implementação base, porque a implementação de base (padrão) define alguns sinalizadores internos para manter o controle de inicialização.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>One possible implementation is to use this method as a hook into your own private class initialization routines that are not already enabled by constructors.</source>
          <target state="translated">Uma possível implementação é usá-lo como um gancho em suas próprias rotinas de inicialização de classe privada que já não são habilitadas por construtores.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginInit">
          <source>The base implementation will throw an exception if <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BeginInit" /&gt;</ph> is called more than one time on the same element prior to <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.EndInit" /&gt;</ph> being called.</source>
          <target state="translated">A implementação base lançará uma exceção se <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BeginInit" /&gt;</ph> é chamado mais de uma vez no mesmo elemento antes de <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.EndInit" /&gt;</ph> que está sendo chamado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkElement">
          <source>Begins the sequence of actions contained in the provided storyboard.</source>
          <target state="translated">Inicia a sequência de ações contidas no storyboard fornecido.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>The storyboard to begin.</source>
          <target state="translated">O storyboard a ser iniciado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>Begins the sequence of actions that are contained in the provided storyboard.</source>
          <target state="translated">Inicia a sequência de ações que estão contidas no storyboard fornecido.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">Cenários mais comuns de animação não usam esse método.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>Typically, you create the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> element in markup, and then you place these as the <ph id="ph3">&lt;xref:System.Windows.EventTrigger&gt;</ph> content on an element.</source>
          <target state="translated">Normalmente, você cria o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> elemento na marcação e, em seguida, colocá-los como o <ph id="ph3">&lt;xref:System.Windows.EventTrigger&gt;</ph> conteúdo em um elemento.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">Quando disparado pelo evento, em seguida, a animação é executado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>Most of the control aspects of a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> can be addressed by properties that are exposed in markup.</source>
          <target state="translated">A maioria dos aspectos de controle de um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> pode ser solucionado com propriedades que são expostas na marcação.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">Para que as assinaturas que não usam o <ph id="ph1">`isControllable`</ph>, parâmetro, ou quando esse parâmetro é especificado <ph id="ph2">`false`</ph>, os relógios de linha de tempo que estão associados com a animação são removidos assim que a animação atingir o período de "Preenchimento".</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">Portanto, a animação não pode ser reiniciada após a execução de uma vez.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">Controlar uma animação também requer que o storyboard um <bpt id="p1">[</bpt>diretiva X:Name<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> ou ser acessado por referência no código.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
          <source>The following example retrieves a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> from resources, and then runs that <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> when an internal event is class handled.</source>
          <target state="translated">O exemplo a seguir recupera um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> de recursos, e, em seguida, executa que <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> quando um evento interno é tratado de classe.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The storyboard to begin.</source>
          <target state="translated">O storyboard a ser iniciado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</source>
          <target state="translated">Um valor de enumeração que descreve o comportamento a ser usado se uma propriedade descrita no storyboard já for animada.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</source>
          <target state="translated">Inicia a sequência de ações contida no storyboard fornecido, com opções especificadas para o que acontece se a propriedade já for animada.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">Cenários mais comuns de animação não usam esse método.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Typically, you create the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> element in markup, and then you place these as the <ph id="ph3">&lt;xref:System.Windows.EventTrigger&gt;</ph> content on an element.</source>
          <target state="translated">Normalmente, você cria o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> elemento na marcação e, em seguida, colocá-los como o <ph id="ph3">&lt;xref:System.Windows.EventTrigger&gt;</ph> conteúdo em um elemento.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">Quando disparado pelo evento, em seguida, a animação é executado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Most of the control aspects of a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> can be addressed by properties that are exposed in markup.</source>
          <target state="translated">A maioria dos aspectos de controle de um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> pode ser solucionado com propriedades que são expostas na marcação.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">Para que as assinaturas que não usam o <ph id="ph1">`isControllable`</ph>, parâmetro, ou quando esse parâmetro é especificado <ph id="ph2">`false`</ph>, os relógios de linha de tempo que estão associados com a animação são removidos assim que a animação atingir o período de "Preenchimento".</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">Portanto, a animação não pode ser reiniciada após a execução de uma vez.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">Controlar uma animação também requer que o storyboard um <bpt id="p1">[</bpt>diretiva X:Name<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> ou ser acessado por referência no código.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Handoff behavior can be specified as an attribute of <ph id="ph1">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph>.</source>
          <target state="translated">Comportamento de entrega pode ser especificado como um atributo de <ph id="ph1">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">Usando o HandoffBehavior de composição</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property by using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</source>
          <target state="translated">Quando você aplica um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> para uma propriedade usando o <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, qualquer <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objetos anteriormente associados com aquela propriedade continuam a consumir recursos do sistema; o sistema de temporização não remove os relógios automaticamente.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks by using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Para evitar problemas de desempenho quando você aplicar um grande número de relógios usando <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, você deve remover relógios de composição da propriedade animada após a conclusão.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock:</source>
          <target state="translated">Há várias maneiras de remover um relógio de:</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">Para remover todos os relógios de uma propriedade, use o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> método do objeto animado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Especifique a propriedade sendo animada como o primeiro parâmetro, e <ph id="ph1">`null`</ph> como o segundo.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">Isso remove todos os relógios de animação da propriedade.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">Para remover um determinado <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> de uma lista de relógios, use o <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> propriedade do <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> para recuperar um <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, chame o <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> método do <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">Isso geralmente é feito o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> um relógio de manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Observe que somente relógios de raiz podem ser controlados por um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; o <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> retorna a propriedade de um relógio filho <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not raised if the effective duration of the clock is forever.</source>
          <target state="translated">Observe também que o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> evento não será gerado se a duração efetiva do relógio for indefinida.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">Nesse caso, o usuário deve determinar quando chamar <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">Isso é basicamente um problema para animações em objetos que têm um longo tempo de vida.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">Quando um objeto é coletado como lixo, seus relógios também serão desconectados e coletados como lixo.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre objetos clock, consulte <bpt id="p1">[</bpt>visão geral do sistema de controle de tempo e animação<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example retrieves a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> from resources, and then runs that <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> when an internal event is class handled.</source>
          <target state="translated">O exemplo a seguir recupera um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> de recursos, e, em seguida, executa que <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> quando um evento interno é tratado de classe.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>The storyboard to begin.</source>
          <target state="translated">O storyboard a ser iniciado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</source>
          <target state="translated">Um valor de enumeração que descreve o comportamento a ser usado se uma propriedade descrita no storyboard já for animada.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Declares whether the animation is controllable (can be paused) after it is started.</source>
          <target state="translated">Declara se a animação é controlável (pode estar em pausa) depois que ela é iniciada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</source>
          <target state="translated">Inicia a sequência de ações contidas no storyboard fornecido, com o estado especificado para o controle da animação depois que ela é iniciada.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Most typical animation scenarios do not use this method.</source>
          <target state="translated">Cenários mais comuns de animação não usam esse método.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Typically, you create the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> element in markup, and then you place these as the <ph id="ph3">&lt;xref:System.Windows.EventTrigger&gt;</ph> content on an element.</source>
          <target state="translated">Normalmente, você cria o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph> elemento na marcação e, em seguida, colocá-los como o <ph id="ph3">&lt;xref:System.Windows.EventTrigger&gt;</ph> conteúdo em um elemento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When triggered by the event, the animation then runs.</source>
          <target state="translated">Quando disparado pelo evento, em seguida, a animação é executado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Most of the control aspects of a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> can be addressed by properties that are exposed in markup.</source>
          <target state="translated">A maioria dos aspectos de controle de um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> pode ser solucionado com propriedades que são expostas na marcação.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>For the signatures that do not use the <ph id="ph1">`isControllable`</ph>, parameter, or when that parameter is specified <ph id="ph2">`false`</ph>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</source>
          <target state="translated">Para que as assinaturas que não usam o <ph id="ph1">`isControllable`</ph>, parâmetro, ou quando esse parâmetro é especificado <ph id="ph2">`false`</ph>, os relógios de linha de tempo que estão associados com a animação são removidos assim que a animação atingir o período de "Preenchimento".</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Therefore the animation cannot be restarted after running once.</source>
          <target state="translated">Portanto, a animação não pode ser reiniciada após a execução de uma vez.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Controlling an animation also requires that the storyboard have an <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> or be accessible by reference in code.</source>
          <target state="translated">Controlar uma animação também requer que o storyboard um <bpt id="p1">[</bpt>diretiva X:Name<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> ou ser acessado por referência no código.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Handoff behavior can be specified as an attribute of <ph id="ph1">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph>.</source>
          <target state="translated">Comportamento de entrega pode ser especificado como um atributo de <ph id="ph1">&lt;xref:System.Windows.Media.Animation.BeginStoryboard&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">Usando o HandoffBehavior de composição</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property by using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</source>
          <target state="translated">Quando você aplica um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> para uma propriedade usando o <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, qualquer <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objetos anteriormente associados com aquela propriedade continuam a consumir recursos do sistema; o sistema de temporização não remove os relógios automaticamente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To avoid performance issues when you apply a large number of clocks by using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Para evitar problemas de desempenho quando você aplicar um grande número de relógios usando <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, você deve remover relógios de composição da propriedade animada após a conclusão.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>There are several ways to remove a clock:</source>
          <target state="translated">Há várias maneiras de remover um relógio de:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">Para remover todos os relógios de uma propriedade, use o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> método do objeto animado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Especifique a propriedade sendo animada como o primeiro parâmetro, e <ph id="ph1">`null`</ph> como o segundo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This removes all animation clocks from the property.</source>
          <target state="translated">Isso remove todos os relógios de animação da propriedade.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">Para remover um determinado <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> de uma lista de relógios, use o <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> propriedade do <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> para recuperar um <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, chame o <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> método do <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">Isso geralmente é feito o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> um relógio de manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Observe que somente relógios de raiz podem ser controlados por um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; o <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> retorna a propriedade de um relógio filho <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event is not raised if the effective duration of the clock is forever.</source>
          <target state="translated">Observe também que o <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> evento não será gerado se a duração efetiva do relógio for indefinida.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>In that case, the user must determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">Nesse caso, o usuário deve determinar quando chamar <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">Isso é basicamente um problema para animações em objetos que têm um longo tempo de vida.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>When an object is garbage collected, its clocks are also disconnected and garbage collected.</source>
          <target state="translated">Quando um objeto é coletado como lixo, seus relógios também serão desconectados e coletados como lixo.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
          <source>For more information about clock objects, see <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre objetos clock, consulte <bpt id="p1">[</bpt>visão geral do sistema de controle de tempo e animação<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> that is used for the element.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> que é usado para o elemento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> that is used for the element.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> que é usado para o elemento.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> can be used to validate the values of multiple properties of an object.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> pode ser usado para validar os valores de várias propriedades de um objeto.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>For example, suppose that an application prompts the user to enter an address and then populates an object of type <ph id="ph1">`Address`</ph>, which has the properties <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, and <ph id="ph5">`Country`</ph>, with the values that the user provided.</source>
          <target state="translated">Por exemplo, suponha que um aplicativo solicita que o usuário insira um endereço e, em seguida, popula um objeto do tipo <ph id="ph1">`Address`</ph>, que tem as propriedades <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, e <ph id="ph5">`Country`</ph>, com os valores fornecidos pelo usuário.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The application has a panel that contains four <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is bound to one of the object’s properties.</source>
          <target state="translated">O aplicativo tem um painel que contém quatro <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controles, cada um deles está associada a uma das propriedades do objeto.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to validate the <ph id="ph3">`Address`</ph> object.</source>
          <target state="translated">Você pode usar um <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> em uma <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> para validar o <ph id="ph3">`Address`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> can ensure that the zip code is valid for the country of the address.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> pode garantir que o código postal seja válido para o país do endereço.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>Child elements inherit the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from their parent elements, just as with any other inheritable property.</source>
          <target state="translated">Elementos filho herdam o <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> de seus elementos-pai, assim como com qualquer outra propriedade herdável.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>Metadata properties set to <bpt id="p1">**</bpt>true<ept id="p1">**</ept></source>
          <target state="translated">Definir propriedades de metadados <bpt id="p1">**</bpt>true<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</source>
          <target state="translated">Os exemplos a seguir fazem parte de um aplicativo que verifica se o usuário tiver definido as propriedades de dois objetos forem iguais aos valores.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The first example creates two <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is bound to a different data source.</source>
          <target state="translated">O primeiro exemplo cria dois <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controles, cada um deles está associada a uma fonte de dados diferente.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> that contains a <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that checks that the two strings are equal.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> tem um <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> que contém um <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> que verifica se duas cadeias de caracteres são iguais.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that the previous example uses.</source>
          <target state="translated">A exemplo a seguir mostra a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> que usa o exemplo anterior.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method override, the example gets each source object from the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and checks whether the properties of the objects are equal.</source>
          <target state="translated">No <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> substituição de método, o exemplo obtém cada objeto de origem do <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> e verifica se as propriedades dos objetos são iguais.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>To invoke the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> method.</source>
          <target state="translated">Para invocar o <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>, chame o <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.BindingGroup">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> when the click event of the button occurs.</source>
          <target state="translated">A exemplo a seguir chama <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> quando ocorre o evento de clique do botão.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.BindingGroupProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.BindingGroup" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.BindingGroup" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkElement">
          <source>Attempts to bring this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">Tenta trazer esse elemento para a exibição, dentro de qualquer região rolável na qual ele está contido.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>Attempts to bring this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">Tenta trazer esse elemento para a exibição, dentro de qualquer região rolável na qual ele está contido.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>By calling this method, you raise a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event that originates from the current element.</source>
          <target state="translated">Ao chamar esse método, você deve gerar um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> eventos originados do elemento atual.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>This event is raised so that it can be handled by a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, or a derived or similar class.</source>
          <target state="translated">Esse evento é gerado para que ela possa ser tratada por um <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, ou uma classe derivada ou semelhante.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> control.</source>
          <target state="translated">O comportamento esperado é que o evento é manipulado pelo elemento pai, marcado como tratado nos dados do evento, e a origem do evento é colocada em modo de exibição através de lógica de inserida no <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>Neither the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event nor the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> method transmit any information about success or failure, other than that the event is typically marked handled on success.</source>
          <target state="translated">Nem o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> evento nem o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> método transmitir qualquer informação sobre êxito ou falha, que o evento normalmente é marcado como manipulado no êxito.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>Reasons for failure can include the element settings, such as <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> being some value other than <ph id="ph2">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</source>
          <target state="translated">Motivos para a falha pode incluir as configurações de elemento, como <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> sendo algum valor diferente de <ph id="ph2">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>If you use the signature that does not specify a <ph id="ph1">`targetRectangle`</ph>, then the entire element size (its <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;</ph>) will be made visible.</source>
          <target state="translated">Se você usar a assinatura que não especificam um <ph id="ph1">`targetRectangle`</ph>, em seguida, o tamanho de todo o elemento (seu <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;</ph>) ficará visível.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>By calling this method, you potentially will call <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</ph> on any parent scrollable area that contains the element.</source>
          <target state="translated">Ao chamar esse método, você possivelmente chamará <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</ph> em qualquer área rolável pai que contém o elemento.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>If this element is not contained in a scrollable area, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event is still raised, but there will be no effect because there are no event listeners.</source>
          <target state="translated">Se esse elemento não está contido em uma área rolável, o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> ainda é gerado, mas não haverá nenhum efeito porque não há nenhum ouvintes de evento.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>The following example implements a handler for an application navigation event that responds whenever the <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> being navigated to includes a fragment.</source>
          <target state="translated">O exemplo a seguir implementa um manipulador para um evento de navegação do aplicativo sempre que responde a <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> sendo navegado inclui um fragmento.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source>The fragment is named in the <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> following the hash sign (#), and the implemented behavior causes the element to scroll into view within the frame.</source>
          <target state="translated">O fragmento é nomeado de <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> após o sinal de hash (#), e o comportamento implementado faz com que o elemento deve aparecer na exibição dentro do quadro.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> request that scrolling behavior in the example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> esse comportamento de rolagem no exemplo de solicitação.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>Specified size of the element that should also be brought into view.</source>
          <target state="translated">Tamanho especificado do elemento que também deve ser colocado na exibição.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</source>
          <target state="translated">Tenta trazer o tamanho da região fornecido desse elemento para a exibição, dentro de qualquer região rolável na qual ele está contido.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>By calling this method, you raise a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event that originates from the current element.</source>
          <target state="translated">Ao chamar esse método, você deve gerar um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> eventos originados do elemento atual.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>This event is raised so that it can be handled by a <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, or a derived or similar class.</source>
          <target state="translated">Esse evento é gerado para que ela possa ser tratada por um <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph>, ou uma classe derivada ou semelhante.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> control.</source>
          <target state="translated">O comportamento esperado é que o evento é manipulado pelo elemento pai, marcado como tratado nos dados do evento, e a origem do evento é colocada em modo de exibição através de lógica de inserida no <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>Neither the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event nor the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> method transmit any information about success or failure, other than that the event is typically marked handled on success.</source>
          <target state="translated">Nem o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> evento nem o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> método transmitir qualquer informação sobre êxito ou falha, que o evento normalmente é marcado como manipulado no êxito.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>Reasons for failure can include the element settings, such as <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> being some value other than <ph id="ph2">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</source>
          <target state="translated">Motivos para a falha pode incluir as configurações de elemento, como <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> sendo algum valor diferente de <ph id="ph2">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>If you use the signature that does not specify a <ph id="ph1">`targetRectangle`</ph>, then the entire element size (its <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;</ph>) will be made visible.</source>
          <target state="translated">Se você usar a assinatura que não especificam um <ph id="ph1">`targetRectangle`</ph>, em seguida, o tamanho de todo o elemento (seu <ph id="ph2">&lt;xref:System.Windows.UIElement.RenderSize%2A&gt;</ph>) ficará visível.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>By calling this method, you potentially will call <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</ph> on any parent scrollable area that contains the element.</source>
          <target state="translated">Ao chamar esse método, você possivelmente chamará <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A&gt;</ph> em qualquer área rolável pai que contém o elemento.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>If this element is not contained in a scrollable area, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event is still raised, but there will be no effect because there are no event listeners.</source>
          <target state="translated">Se esse elemento não está contido em uma área rolável, o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> ainda é gerado, mas não haverá nenhum efeito porque não há nenhum ouvintes de evento.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>The following example has a large graphic in a constrained scrolling region.</source>
          <target state="translated">O exemplo a seguir tem um elemento gráfico grande em uma região de rolagem restrita.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
          <source>A button on the page has a handler that scrolls the view to a particular region of the large graphic.</source>
          <target state="translated">Um botão na página tem um manipulador que rola o modo de exibição para uma determinada região do gráfico grande.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>Gets or sets the context menu element that should appear whenever the context menu is requested through <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> from within this element.</source>
          <target state="translated">Obtém ou define o elemento do menu de contexto que deve aparecer sempre que o menu de contexto for solicitado por meio de <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> nesse elemento.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>The context menu assigned to this element.</source>
          <target state="translated">O menu de contexto atribuído a este elemento.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> itself is a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class, and it is technically possible for <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> itself to have a <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> em si é um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classe derivada, e é tecnicamente possível <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> para ter um <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>However, this creates a confusing context menu experience for the user and this practice is not recommended.</source>
          <target state="translated">No entanto, isso cria uma experiência de menu de contexto confuso para o usuário e essa prática não é recomendada.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ContextMenu">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Occurs just before any context menu on the element is closed.</source>
          <target state="translated">Ocorre logo antes do fechamento de qualquer menu de contexto no elemento.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>To suppress closing context menus, handlers of the event should mark it as handled.</source>
          <target state="translated">Para suprimir o fechamento menus de contexto, manipuladores de evento devem marcá-la como manipulado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>To use this event as an <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style, you must reference the underlying service's definition of the event:</source>
          <target state="translated">Para usar esse evento como um <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo, você deve fazer referência a definição do serviço subjacente do evento:</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>(This usage is required because the event implementation on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that exposes the underlying service event does not map the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenuClosing&gt;</ph> identifier such that you can use it as a trigger).</source>
          <target state="translated">(Esse uso é necessário porque a implementação de evento em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que expõe o evento serviço subjacente não mapeia o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenuClosing&gt;</ph> identificador, de modo que você pode usá-lo como um disparador).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> itself is a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class, but the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ContextMenuClosing&gt;</ph> event will not be raised by a context menu directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> em si é um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derivado da classe, mas o <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ContextMenuClosing&gt;</ph> evento não será gerado por um menu de contexto diretamente.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Instead, the event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to close a context menu in the UI.</source>
          <target state="translated">Em vez disso, o evento é gerado do elemento que o menu de contexto, como uma propriedade é "dono" e só é gerado quando um usuário tenta fechar um menu de contexto na interface de usuário.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>However it is possible for <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> itself to have a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> property (a nested context menu).</source>
          <target state="translated">No entanto é possível <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> para ter um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> propriedade (um menu de contexto aninhados).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>In this case the <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> really does own the nested <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> and might raise the event, with the source of the event being the nested context menu.</source>
          <target state="translated">Nesse caso o <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> realmente possui aninhada <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> e pode gerar o evento, com a origem do evento que está sendo o menu de contexto aninhados.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> class itself also has a similar event (<ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph>) but the <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph> event does not provide you the opportunity to cancel the user action.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> classe em si também tem um evento semelhante (<ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph>), mas o <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Closed&gt;</ph> evento não oferece a oportunidade de cancelar a ação do usuário.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Bubbling</source>
          <target state="translated">Bolha</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuClosing">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt;</ph> to implement class handling for this event in derived classes.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A&gt;</ph> para implementar a manipulação de classe para esse evento em classes derivadas.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Occurs when any context menu on the element is opened.</source>
          <target state="translated">Ocorre quando qualquer menu de contexto no elemento é aberto.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>To manually open context menus, handlers of the events should mark the relevant event as handled.</source>
          <target state="translated">Para abrir manualmente os menus de contexto, manipuladores de eventos devem marcar o evento relevante como manipulado.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Otherwise, the existing value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> property will be used to automatically open a context menu.</source>
          <target state="translated">Caso contrário, o valor existente da <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> propriedade será usada para automaticamente abrir um menu de contexto.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> property and then open the new <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</source>
          <target state="translated">Marcar o evento manipulado efetivamente cancelará a ação padrão e pode ser uma oportunidade para redefinir o valor da <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> propriedade e, em seguida, abra o novo <ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>However, there is a timing issue you should be aware of.</source>
          <target state="translated">No entanto, há um problema de sincronização que deve estar atento.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>In order to completely replace the context menu through a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ContextMenuOpening&gt;</ph> handler, the initial context menu must not be null / empty.</source>
          <target state="translated">Para substituir completamente o menu de contexto por meio de um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ContextMenuOpening&gt;</ph> manipulador, no menu de contexto inicial não deve ser nulo / vazio.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Alternatively, you might need to handle the event and then manually open a new context menu.</source>
          <target state="translated">Como alternativa, você precisará manipular o evento e, em seguida, abra manualmente um novo menu de contexto.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>For details, see <bpt id="p1">[</bpt>How to: Handle the ContextMenuOpening Event<ept id="p1">](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>como: manipular o evento ContextMenuOpening<ept id="p1">](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>To use this event as an <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style, you must reference the underlying attached event:</source>
          <target state="translated">Para usar esse evento como um <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo, você deve referenciar o evento anexado subjacente:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>(This usage is required because the event implementation on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that exposes the underlying service event does not map the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenuOpening&gt;</ph> identifier such that you can use it in triggers).</source>
          <target state="translated">(Esse uso é necessário porque a implementação de evento em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que expõe o evento serviço subjacente não mapeia o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenuOpening&gt;</ph> identificador, de modo que você pode usá-lo em gatilhos).</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> itself is a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class, but this event will not be raised from the context menu being opened as a source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> Se for um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classe derivada, mas esse evento não será gerado no menu de contexto que está sendo aberto como uma fonte.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>The event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to open a context menu in the UI.</source>
          <target state="translated">O evento é gerado do elemento que o menu de contexto, como uma propriedade é "dono" e só é gerado quando um usuário tenta abrir um menu de contexto na interface de usuário.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>It is possible for <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> itself to have a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> property, but you should avoid this scenario (for details, see <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">É possível <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> para ter um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A&gt;</ph> propriedade, mas você deve evitar este cenário (para obter detalhes, consulte <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> class itself also has a similar event (<ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph>) but <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph> does not provide you the opportunity to cancel the user action.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.ContextMenu&gt;</ph> classe em si também tem um evento semelhante (<ph id="ph2">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph>), mas <ph id="ph3">&lt;xref:System.Windows.Controls.ContextMenu.Opened&gt;</ph> não oferece a oportunidade de cancelar a ação do usuário.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Bubbling</source>
          <target state="translated">Bolha</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ContextMenuOpening">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt;</ph> to implement class handling for this event in derived classes.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A&gt;</ph> para implementar a manipulação de classe para esse evento em classes derivadas.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ContextMenuProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ContextMenu" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ContextMenu" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Gets or sets the cursor that displays when the mouse pointer is over this element.</source>
          <target state="translated">Obtém ou define o cursor exibido quando o ponteiro do mouse está sobre este elemento.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The cursor to display.</source>
          <target state="translated">O cursor a ser exibido.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The default value is defined as <ph id="ph1">&lt;see langword="null" /&gt;</ph> per this dependency property.</source>
          <target state="translated">O valor padrão é definido como <ph id="ph1">&lt;see langword="null" /&gt;</ph> por essa propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>However, the practical default at run time will come from a variety of factors.</source>
          <target state="translated">No entanto, o padrão prático em tempo de execução virá de uma variedade de fatores.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>When you set this property in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processor relies on type conversion for the <ph id="ph3">&lt;xref:System.Windows.Input.Cursor&gt;</ph> class to evaluate the string.</source>
          <target state="translated">Quando você definir essa propriedade <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, o <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processador depende de conversão de tipo para o <ph id="ph3">&lt;xref:System.Windows.Input.Cursor&gt;</ph> classe para avaliar a cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The provided string should evaluate to a <ph id="ph1">&lt;xref:System.Windows.Input.CursorType&gt;</ph> value.</source>
          <target state="translated">A cadeia de caracteres fornecida deve ser avaliada como um <ph id="ph1">&lt;xref:System.Windows.Input.CursorType&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> for details.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> para obter os detalhes.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> property.</source>
          <target state="translated">Se o cursor como definido por essa propriedade será ou não será exibida quando o ponteiro do mouse está sobre este elemento também é dependente do valor da <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</source>
          <target state="translated">Além disso, considerações relacionadas, como um ativo arrastar, captura do mouse, modos dentro de controles e assim por diante, de edição de texto também afeta o cursor com prioridade maior do que o valor especificado nesta propriedade.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>To revert the behavior of setting this property to the eventual default, set it to <ph id="ph1">`null`</ph> again.</source>
          <target state="translated">Para reverter o comportamento de definir esta propriedade para o padrão eventual, defina-a como <ph id="ph1">`null`</ph> novamente.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The <ph id="ph1">`null`</ph> default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</source>
          <target state="translated">O <ph id="ph1">`null`</ph> padrão realmente significa que a determinação do valor prático de cursor é adiada aqui e deve ser obtida a partir de outro local.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>If presented without programmatic values from any source, the default cursor that is visually over a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> application will be an arrow.</source>
          <target state="translated">Se for exibida sem valores programáticos de qualquer fonte, o cursor padrão que é visualmente em uma <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> aplicativo será uma seta.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>However, the transient cursor changes are not set to the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> values of the elements when they are passed over.</source>
          <target state="translated">No entanto, as alterações de cursor transitório não estão definidas para o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> valores dos elementos quando eles são passados.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property will only report non null values in cases where it was actually set, for instance through code or a style.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> valores de propriedade será somente relatórios não nulos em casos onde foi realmente definida, por exemplo por meio de código ou um estilo.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Each movement of the mouse over a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> application raises a <ph id="ph2">&lt;xref:System.Windows.UIElement.QueryCursor&gt;</ph> event.</source>
          <target state="translated">Cada movimento do mouse sobre um <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> aplicativo gera um <ph id="ph2">&lt;xref:System.Windows.UIElement.QueryCursor&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor through the arguments of this event.</source>
          <target state="translated">As bolhas de evento e qualquer elemento na rota tem a oportunidade para manipular o evento e definir o valor do cursor pelos argumentos desse evento.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>This is the mechanism that produces the visually apparent cursor in most cases.</source>
          <target state="translated">Esse é o mecanismo que produz o cursor visualmente aparente na maioria dos casos.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.UIElement.QueryCursor&gt;</ph> handler returns a cursor result, then the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property at any level, unless <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> is set.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Windows.UIElement.QueryCursor&gt;</ph> manipulador retorna um resultado de cursor, em seguida, o fato de que o evento é manipulado e tem um valor alterado nos argumentos tem precedência sobre o valor da <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> propriedade em qualquer nível, a menos que <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> está definido.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>If not are not creating a custom cursor, you typically set this property to a static property value of the <ph id="ph1">&lt;xref:System.Windows.Input.Cursors&gt;</ph> class.</source>
          <target state="translated">Se não estiver criando um cursor personalizado, normalmente você definir essa propriedade para um valor da propriedade estática de <ph id="ph1">&lt;xref:System.Windows.Input.Cursors&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> in code requires one of the following:</source>
          <target state="translated">Configuração <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> no código requer um dos seguintes:</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> constructor to get a <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> instance.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> construtor para obter um <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Both signatures of the <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> constructor use streams or files, in anticipation that you are creating the <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> object for a custom cursor.</source>
          <target state="translated">Ambas as assinaturas do <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> construtor use fluxos ou arquivos, antes que você está criando o <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> objeto para um cursor personalizado.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.CursorConverter&gt;</ph> class and its <ph id="ph2">&lt;xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt;</ph> method to specify a cursor by <ph id="ph3">&lt;xref:System.Windows.Input.CursorType&gt;</ph>, or a string that can evaluate to a <ph id="ph4">&lt;xref:System.Windows.Input.CursorType&gt;</ph>, and cast the return to <ph id="ph5">&lt;xref:System.Windows.Input.Cursor&gt;</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Windows.Input.CursorConverter&gt;</ph> classe e seu <ph id="ph2">&lt;xref:System.Windows.Input.CursorConverter.ConvertFrom%2A&gt;</ph> método para especificar um cursor pelo <ph id="ph3">&lt;xref:System.Windows.Input.CursorType&gt;</ph>, ou uma cadeia de caracteres que pode ser avaliada como um <ph id="ph4">&lt;xref:System.Windows.Input.CursorType&gt;</ph>e converter retornar ao <ph id="ph5">&lt;xref:System.Windows.Input.Cursor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> to a custom value is not enabled in partial trust.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> para um valor personalizado não está habilitado em confiança parcial.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>For more information on custom cursors, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre cursores personalizados, consulte <bpt id="p1">[</bpt>visão geral de entrada<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Cursor">
          <source>The following example shows how to deliberately set the cursor graphic.</source>
          <target state="translated">O exemplo a seguir mostra como definir deliberadamente o gráfico de cursor.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.CursorProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Cursor" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Cursor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Gets or sets the data context for an element when it participates in data binding.</source>
          <target state="translated">Obtém ou define o contexto de dados de um elemento quando ele participa da vinculação de dados.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>The object to use as data context.</source>
          <target state="translated">O objeto a ser usado como contexto de dados.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source><bpt id="p1">*</bpt>Data context<ept id="p1">*</ept> is a concept that allows elements to inherit information from their parent elements about the data source that is used for binding, as well as other characteristics of the binding, such as the path.</source>
          <target state="translated"><bpt id="p1">*</bpt>Contexto de dados<ept id="p1">*</ept> é um conceito que permite aos elementos herdar informações de seus elementos pais sobre a fonte de dados que é usado para associação, bem como outras características de associação, como o caminho.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Data context can be set directly to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, with the bindings evaluating to properties of that object.</source>
          <target state="translated">Contexto de dados pode ser definido diretamente para um <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> objeto, com as associações de avaliação de propriedades desse objeto.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Alternatively, you can set the data context to a <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> object.</source>
          <target state="translated">Como alternativa, você pode definir o contexto de dados para um <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>This dependency property inherits property values.</source>
          <target state="translated">Essa propriedade de dependência herda valores da propriedade.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>If there are child elements without other values for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> established through local values or styles, then the property system will set the value to be the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> value of the nearest parent element with this value assigned.</source>
          <target state="translated">Se houver elementos filho sem outros valores para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> estabelecida por meio de valores locais ou estilos, em seguida, o sistema de propriedade definirá o valor a ser o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> valor do elemento pai mais próximo com esse valor atribuído.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Alternatively, you can use one of the following properties of the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class to specify the binding source explicitly: <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>.</source>
          <target state="translated">Como alternativa, você pode usar uma das seguintes propriedades de <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> classe para especificar a origem de associação explicitamente: <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, ou <ph id="ph4">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: especificar a origem da associação<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is most typically set to as a <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> declaration.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> geralmente é definido como como um <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> declaração.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>You can use either property element syntax or attribute syntax.</source>
          <target state="translated">Você pode usar a sintaxe de elemento de propriedade ou sintaxe de atributo.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Attribute syntax is shown in the example on this page.</source>
          <target state="translated">Sintaxe de atributo é mostrado no exemplo nesta página.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>You can also use code to set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>.</source>
          <target state="translated">Você também pode usar código para definir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is a bindable property, to facilitate scenarios where one context might be bound to another.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> é uma propriedade ligável, para facilitar cenários onde um contexto pode ser vinculado a outro.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>However, if you bind to <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>, be careful to not create circular binding references (do not bind a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> to itself, which is possible to do because of the property value inheritance nature of the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property).</source>
          <target state="translated">No entanto, se vincular a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>, tenha cuidado para não criar referências de associação circular (não vincular um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> a mesmo, que é possível fazer devido à natureza de herança do valor de propriedade do <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> propriedade).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source><bpt id="p1">*</bpt>dataContextObject<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>dataContextObject<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>A directly embedded object that serves as data context for any bindings within the parent element.</source>
          <target state="translated">Um objeto diretamente incorporado que serve como o contexto de dados para associações dentro do elemento pai.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Typically, this object is a <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or another <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> derived class.</source>
          <target state="translated">Normalmente, esse objeto é um <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> ou outro <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> classe derivada.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Alternatively, raw data of any <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object type intended for binding may be placed here, with the actual bindings defined later.</source>
          <target state="translated">Como alternativa, os dados brutos de qualquer <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> destinado para associação pode ser colocada aqui, com as associações reais definidas posteriormente do tipo de objeto.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source><bpt id="p1">*</bpt>bindingUsage<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>bindingUsage<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>A binding usage that evaluates to an appropriate data context.</source>
          <target state="translated">Um uso de associação que é avaliada para um contexto de dados apropriado.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>For details, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept>.</source>
          <target state="translated">Para ver os detalhes, consulte <bpt id="p1">[</bpt>Extensão de marcação Binding<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>One of the following:  or .</source>
          <target state="translated">Um dos seguintes: ou.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>This usage is used when referring to raw data defined as an object in resources.</source>
          <target state="translated">Esse uso é usado ao fazer referência a dados brutos definidos como um objeto de recursos.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>recursos XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source><bpt id="p1">*</bpt>contextResourceKey<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>contextResourceKey<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>The key identifier for the object being requested from within a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">O identificador de chave para o objeto que está sendo solicitado de dentro um <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DataContext">
          <source>The following example illustrates how a data context acts on a binding and provides the information that defines the specific values of bound properties.</source>
          <target state="translated">O exemplo a seguir ilustra como um contexto de dados age em uma associação e fornece as informações que definem os valores específicos de propriedades associadas.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>Occurs when the data context for this element changes.</source>
          <target state="translated">Ocorre quando o contexto de dados desse elemento é alterado.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>For an explanation of data contexts and data binding, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Para obter uma explicação de contextos de dados e a associação de dados, consulte <bpt id="p1">[</bpt>visão geral de associação de dados<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> for an element changes, all data-bound properties on this element are potentially affected.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> para alterações de um elemento, todas as propriedades de associação de dados neste elemento potencialmente são afetadas.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>This applies to any elements that are child elements of the current element in the logical tree, which inherit the data context, and also the current element itself.</source>
          <target state="translated">Isso se aplica a elementos que são elementos filho do elemento atual na árvore lógica, que herdam o contexto de dados, e também o elemento atual.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>All such existing bindings must re-interpret the new <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> and will reevaluate the binding results.</source>
          <target state="translated">Todas as associações existentes novamente devem interpretar o novo <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> e irá reavaliar os resultados de associação.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>The data binding engine is not deterministic about the order of these reevaluations, relative to the raising of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> event.</source>
          <target state="translated">O mecanismo de associação de dados não é determinístico sobre a ordem desses reavaliações, relativo ao aumento do <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContextChanged&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.DataContextChanged">
          <source>The reevaluations can occur before the event, after the event, or in any mixture.</source>
          <target state="translated">As reavaliações podem ocorrer antes do evento após o evento, ou em qualquer combinação.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.DataContextProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DataContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</source>
          <target state="translated">Obtém ou define a chave a ser usada para fazer referência ao estilo deste controle, quando os estilos de tema são usados ou definidos.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>The style key.</source>
          <target state="translated">A chave de estilo.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>To work correctly as part of theme style lookup, this value is expected to be the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the control being styled.</source>
          <target state="translated">Para funcionar corretamente como parte da pesquisa de estilo do tema, espera-se que esse valor seja o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do controle com estilo.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>This property is typically not set through any of its direct property accessors.</source>
          <target state="translated">Normalmente, essa propriedade não é definida por meio de qualquer um de seus acessadores de propriedade direta.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>Instead, you override the type-specific metadata of this dependency property every time you create a new <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived class.</source>
          <target state="translated">Em vez disso, você substituir os metadados específicos do tipo dessa propriedade de dependência toda vez que você criar um novo <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classe derivada.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>When you derive a control, call the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph> method against the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;</ph> identifier, within the static constructor of the control derived class (or equivalent class initialization).</source>
          <target state="translated">Quando você derivar um controle, chame o <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</ph> método em relação a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty&gt;</ph> identificador dentro do construtor estático do controle derivado classe (ou classe equivalente de inicialização).</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>A control typically overrides the default value of this property to be its own type, but in some cases could also use a base type for which a style in the theme dictionaries exists.</source>
          <target state="translated">Um controle normalmente substitui o valor padrão dessa propriedade para ser seu próprio tipo, mas em alguns casos pode usar também um tipo base para o qual exista um estilo de dicionário de tema.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>This is only practical if the control templates of the base control entirely define the visual representation of that derived control, and if whatever additional members the derived types expose do not require additional elements as part of the control template.</source>
          <target state="translated">Isso só é prático se os modelos de controle do controle base inteiramente definem a representação visual do controle derivado, e se qualquer expõem os tipos derivados de membros adicionais não exigem elementos adicionais como parte do modelo de controle.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>If you want your element or control to deliberately not use theme styles, set the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se você quiser que o elemento ou o controle não usar estilos de temas, defina o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>The following example illustrates the dependency property metadata override usage discussed in Remarks.</source>
          <target state="translated">O exemplo a seguir ilustra o uso da substituição de metadados da propriedade dependência discutido em comentários.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>This code defines a custom control class <ph id="ph1">`NumericUpDown`</ph> intended to be used from a dedicated control library assembly.</source>
          <target state="translated">Esse código define uma classe de controle personalizado <ph id="ph1">`NumericUpDown`</ph> se destina a ser usado em um assembly de biblioteca de controle dedicado.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>The illustrated static constructor references some private initialization function, registers a class handler (another common control subclassing scenario; see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>) and finally overrides the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DefaultStyleKey%2A&gt;</ph> dependency property metadata on the <ph id="ph2">`NumericUpDown`</ph> class.</source>
          <target state="translated">O construtor estático ilustrado faz referência a uma função de inicialização particular, registra um manipulador de classe (outro cenário comum de subclassificação de controle, consulte <bpt id="p1">[</bpt>marcar eventos roteados como Handled e tratamento de classe<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>) e, finalmente, substitui o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DefaultStyleKey%2A&gt;</ph> metadados de propriedade de dependência no <ph id="ph2">`NumericUpDown`</ph> classe.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DefaultStyleKey%2A&gt;</ph> always returns its own type as the intended key, which is the convention that the theme style system uses to look up the style for some arbitrary otherwise non-styled control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DefaultStyleKey%2A&gt;</ph> sempre retorna seu próprio tipo como a chave pretendida, que é a convenção de que o sistema de estilo de tema usa para pesquisar o estilo de algum controle de outra forma não estilizado arbitrário.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.DefaultStyleKey">
          <source>The complete sample also defines the actual control's theme style that is referenced by that key; see <bpt id="p1">[</bpt>NumericUpDown Custom Control with Theme and UI Automation Support Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160025)</ept>.</source>
          <target state="translated">O exemplo completo também define o estilo de tema do controle real que é referenciado por chave; consulte <bpt id="p1">[</bpt>NumericUpDown Custom Control com tema e exemplo de suporte de automação de interface do usuário<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160025)</ept>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.EndInit">
          <source>Indicates that the initialization process for the element is complete.</source>
          <target state="translated">Indica que o processo de inicialização para o elemento foi concluído.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.EndInit">
          <source>If <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> was previously called, the base implementation will raise the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> event.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> foi chamado anteriormente, a base de implementação irá gerar o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.EndInit">
          <source>Otherwise, if <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> was not called or it could not be determined whether <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> was called, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> is not raised and an exception is thrown instead.</source>
          <target state="translated">Caso contrário, se <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> não foi chamado ou não pôde ser determinado se <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> foi chamado, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> não será gerado e uma exceção será lançada em vez disso.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.EndInit">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.EndInit" /&gt;</ph> was called without <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.BeginInit" /&gt;</ph> having previously been called on the element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.EndInit" /&gt;</ph> foi chamado sem <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.BeginInit" /&gt;</ph> ter sido chamado anteriormente no elemento.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.EndInit">
          <source>Implement this method to provide special handling that should happen when your element is initialized during the element loading process.</source>
          <target state="translated">Implemente esse método para fornecer um tratamento especial que deve acontecer quando o elemento é inicializado durante o processo de carregamento de elemento.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.EndInit">
          <source>Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</source>
          <target state="translated">Sua implementação deve chamar a implementação base, porque a implementação de base (padrão) define alguns sinalizadores internos para manter o controle de inicialização.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source>The name of the requested element.</source>
          <target state="translated">O nome do elemento solicitado.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source>Finds an element that has the provided identifier name.</source>
          <target state="translated">Localiza um elemento que tem o nome do identificador fornecido.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source>The requested element.</source>
          <target state="translated">O elemento solicitado.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching element was found.</source>
          <target state="translated">Isso pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum elemento correspondente foi encontrado.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source>If the element has child elements, these child elements are all searched recursively for the requested named element.</source>
          <target state="translated">Se o elemento tem elementos filho, esses elementos filho são todos recursivamente pesquisada para o elemento nomeado solicitado.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> operates within the current element's namescope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> opera em namescope do elemento atual.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindName(System.String)">
          <source>For details, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>The key identifier for the requested resource.</source>
          <target state="translated">O identificador de chave do recurso solicitado.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</source>
          <target state="translated">Pesquisa um recurso com a chave especificada e gera uma exceção se o recurso solicitado não é encontrado.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>The requested resource.</source>
          <target state="translated">O recurso solicitado.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>If no resource with the provided key was found, an exception is thrown.</source>
          <target state="translated">Se nenhum recurso com a chave fornecida foi encontrado, uma exceção será gerada.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph> value might also be returned in the exception case.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph> também pode ser retornado em caso de exceção.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated">Se você chamar esse método para uma chave que não pode ser encontrada, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>If you do not want to handle exceptions that result from calling <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph>, call <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> instead.</source>
          <target state="translated">Se você não deseja tratar exceções resultantes da chamada <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph>, chame <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> returns <ph id="ph2">`null`</ph> when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> Retorna <ph id="ph2">`null`</ph> quando um recurso solicitado não foi encontrado e não gerará uma exceção.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>If the resource is not found on the calling element, the parent element in the logical tree is searched next, then the application, then themes, and finally system resources.</source>
          <target state="translated">Se o recurso não foi encontrado no elemento de chamada, o elemento pai na árvore lógica é pesquisada em seguida, em seguida, o aplicativo, e em seguida, temas e finalmente recursos do sistema.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>This lookup methodology is identical to how the tree is searched if a resource were requested by a dynamic resource reference in markup.</source>
          <target state="translated">A metodologia de pesquisa é idêntica a como a árvore é pesquisada se um recurso foi solicitado por uma referência de recurso dinâmico na marcação.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>For more information about resource lookup, see <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o recurso de pesquisa, consulte <bpt id="p1">[</bpt>recursos XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>Typically, you immediately cast a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph> return value to the type of the property that you setting with the returned resource value.</source>
          <target state="translated">Normalmente, você converter imediatamente um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph> valor de retorno para o tipo da propriedade que você configuração com o valor retornado do recurso.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>Resource keys are not necessarily strings.</source>
          <target state="translated">Chaves de recurso não são necessariamente cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>For instance, styles for controls at the theme level are deliberately keyed to the <ph id="ph1">&lt;xref:System.Type&gt;</ph> of the control, and application or page styles for controls typically use this same key convention.</source>
          <target state="translated">Por exemplo, estilos de controles no nível de tema deliberadamente são mapeados para o <ph id="ph1">&lt;xref:System.Type&gt;</ph> do controle e estilos de aplicativo ou página para controles normalmente usam essa mesma chave convenção.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>For details, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept> or <bpt id="p2">[</bpt>XAML Resources<ept id="p2">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>estilos e modelagem<ept id="p1">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept> ou <bpt id="p2">[</bpt>recursos XAML<ept id="p2">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>The following example obtains a named resource and casts it to an appropriate type to fill a property.</source>
          <target state="translated">O exemplo a seguir obtém um recurso nomeado e converte-o em um tipo apropriado para preencher uma propriedade.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source><ph id="ph1">&lt;paramref name="resourceKey" /&gt;</ph> was not found and an event handler does not exist for the <ph id="ph2">&lt;see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /&gt;</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="resourceKey" /&gt;</ph> não foi encontrado e não existe um manipulador de eventos para o evento <ph id="ph2">&lt;see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source><ph id="ph1">&lt;paramref name="resourceKey" /&gt;</ph> was not found and the <ph id="ph2">&lt;see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /&gt;</ph> property is <ph id="ph3">&lt;see langword="false" /&gt;</ph> in the <ph id="ph4">&lt;see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /&gt;</ph> event.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="resourceKey" /&gt;</ph> não foi encontrado e a propriedade <ph id="ph2">&lt;see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /&gt;</ph> é <ph id="ph3">&lt;see langword="false" /&gt;</ph> no evento <ph id="ph4">&lt;see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.FindResource(System.Object)">
          <source><ph id="ph1">&lt;paramref name="resourceKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resourceKey" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>Gets or sets the direction that text and other <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> elements flow within any parent element that controls their layout.</source>
          <target state="translated">Obtém ou define a direção de fluxo do texto e de outros elementos <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> dentre quaisquer elementos pai que controlem seu layout.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>The direction that text and other <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> elements flow within their parent element, as a value of the enumeration.</source>
          <target state="translated">A direção de fluxo do texto e outros elementos <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> dentro de seu elemento pai, como um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.FlowDirection.LeftToRight" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:System.Windows.FlowDirection.LeftToRight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>The dependency property usage sets the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> on this element.</source>
          <target state="translated">Os conjuntos de uso de propriedade de dependência de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> neste elemento.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>Because of property value inheritance, setting <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> on an element can potentially set <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> on all child elements that did not set <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> locally or though other means such as styles.</source>
          <target state="translated">Devido a herança de valor de propriedade, definindo <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> em um elemento potencialmente pode definir <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> em todos os elementos filho que não definiu <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> localmente ou Embora outros meios, como estilos.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>This property is not automatically set as part of any application culture information, because an element might contain content that is not necessarily intended to obey the general flow direction implied by the culture information.</source>
          <target state="translated">Essa propriedade não é definida automaticamente como parte de qualquer informação de cultura do aplicativo, porque um elemento pode conter conteúdo que não necessariamente para obedecer a direção do fluxo geral indicada pelas informações de cultura.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>For more information on globalization considerations, see <bpt id="p1">[</bpt>Globalization for WPF<ept id="p1">](~/docs/framework/wpf/advanced/globalization-for-wpf.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre considerações sobre globalização, consulte <bpt id="p1">[</bpt>globalização para WPF<ept id="p1">](~/docs/framework/wpf/advanced/globalization-for-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>This property has a defined <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> property accessor, so it functions as a dependency property.</source>
          <target state="translated">Essa propriedade tem uma relação definida <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> acessador de propriedade, para que ele funcione como uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>However, it is also registered as attached, so it can also function as an attached property.</source>
          <target state="translated">No entanto, ele também é registrado como conectado, portanto ele também pode funcionar como uma propriedade anexada.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>The attached registration is mainly so that property value inheritance is supported, but the property can also be used as a true attached property.</source>
          <target state="translated">O registro anexado é principalmente para que oferece suporte à herança de valor de propriedade, mas a propriedade também pode ser usada como uma propriedade anexada true.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>The attached property usage is only relevant if the object you intend to set the flow direction on has a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> parent element that performs layout upon it, is itself not a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, and does not already have a more directly defined <ph id="ph3">`FlowDirection`</ph> property.</source>
          <target state="translated">O uso da propriedade anexada só será relevante se o objeto que você pretende definir a direção do fluxo em um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> o elemento pai que executa o layout após, em si não é um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>e ainda não tiver definido mais diretamente <ph id="ph3">`FlowDirection`</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>(Some of the flow document classes such as <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph> define their own <ph id="ph3">`FlowDirection`</ph>, and this property can also set the flow direction.</source>
          <target state="translated">(Parte do fluxo de classes de documento como <ph id="ph1">&lt;xref:System.Windows.Documents.Block&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Documents.Inline&gt;</ph> definir seus próprios <ph id="ph3">`FlowDirection`</ph>, e essa propriedade também pode definir a direção do fluxo.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>The property value is then read by the eventual content host without requiring attached property usage.)</source>
          <target state="translated">O valor da propriedade é então lidos pelo host de conteúdo eventual sem a necessidade de uso da propriedade anexada.)</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>object<ept id="p1">*</ept> <bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept>="<ph id="ph2">&lt;xref:System.Windows.FlowDirection&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>objeto<ept id="p1">*</ept> <bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept>= "<ph id="ph2">&lt;xref:System.Windows.FlowDirection&gt;</ph>" / &gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>XAML Text Usage</source>
          <target state="translated">Uso de texto XAML</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>This property can also be set on classes that are not <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived classes, by the following <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attached property usage:</source>
          <target state="translated">Essa propriedade também pode ser definida em classes que não são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classes derivadas, pelos seguintes <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> anexado o uso de propriedades:</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source><ph id="ph1">`&lt;`</ph> <bpt id="p1">*</bpt>object<ept id="p1">*</ept> <ph id="ph2">`FrameworkElement.`</ph><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept>="<ph id="ph3">&lt;xref:System.Windows.FlowDirection&gt;</ph><ph id="ph4">`"/&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`&lt;`</ph> <bpt id="p1">*</bpt>objeto<ept id="p1">*</ept> <ph id="ph2">`FrameworkElement.`</ph> <bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept>= "<ph id="ph3">&lt;xref:System.Windows.FlowDirection&gt;</ph><ph id="ph4">`"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FlowDirection">
          <source>This property is both a dependency property and an attached property; see Remarks.</source>
          <target state="translated">Esta propriedade é uma propriedade de dependência e uma propriedade anexada; Consulte comentários.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.FlowDirectionProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</source>
          <target state="translated">Obtém ou define uma propriedade que permite a personalização da aparência, efeitos ou outras características de estilo que se aplicam a esse elemento quando ele captura o foco do teclado.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>The desired style to apply on focus.</source>
          <target state="translated">O estilo desejado a ser aplicado no foco.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>The default value as declared in the dependency property is an empty static <ph id="ph1">&lt;see cref="T:System.Windows.Style" /&gt;</ph>.</source>
          <target state="translated">O valor padrão como declarado na propriedade de dependência é um <ph id="ph1">&lt;see cref="T:System.Windows.Style" /&gt;</ph> estático vazio.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</source>
          <target state="translated">No entanto, o valor efetivo em tempo de execução é normalmente (mas nem sempre) um estilo fornecido pelo suporte de tema para controles.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>This property affects visual appearance but does not report <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> in metadata.</source>
          <target state="translated">Essa propriedade afeta a aparência visual, mas não relata <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;</ph> nos metadados.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>This is because the visual appearance change is event-driven and may not apply at all times, and therefore should not generally report any visual or layout information in metadata.</source>
          <target state="translated">Isso ocorre porque a alteração da aparência visual é controlada por evento não pode ser aplicadas em todos os momentos e, portanto, não geralmente Relate quaisquer informações de layout ou de visual nos metadados.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Conceptually, the visual behavior of focus applied to a control should be coherent from control to control.</source>
          <target state="translated">Conceitualmente, o comportamento visual de foco aplicado a um controle deve ser coerente de controle para controle.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</source>
          <target state="translated">É a maneira mais adequada para impor a coerência alterar o estilo visual de foco apenas se você estiver compondo um tema inteiro.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Setting this property on individual control styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</source>
          <target state="translated">Definir esta propriedade nos estilos de controle individual e não como parte de um tema não é o uso pretendido dessa propriedade, porque isso pode resultar em uma experiência de usuário confuso sobre o foco do teclado.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>If you are intending control-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <ph id="ph1">&lt;xref:System.Windows.UIElement.IsFocused%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</ph>, and to do so in a way that does not visually interfere with any existing focus visual style.</source>
          <target state="translated">Se você estiver pretendendo comportamento específico do controle que é deliberadamente não coerente em um tema, uma abordagem muito melhor é usar disparadores em estilos para propriedades de estado de entrada individual, como <ph id="ph1">&lt;xref:System.Windows.UIElement.IsFocused%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A&gt;</ph>e fazer isso de forma que não interfere em nenhum estilo visual de foco existente visualmente.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>For more information on the design intention of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FocusVisualStyle%2A&gt;</ph> and alternative focus properties, see <bpt id="p1">[</bpt>Styling for Focus in Controls, and FocusVisualStyle<ept id="p1">](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a intenção de design do <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FocusVisualStyle%2A&gt;</ph> e alternativa se concentrar propriedades, consulte <bpt id="p1">[</bpt>estilo de foco em controles e FocusVisualStyle<ept id="p1">](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md)</ept>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>One of the following: , or .</source>
          <target state="translated">Um dos seguintes:, ou.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>recursos XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>The key that identifies the style being requested.</source>
          <target state="translated">A chave que identifica o estilo que está sendo solicitado.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>The key refers to an existing resource in a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">A chave refere-se a um recurso existente em um <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Property element syntax is technically possible, but not recommended.</source>
          <target state="translated">Sintaxe de elemento de propriedade é tecnicamente possível, mas não é recomendado.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>See <bpt id="p1">[</bpt>Inline Styles and Templates<ept id="p1">](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>modelos e estilos in-line<ept id="p1">](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)</ept>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>A binding reference using  or <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> is also possible, but uncommon.</source>
          <target state="translated">Uma referência de associação usando ou <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> também é possível, mas não é comum.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.FocusVisualStyle">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.FocusVisualStyleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>Gets or sets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> should force the <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> to render the cursor as declared by the <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkElement.Cursor" /&gt;</ph> property.</source>
          <target state="translated">Obtém ou define um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> deve forçar o <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> a renderizar o cursor, conforme declarado pela propriedade <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkElement.Cursor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if cursor presentation while over this element is forced to use current <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Cursor" /&gt;</ph> settings for the cursor (including on all child elements); otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a apresentação do cursor enquanto estiver sobre esse elemento for forçada a usar as configurações <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Cursor" /&gt;</ph> atuais para o cursor (incluindo todos os elementos filho); caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>If you set this property to <ph id="ph1">`true`</ph> you will override the cursor preferences established by child elements.</source>
          <target state="translated">Se você definir essa propriedade como <ph id="ph1">`true`</ph> substituirão as preferências de cursor estabelecidas por elementos filho.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>Doing so in general application <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> might be confusing for the user, particularly if child elements are attempting to specify cursors.</source>
          <target state="translated">Fazer assim em geral aplicativo <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> pode ser confuso para o usuário, especialmente se os elementos filho são tentar especificar cursores.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> is more appropriate in control subclassing or compositing scenarios.</source>
          <target state="translated">Configuração <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ForceCursor%2A&gt;</ph> é mais adequado em cenários de subclassificação ou composição de controle.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ForceCursor">
          <source>The following example forces the cursor value.</source>
          <target state="translated">O exemplo a seguir força o valor do cursor.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ForceCursorProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ForceCursor" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ForceCursor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <source>The target <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> to get the binding from.</source>
          <target state="translated">O destino <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> para obter a associação.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> that represents the binding on the specified property.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> que representa a associação na propriedade especificada.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> if the target property has an active binding; otherwise, returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> se a propriedade de destino tiver uma associação ativa; caso contrário, retornará <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <source>Checking the return value for <ph id="ph1">`null`</ph> is a technique you can use to determine whether a property has an active binding.</source>
          <target state="translated">Verificando o valor de retorno para <ph id="ph1">`null`</ph> é uma técnica que você pode usar para determinar se uma propriedade tem uma associação ativa.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <source>This method is really just a convenience wrapper around the <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Esse método é apenas um wrapper de conveniência para o <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> passes the current instance and the <ph id="ph2">`dp`</ph> parameter to <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> passa a instância atual e o <ph id="ph2">`dp`</ph> parâmetro <ph id="ph3">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
          <source>The element to return a <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph> for.</source>
          <target state="translated">O elemento para o qual retornar um <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph> attached property for the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Obtém o valor da propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph> do <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
          <source>The requested flow direction, as a value of the enumeration.</source>
          <target state="translated">A direção do fluxo solicitado, como um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
          <source>The main purpose of this method is to support attached property syntax for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> property, therefore allowing child elements of a provided <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> to specify flow direction for the arrangement within their parent element.</source>
          <target state="translated">O objetivo principal deste método é dar suporte a sintaxe da propriedade anexada para o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> propriedade, portanto, permitindo que o filho elementos de um fornecido <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> para especificar a direção de fluxo para a organização em seu elemento pai.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
          <source>To get the value on the current <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, use the direct <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> accessor <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph>.</source>
          <target state="translated">Para obter o valor no atual <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, use o direct <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> acessador <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>The size of the part of the element that does visual presentation.</source>
          <target state="translated">O tamanho da parte do elemento que faz a apresentação visual.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>Returns a geometry for a clipping mask.</source>
          <target state="translated">Retorna uma geometria de uma máscara de recorte.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</source>
          <target state="translated">A máscara é aplicada se o sistema de layout tentar organizar um elemento maior que o espaço de exibição disponível.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>The clipping geometry.</source>
          <target state="translated">A geometria de recorte.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>Margins will be subtracted from the <ph id="ph1">`layoutSlotSize`</ph> as part of layout system behavior.</source>
          <target state="translated">Margens serão subtraídas de <ph id="ph1">`layoutSlotSize`</ph> como parte do comportamento do sistema de layout.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>A returned null reference indicates that no clipping will occur.</source>
          <target state="translated">Uma referência nula retornada indica que nenhum recorte ocorrerá.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>The default implementation always returns <ph id="ph1">`null`</ph> when <ph id="ph2">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">A implementação padrão sempre retorna <ph id="ph1">`null`</ph> quando <ph id="ph2">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> é <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método substitui <ph id="ph1">&lt;xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementation uses <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph> in its calculations.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementação usa <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph> em seus cálculos.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>Several subclasses of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> override this method again.</source>
          <target state="translated">Várias subclasses de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> substituir esse método novamente.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph>, overrides to always return <ph id="ph2">`null`</ph> because adorners are often deliberately outside the ordinary bounds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph>, substituições para sempre retornar <ph id="ph2">`null`</ph> como adornos são geralmente deliberadamente fora dos limites comuns.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph> return <ph id="ph3">`null`</ph> if <ph id="ph4">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> is <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=nameWithType&gt;</ph> retornar <ph id="ph3">`null`</ph> se <ph id="ph4">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> é <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>The default implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> when <ph id="ph2">&lt;see cref="P:System.Windows.UIElement.ClipToBounds" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A implementação padrão sempre retorna <ph id="ph1">&lt;see langword="null" /&gt;</ph> quando <ph id="ph2">&lt;see cref="P:System.Windows.UIElement.ClipToBounds" /&gt;</ph> é <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
          <source>Overrides are generally expected to preserve this behavior, although there are exceptions, depending on the relationship and purpose of the derived class and its layout logic as opposed to the base class.</source>
          <target state="translated">Substituições devem preservar esse comportamento, embora haja exceções, dependendo da relação e a finalidade de classe derivada e sua lógica de layout em vez de classe base.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>Name of the child to find.</source>
          <target state="translated">Nome do filho a ser localizado.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>Returns the named element in the visual tree of an instantiated <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ControlTemplate" /&gt;</ph>.</source>
          <target state="translated">Retorna o elemento nomeado na árvore visual de um <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ControlTemplate" /&gt;</ph> instanciado.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>The requested element.</source>
          <target state="translated">O elemento solicitado.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no element of the requested name exists.</source>
          <target state="translated">Poderá ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum elemento com o nome solicitado existir.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>Templates in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> have a self-contained namescope.</source>
          <target state="translated">Modelos de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> têm um namescope autossuficiente.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>This is because templates are re-used, and any name defined in a template cannot remain unique when multiple instances of a control each instantiate its template.</source>
          <target state="translated">Isso ocorre porque os modelos são reutilizados e qualquer nome definido em um modelo não pode permanecer exclusivo quando várias instâncias de um controle instanciar seu modelo.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetTemplateChild%2A&gt;</ph> method to return references to objects that come from the template after it is instantiated.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetTemplateChild%2A&gt;</ph> método para retornar as referências a objetos que vêm do modelo após ele ser instanciado.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> method to find items from templates because <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> acts in a more general scope, and there is no connection between the <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> class itself and the instantiated template once it is applied.</source>
          <target state="translated">Não é possível usar o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> método para localizar itens de modelos porque <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> age em um mais geral escopo, e não há nenhuma conexão entre o <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> de classe em si e o modelo instanciado depois que ela é aplicada.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType&gt;</ph> supplies the same function as this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType&gt;</ph> fornece a mesma função que esse método.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType&gt;</ph> is public instead of protected, and it uses correct name-scoping considerations that allow it to access the template within an element and find named items within it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType&gt;</ph> é pública em vez de protegida e usa corretas considerações de nome de escopo que lhe permitem acessar o modelo em um elemento e localizar itens dentro dela nomeados.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType&gt;</ph> when you need to get an element outside of its parent control.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType&gt;</ph> quando você precisa obter um elemento fora de seu controle pai.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetUIParentCore">
          <source>Returns an alternative logical parent for this element if there is no visual parent.</source>
          <target state="translated">Retorna um pai lógico alternativo para esse elemento se não houver nenhum pai visual.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetUIParentCore">
          <source>Returns something other than <ph id="ph1">&lt;see langword="null" /&gt;</ph> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</source>
          <target state="translated">Retorna algo diferente de <ph id="ph1">&lt;see langword="null" /&gt;</ph> sempre que uma implementação de nível de estrutura WPF desse método tem uma conexão pai não visual.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetUIParentCore">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método substitui <ph id="ph1">&lt;xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetUIParentCore">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementation returns the expected single visual parent, which is the same result as getting the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> value.</source>
          <target state="translated">O padrão <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementação retorna esperado único visual pai, que é o mesmo resultado que obtendo o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetUIParentCore">
          <source>Derived class implementations might return alternate parent relationships.</source>
          <target state="translated">Implementações de classe derivada podem retornar relações pai alternativo.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>The zero-based index of the requested child element in the collection.</source>
          <target state="translated">O índice de base zero do elemento filho solicitado na coleção.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /&gt;</ph>, and returns a child at the specified index from a collection of child elements.</source>
          <target state="translated">Substitui <ph id="ph1">&lt;see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /&gt;</ph> e retorna um filho no índice especificado de uma coleção de elementos filhos.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>The requested child element.</source>
          <target state="translated">O elemento filho solicitado.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>This should not return <ph id="ph1">&lt;see langword="null" /&gt;</ph>; if the provided index is out of range, an exception is thrown.</source>
          <target state="translated">Isso não deve retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph>; se o índice fornecido está fora do intervalo, uma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementation, the only valid index is zero.</source>
          <target state="translated">No <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementação, o índice só é válida é zero.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>The content model for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph> supports either zero or one child elements, not a collection.</source>
          <target state="translated">O modelo de conteúdo para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph> dá suporte a elementos de filhos de zero ou um, não é uma coleção.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>The following example shows how a custom adorner uses the values declared by a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> that it maintains for its multiple visual children.</source>
          <target state="translated">O exemplo a seguir mostra como um adorner personalizado usa os valores de declarada por um <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> que mantém para suas vários filhos visual.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>These values are reported through overrides of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>.</source>
          <target state="translated">Esses valores são relatados por meio de substituições de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>This implementation is only valid for elements that do not maintain any more descriptive collection of visual child elements.</source>
          <target state="translated">Essa implementação só é válida para elementos que não precisam manter qualquer coleção mais descritiva de elementos filho de visual.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>Any element that does have such a collection must override this method and map the index to an equivalent index in the child element collection that is supported by that element.</source>
          <target state="translated">Qualquer elemento que tenha tal coleção deve substituir este método e mapeie o índice para um índice equivalente na coleção de elemento filho que é suportada por esse elemento.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>An index in the range from zero to <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /&gt;</ph> (minus one) should return a valid element; any other index should throw an out-of-range exception.</source>
          <target state="translated">Um índice no intervalo de zero a <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /&gt;</ph> (menos um) deve retornar um elemento válido; qualquer outro índice deve lançar uma exceção fora do intervalo.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>An example of an element type that does support a child collection and overrides <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" /&gt;</ph> to return more than one possible child is <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Panel" /&gt;</ph>.</source>
          <target state="translated">Um exemplo de um tipo de elemento que dá suporte a uma coleção de filhos e substituições <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" /&gt;</ph> retornar mais de um filho possíveis é <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Panel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>The default implementation in <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> presumes only one visual child.</source>
          <target state="translated">A implementação padrão <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> presume que apenas um filho de visual.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>Any value passed for <ph id="ph1">&lt;paramref name="index" /&gt;</ph> other than zero causes an exception to be thrown.</source>
          <target state="translated">Qualquer valor passado <ph id="ph1">&lt;paramref name="index" /&gt;</ph> diferente de zero faz com que uma exceção seja lançada.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>Several common elements, such as decorators, adorners, or elements with specialized rendering, override the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> implementation (of the implementation from intermediate base classes).</source>
          <target state="translated">Vários elementos comuns, como decoradores, adornos ou elementos de renderização especializada, substituem o <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> implementação (da implementação de classes de base intermediárias).</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
          <source>Some implementations still enforce one visual child whereas others allow a collection.</source>
          <target state="translated">Algumas implementações ainda impõem um filho de visual, enquanto outros permitem que uma coleção.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Height">
          <source>Gets or sets the suggested height of the element.</source>
          <target state="translated">Obtém ou define a altura sugerida do elemento.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A altura do elemento em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>This value must be equal to or greater than 0.0.</source>
          <target state="translated">Este valor deve ser igual ou maior que 0,0.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> is one of three writable properties on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that specify height information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> é uma das três propriedades graváveis na <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que especifique informações de altura.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The other two are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>.</source>
          <target state="translated">As outras duas são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>If there is a conflict between these values, the order of application for actual height determination is that first <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> must be honored, then <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>, and finally, if it is within bounds, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</source>
          <target state="translated">Se houver um conflito entre esses valores, a ordem do aplicativo para a determinação de altura real é que o primeiro <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> devem ser cumprido, em seguida, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>e, finalmente, se ele está dentro dos limites, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>If this element is a child element within some other element, then setting this property to a value is really only a suggested value.</source>
          <target state="translated">Se este é um elemento filho dentro de algum outro elemento, em seguida, definir essa propriedade como um valor é realmente apenas um valor sugerido.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The layout system as well as the particular layout logic of the parent element will use the value as a nonbinding input during the layout process.</source>
          <target state="translated">O sistema de layout, bem como a lógica de layout específico do elemento pai usará o valor como uma entrada nonbinding durante o processo de layout.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>In practical terms, a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> is almost always the child element of something else; even when you set the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> on <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Em termos práticos, um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> é quase sempre o elemento filho de outra coisa; mesmo quando você definir o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> em <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>(For <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, that value is used when the underlying application model establishes the basic rendering assumptions that create the Hwnd that hosts the application.)</source>
          <target state="translated">(Para <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, esse valor será usado quando o modelo de aplicativo subjacente estabelece as suposições de renderização básica que cria o Hwnd que hospeda o aplicativo.)</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>In addition to acceptable <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, this property can also be <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Além disso, para aceitável <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores, essa propriedade também pode ser <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>This is how you specify auto sizing behavior in code.</source>
          <target state="translated">Isso é como você especifica o comportamento de dimensionamento automático no código.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> você definir o valor para a cadeia de caracteres "Automática" (não diferencia maiusculas de minúsculas) para habilitar o comportamento de dimensionamento de auto.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Auto sizing behavior implies that the element will fill the height available to it.</source>
          <target state="translated">Comportamento de dimensionamento de auto implica que o elemento preencher a altura disponível para ele.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Note however that specific controls frequently supply default values through their default theme styles that will disable the auto sizing behavior unless it is specifically re-enabled.</source>
          <target state="translated">No entanto, observe que os controles específicos frequentemente fornecem valores padrão por meio de seus estilos de tema padrão que irá desabilitar o auto comportamento de dimensionamento, a menos que ela seja reativada especificamente.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The return value of this property is always the same as any value that was set to it.</source>
          <target state="translated">O valor de retorno dessa propriedade é sempre igual a qualquer valor que foi definido para ele.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>In contrast, the value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph> may vary.</source>
          <target state="translated">Em contraste, o valor de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph> podem variar.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>This can happen either statically because the layout rejected the suggested size for some reason, or momentarily.</source>
          <target state="translated">Isso pode acontecer em estaticamente, porque o layout rejeitou o tamanho sugerido por algum motivo, ou momentaneamente.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The layout system itself works asynchronously relative to the property system's set of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and may not have processed that particular sizing property change yet.</source>
          <target state="translated">O sistema de layout funciona de forma assíncrona em relação ao conjunto do sistema de propriedade de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> e pode não ter processado específica dimensionamento de alteração de propriedade ainda.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>The value restrictions on the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value are enforced by a <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mechanism.</source>
          <target state="translated">As restrições de valor sobre o <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor são impostas por um <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mecanismo.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">Se você tentar definir um valor inválido, uma exceção de tempo de execução é gerada.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>In addition to the validation check, there is a nondeterministic upper value bound for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> that is enforced by the layout system (this is a very large number, larger than <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph> but smaller than <ph id="ph3">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Além de verificação de validação, há um valor superior não determinístico associado para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> que é imposta pelo sistema de layout (Este é um número muito grande, maior do que <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph> mas menor do que <ph id="ph3">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>If you exceed this bound, the element will not render, and no exception is thrown.</source>
          <target state="translated">Se você exceder esse associado, o elemento não será processada e nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Do not set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</source>
          <target state="translated">Não defina <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> para um valor que é significativamente maior do que o tamanho máximo de qualquer exibição visual possíveis, ou você pode exceder esse limite superior não determinístico.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value equal to or greater than 0.0.</source>
          <target state="translated">Representação de cadeia de caracteres um <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor igual ou maior que 0.0.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">Consulte os Comentários para ver informações sobre o limite superior.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>This value is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Esse valor é interpretado como um <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">Cadeias de caracteres não precisam explicitamente incluir pontos decimais.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por exemplo, um valor de <ph id="ph1">`1`</ph> é aceitável.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>duplo<ept id="p1">*</ept> valor conforme descrito acima, seguido por um dos seguintes unidade declaração cadeias de caracteres: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> é (padrão) <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> polegadas; em 1 = = 96px</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centímetros; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> pontos; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source><bpt id="p1">**</bpt>Auto<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auto<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Enables autosizing behavior.</source>
          <target state="translated">Habilita o comportamento de dimensionamento automático.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>See Remarks.</source>
          <target state="translated">Consulte Observações.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Height">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.HeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Height" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Height" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</source>
          <target state="translated">Obtém ou define as características do alinhamento horizontal aplicadas a este elemento quando ele é composto dentro de um elemento pai, como um painel ou controle de itens.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>A horizontal alignment setting, as a value of the enumeration.</source>
          <target state="translated">Uma configuração de alinhamento horizontal, como um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.HorizontalAlignment.Stretch" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.HorizontalAlignment.Stretch" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>When <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> properties are explicitly set on an element, these measurements take higher precedent during layout and will cancel the typical effects of setting <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.HorizontalAlignment.Stretch&gt;</ph>.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> propriedades são definidas explicitamente em um elemento, essas medidas são precedência mais alta durante o layout e cancelará os típicos efeitos da configuração de <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> para <ph id="ph4">&lt;xref:System.Windows.HorizontalAlignment.Stretch&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> is the <ph id="ph2">[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> é o <ph id="ph2">[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]</ph> acessador de propriedade para o que é na verdade uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in subclassed elements, particularly controls.</source>
          <target state="translated">Essa propriedade de dependência particular com bastante frequência tem seu valor aparente "padrão" definido em elementos de subclasse, particularmente os controles de modo diferente.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>This generally occurs in one of two ways: the dependency property is re-registered to a particular subclass, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</source>
          <target state="translated">Isso geralmente ocorre em uma das duas maneiras: a propriedade de dependência é registrada novamente para uma determinada subclasse, mas com diferentes metadados para a configuração de seus padrões; ou há um estilo de padrão que está sendo aplicado que define esse valor de propriedade de dependência de maneira diferente.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>For example, the apparent "default" of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> control will be <ph id="ph3">&lt;xref:System.Windows.HorizontalAlignment.Left&gt;</ph>, even though <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph> inherits <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> direct from <ph id="ph6">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated">Por exemplo, o aparente "padrão" de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> para um <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> controle será <ph id="ph3">&lt;xref:System.Windows.HorizontalAlignment.Left&gt;</ph>, embora <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph> herda <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> direta de <ph id="ph6">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>This is because that value was reset within the default style of <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph>, within the style's control template.</source>
          <target state="translated">Isso ocorre porque esse valor foi redefinida no estilo padrão de <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph>, no modelo de controle do estilo.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> does not use <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> when composing layout, because <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> is based on absolute positioning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> Não use <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</ph> ao compor o layout, porque <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> baseia-se no posicionamento absoluto.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>When inherited by <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> or derived classes, <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> redefines the default value of this dependency property to be <ph id="ph3">&lt;xref:System.Windows.HorizontalAlignment.Left&gt;</ph>.</source>
          <target state="translated">Quando herdado por <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> ou classes derivadas, <ph id="ph2">&lt;xref:System.Windows.Controls.Label&gt;</ph> redefine o valor padrão dessa propriedade de dependência para ser <ph id="ph3">&lt;xref:System.Windows.HorizontalAlignment.Left&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.HorizontalAlignment">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <source>Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</source>
          <target state="translated">Obtém ou define os limites de escopo de herança de valor da propriedade, pesquisa de chave de recurso e pesquisa de RelativeSource FindAncestor.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <source>A value of the enumeration.</source>
          <target state="translated">Um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.InheritanceBehavior.Default" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.InheritanceBehavior.Default" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <source>Certain boundaries in the element tree set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.InheritanceBehavior%2A&gt;</ph> to deliberately limit the scope of inheritance behavior, to a force resource lookup to check the application resources, or to prevent a RelativeSource FindAncestor lookup from querying the current element or any further.</source>
          <target state="translated">Certos limites no elemento do conjunto de árvore <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.InheritanceBehavior%2A&gt;</ph> deliberadamente limitar o escopo de comportamento de herança, para um recurso de força de pesquisa para verificar os recursos de aplicativo ou para impedir que uma pesquisa RelativeSource FindAncestor consultando o elemento atual ou qualquer adicional.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <source>RelativeSource FindAncestor lookup occurs when a binding uses a <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> that has its <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;</ph> property set to the <ph id="ph3">&lt;xref:System.Windows.Data.RelativeSourceMode.FindAncestor?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">RelativeSource FindAncestor pesquisa ocorre quando uma associação usa um <ph id="ph1">&lt;xref:System.Windows.Data.RelativeSource&gt;</ph> com seus <ph id="ph2">&lt;xref:System.Windows.Data.RelativeSource.Mode%2A&gt;</ph> propriedade definida como o <ph id="ph3">&lt;xref:System.Windows.Data.RelativeSourceMode.FindAncestor?displayProperty=nameWithType&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InheritanceBehavior">
          <source>If you want your derived class to set this property, you should do so within the static constructor or in other initialization routines.</source>
          <target state="translated">Se você deseja que a classe derivada para definir essa propriedade, você deve fazer isso em um construtor estático ou em outras rotinas de inicialização.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>Occurs when this <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> is initialized.</source>
          <target state="translated">Ocorre quando este <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> é inicializado.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>This event coincides with cases where the value of the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.IsInitialized" /&gt;</ph> property changes from <ph id="ph2">&lt;see langword="false" /&gt;</ph> (or undefined) to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Este evento coincide com casos em que o valor da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.IsInitialized" /&gt;</ph> é alterado de <ph id="ph2">&lt;see langword="false" /&gt;</ph> (ou indefinido) para <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>This event will be raised whenever the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt;</ph> methods are called.</source>
          <target state="translated">Esse evento será gerado sempre que o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A&gt;</ph> métodos são chamados.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>Calls to either method could have come from application code, or through the <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> processor behavior when a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> page is processed.</source>
          <target state="translated">Chamadas para o método podem ter vindo do código do aplicativo ou por meio de <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> comportamento do processador quando um <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> página é processada.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>Whether you choose to handle <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> depends on your requirements.</source>
          <target state="translated">Se você optar por tratar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> depende dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>If you do not need to read element properties, intend to reset properties, and do not need any layout information, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> might be the better event to act upon.</source>
          <target state="translated">Se você não precisa ler as propriedades de elemento, pretende redefinir propriedades e não é necessário qualquer informação de layout, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> poderia ser o evento melhor qual agir.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> might be the better event to act upon.</source>
          <target state="translated">Se você precisa de todas as propriedades do elemento para estar disponível e você definirá as propriedades que têm probabilidade de redefinir o layout, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> poderia ser o evento melhor qual agir.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</source>
          <target state="translated">Tenha cuidado de reentrância se o manipulador redefine todas as propriedades que são interpretadas pelo sistema de layout para indicar que uma nova passagem de layout é necessária.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>(You might need to check the <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)</source>
          <target state="translated">(Talvez seja necessário verificar o <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> valores na propriedade se você não tiver certeza de quais propriedades podem exigir um novo layout passam se eles forem alterados.)</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Initialized">
          <source>For more information about the sequence of object events for a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, and also for several related application and element classes, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/docs/framework/wpf/advanced/object-lifetime-events.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a sequência de eventos de objeto para um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>e também para vários relacionados ao aplicativo e classes de elemento, consulte <bpt id="p1">[</bpt>eventos de tempo de vida do objeto<ept id="p1">](~/docs/framework/wpf/advanced/object-lifetime-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>Gets or sets the context for input used by this <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o contexto de entrada usado por este <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>The input scope, which modifies how input from alternative input methods is interpreted.</source>
          <target state="translated">O escopo de entrada, que modifica como a entrada de métodos alternativos de entrada é interpretada.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph> (which results in a default handling of commands).</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph> (que resulta em um tratamento padrão de comandos).</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>This dependency property inherits property values.</source>
          <target state="translated">Essa propriedade de dependência herda valores da propriedade.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>If there are child elements without other values for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.InputScope%2A&gt;</ph> established through local values or styles, then the property system will set the value to be the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.InputScope%2A&gt;</ph> value of the nearest ancestor element with this value assigned.</source>
          <target state="translated">Se houver elementos filho sem outros valores para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.InputScope%2A&gt;</ph> estabelecida por meio de valores locais ou estilos, em seguida, o sistema de propriedade definirá o valor a ser o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.InputScope%2A&gt;</ph> valor do elemento ancestral mais próximo com esse valor atribuído.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>Although a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax usage is listed and is syntactically allowed, setting this property in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is not common.</source>
          <target state="translated">Embora um <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> uso de sintaxe é listado e sintaticamente é permitido, a definição dessa propriedade <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> não é comum.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.InputScope">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.InputScopeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.InputScope" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.InputScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source>Gets a value that indicates whether this element has been initialized, either during processing by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processor, or by explicitly having its <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.EndInit" /&gt;</ph> method called.</source>
          <target state="translated">Obtém um valor que indica se este elemento foi inicializado, durante o processamento por um processador <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> ou explicitamente tendo seu método <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.EndInit" /&gt;</ph> chamado.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is initialized per the aforementioned <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processing or method calls; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o elemento for inicializado por chamadas de método ou processamento de <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> mencionados anteriormente; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source>This property may also be <ph id="ph1">`true`</ph> if this element has been moved within the logical tree such that it has a new parent element, and therefore becomes reloaded again.</source>
          <target state="translated">Essa propriedade também pode ser <ph id="ph1">`true`</ph> se esse elemento foi movido dentro da árvore lógica, de modo que ele tem um novo elemento pai e, portanto, torna-se recarregar novamente.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source>This property is useful if you also are using <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph>.</source>
          <target state="translated">Essa propriedade é útil se você também estiver usando <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source>Elements in the logical tree that is loaded by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processor are assured to be initialized.</source>
          <target state="translated">Elementos na árvore lógica que é carregado por um <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> tem a certeza de processador a ser inicializado.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source>Elements not in the logical tree are initialized when <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph> is called.</source>
          <target state="translated">Elementos não na árvore lógica são inicializados quando <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsInitialized">
          <source>In absence of any specific handling of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph>, this will happen as soon as the constructor returns the initialized result.</source>
          <target state="translated">Na ausência de qualquer manipulação específica de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BeginInit%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.EndInit%2A&gt;</ph>, isso acontecerá assim que o construtor retorna o resultado foi inicializado.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source>Gets a value that indicates whether this element has been loaded for presentation.</source>
          <target state="translated">Obtém um valor que indica se esse elemento foi carregado para apresentação.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current element is attached to an element tree; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the element has never been attached to a loaded element tree.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o elemento atual estiver anexado a uma árvore de elementos; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se o elemento nunca tiver sido anexado a uma árvore de elementos carregada.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source>From a newly constructed <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, this property starts off <ph id="ph2">`false`</ph>, and remains <ph id="ph3">`true`</ph> after it is set to <ph id="ph4">`true`</ph>, even if the element is subsequently removed from a connected logical tree by code.</source>
          <target state="translated">De recentemente construído <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, essa propriedade começa <ph id="ph2">`false`</ph>e permanece <ph id="ph3">`true`</ph> depois que ele é definido como <ph id="ph4">`true`</ph>, mesmo se o elemento subsequentemente é removido de uma árvore lógica conectada por código.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source><ph id="ph1">`true`</ph> state is set by the general presentation logic when elements are loaded into the presentation engine.</source>
          <target state="translated"><ph id="ph1">`true`</ph> estado é definido pela lógica de apresentação geral quando os elementos são carregados no mecanismo de apresentação.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source>Typically, loaded elements are rendered, but not all <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived classes have a presentation, and other properties such as <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> can influence presentation.</source>
          <target state="translated">Normalmente, os elementos carregados são renderizados, mas nem todos os <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classes derivadas têm uma apresentação e outras propriedades, como <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> pode influenciar a apresentação.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source>The following example implements two handlers: one is handling the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event of the root element, so it is certain that the page root element is loaded because that is the significance of the event.</source>
          <target state="translated">O exemplo a seguir implementa dois manipuladores: um está tratando o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> evento do elemento raiz, para que você tiver certeza de que o elemento raiz de página foi carregado porque o que é o significado do evento.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source>The other handler is hooked to a user control, and calls <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.IsLoaded%2A&gt;</ph> to assure that the root element is loaded completely.</source>
          <target state="translated">O outro manipulador é conectado a um controle de usuário e chamadas <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.IsLoaded%2A&gt;</ph> garantir que o elemento raiz é carregado completamente.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.IsLoaded">
          <source>Both handlers call the same function (not shown) that will populate child elements with fresh data.</source>
          <target state="translated">Ambos os manipuladores de chamar a mesma função (não mostrada) que preencherá os elementos filho com dados atualizados.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Language">
          <source>Gets or sets localization/globalization language information that applies to an element.</source>
          <target state="translated">Obtém ou define informações de localização/globalização do idioma que se aplicam a um elemento.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>The language information for this element.</source>
          <target state="translated">As informações de idioma desse elemento.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>The default value is an <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XmlLanguage" /&gt;</ph> with its <ph id="ph2">&lt;see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /&gt;</ph> value set to the string "en-US".</source>
          <target state="translated">O valor padrão é um <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XmlLanguage" /&gt;</ph> com o valor <ph id="ph2">&lt;see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /&gt;</ph> definido com a cadeia de caracteres “en-US”.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>The string formats follow the RFC 3066 standard.</source>
          <target state="translated">Os formatos de cadeia de caracteres seguem o padrão de RFC 3066.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>For example, U.S. English is "en-US".</source>
          <target state="translated">Por exemplo, EUA Inglês é "en-US".</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>For more information on the values and format, see <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre os valores e o formato, consulte <ph id="ph1">&lt;xref:System.Windows.Markup.XmlLanguage&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>This dependency property inherits property values.</source>
          <target state="translated">Essa propriedade de dependência herda valores da propriedade.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>If there are child elements without other values for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> established through local values or styles, the property system will set the value to be the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> value of the nearest ancestor element with this value assigned.</source>
          <target state="translated">Se houver elementos filho sem outros valores para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> estabelecida por meio de estilos ou valores locais, o sistema de propriedade definirá o valor a ser o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> valor do elemento ancestral mais próximo com esse valor atribuído.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> defines the general meaning of the <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> Define o significado geral de <ph id="ph2">`xml:lang`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> essentially exposes the meaning of this attribute as a dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> Essencialmente, expõe o significado deste atributo como uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> can be adjusted programmatically, and can participate in property system value inheritance in a way that parallels how the <ph id="ph2">`xml:lang`</ph> attribute can inherit to child element scope in <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph> podem ser ajustadas por meio de programação e pode participar de herança de valor de sistema de propriedade de forma paralela como o <ph id="ph2">`xml:lang`</ph> atributo pode herdar de escopo do elemento filho no <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph>, that value becomes the <ph id="ph2">`xml:lang`</ph> and overwrites any previous value.</source>
          <target state="translated">Se você definir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Language%2A&gt;</ph>, esse valor se torna o <ph id="ph2">`xml:lang`</ph> e substitui qualquer valor anterior.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>For more information, see <bpt id="p1">[</bpt>xml:lang Handling in XAML<ept id="p1">](~/docs/framework/xaml-services/xml-lang-handling-in-xaml.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>XML: lang em XAML de tratamento<ept id="p1">](~/docs/framework/xaml-services/xml-lang-handling-in-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Language">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.LanguageProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Language" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Language" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>Gets or sets a graphics transformation that should apply to this element when  layout is performed.</source>
          <target state="translated">Obtém ou define a transformação de gráficos que devem ser aplicados a esse elemento quando o layout é executado.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>The transform this element should use.</source>
          <target state="translated">A transformação que esse elemento deve usar.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>The default is <ph id="ph1">&lt;see cref="P:System.Windows.Media.Transform.Identity" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="P:System.Windows.Media.Transform.Identity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>In contrast to <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> will affect results of layout.</source>
          <target state="translated">Em comparação com <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> afetam resultados de layout.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>Setting a transform provides powerful capabilities of scaling and rotating.</source>
          <target state="translated">Configurar uma transformação fornece recursos avançados de dimensionamento e rotação.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> ignores <ph id="ph2">&lt;xref:System.Windows.Media.TranslateTransform&gt;</ph> operations.</source>
          <target state="translated">No entanto, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> ignora <ph id="ph2">&lt;xref:System.Windows.Media.TranslateTransform&gt;</ph> operações.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>This is because the layout system behavior for child elements of a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> auto-corrects any offsets to the position of a scaled or rotated element into the layout and coordinate system of the parent element.</source>
          <target state="translated">Isso ocorre porque o comportamento do sistema de layout de elementos filho de um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> autocorrige qualquer deslocamentos para a posição de um elemento em escala ou girada no layout e o sistema de coordenadas do elemento pai.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> pode resultar em desempenho ruim do aplicativo se invocá-lo em um cenário que não requer uma passagem completa pelo sistema de layout.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> collection of the <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph>, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged.</source>
          <target state="translated">Quando você aplica um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> para o <ph id="ph2">&lt;xref:System.Windows.Controls.Panel.Children%2A&gt;</ph> coleção do <ph id="ph3">&lt;xref:System.Windows.Controls.Panel&gt;</ph>, ele dispara uma nova passagem pelo sistema de layout e força todos os na tela objetos a serem re-medidos e reorganizados.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>If you are updating the complete application <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>, this functionality might be exactly what you need.</source>
          <target state="translated">Se você estiver atualizando o aplicativo completo <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>, essa funcionalidade pode ser exatamente o que você precisa.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>However, if you do not need a full layout pass, use the <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.</source>
          <target state="translated">No entanto, se você não precisa de uma passagem completa de layout, use o <ph id="ph1">&lt;xref:System.Windows.UIElement.RenderTransform%2A&gt;</ph> propriedade, que não chama o sistema de layout e, portanto, é normalmente uma opção melhor para esse cenário.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>Example scenarios where <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> would be useful include: rotating elements such as menu components from horizontal to vertical or vice versa, scaling elements (zooming in) on focus, providing editing behavior, etc.</source>
          <target state="translated">Cenários de exemplo onde <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> seria útil incluem: girando elementos, como componentes de menu da horizontal para vertical ou vice-versa, dimensionamento elementos (zoom) em foco, fornecendo o comportamento de edição, etc.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>The following example shows how to apply a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> to an element.</source>
          <target state="translated">O exemplo a seguir mostra como aplicar um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> a um elemento.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>The example creates an instance of <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> and hosts it within a parent <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</source>
          <target state="translated">O exemplo cria uma instância de <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> e hospeda-a em um pai <ph id="ph2">&lt;xref:System.Windows.Controls.Grid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LayoutTransform">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> property to apply a <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">Ele também usa o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LayoutTransform%2A&gt;</ph> aplicar um <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph> para o <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.LayoutTransformProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.LayoutTransform" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.LayoutTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Occurs when the element is laid out, rendered, and ready for interaction.</source>
          <target state="translated">Ocorre quando o elemento é apresentado, renderizado e está pronto para interação.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> is usually the last event raised in an element initialization sequence.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> é geralmente o último evento gerado em uma sequência de inicialização do elemento.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>It will always be raised after <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph>.</source>
          <target state="translated">Sempre será gerado após <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Whether you choose to handle <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> depends on your requirements.</source>
          <target state="translated">Se você optar por tratar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> depende dos seus requisitos.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>If you do not need to read element properties, intend to reset properties, and do not need any layout information, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> might be the better event to act upon.</source>
          <target state="translated">Se você não precisa ler as propriedades de elemento, pretende redefinir propriedades e não é necessário qualquer informação de layout, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Initialized&gt;</ph> poderia ser o evento melhor qual agir.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> might be the better event to act upon.</source>
          <target state="translated">Se você precisa de todas as propriedades do elemento para estar disponível e você definirá as propriedades que têm probabilidade de redefinir o layout, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> poderia ser o evento melhor qual agir.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</source>
          <target state="translated">Tenha cuidado de reentrância se o manipulador redefine todas as propriedades que são interpretadas pelo sistema de layout para indicar que uma nova passagem de layout é necessária.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>(You might need to check the <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)</source>
          <target state="translated">(Talvez seja necessário verificar o <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata&gt;</ph> valores na propriedade se você não tiver certeza de quais propriedades podem exigir um novo layout passam se eles forem alterados.)</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>For more information about the sequence of object events for a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, and also for several related application and element classes, see <bpt id="p1">[</bpt>Object Lifetime Events<ept id="p1">](~/docs/framework/wpf/advanced/object-lifetime-events.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre a sequência de eventos de objeto para um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>e também para vários relacionados ao aplicativo e classes de elemento, consulte <bpt id="p1">[</bpt>eventos de tempo de vida do objeto<ept id="p1">](~/docs/framework/wpf/advanced/object-lifetime-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">Os eventos roteados diretos não seguem uma rota, somente são tratados dentro do mesmo elemento no qual eles são gerados.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.</source>
          <target state="translated">Eventos roteados diretos suportam outro comportamento eventos roteados: eles dão suporte a uma coleção de manipuladores acessível e pode ser usados como um <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> might both be raised on controls as a result of user-initiated system theme changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> podem ser gerados em controles como resultado das alterações de tema do sistema iniciada pelo usuário.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</source>
          <target state="translated">Uma alteração de tema faz com que um invalidação do modelo de controle e a árvore visual independente, que por sua vez faz com que todo o controle descarregar e recarregar.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Therefore <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> cannot be assumed to occur only when a page is first loaded through navigation to the page.</source>
          <target state="translated">Portanto, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> não é considerado como ocorrem somente quando uma página for carregada pela primeira vez por meio de navegação para a página.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Direct</source>
          <target state="translated">Direto</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Loaded">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.LoadedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Loaded" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Loaded" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.LoadedEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.LoadedEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.LoadedEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.LoadedEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.LoadedEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.LogicalChildren">
          <source>Gets an enumerator for logical child elements of this element.</source>
          <target state="translated">Obtém um enumerador para elementos filho lógicos desse elemento.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LogicalChildren">
          <source>An enumerator for logical child elements of this element.</source>
          <target state="translated">Um enumerador para elementos filho lógicos desse elemento.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LogicalChildren">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</ph> allows you to iterate over child elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</ph> permite que você iterar sobre elementos filho.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LogicalChildren">
          <source>This is useful for elements that may not have a defined, dedicated collection but still contain more than one child element, particularly <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> child elements.</source>
          <target state="translated">Isso é útil para elementos que podem não tem uma coleção dedicada definida, mas ainda contêm mais de um elemento filho, particularmente <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> elementos filho.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.LogicalChildren">
          <source>For more information on how to use <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</ph>, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como usar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.LogicalChildren%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.AddLogicalChild%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>árvores no WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Gets or sets the outer margin of an element.</source>
          <target state="translated">Obtém ou define a margem externa de um elemento.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Provides margin values for the element.</source>
          <target state="translated">Fornece valores de margem para o elemento.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The default value is a <ph id="ph1">&lt;see cref="T:System.Windows.Thickness" /&gt;</ph> with all properties equal to 0 (zero).</source>
          <target state="translated">O valor padrão é um <ph id="ph1">&lt;see cref="T:System.Windows.Thickness" /&gt;</ph> com todas as propriedades iguais a 0 (zero).</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The margin is the space between this element and other elements that will be adjacent when layout creates the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">A margem é o espaço entre este elemento e outros elementos que estarão adjacentes quando layout cria o <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Shared elements might be peer elements (such as other elements in the collection of a common parent control), or might also be this element's parent.</source>
          <target state="translated">Elementos compartilhados podem ser elementos de ponto a ponto (como outros elementos da coleção de um controle pai comum) ou também podem ser o pai do elemento.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> is set as a <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> structure rather than as a number so that the margin can be set asymmetrically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> é definido como um <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> estrutura em vez de como um número para que a margem assimetricamente pode ser definida.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph> structure itself supports string type conversion so that you can specify an asymmetric <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute syntax also.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph> estrutura em si oferece suporte à conversão de tipo de cadeia de caracteres para que você possa especificar um assimétrica <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> na <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sintaxe de atributo também.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>A non-zero margin applies space outside the element layout's <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph>.</source>
          <target state="translated">Uma margem diferente de zero aplica espaço fora o layout do elemento <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Margins are additive for sibling elements in a layout; for example, two adjacent elements both with a margin of 30 set on the adjoining edge would have 60 units of space between them.</source>
          <target state="translated">As margens são aditivas para elementos irmãos em um layout; Por exemplo, dois elementos adjacentes que com uma margem de 30 definidos na borda adjacente teria 60 unidades de espaço entre eles.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Elements that have margins set will not typically constrain the size of the specified <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> if the allotted rectangle space is not large enough for the margin plus the element content area.</source>
          <target state="translated">Os elementos que tenham margens definir normalmente não restringe o tamanho especificado <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> se o espaço alocado do retângulo não é grande o suficiente para a margem e área de conteúdo do elemento.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The element content area will be constrained instead when layout is calculated.</source>
          <target state="translated">A área de conteúdo do elemento será limitada em vez disso, quando o layout é calculado.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The only case where margins would be constrained also is if the content is already constrained all the way to zero.</source>
          <target state="translated">O único caso onde margens deve ser restrita é também se o conteúdo já está restrita para zero.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source><bpt id="p1">*</bpt>left, top, right, bottom<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>à esquerda, superior, direita, inferior<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Number values between 0 and <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> that specify the four possible dimension properties of a <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> structure.</source>
          <target state="translated">Número de valores entre 0 e <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> que especificam as quatro propriedades de dimensão possíveis de um <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The attribute usage will also accept abbreviated values that apply in the order provided, symmetrically and logically.</source>
          <target state="translated">O uso de atributo também aceitará abreviados valores que se aplicam na ordem fornecida, simetricamente e logicamente.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>For instance, <ph id="ph1">`Margin="20"`</ph> will be interpreted to mean a <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> with all properties set to 20.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`Margin="20"`</ph> será interpretado como um <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> com todas as propriedades definidas para 20.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source><ph id="ph1">`Margin="20,50"`</ph> will be interpreted to mean a <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> with <ph id="ph3">&lt;xref:System.Windows.Thickness.Left%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Thickness.Right%2A&gt;</ph> set to 20, and <ph id="ph5">&lt;xref:System.Windows.Thickness.Top%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Thickness.Bottom%2A&gt;</ph> set to 50.</source>
          <target state="translated"><ph id="ph1">`Margin="20,50"`</ph> será interpretado como um <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph> com <ph id="ph3">&lt;xref:System.Windows.Thickness.Left%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.Thickness.Right%2A&gt;</ph> definido como 20, e <ph id="ph5">&lt;xref:System.Windows.Thickness.Top%2A&gt;</ph> e <ph id="ph6">&lt;xref:System.Windows.Thickness.Bottom%2A&gt;</ph> definido como 50.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>The default unit for a <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph> measure is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph>.</source>
          <target state="translated">A unidade padrão para um <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph> medida é <ph id="ph2">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>You can also specify other units by appending the unit type strings <ph id="ph1">`cm`</ph>, <ph id="ph2">`in`</ph>, or <ph id="ph3">`pt`</ph> to any measure.</source>
          <target state="translated">Você também pode especificar outras unidades acrescentando as cadeias de caracteres de tipo de unidade <ph id="ph1">`cm`</ph>, <ph id="ph2">`in`</ph>, ou <ph id="ph3">`pt`</ph> a qualquer medida.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Number values provided as <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attributes need not specify decimal points (0 is acceptable, does not have to be provided as 0.0).</source>
          <target state="translated">Número de valores fornecidos como <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> atributos não é necessário especificar pontos decimais (0 é aceitável, não precisa ser fornecido como 0.0).</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> usage, see <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> uso, consulte <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source><bpt id="p1">*</bpt>thicknessReference<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>thicknessReference<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>An object reference to an existing <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph>.</source>
          <target state="translated">Uma referência de objeto para uma <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>This might be a <ph id="ph1">`}`</ph>, a , or <ph id="ph2">`}`</ph> reference.</source>
          <target state="translated">Isso pode ser um <ph id="ph1">`}`</ph>, a, ou <ph id="ph2">`}`</ph> referência.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>For more information on <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> usage, see <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> uso, consulte <ph id="ph2">&lt;xref:System.Windows.Thickness&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Margin">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.MarginProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Margin" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Margin" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>Gets or sets the maximum height constraint of the element.</source>
          <target state="translated">Obtém ou define a restrição de altura máxima do elemento.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>The maximum height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A altura máxima do elemento, em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">Esse valor pode ser qualquer valor igual ou maior que 0,0.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> is also valid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> também é válido.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>This is one of three properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that specify height information.</source>
          <target state="translated">Esta é uma das três propriedades em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que especifique informações de altura.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>The other two are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</source>
          <target state="translated">As outras duas são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>If there is a conflict between these values, the order of application for actual height determination is first <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> must be honored, then <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>, and finally if each of these are within bounds, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</source>
          <target state="translated">Se houver um conflito entre esses valores, a ordem do aplicativo para a determinação de altura real é primeiro <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> devem ser cumprido, em seguida, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>e, finalmente, se cada um deles está dentro dos limites, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>The value restrictions on the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value are enforced by a <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mechanism.</source>
          <target state="translated">As restrições de valor sobre o <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor são impostas por um <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mecanismo.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>If you attempt to set an invalid value a run-time exception is thrown.</source>
          <target state="translated">Se você tentar definir um valor inválido é gerada uma exceção de tempo de execução.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value equal to or greater than 0.0.</source>
          <target state="translated">Representação de cadeia de caracteres um <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor igual ou maior que 0.0.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Isso é interpretado como um <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">Cadeias de caracteres não precisam explicitamente incluir pontos decimais.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por exemplo, um valor de <ph id="ph1">`1`</ph> é aceitável.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions as mentioned in the Property Value section apply, except that you must use <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept> if you need to explicitly set the value to be <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">O mesmo <ph id="ph1">&lt;xref:System.Double&gt;</ph> aplicam restrições de intervalo conforme mencionado na seção do valor da propriedade, exceto que você deve usar <bpt id="p1">[</bpt>extensão de marcação X:Static<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept> se você precisa definir explicitamente o valor a ser <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>duplo<ept id="p1">*</ept> valor conforme descrito acima, seguido por um dos seguintes unidade declaração cadeias de caracteres: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> é (padrão) <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> polegadas; em 1 = = 96px</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centímetros; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> pontos; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxHeight">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.MaxHeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MaxHeight" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MaxHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>Gets or sets the maximum width constraint of the element.</source>
          <target state="translated">Obtém ou define a restrição de largura máxima do elemento.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>The maximum width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A largura máxima do elemento, em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">Esse valor pode ser qualquer valor igual ou maior que 0,0.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> is also valid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> também é válido.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>This is one of three properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that specify width information.</source>
          <target state="translated">Esta é uma das três propriedades em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que especificam as informações de largura.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>The other two are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</source>
          <target state="translated">As outras duas são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>If there is a conflict between these values, the order of application for actual width determination is first <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> must be honored, then <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>, and finally if each of these are within bounds, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</source>
          <target state="translated">Se houver um conflito entre esses valores, a ordem do aplicativo para a determinação de largura real é primeiro <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> devem ser cumprido, em seguida, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>e, finalmente, se cada um deles está dentro dos limites, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>The value restrictions on the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value are enforced by a <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mechanism.</source>
          <target state="translated">As restrições de valor sobre o <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor são impostas por um <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mecanismo.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">Se você tentar definir um valor inválido, uma exceção de tempo de execução é gerada.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value equal to or greater than 0.0.</source>
          <target state="translated">Representação de cadeia de caracteres um <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor igual ou maior que 0.0.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Isso é interpretado como um <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">Cadeias de caracteres não precisam explicitamente incluir pontos decimais.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por exemplo, um valor de <ph id="ph1">`1`</ph> é aceitável.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions as mentioned in the Property Value section apply, except that you must use <bpt id="p1">[</bpt>x:Static Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept> to set the value to be <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">O mesmo <ph id="ph1">&lt;xref:System.Double&gt;</ph> aplicam restrições de intervalo conforme mencionado na seção do valor da propriedade, exceto que você deve usar <bpt id="p1">[</bpt>extensão de marcação X:Static<ept id="p1">](~/docs/framework/xaml-services/x-static-markup-extension.md)</ept> para definir o valor a ser <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>duplo<ept id="p1">*</ept> valor conforme descrito acima, seguido por um dos seguintes unidade declaração cadeias de caracteres: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> é (padrão) <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> polegadas; em 1 = = 96px</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centímetros; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> pontos; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MaxWidth">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.MaxWidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MaxWidth" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MaxWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>The available size that the parent element can give to the child elements.</source>
          <target state="translated">O tamanho disponível que o elemento pai pode dar para elementos filho.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>Implements basic measure-pass layout system behavior for <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</source>
          <target state="translated">Implementa um comportamento de sistema básico de layout de passagem de medidas <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>The desired size of this element in layout.</source>
          <target state="translated">O tamanho desejado desse elemento no layout.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType&gt;</ph> to connect the  WPF core-level and WPF framework-level layout measure implementations.</source>
          <target state="translated">Esse método substitui <ph id="ph1">&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType&gt;</ph> para conectar o nível de núcleo do WPF e implementações de medida de layout de nível de framework WPF.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementation seals the method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementação lacra o método.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>To adjust the measure pass layout behavior of any element that builds on the WPF framework-level, override <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> instead.</source>
          <target state="translated">Para ajustar o comportamento de qualquer elemento que se baseia no nível de framework do WPF do layout de passagem de medida, substituir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> em vez disso.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
          <source>To adjust the measure pass layout behavior of an element that deliberately does not build on the WPF framework-level or use <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, override <ph id="ph2">&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para ajustar a medida passar o comportamento de layout de um elemento que deliberadamente não criar no nível de framework WPF ou use <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, substituir <ph id="ph2">&lt;xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>The available size that this element can give to child elements.</source>
          <target state="translated">O tamanho disponível que esse elemento pode fornecer aos elementos filho.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Infinity can be specified as a value to indicate that the element will size to whatever content is available.</source>
          <target state="translated">Infinito pode ser especificado como um valor para indicar que o elemento será dimensionado para qualquer conteúdo que estiver disponível.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>-derived class.</source>
          <target state="translated">Quando substituído em uma classe derivada, mede o tamanho em layout necessário para elementos filho e determina um tamanho para a classe derivada em <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>The size that this element determines it needs during layout, based on its calculations of child element sizes.</source>
          <target state="translated">O tamanho desse elemento determina o que ele precisa durante o layout, com base em seus cálculos de tamanhos de elemento filho.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> to implement custom layout sizing behavior for your element as it participates in the <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> layout system.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> para implementar o comportamento de dimensionamento de layout personalizado para o elemento que participa de <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> sistema de layout.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Your implementation should do the following:</source>
          <target state="translated">Sua implementação deve fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Iterate your element's particular collection of children that are part of layout, call <ph id="ph1">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> on each child element.</source>
          <target state="translated">Iterar a coleção específica do elemento de filhos que fazem parte do layout, chamada <ph id="ph1">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> em cada elemento filho.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Immediately get <ph id="ph1">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph> on the child (this is set as a property after <ph id="ph2">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> is called).</source>
          <target state="translated">Obter imediatamente <ph id="ph1">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph> no filho (Isso é definido como uma propriedade após <ph id="ph2">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> é chamado).</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Compute the net desired size of the parent based upon the measurement of the child elements.</source>
          <target state="translated">Calcule o tamanho desejado net do pai com base na medida dos elementos filho.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>The return value of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> should be the element's own desired size, which then becomes the measure input for the parent element of the current element.</source>
          <target state="translated">O valor de retorno <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph> devem ter o tamanho do elemento próprio desejado, que se torna a medida de entrada para o elemento pai do elemento atual.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>This same process continues through the layout system until the root element of the page is reached.</source>
          <target state="translated">Este mesmo processo continua por meio do sistema de layout até que o elemento raiz da página seja atingido.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>During this process, child elements might return a larger <ph id="ph1">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph> size than the initial <ph id="ph2">`availableSize`</ph> to indicate that the child element wants more space.</source>
          <target state="translated">Durante esse processo, os elementos filho podem retornar uma maior <ph id="ph1">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph> tamanho que o inicial <ph id="ph2">`availableSize`</ph> para indicar que o elemento filho deseja mais espaço.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>This might be handled in your own implementation by introducing a scrollable region, by resizing the parent control, by establishing some manner of stacked order, or any number of solutions for measuring or arranging content.</source>
          <target state="translated">Isso pode ser manipulado em sua própria implementação introduzindo uma região de rolagem, redimensionando o controle pai, estabelecendo alguma maneira de ordem empilhada ou qualquer número de soluções para medir ou organizando conteúdo.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>Elements should call <ph id="ph1">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> on each child during this process, otherwise the child elements will not be correctly sized or arranged.</source>
          <target state="translated">Elementos devem chamar <ph id="ph1">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> em cada filho durante esse processo, caso contrário, os elementos filho não serão corretamente o tamanho ou organizados.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>The following non-compiling code shows this implementation pattern.</source>
          <target state="translated">O seguinte código de compilação não apresente este tipo de implementação.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source><bpt id="p1">&lt;c&gt;</bpt>VisualChildren<ept id="p1">&lt;/c&gt;</ept> represents an enumerable collection property of children that your own element should define.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>VisualChildren<ept id="p1">&lt;/c&gt;</ept> representa uma propriedade de coleção enumerável de filhos que deve definir seu próprio elemento.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source>The property can be named anything.</source>
          <target state="translated">A propriedade pode ser qualquer nome.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
          <source><bpt id="p1">&lt;c&gt;</bpt>VisualChildren<ept id="p1">&lt;/c&gt;</ept> is a placeholder name for purposes of this example, <bpt id="p2">&lt;c&gt;</bpt>VisualChildren<ept id="p2">&lt;/c&gt;</ept> is not an <ph id="ph1">[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]</ph> as provided by <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> or a part of a naming pattern..</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>VisualChildren<ept id="p1">&lt;/c&gt;</ept> é um nome de espaço reservado para fins deste exemplo, <bpt id="p2">&lt;c&gt;</bpt>VisualChildren<ept id="p2">&lt;/c&gt;</ept> não é um <ph id="ph1">[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]</ph> conforme fornecido por <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> ou uma parte de um padrão de nomeação.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>Gets or sets the minimum height constraint of the element.</source>
          <target state="translated">Obtém ou define a restrição de altura mínima do elemento.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>The minimum height of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A altura mínima do elemento, em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>The default value is 0.0.</source>
          <target state="translated">O valor padrão é 0.0.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">Esse valor pode ser qualquer valor igual ou maior que 0,0.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>However, <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> is NOT valid, nor is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated">No entanto, <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> NÃO é válido, nem <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>This is one of three properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that specify height information.</source>
          <target state="translated">Esta é uma das três propriedades em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que especifique informações de altura.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>The other two are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>.</source>
          <target state="translated">As outras duas são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>If there is a conflict between these values, the order of application for actual height determination is first <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> must be honored, then <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>, and finally if each of these are within bounds, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</source>
          <target state="translated">Se houver um conflito entre esses valores, a ordem do aplicativo para a determinação de altura real é primeiro <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinHeight%2A&gt;</ph> devem ser cumprido, em seguida, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxHeight%2A&gt;</ph>e, finalmente, se cada um deles está dentro dos limites, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>The value restrictions on the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value are enforced by a <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mechanism.</source>
          <target state="translated">As restrições de valor sobre o <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor são impostas por um <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mecanismo.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">Se você tentar definir um valor inválido, uma exceção de tempo de execução é gerada.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value equal to or greater than 0.0.</source>
          <target state="translated">Representação de cadeia de caracteres um <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor igual ou maior que 0.0.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Isso é interpretado como um <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">Cadeias de caracteres não precisam explicitamente incluir pontos decimais.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por exemplo, um valor de <ph id="ph1">`1`</ph> é aceitável.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">O mesmo <ph id="ph1">&lt;xref:System.Double&gt;</ph> aplicam restrições de intervalo conforme mencionado na seção do valor da propriedade.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>duplo<ept id="p1">*</ept> valor conforme descrito acima, seguido por um dos seguintes unidade declaração cadeias de caracteres: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> é (padrão) <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> polegadas; em 1 = = 96px</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centímetros; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> pontos; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinHeight">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.MinHeightProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MinHeight" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MinHeight" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>Gets or sets the minimum width constraint of the element.</source>
          <target state="translated">Obtém ou define a restrição de largura mínima do elemento.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>The minimum width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A largura mínima do elemento, em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>The default value is 0.0.</source>
          <target state="translated">O valor padrão é 0,0.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>This value can be any value equal to or greater than 0.0.</source>
          <target state="translated">Esse valor pode ser qualquer valor igual ou maior que 0,0.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>However, <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> is not valid, nor is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated">No entanto, <ph id="ph1">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> não é válido, nem <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>This is one of three properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that specify width information.</source>
          <target state="translated">Esta é uma das três propriedades em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que especificam as informações de largura.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>The other two are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>.</source>
          <target state="translated">As outras duas são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>If there is a conflict between these values, the order of application for actual width determination is first <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> must be honored, then <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>, and finally if each of these are within bounds, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</source>
          <target state="translated">Se houver um conflito entre esses valores, a ordem do aplicativo para a determinação de largura real é primeiro <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> devem ser cumprido, em seguida, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>e, finalmente, se cada um deles está dentro dos limites, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>The value restrictions on the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value are enforced by a <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mechanism.</source>
          <target state="translated">As restrições de valor sobre o <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor são impostas por um <ph id="ph2">&lt;xref:System.Windows.ValidateValueCallback&gt;</ph> mecanismo.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>If you attempt to set an invalid value, a run-time exception is thrown.</source>
          <target state="translated">Se você tentar definir um valor inválido, uma exceção de tempo de execução é gerada.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value equal to or greater than 0.0.</source>
          <target state="translated">Representação de cadeia de caracteres um <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor igual ou maior que 0.0.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>This is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Isso é interpretado como um <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">Cadeias de caracteres não precisam explicitamente incluir pontos decimais.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por exemplo, um valor de <ph id="ph1">`1`</ph> é aceitável.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>The same <ph id="ph1">&lt;xref:System.Double&gt;</ph> range restrictions as mentioned in the Property Value section apply.</source>
          <target state="translated">O mesmo <ph id="ph1">&lt;xref:System.Double&gt;</ph> aplicam restrições de intervalo conforme mencionado na seção do valor da propriedade.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>duplo<ept id="p1">*</ept> valor conforme descrito acima, seguido por um dos seguintes unidade declaração cadeias de caracteres: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> é (padrão) <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> polegadas; em 1 = = 96px</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centímetros; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> pontos; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.MinWidth">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.MinWidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MinWidth" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.MinWidth" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>The direction that focus is to be moved, as a value of the enumeration.</source>
          <target state="translated">A direção para a qual o foco deve ser movido, como um valor da enumeração.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>Moves the keyboard focus away from this element and to another element in a provided traversal direction.</source>
          <target state="translated">Move o foco do teclado para longe desse elemento e para outro elemento em uma direção de passagem fornecida.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if focus is moved successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the target element in direction as specified does not exist or could not be keyboard focused.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o foco é movido com êxito; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se o elemento de destino na direção especificada não existe ou não pode ter o foco do teclado.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>This implementation overrides <ph id="ph1">&lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType&gt;</ph> and seals the method.</source>
          <target state="translated">Essa implementação substitui <ph id="ph1">&lt;xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType&gt;</ph> e lacra o método.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>The following example implements a handler that handles several possible button inputs.</source>
          <target state="translated">O exemplo a seguir implementa um manipulador que trata de várias entradas de possíveis do botão.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>Each button represents a possible <ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph>.</source>
          <target state="translated">Cada botão representa um possível <ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
          <source>The handler tracks the element with current keyboard focus, and calls <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</ph> on that element, by specifying the appropriate <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph> as initialization for the <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph> type parameter provided.</source>
          <target state="translated">O manipulador controla o elemento com o foco do teclado atual e chamadas <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</ph> no elemento, especificando as <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph> como a inicialização para o <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph> fornecido de parâmetro de tipo.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Name">
          <source>Gets or sets the identifying name of the element.</source>
          <target state="translated">Obtém ou define o nome de identificação do elemento.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Name">
          <source>The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processor.</source>
          <target state="translated">O nome fornece uma referência para que o code-behind, como o código do manipulador de eventos, possa consultar um elemento de marcação depois que ele é construído durante o processamento por um processador <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The name of the element.</source>
          <target state="translated">O nome do elemento.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The default is an empty string.</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The most common usage of this property is to specify a <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> element name as an attribute in markup.</source>
          <target state="translated">O uso mais comum dessa propriedade é especificar um <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> nome do elemento como um atributo na marcação.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>This property essentially provides a WPF framework-level convenience property to set the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept>.</source>
          <target state="translated">Esta propriedade fornece essencialmente uma propriedade de conveniência de nível de framework do WPF para definir o <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>diretiva X:Name<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept>.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Names must be unique within a namescope.</source>
          <target state="translated">Nomes devem ser exclusivos dentro de um namescope.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Namescopes WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Getting a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> if you are creating elements in code is not common.</source>
          <target state="translated">Obtendo um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> se você estiver criando elementos em código não é comum.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>If you have the appropriate reference in code already, you can just call methods and properties on the element reference and will not generally need the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>.</source>
          <target state="translated">Se você já a referência apropriada no código, você pode simplesmente chamar métodos e propriedades no elemento de referem e geralmente não serão necessário o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>An exception to this is if the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> string has some overloaded meaning, for instance if it is useful to display that name in <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Uma exceção a isso é se o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> cadeia de caracteres tem algumas sobrecarregados que significa que, por exemplo se é útil exibir esse nome no <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Setting a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> from code-behind if the original <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> was set from markup is also not recommended, and changing the property after loading the <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> will not change the original object reference.</source>
          <target state="translated">Definindo um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> partir code-behind se original <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> foi definida da marcação também não é recomendada e alterar a propriedade após o carregamento de <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> não alterará a referência de objeto original.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The object references are created only when the underlying namescopes are explicitly created during parsing.</source>
          <target state="translated">As referências de objeto são criadas apenas quando os namescopes subjacentes são explicitamente criados durante a análise.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>You must specifically call <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</ph> to make an effective change to the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property of an already loaded element.</source>
          <target state="translated">Você deverá chamar especificamente <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</ph> para fazer uma alteração efetiva para o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> propriedade de um elemento já carregada.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>One notable case where setting <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> from code is important is when registering names for elements that storyboards will run against, so that they can be referenced at run time.</source>
          <target state="translated">Importantes de um caso onde a configuração <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> do código é importante quando o registro de nomes de elementos que storyboards será executado, para que eles podem ser referenciados em tempo de execução.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Before you can register a name, might also need to instantiate and assign a <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> instance.</source>
          <target state="translated">Antes de registrar um nome, também precisará criar uma instância e atribuir um <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>See the Example section, or <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Consulte a seção de exemplo ou <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> from code has limited applications, but getting an element by <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> is more common.</source>
          <target state="translated">Configuração <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> do código limitou os aplicativos, mas obtendo um elemento <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> é mais comum.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>One particular scenario is if your application supports a navigation model where pages reload into the application, and the run time code is not necessarily code-behind defined for that page.</source>
          <target state="translated">Um cenário em particular está se seu aplicativo dá suporte a um modelo de navegação onde páginas Recarregar no aplicativo, e o código de tempo de execução não é necessariamente lógica definida para a página.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The utility method <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph>, which is available from any <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, can find any element by <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> in the logical tree for that element, searching the tree recursively as necessary.</source>
          <target state="translated">O método de utilitário <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph>, que está disponível em qualquer <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, pode encontrar qualquer elemento por <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> na árvore lógica para esse elemento, pesquisa recursivamente a árvore conforme necessário.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Or you can use the <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> static method of <ph id="ph2">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>, which also takes a <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> string as an argument.</source>
          <target state="translated">Ou você pode usar o <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> método estático de <ph id="ph2">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>, que também usa um <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> cadeia de caracteres como um argumento.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Typically used root elements (<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph> for example) implement the interface <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.</source>
          <target state="translated">Normalmente usado elementos raiz (<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.Page&gt;</ph> por exemplo) implementa a interface <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Implementations of this interface are expected to enforce that names be unambiguous within their scope.</source>
          <target state="translated">Implementações dessa interface devem impor que os nomes sejam ambíguos no seu escopo.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The root elements that define this interface also define the namescope behavior boundaries for all the related <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</source>
          <target state="translated">Os elementos raiz que definem essa interface também definem os limites de comportamento namescope para todos os relacionado <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property also serves as an identifier for other processes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> propriedade também serve como um identificador para outros processos.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>For instance, the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> automation model will use <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> as the AutomationId for clients and providers.</source>
          <target state="translated">Por exemplo, o <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usará o modelo de automação <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> como AutomationId para clientes e fornecedores.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The string values used for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> have some restrictions, as imposed by the underlying <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> defined by the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> specification.</source>
          <target state="translated">Os valores de cadeia de caracteres usados para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> têm algumas restrições, conforme imposto pelo subjacente <bpt id="p1">[</bpt>diretiva X:Name<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> definido pelo <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> especificação.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Most notably, a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> must start with a letter or the underscore character (_), and must contain only letters, digits, or underscores.</source>
          <target state="translated">Notadamente, um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> deve começar com uma letra ou o caractere de sublinhado (_) e deve conter apenas letras, dígitos ou sublinhados.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Namescopes WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> is one of the very few dependency properties that cannot be animated (<ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</ph> is <ph id="ph3">`true`</ph> in metadata), because the name itself is vital for targeting an animation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> é uma das poucas propriedades de dependência não podem ser animadas (<ph id="ph2">&lt;xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A&gt;</ph> é <ph id="ph3">`true`</ph> nos metadados), pois o próprio nome é vital para atingir uma animação.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Data binding a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> is technically possible, but is an extremely uncommon scenario because a data-bound <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> cannot serve the main intended purpose of the property: to provide an identifier connection point for code-behind.</source>
          <target state="translated">Associação de dados um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> é tecnicamente possível, mas é um cenário muito comum porque uma associação de dados <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> não pode servir a finalidade principal da propriedade: para fornecer um ponto de conexão do identificador para code-behind.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property in code, and then registers the name into the newly created <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir define o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> propriedade no código e, em seguida, registra o nome em recém-criado <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> chamando <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Name">
          <source>The technique illustrated here is a requirement for animating with storyboards, because storyboards require targeting by the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>, and cannot be targeted by object reference.</source>
          <target state="translated">A técnica ilustrada aqui é um requisito para animação com storyboards, porque storyboards exigem o destino de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>e não pode ser direcionado pela referência de objeto.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.NameProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Name" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>When overridden in a derived class, is invoked whenever application code or internal processes call <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /&gt;</ph>.</source>
          <target state="translated">Quando substituído em uma classe derivada, é chamado sempre que o código do aplicativo ou os processos internos chamarem <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>Templates are the section of an element's completed visual tree that comes from the Template property of a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> that is applied for the element.</source>
          <target state="translated">Os modelos são a seção de concluído árvore visual um elemento que vêm com a propriedade de modelo de um <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> que é aplicada para o elemento.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>For more information, see <bpt id="p1">[</bpt>Styling and Templating<ept id="p1">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Estilo e modelagem<ept id="p1">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept>.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> can use this method as a notification for a variety of possible scenarios:</source>
          <target state="translated">Classes derivadas de <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> pode usar esse método como uma notificação para uma variedade de cenários possíveis:</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>You can call your own implementation of code that builds the remainder of an element visual tree.</source>
          <target state="translated">Você pode chamar sua própria implementação de código que cria o restante de uma árvore visual do elemento.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>You can run code that relies on the visual tree from templates having been applied, such as obtaining references to named elements that came from a template.</source>
          <target state="translated">Você pode executar o código que dependa da árvore visual de modelos de ter sido aplicado, como obter referências a elementos nomeados que veio de um modelo.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>You can introduce services that only make sense to exist after the visual tree from templates is complete.</source>
          <target state="translated">Você pode introduzir serviços que só fazem sentido existir após a conclusão da árvore visual de modelos.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>You can set states and properties of elements within the template that are dependent on other factors.</source>
          <target state="translated">Você pode definir os estados e as propriedades de elementos dentro do modelo que dependem de outros fatores.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>For instance, property values might only be discoverable by knowing the parent element, or when a specific derived class uses a common template.</source>
          <target state="translated">Por exemplo, valores de propriedade só podem ser detectáveis Conhecendo o elemento pai, ou quando derivadas de uma determinada classe usa um modelo comum.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source>Implementers should always call the base implementation before their own implementation.</source>
          <target state="translated">Os implementadores sempre devem chamar a implementação base antes de sua própria implementação.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> itself has no default implementation, but intervening classes might.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> em si não possui padrão implementação, mas classes intermediários podem.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnApplyTemplate">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Control" /&gt;</ph> offers a similar override, <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Control" /&gt;</ph> oferece uma substituição semelhante, <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Provides data about the event.</source>
          <target state="translated">Fornece dados sobre o evento.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Invoked whenever an unhandled <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /&gt;</ph> routed event reaches this class in its route.</source>
          <target state="translated">Invocado sempre que um evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /&gt;</ph> sem tratamento acessa essa classe em sua rota.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar tratamento de classe a esse evento.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</source>
          <target state="translated">Você ainda deve chamar a implementação base no caso de uma classe intermediária na herança implementou esse método.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>The purpose of this method is somewhat similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: ele fornece os meios para manipular o evento correspondente de classes derivadas com um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</source>
          <target state="translated">O padrão de implementação dos métodos On * é diferente para eventos roteados porque o evento roteado pode ter sido gerado por um elemento filho, não necessariamente o elemento que invocará manipuladores, portanto, sua implementação precisa consideram o evento propriedades da fonte dos argumentos (e não deve tentar gerar novamente o evento na maioria dos casos).</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.</source>
          <target state="translated">As subclasses de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> pode optar por chamar os métodos do manipulador de classe privada quando o evento é recebido na rota.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
          <source>One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</source>
          <target state="translated">Um cenário potencial é receber os argumentos do evento e deliberadamente marcar o evento como manipulado.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Invoked whenever an unhandled <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /&gt;</ph> routed event reaches this class in its route.</source>
          <target state="translated">Invocado sempre que um evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /&gt;</ph> sem tratamento acessa essa classe em sua rota.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar tratamento de classe a esse evento.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</source>
          <target state="translated">Você ainda deve chamar a implementação base no caso de uma classe intermediária na herança implementou esse método.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>The purpose of this method is somewhat similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: ele fornece os meios para manipular o evento correspondente de classes derivadas com um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</source>
          <target state="translated">O padrão de implementação dos métodos On * é diferente para eventos roteados porque o evento roteado pode ter sido gerado por um elemento filho, não necessariamente o elemento que invocará manipuladores, portanto, sua implementação precisa consideram o evento propriedades da fonte dos argumentos (e não deve tentar gerar novamente o evento na maioria dos casos).</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.</source>
          <target state="translated">As subclasses de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> pode optar por chamar os métodos do manipulador de classe privada quando o evento é recebido na rota.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
          <source>One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</source>
          <target state="translated">Um cenário potencial é receber os argumentos do evento e deliberadamente marcar o evento como manipulado.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>Invoked whenever an unhandled <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.GotFocus" /&gt;</ph> event reaches this element in its route.</source>
          <target state="translated">Invocado sempre que um evento <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.GotFocus" /&gt;</ph> sem tratamento acessa esse elemento em sua rota.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>Unlike some other On* methods exposed by the base elements, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnGotFocus%2A&gt;</ph> does have a default implementation.</source>
          <target state="translated">Ao contrário de alguns outros * métodos expostos pelos elementos de base, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnGotFocus%2A&gt;</ph> tem uma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>Specifically, it has an implementation that overrides the null implementation in the next level of base element down, <ph id="ph1">&lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;</ph>.</source>
          <target state="translated">Especificamente, ele tem uma implementação que substitui a implementação nulo no próximo nível do elemento base para baixo, <ph id="ph1">&lt;xref:System.Windows.UIElement.OnGotFocus%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>When invoked, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnGotFocus%2A&gt;</ph> sets appropriate focus behavior on this element in cases where the event originated from the current element due to keyboard focus.</source>
          <target state="translated">Quando chamado, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnGotFocus%2A&gt;</ph> define o comportamento de foco apropriado neste elemento em casos onde o evento foi originado do elemento atual devido ao foco do teclado.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnGotFocus%2A&gt;</ph> handler does not mark the event arguments as handled, even when focus is set to the current element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnGotFocus%2A&gt;</ph> manipulador não marcar os argumentos do evento como tratado, mesmo quando o foco é ser definido para o elemento atual.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>If the event's source was another element in the tree (not the current element), the handler does nothing.</source>
          <target state="translated">Se a origem do evento foi outro elemento na árvore de (não o elemento atual), o manipulador não fará nada.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>You can override this method in order to change the default focus behavior on your element, but be aware that changing focus behavior in this way might be better accomplished by not allowing the element to be focusable at all (see <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph>).</source>
          <target state="translated">Você pode substituir esse método para alterar o comportamento de foco padrão em seu elemento, mas lembre-se de que alterar o comportamento de foco dessa maneira pode ser melhor executada não permitindo que o elemento seja Focusable é nenhum (consulte <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>If you intend to mark the event handled in the arguments, you should be aware of consequences on event handling in other parent elements in the element tree.</source>
          <target state="translated">Se você pretende marcar o evento manipulado nos argumentos, lembre-se de consequências em outros elementos pai na árvore de elementos de manipulação de eventos.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>Because this handler acts on an event with a bubbling routing, setting the focus to the current <ph id="ph1">&lt;paramref name="sender" /&gt;</ph> per the event arguments may not be appropriate.</source>
          <target state="translated">Como esse manipulador age em um evento com um roteamento bolha, definir o foco para o atual <ph id="ph1">&lt;paramref name="sender" /&gt;</ph> por evento argumentos podem não ser apropriados.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>Focus might need to go to either a composite child element or to a parent element, depending on the compositing of certain controls.</source>
          <target state="translated">Foco precisará ir para um elemento filho composto ou um elemento pai, dependendo da composição de alguns controles.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
          <source>Therefore marking a focus event as handled is only recommended if the entirety of the visual tree that the event is routing through is part of compositing of a control that you authored.</source>
          <target state="translated">Marcar, portanto, um evento de foco como tratado é recomendado apenas se a totalidade da árvore visual que o evento é roteamento por meio de faz parte da composição de um controle que você criou.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEventArgs" /&gt;</ph> que contém os dados do evento.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Initialized" /&gt;</ph> event.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Initialized" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>This method is invoked whenever <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.IsInitialized" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> internally.</source>
          <target state="translated">Este método é invocado sempre que <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.IsInitialized" /&gt;</ph> é definido como <ph id="ph2">&lt;see langword="true" /&gt;</ph> internamente.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>This particular On* method is not a class handler hook.</source>
          <target state="translated">Nesse específico em * método não é um gancho de manipulador de classe.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>Nor does it exactly follow the established <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> On* method convention that the matching event could be suppressed by overriding this method and not calling the base implementation.</source>
          <target state="translated">Nem ele exatamente segue o estabelecida <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> em * convenção de métodos que o evento correspondente pode ser suprimido por substituir esse método e não chamar a implementação base.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.IsInitialized%2A&gt;</ph> property is read-only, so you cannot set <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.IsInitialized%2A&gt;</ph> to force initialization behavior.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.IsInitialized%2A&gt;</ph> propriedade é somente leitura, portanto, você não pode definir <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.IsInitialized%2A&gt;</ph> para forçar o comportamento de inicialização.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>Setting the initialization state is intended to be done only by the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> framework.</source>
          <target state="translated">Definindo o estado de inicialização deve ser feito apenas pelo <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> framework.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>The default implementation of this virtual method raises the event as described above.</source>
          <target state="translated">A implementação padrão desse método virtual gera o evento conforme descrito acima.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>Overrides should call the base implementation to preserve this behavior.</source>
          <target state="translated">Substituições devem chamar a implementação base para preservar esse comportamento.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <source>If you fail to call the base implementation, not only will you not raise the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Initialized" /&gt;</ph> event as is generally expected of a <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> derived class, but you will also suppress two important style and theme style initialization operations that are implemented by this base implementation.</source>
          <target state="translated">Se você não chamar a implementação base, não apenas você não vai disparar a <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Initialized" /&gt;</ph> evento como é geralmente esperada de um <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> classe derivada, mas também suprimirá duas importantes estilo e o tema estilo operações de inicialização que são implementado por esta implementação base.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">Os dados de evento que descrevem a propriedade alterada, bem como valores novos e antigos.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Invoked whenever the effective value of any dependency property on this <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> has been updated.</source>
          <target state="translated">Invocado sempre que o valor efetivo de qualquer propriedade de dependência nesse <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> for atualizada.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The specific dependency property that changed is reported in the arguments parameter.</source>
          <target state="translated">A propriedade de dependência específica alterada é relatada no parâmetro de argumentos.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /&gt;</ph>.</source>
          <target state="translated">Substitui <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>This method is not intended to generally detect property changes or invalidations.</source>
          <target state="translated">Esse método não deve detectar geralmente invalidações ou alterações de propriedade.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</source>
          <target state="translated">Em vez disso destina para modificações do padrão de invalidação geral se for conhecidas certas informações sobre classificações de largura de propriedades.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>This method is potentially invoked many times during the life of an object.</source>
          <target state="translated">Esse método é potencialmente chamado várias vezes durante a vida de um objeto.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <ph id="ph1">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> functions for individual properties.</source>
          <target state="translated">Portanto, você pode obter um melhor desempenho se você substituir os metadados de propriedades específicas e, em seguida, anexa <ph id="ph1">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> funções de propriedades individuais.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>However, you would use this method if a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</source>
          <target state="translated">No entanto, você usaria esse método se um <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> inclui um número significativo de propriedades de dependência inter-relacionados de valor, ou se ele inclui lógica, como o comportamento de renderização que deve ser executado novamente para vários casos de invalidações de propriedade de relacionados.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Note that there is an identically named <ph id="ph1">`OnPropertyChanged`</ph> method with a different signature (the parameter type is <ph id="ph2">&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;</ph>) that can appear on a number of classes.</source>
          <target state="translated">Observe que há um nome idêntico <ph id="ph1">`OnPropertyChanged`</ph> método com uma assinatura diferente (o tipo de parâmetro é <ph id="ph2">&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;</ph>) que podem aparecer em um número de classes.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>That <ph id="ph1">`OnPropertyChanged`</ph> is used for data object notifications, and is part of the contract for <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</source>
          <target state="translated">Que <ph id="ph1">`OnPropertyChanged`</ph> é usado para notificações do objeto de dados e faz parte do contrato de <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Always call the base implementation, as the first operation in your implementation.</source>
          <target state="translated">Sempre chame a implementação base, como a primeira operação em sua implementação.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Failure to do this will significantly disable the entire <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system, which causes incorrect values to be reported.</source>
          <target state="translated">Falha ao fazer isso significativamente desabilitará toda a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> sistema de propriedade, o que faz com que valores incorretos a serem relatados.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The specific <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> implementation is also responsible for maintaining proper state for a variety of properties that affect the visible user interface.</source>
          <target state="translated">Específico <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> implementação também é responsável por manter o estado apropriado para uma variedade de propriedades que afetam a interface do usuário visível.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>These include invalidating the visual tree based on changes to style at appropriate times.</source>
          <target state="translated">Isso inclui a anulação da árvore visual com base nas alterações de estilo em momentos apropriados.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Details of the old and new size involved in the change.</source>
          <target state="translated">Detalhes dos tamanhos antigo e novo envolvidos na alteração.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.SizeChanged" /&gt;</ph> event, using the specified information as part of the eventual event data.</source>
          <target state="translated">Aciona o evento <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.SizeChanged" /&gt;</ph> usando as informações especificadas como parte dos dados do evento eventual.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;</ph>.</source>
          <target state="translated">Este método substitui <ph id="ph1">&lt;xref:System.Windows.UIElement.OnRenderSizeChanged%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>If you call this method you will reset the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph> property, or both, depending on what is specified as changed in the supplied arguments, and will you always raise the event.</source>
          <target state="translated">Se você chamar este método redefinirá o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> propriedade, o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ActualHeight%2A&gt;</ph> propriedade, ou ambos, dependendo do que é especificado como alterados nos argumentos fornecidos, e você sempre gera o evento.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Do not override this method for typical layout scenarios.</source>
          <target state="translated">Não substitua este método para cenários típicos de layout.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>The layout system operates in a deliberately asynchronous way to assure that all possible layout arrange and measure cases are accounted for.</source>
          <target state="translated">O sistema de layout opera de forma assíncrona deliberadamente para assegurar que todos os layout possível organizar e casos de medida são tratados de.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>The layout system override methods <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /&gt;</ph> are usually sufficient for any required layout customization.</source>
          <target state="translated">O sistema de layout substituir métodos <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /&gt;</ph> geralmente são suficientes para qualquer personalização de layout necessário.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /&gt;</ph> is exposed as a virtual.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /&gt;</ph> é exposta como uma máquina virtual.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>You can override <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /&gt;</ph> to correct for exceptional cases where a run-time behavioral change related to input events combined with control recomposition in response might give inaccurate layout information.</source>
          <target state="translated">Você pode substituir <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /&gt;</ph> para corrigir os casos excepcionais onde uma alteração de comportamento de tempo de execução relacionada a eventos combinados com controle de entrada recomposition em resposta pode fornecer informações de layout precisas.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>You may still override this method in derived classes (it is protected but not sealed).</source>
          <target state="translated">Você ainda pode substituir esse método em classes derivadas (ele é protegido, mas não lacrado).</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Always call the base implementation to preserve the behavior mentioned above, unless you have very specific reasons for disabling default WPF framework-level rendering behavior.</source>
          <target state="translated">Sempre chame a implementação base para preservar o comportamento mencionado acima, a menos que você tenha razões muito específicas para desabilitar o comportamento de renderização de nível de framework WPF padrão.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
          <source>Failing to raise the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.SizeChanged" /&gt;</ph> event will cause non-standard layout behavior if using the standard WPF framework-level layout system implementation.</source>
          <target state="translated">Falha ao gerar o <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.SizeChanged" /&gt;</ph> evento causará um comportamento não padrão de layout se usando a implementação padrão de sistema de layout de nível de framework WPF.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>The old style.</source>
          <target state="translated">O estilo antigo.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>The new style.</source>
          <target state="translated">O novo estilo.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>Invoked when the style in use on this element changes, which will invalidate the layout.</source>
          <target state="translated">Chamado quando o estilo em uso neste elemento é alterado, o que invalida o layout.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>This method has a default implementation that sets an internal flag that notes the style changed condition.</source>
          <target state="translated">Esse método tem uma implementação padrão que define um sinalizador interno que indica a condição de estilo alterado.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>You should not typically have to override this method.</source>
          <target state="translated">Você não deve ter normalmente substituir esse método.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>Any change to a style that involves a measure or arrange change would already trigger another render cycle, assuming a typical implementation of <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /&gt;</ph><ph id="ph2"> / </ph><ph id="ph3">&lt;see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /&gt;</ph>, or the defaults.</source>
          <target state="translated">Qualquer alteração para um estilo que envolve uma medida ou organizar alteração já dispararia outro ciclo de processamento, supondo que uma implementação típica de <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /&gt;</ph> <ph id="ph2"> / </ph> <ph id="ph3">&lt;see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /&gt;</ph>, ou os padrões.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>Overrides of <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" /&gt;</ph> might be appropriate if your <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /&gt;</ph><ph id="ph3"> / </ph><ph id="ph4">&lt;see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /&gt;</ph> implementations were deliberately optimizing or supporting partial updates, but still wanted to apply changes to styles more directly.</source>
          <target state="translated">Substituições de <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" /&gt;</ph> pode ser apropriado se seu <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /&gt;</ph> <ph id="ph3"> / </ph> <ph id="ph4">&lt;see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /&gt;</ph> implementações foram deliberadamente otimizando ou dando suporte a atualizações parciais, mas ainda deseja aplicar as alterações nos estilos mais diretamente.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
          <source>(The partial updates would be an attempt to avoid multiple incremental calls to <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /&gt;</ph> on any child elements).</source>
          <target state="translated">(As atualizações parciais seria uma tentativa para evitar várias chamadas incrementais para <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /&gt;</ph> em todos os elementos filho).</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>Provides data about the event.</source>
          <target state="translated">Fornece dados sobre o evento.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>Invoked whenever an unhandled <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /&gt;</ph> routed event reaches this class in its route.</source>
          <target state="translated">Invocado sempre que um evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /&gt;</ph> sem tratamento acessa essa classe em sua rota.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar tratamento de classe a esse evento.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</source>
          <target state="translated">Você ainda deve chamar a implementação base no caso de uma classe intermediária na herança implementou esse método.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>The purpose of this method is somewhat similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: ele fornece os meios para manipular o evento correspondente de classes derivadas com um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</source>
          <target state="translated">O padrão de implementação dos métodos On * é diferente para eventos roteados porque o evento roteado pode ter sido gerado por um elemento filho, não necessariamente o elemento que invocará manipuladores, portanto, sua implementação precisa consideram o evento propriedades da fonte dos argumentos (e não deve tentar gerar novamente o evento na maioria dos casos).</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.</source>
          <target state="translated">As subclasses de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> pode optar por chamar os métodos do manipulador de classe privada quando o evento é recebido na rota.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
          <source>One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</source>
          <target state="translated">Um cenário potencial é receber os argumentos do evento e deliberadamente marcar o evento como manipulado.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>Provides data about the event.</source>
          <target state="translated">Fornece dados sobre o evento.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>Invoked whenever the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /&gt;</ph> routed event reaches this class in its route.</source>
          <target state="translated">Invocado sempre que um evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /&gt;</ph> acessa essa classe em sua rota.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>Implement this method to add class handling for this event.</source>
          <target state="translated">Implemente esse método para adicionar tratamento de classe a esse evento.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>This method has no default implementation.</source>
          <target state="translated">Esse método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</source>
          <target state="translated">Você ainda deve chamar a implementação base no caso de uma classe intermediária na herança implementou esse método.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>The purpose of this method is somewhat similar to <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</source>
          <target state="translated">O objetivo deste método é semelhante a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> padrão de evento em * métodos: ele fornece os meios para manipular o evento correspondente de classes derivadas com um manipulador de classe em vez de um manipulador de instância.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>In this case the matching event is a routed event.</source>
          <target state="translated">Nesse caso, o evento correspondente é um evento roteado.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</source>
          <target state="translated">O padrão de implementação dos métodos On * é diferente para eventos roteados porque o evento roteado pode ter sido gerado por um elemento filho, não necessariamente o elemento que invocará manipuladores, portanto, sua implementação precisa consideram o evento propriedades da fonte dos argumentos (e não deve tentar gerar novamente o evento na maioria dos casos).</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> could choose to call private class handler methods when the event is received along the route.</source>
          <target state="translated">As subclasses de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> pode optar por chamar os métodos do manipulador de classe privada quando o evento é recebido na rota.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
          <source>One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</source>
          <target state="translated">Um cenário potencial é receber os argumentos do evento e deliberadamente marcar o evento como manipulado para encurtar a rota.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The old parent element.</source>
          <target state="translated">O elemento pai antigo.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph> to indicate that the element did not have a visual parent previously.</source>
          <target state="translated">Pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para indicar que o elemento não tinha um pai visual anteriormente.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Invoked when the parent of this element in the visual tree is changed.</source>
          <target state="translated">Invocado quando o pai deste elemento na árvore visual é alterado.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" /&gt;</ph>.</source>
          <target state="translated">Substitui <ph id="ph1">&lt;see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The visual tree is potentially different from the logical tree because it omits elements that do not render visually, such as collections, and expands some elements on the basis of their theme and style compositing.</source>
          <target state="translated">A árvore visual é potencialmente diferente da árvore lógica porque ele omite os elementos que não processam visualmente, como coleções e expande alguns elementos com base em sua composição de tema e um estilo.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>For more information, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Árvores no WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The default implementation of this virtual method queries for the new parent, raises various initialization events, and sets internal flags about initialization state of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> as appropriate.</source>
          <target state="translated">A implementação padrão desse método virtual consultas para o novo pai, gera vários eventos de inicialização e define os sinalizadores internos sobre estado de inicialização do <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> conforme apropriado.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Finally, it calls the successive base implementations as declared by <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>, which in turn calls its base in <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">Finalmente, ele chama as implementações de base sucessivas declarada por <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>, que por sua vez chama sua base <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Always call the base implementation to preserve this behavior, otherwise the element tree behavior for this element when declared as a child of another element may not be as expected.</source>
          <target state="translated">Sempre chamar a implementação base para preservar esse comportamento, caso contrário, o comportamento de árvore de elemento para este elemento quando declarado como um filho de outro elemento pode não ser conforme o esperado.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>A few existing <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> classes override this method, for example: <ph id="ph2">&lt;see cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)" /&gt;</ph>.</source>
          <target state="translated">Alguns existente <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> classes substituir esse método, por exemplo: <ph id="ph2">&lt;see cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The most common scenario is to enforce that the new parent must be a particular type.</source>
          <target state="translated">O cenário mais comum é para impor que o novo pai deve ser um tipo específico.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>This might involve throwing an exception if the new parent failed some manner of type test.</source>
          <target state="translated">Isso pode envolver lançar uma exceção se o novo pai falha de alguma maneira de teste de tipo.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>A specialized version of this scenario exists in implementations for list items and menu items, which do not make any sense outside a parent visual that owns an appropriate collection to store them in.</source>
          <target state="translated">Uma versão especializada deste cenário existe em implementações de itens de lista e itens de menu, que não fazem sentido fora de um pai visual que possui uma coleção apropriada para armazená-los em.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Note that these cases do not necessarily raise exceptions, because there might be designer scenarios that rely on reparenting elements that are momentarily without their "regular" parents.</source>
          <target state="translated">Observe que esses casos não necessariamente gerar exceções, pois pode haver cenários designers que dependem de mudança de pai elementos que estão temporariamente sem seus pais "normais".</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>This method is also overridden in certain elements that are typically the root element, such as  <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Esse método também é substituído em determinados elementos que são normalmente o elemento raiz, como <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Another case is elements that are the apparent root element in markup but which autogenerate a greater infrastructure in a compiled logical tree (such as <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Page" /&gt;</ph>).</source>
          <target state="translated">Outro caso é elementos que são o elemento raiz aparente na marcação, mas que gera automaticamente uma infraestrutura maior em uma árvore lógica compilada (como <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Page" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Page" /&gt;</ph> implementations deliberately seal the method.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> e <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Page" /&gt;</ph> implementações deliberadamente lacrar o método.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</source>
          <target state="translated">Obtém ou define um valor que indica se este elemento incorpora propriedades de estilo dos estilos de tema.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se esse elemento não usar as propriedades de estilo do tema. Todas as propriedades que originam o estilo vêm de estilos de aplicativos locais e propriedades de estilo do tema não se aplicam.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> se os estilos de aplicativo se aplicarem primeiro e, então, estilos de tema se aplicarem a propriedades que não foram definidas especificamente em estilos de aplicativo.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</source>
          <target state="translated">O uso mais comum dessa propriedade é um uso indireto em setter de um estilo que está fornecendo um estilo com tema.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;</ph> to <ph id="ph2">`true`</ph> on a control, you will be suppressing the default control template supplied by the theme styles.</source>
          <target state="translated">Se você definir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A&gt;</ph> para <ph id="ph2">`true`</ph> em um controle, você irá suprimir o modelo de controle padrão fornecido pelos estilos de tema.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>That control template typically includes the content presenter and other composited elements that provide basic <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> functionality and visualization for the control.</source>
          <target state="translated">Esse modelo de controle normalmente inclui conteúdo apresentador e outros elementos compostos que fornecem básico <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> funcionalidade e visualização para o controle.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure.</source>
          <target state="translated">Se você desejar que o controle para continuar a oferecer suporte os mesmos recursos como os estilos de tema padrão, você deve fornecer um estilo alternativo com um modelo de controle que replica a mesma estrutura.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>For more information, see <bpt id="p1">[</bpt>Control Authoring Overview<ept id="p1">](~/docs/framework/wpf/controls/control-authoring-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Visão geral da criação de controle<ept id="p1">](~/docs/framework/wpf/controls/control-authoring-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Parent">
          <source>Gets the logical parent  element of this element.</source>
          <target state="translated">Obtém o elemento pai lógico desse elemento.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>This element's logical parent.</source>
          <target state="translated">O pai lógico desse elemento.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> may be <ph id="ph2">`null`</ph> in cases where an element was instantiated, but is not attached to any logical tree that eventually connects to the page level root element, or the application object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> pode ser <ph id="ph2">`null`</ph> em casos em que um elemento foi instanciado, mas não está associado a qualquer árvore lógica que eventualmente se conecta ao elemento raiz de nível de página ou o objeto de aplicativo.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>Note that the logical parent of an element can potentially change depending on your application's functionality, and keeping the value of this property will not reflect that change.</source>
          <target state="translated">Observe que o pai lógico de um elemento poderá alterar dependendo da funcionalidade do aplicativo e manter o valor dessa propriedade não refletirá essa alteração.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>You typically should get the value immediately before you need it.</source>
          <target state="translated">Normalmente, você deve obter o valor imediatamente antes de você precisa dele.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>See <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept> for more information about logical tree  traversal, and the scenarios where using  <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> as a technique of parent element discovery is appropriate.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>árvores no WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept> para obter mais informações sobre a passagem da árvore lógica e os cenários em que usar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> como uma técnica do elemento pai descoberta é apropriada.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>The property engine will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</source>
          <target state="translated">O mecanismo de propriedade potencialmente recalculará todos os valores de propriedade de um elemento quando ele é alterado o nível superior, porque algumas propriedades herdam valores por meio da árvore lógica.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> that applies for bindings can also change when elements are reparented.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> que se aplica para associações também podem alterar quando os elementos de seus pais são modificados.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</source>
          <target state="translated">Alterando o pai de um elemento é normalmente feito somente por meio de manipulação de coleções, usando dedicado adicionar ou remover métodos, ou por meio de propriedades do conteúdo dos elementos de configuração.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>The most typical scenario for using the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> property is to obtain a reference and then get various <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> property values from the parent.</source>
          <target state="translated">O cenário mais comum para usar o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> é de propriedade obter uma referência e, em seguida, obter vários <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> valores de propriedade do pai.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>For templates, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> of the template eventually will be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Para os modelos, o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Parent%2A&gt;</ph> do modelo eventualmente será <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>To get past this point and extend into the logical tree where the template is actually applied, use <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph>.</source>
          <target state="translated">Para obter após esse ponto e estender a árvore lógica em que o modelo é aplicado na verdade, usar <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>Note that this property does not report visual tree parents in cases where these vary from the logical tree parents.</source>
          <target state="translated">Observe que essa propriedade não relata pais da árvore visual em casos onde eles variam de pais árvore lógica.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>Visual tree parents are not typically important for general application cases but may be the desired parent elements for certain visual level cases.</source>
          <target state="translated">Pais da árvore visual não são normalmente importantes para casos gerais do aplicativo, mas podem ser elementos pai desejado em certos casos de nível visual.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph>.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>The following example shows code that checks for an element's parent, and then uses property values from the parent to set properties on the child element to match.</source>
          <target state="translated">O exemplo a seguir mostra o código que verifica o pai de um elemento e, em seguida, usa os valores de propriedade do pai para definir as propriedades no elemento filho para corresponder.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Parent">
          <source>In this case these are properties that affect the rendering size.</source>
          <target state="translated">Nesse caso, essas são propriedades que afetam o tamanho de renderização.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>The child element reporting the change.</source>
          <target state="translated">O elemento filho que relata a alteração.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>Supports incremental layout implementations in specialized subclasses of <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</source>
          <target state="translated">Dá suporte a implementações de layout incremental em subclasses especializadas de <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /&gt;</ph> is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /&gt;</ph> é chamado quando um elemento filho invalidou uma propriedade que é marcada nos metadados como afetando a medida pai ou os passes de organização durante o layout.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>If this element has a child element on which some property was invalidated and the property was marked as <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> in property metadata during registration, this method is invoked.</source>
          <target state="translated">Se este elemento tem um elemento filho no qual foi invalidada, algumas propriedades e a propriedade foi marcada como <ph id="ph1">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A&gt;</ph> nos metadados da propriedade durante o registro, esse método é chamado.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>The method invocation notifies the parent element which particular child element must be re-measured if this element supports partial (incremental) update of layout.</source>
          <target state="translated">A invocação de método notifica o elemento pai qual elemento filho específico deve ser medido novamente se esse elemento oferece suporte à atualização (incremental) parcial do layout.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>By default, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> does not support incremental layout, and in the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> class this method has no default implementation.</source>
          <target state="translated">Por padrão, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> não oferece suporte a layout incremental e de <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> classe este método não tem nenhuma implementação padrão.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>The scenario where overriding this method would be necessary is not common, because it requires you to modify the default layout system behavior.</source>
          <target state="translated">O cenário em que substituir esse método seria necessário não é comum, porque você deve modificar o comportamento padrão do sistema de layout.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>An example implementation scenario might be if a class had type limitations for possible child elements that are significantly more restrictive than the WPF framework-level layout system.</source>
          <target state="translated">Um cenário de implementação de exemplo pode ser se uma classe tem limitações de tipo de possíveis elementos filho que são significativamente mais restritivos do que o sistema de layout de nível de framework do WPF.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>Because of the nature of these custom elements, property changes could be deliberately deferred when you implement some custom layout behavior.</source>
          <target state="translated">Devido à natureza desses elementos personalizados, as alterações de propriedade podem ser adiadas deliberadamente ao implementar alguns comportamentos de layout personalizado.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
          <source>For instance, measure/arrange method overrides, which try to optimize the child element render pass, could be deferred for certain types of changes that would ordinarily result in another layout pass.</source>
          <target state="translated">Por exemplo, substituições de método/organizar medidas, que tentam otimizar o elemento filho renderizar passagem, poderiam ser adiadas para determinados tipos de alterações que normalmente resultaria em outra passagem de layout.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>The direction for which a prospective focus change should be determined.</source>
          <target state="translated">A direção para a qual uma alteração de foco potencial deve ser determinada.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</source>
          <target state="translated">Determina o próximo elemento que deve receber o foco em relação a esse elemento para uma direção de movimento do foco fornecido, mas não move o foco realmente.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>The next element that focus would move to if focus were actually traversed.</source>
          <target state="translated">O próximo elemento para o qual o foco se moverá se o foco for realmente percorrido.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>May return <ph id="ph1">&lt;see langword="null" /&gt;</ph> if focus cannot be moved relative to this element for the provided direction.</source>
          <target state="translated">Poderá retornar <ph id="ph1">&lt;see langword="null" /&gt;</ph> se o foco não puder ser movido em relação a esse elemento para a direção fornecida.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</ph> is the related method that actually does move focus.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</ph> é o método relacionado que, na verdade, move o foco.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>The following example implements a handler that handles several possible button inputs, each button representing a possible <ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir implementa um manipulador que lida com várias entradas de botão possíveis, cada botão representando um possível <ph id="ph1">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>The handler tracks the element with current keyboard focus, and calls <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.PredictFocus%2A&gt;</ph> on that element, and specifies the appropriate <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph> as initialization for the <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph> type parameter provided.</source>
          <target state="translated">O manipulador controla o elemento com o foco do teclado atual e chamadas <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.PredictFocus%2A&gt;</ph> no elemento e especifica as <ph id="ph2">&lt;xref:System.Windows.Input.FocusNavigationDirection&gt;</ph> como a inicialização para o <ph id="ph3">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph> fornecido de parâmetro de tipo.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>Instead of moving to that element as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</ph> would do, the handler changes the physical dimensions of the predicted focus destination for visualization purposes.</source>
          <target state="translated">Em vez de mover a esse elemento como <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MoveFocus%2A&gt;</ph> faria, o manipulador altera as dimensões físicas do destino foco previsto para fins de visualização.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>Specified one of the following directions in the <ph id="ph1">&lt;see cref="T:System.Windows.Input.TraversalRequest" /&gt;</ph>: <ph id="ph2">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.Next" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.First" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.Last" /&gt;</ph>.</source>
          <target state="translated">Especifica uma das seguintes instruções no <ph id="ph1">&lt;see cref="T:System.Windows.Input.TraversalRequest" /&gt;</ph>: <ph id="ph2">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.Next" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.First" /&gt;</ph> ou <ph id="ph5">&lt;see cref="F:System.Windows.Input.FocusNavigationDirection.Last" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
          <source>These directions are not legal for <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /&gt;</ph> (but they are legal for <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" /&gt;</ph>).</source>
          <target state="translated">Essas instruções não são válidas para <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /&gt;</ph> (mas são válidas para <ph id="ph2">&lt;see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>Name to use for the specified name-object mapping.</source>
          <target state="translated">Nome a ser usado para o mapeamento de nome-objeto especificado.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>Object for the mapping.</source>
          <target state="translated">Objeto para o mapeamento.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>Provides an accessor that simplifies access to the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> registration method.</source>
          <target state="translated">Fornece um acessador que simplifica o acesso ao método de registro <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>This method is a convenience method for calling <ph id="ph1">&lt;xref:System.Windows.NameScope.RegisterName%2A&gt;</ph>.</source>
          <target state="translated">Esse método é um método conveniente para chamar <ph id="ph1">&lt;xref:System.Windows.NameScope.RegisterName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>The implementation will check successive parent elements until it finds the applicable <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> implementation, which is found by finding an element that implements <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.</source>
          <target state="translated">A implementação verificará sucessivos elementos pais até encontrar o aplicável <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> implementação, que é encontrada por localizar um elemento que implementa <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>For more information about namescopes, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre namescopes, consulte <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</ph> is necessary in order to correctly hook up animation storyboards for applications when created in code.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RegisterName%2A&gt;</ph> é necessário para conectar corretamente storyboards de animação para aplicativos quando criado em código.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>This is because one of the key storyboard properties, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>, uses a run-time name lookup instead of being able to take a reference to a target element.</source>
          <target state="translated">Isso ocorre porque uma chave de storyboard propriedades, <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;</ph>, usa uma pesquisa de nome de tempo de execução em vez de ser capaz de levar a uma referência a um elemento de destino.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>This is true even if that element is accessible by reference from the code.</source>
          <target state="translated">Isso é verdadeiro mesmo se esse elemento é acessível por referência do código.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
          <source>For more information on why you need to register names for storyboard targets, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre por que você precisa registrar nomes para os destinos de storyboard, consulte <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>The element to remove.</source>
          <target state="translated">O elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>Removes the provided object from this element's logical tree.</source>
          <target state="translated">Remove o objeto fornecido da árvore lógica desse elemento.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> updates the affected logical tree parent pointers to keep in sync with this deletion.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> atualiza os ponteiros pai da árvore lógica afetada para mantê-los em sincronia com essa exclusão.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>Use this method for the implementation of collections on objects that represent logical children of an element.</source>
          <target state="translated">Use esse método para a implementação de coleções de objetos que representam o filho lógico de um elemento.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>This might be done in property getters or setters, class handlers of <ph id="ph1">`Changed`</ph> events, constructors, or within the collection types themselves.</source>
          <target state="translated">Isso pode ser feito em getters de propriedade ou setters, manipuladores de classe de <ph id="ph1">`Changed`</ph> eventos, construtores, ou na coleção de tipos de si mesmos.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the provided base control class' content models are appropriate.</source>
          <target state="translated">Para autores de controle, manipulando a árvore lógica esse nível não é a prática recomendada, a menos que nenhum dos modelos de conteúdo da classe base de controle fornecido é apropriado.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>Consider subclassing at the level of <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph>.</source>
          <target state="translated">Considere subclassificação no nível de <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, e <ph id="ph3">&lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>These classes provide a content model with particular enforcement of logical children through dedicated <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, as well as support for other features typically desirable in a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> control such as styling through templates.</source>
          <target state="translated">Essas classes fornecem um modelo de conteúdo com a imposição de específico de filhos lógicos por meio de dedicado <ph id="ph1">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>, bem como suporte para outros recursos normalmente desejáveis em um <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> controle como estilo por meio de modelos.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>The following example implements a <ph id="ph1">`Child`</ph> property on a custom <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that does its own visual layer implementation.</source>
          <target state="translated">O exemplo a seguir implementa um <ph id="ph1">`Child`</ph> propriedade em um personalizado <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que faz a sua própria implementação de camada visual.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>The property's setter is designed so that if the value changes, the old value is removed from the logical tree, as well as a class-specific visual collection.</source>
          <target state="translated">Setter da propriedade foi projetado para que se o valor for alterado, o valor antigo é removido da árvore lógica, bem como uma coleção visual específicas de classe.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
          <source>The values are cached, and then the new value is added to both the standard WPF framework level logical tree and the custom visual collection.</source>
          <target state="translated">Os valores são armazenados em cache e, em seguida, o novo valor é adicionado ao padrão WPF framework nível árvore lógica e a coleção visual personalizada.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>Occurs when <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /&gt;</ph> is called on this element.</source>
          <target state="translated">Ocorre quando <ph id="ph1">&lt;see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /&gt;</ph> é chamado neste elemento.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>This event indicates to a parent <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> (or derived class) that the element that raises the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event should be made visible within the scrollable region.</source>
          <target state="translated">Esse evento indica a um pai <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> (ou classe derivada) que o elemento que gera o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> evento deve ficar visível dentro da região rolável.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> will then mark the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event as handled, by using class handling of the event.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Controls.ScrollViewer&gt;</ph> , em seguida, marcará o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> evento tratados usando a manipulação de classe de evento.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>In general <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event data should not be marked handled by any class that does control a scrolling region, or by any instance handler, because doing so would interfere with the intended goal of the element that called <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph>.</source>
          <target state="translated">Em geral <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> evento dados não devem ser marcados como tratados por qualquer classe que controlam uma região de rolagem ou por qualquer instância manipulador, porque isso poderia interferir com o objetivo do elemento chamado <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>Bubbling</source>
          <target state="translated">Bolha</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.RequestBringIntoView">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Gets or sets the locally-defined resource dictionary.</source>
          <target state="translated">Obtém ou define o dicionário de recursos definido localmente.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>The current locally-defined dictionary of resources, where each resource can be accessed by key.</source>
          <target state="translated">O dicionário atual de recursos definido localmente, em que cada recurso pode ser acessado por chave.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Resource dictionaries that can be defined completely or partially in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> are typically created as a property element, and are typically on the root element for any individual page or for the application.</source>
          <target state="translated">Dicionários de recursos que podem ser definidos completamente ou parcialmente em <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> normalmente são criadas como um elemento de propriedade e são normalmente no elemento raiz de qualquer página individual ou para o aplicativo.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</source>
          <target state="translated">Colocar o dicionário de recurso com esse nível torna mais fácil a localização de elementos filho individual na página (ou de qualquer página, no caso de aplicativo).</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</source>
          <target state="translated">Na maioria dos cenários de aplicativo, é recomendável que os estilos seja definida como elementos de objeto dentro de um dicionário de recursos, ou ser definido como recursos externos para que o recurso de estilo inteiro pode ser independente (essa abordagem ajuda a separar designers responsabilidades de responsabilidades do desenvolvedor, separando arquivos físicos que precisam ser editadas).</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Note that this property returns only the resource dictionary declared directly within that element.</source>
          <target state="translated">Observe que essa propriedade retorna o dicionário de recurso declarado diretamente dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</source>
          <target state="translated">Isso é diferente do processo de pesquisa de recurso real, em que um elemento filho pode acessar qualquer um dos recursos definidos em cada elemento pai, pesquisa recursivamente para cima.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Resources can also be referenced by code from within the collection, but be aware that resources created in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> will definitely not be accessible until after <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> is raised by the element that declares the dictionary.</source>
          <target state="translated">Recursos também podem ser referenciados pelo código de dentro da coleção, mas lembre-se de que os recursos criados em <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> definitivamente não estará acessível até depois <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> é gerado pelo elemento que declara o dicionário.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>In fact, resources are parsed asynchronously and not even the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event is an assurance that you can reference a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> defined resource.</source>
          <target state="translated">Na verdade, os recursos são analisados e de forma assíncrona não até mesmo o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> evento é uma garantia de que você pode fazer referência a um <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> definido pelo recurso.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>For this reason you should generally only access <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> defined resources as part of run-time code, or through other <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> techniques such as styles or resource extension references for attribute values.</source>
          <target state="translated">Por esse motivo geralmente só deve acessar <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> definido recursos como parte do código de tempo de execução ou por meio de outros <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> técnicas, como estilos ou referências de extensão de recurso para valores de atributo.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>When you access resources through code, it is essentially equivalent to a  reference made from <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Ao acessar recursos através do código, é essencialmente equivalente a uma referência feita no <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>The underlying <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> supports the methods required to add, remove or query resources from within the collection by using code.</source>
          <target state="translated">Subjacente <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> suporta os métodos necessários para adicionar, remover ou consultar recursos de dentro da coleção por meio de código.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph> propriedade é configurável para dar suporte ao cenário de substituir completamente a coleção de recursos de um elemento para ser um novo ou diferente <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Notice that the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax shown does not include an element for the <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">Observe que o <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sintaxe mostrada não incluir um elemento para o <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</source>
          <target state="translated">Este é um exemplo da sintaxe de coleção implícita; uma marca que representa o elemento de coleção pode ser omitida.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>The elements that are added as items to the collection are specified instead.</source>
          <target state="translated">Os elementos que são adicionados como itens na coleção são especificados em vez disso.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>For more information about implicit collections and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, see <bpt id="p1">[</bpt>XAML Syntax In Detail<ept id="p1">](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre coleções implícita e <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, consulte <bpt id="p1">[</bpt>XAML sintaxe em detalhes<ept id="p1">](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>One case where a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">Um caso em que um <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> ainda estão especificadas explicitamente como um elemento é se você está implantando um dicionário mesclado, caso em que normalmente não há nenhum elemento filho para que <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>For details, see <bpt id="p1">[</bpt>Merged Resource Dictionaries<ept id="p1">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>dicionários de recursos mesclados<ept id="p1">](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source><bpt id="p1">*</bpt>oneOrMoreResourceElements<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreResourceElements<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>One or more object elements, each of which defines a resource.</source>
          <target state="translated">Um ou mais elementos de objeto, cada uma delas define um recurso.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Resources">
          <source>Each resource property element within each <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> must have a unique value for the <bpt id="p1">[</bpt>x:Key Directive<ept id="p1">](~/docs/framework/xaml-services/x-key-directive.md)</ept>, which serves as the unique key when values are retrieved from the <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">Cada elemento de propriedade de recurso dentro de cada <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> deve ter um valor exclusivo para o <bpt id="p1">[</bpt>diretiva X:Key<ept id="p1">](~/docs/framework/xaml-services/x-key-directive.md)</ept>, que serve como a chave exclusiva quando os valores são recuperados do <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="T:System.Windows.FrameworkElement">
          <source>Attaches a binding to this element for the specified dependency property.</source>
          <target state="translated">Anexa uma associação a esse elemento para a propriedade de dependência especificada.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>Identifies the destination property where the binding should be established.</source>
          <target state="translated">Identifica a propriedade de destino em que a associação deve ser estabelecida.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>The source property name or the path to the property used for the binding.</source>
          <target state="translated">O nome da propriedade de origem ou o caminho para a propriedade usada para a associação.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</source>
          <target state="translated">Anexa uma associação a esse elemento, com base no nome da propriedade de origem fornecida, como uma qualificação de caminho para a fonte de dados.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>Records the conditions of the binding.</source>
          <target state="translated">Registra as condições da associação.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>This return value can be useful for error checking.</source>
          <target state="translated">Esse valor retornado pode ser útil para a verificação de erros.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>This method is a convenience method for calling <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType&gt;</ph>, which passes the current instance as the <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>, and creates a new <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> based on the provided <ph id="ph4">`path`</ph> parameter.</source>
          <target state="translated">Esse método é um método conveniente para chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType&gt;</ph>, que passa a instância atual como o <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>e cria um novo <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> com base em fornecidos <ph id="ph4">`path`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>This signature is more convenient if you are establishing a simple default binding.</source>
          <target state="translated">Esta assinatura é mais conveniente se você estiver estabelecendo uma associação simples padrão.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>If you need to specify any binding properties to non-default conditions, or want to use a <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>,you should use the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt;</ph> signature.</source>
          <target state="translated">Se você precisa especificar as propriedades de associação para condições não padrão ou se desejar usar um <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> ou <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, você deve usar o <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29&gt;</ph> assinatura.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
          <source>The following example sets a binding using a specific path.</source>
          <target state="translated">O exemplo a seguir define uma associação usando um caminho específico.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Identifies the property where the binding should be established.</source>
          <target state="translated">Identifica a propriedade em que a associação deve ser estabelecida.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Represents the specifics of the data binding.</source>
          <target state="translated">Representa as especificações da vinculação de dados.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Attaches a binding to this element, based on the provided binding object.</source>
          <target state="translated">Anexa uma associação a esse elemento, com base no objeto de associação fornecido.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>Records the conditions of the binding.</source>
          <target state="translated">Registra as condições da associação.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This return value can be useful for error checking.</source>
          <target state="translated">Esse valor retornado pode ser útil para a verificação de erros.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
          <source>This method is a convenience method for calling <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType&gt;</ph>, which passes the current instance as the <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">Esse método é um método conveniente para chamar <ph id="ph1">&lt;xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType&gt;</ph>, que passa a instância atual como o <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
          <source>The element that specifies a flow direction.</source>
          <target state="translated">O elemento que especifica uma direção de fluxo.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
          <source>A value of the enumeration, specifying the direction.</source>
          <target state="translated">Um valor da enumeração, especificando a direção.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph> attached property for the provided element.</source>
          <target state="translated">Define o valor da propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.FlowDirection" /&gt;</ph> para o elemento fornecido.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
          <source>This method supports attached property syntax for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> property, therefore allowing child elements of a provided <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> to specify flow direction for the arrangement within their parent element.</source>
          <target state="translated">Este método dá suporte a sintaxe da propriedade anexada para o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph> propriedade, portanto, permitindo que o filho elementos de um fornecido <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> para especificar a direção de fluxo para a organização em seu elemento pai.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
          <source>To set the value on the current <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, use the direct <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> accessor <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph>.</source>
          <target state="translated">Para definir o valor no atual <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, use o direct <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> acessador <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <source>The property to which the resource is bound.</source>
          <target state="translated">A propriedade à qual o recurso está associado.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">O nome do recurso.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <source>Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</source>
          <target state="translated">Pesquisa por um recurso com o nome especificado e define uma referência de recurso a ele para a propriedade especificada.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <source>A resource reference is similar to the use of a <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept> in markup.</source>
          <target state="translated">Uma referência de recurso é semelhante ao uso de um <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept> na marcação.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <source>The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</source>
          <target state="translated">A referência de recurso cria uma expressão interna que fornece o valor da propriedade especificada em uma base de tempo de execução adiada.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
          <source>The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</source>
          <target state="translated">A expressão será avaliada novamente sempre que o dicionário de recurso indica um valor alterado por meio de eventos internos ou sempre que o elemento atual é alterado o nível superior (uma alteração de pai alteraria o caminho de pesquisa de dicionário).</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <source>Returns whether serialization processes should serialize the contents of the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Resources" /&gt;</ph> property.</source>
          <target state="translated">Indica se os processos de serialização devem serializar o conteúdo da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Resources" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Resources" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Resources" /&gt;</ph> precisar ser serializado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ShouldSerializeResources">
          <source>This will return <ph id="ph1">`true`</ph> as long as there is at least one keyed resource in the local <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph>.</source>
          <target state="translated">Isso retornará <ph id="ph1">`true`</ph> enquanto houver pelo menos um recurso com chave local <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <source>Returns whether serialization processes should serialize the contents of the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Style" /&gt;</ph> property.</source>
          <target state="translated">Indica se os processos de serialização devem serializar o conteúdo da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Style" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Style" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Style" /&gt;</ph> precisar ser serializado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
          <source>This will return <ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref:System.Windows.Style&gt;</ph> is locally set.</source>
          <target state="translated">Isso retornará <ph id="ph1">`true`</ph> se o <ph id="ph2">&lt;xref:System.Windows.Style&gt;</ph> é definido localmente.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <source>Returns whether serialization processes should serialize the contents of the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Triggers" /&gt;</ph> property.</source>
          <target state="translated">Indica se os processos de serialização devem serializar o conteúdo da propriedade <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Triggers" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Triggers" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o valor da propriedade <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.Triggers" /&gt;</ph> precisar ser serializado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
          <source>This method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt;</ph> property is locally set.</source>
          <target state="translated">Este método retorna <ph id="ph1">`true`</ph> se o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt;</ph> localmente está definida.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Occurs when either the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ActualHeight" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.ActualWidth" /&gt;</ph> properties change value on this element.</source>
          <target state="translated">Ocorre quando as propriedades <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ActualHeight" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkElement.ActualWidth" /&gt;</ph> alteram o valor deste elemento.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">Os eventos roteados diretos não seguem uma rota, somente são tratados dentro do mesmo elemento no qual eles são gerados.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.</source>
          <target state="translated">Eventos roteados diretos suportam outro comportamento eventos roteados: eles dão suporte a uma coleção de manipuladores acessível e pode ser usados como um <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>The layout system reads properties within the <ph id="ph1">&lt;xref:System.Windows.SizeChangedEventArgs&gt;</ph> argument class of this event, to  determine whether the reported size changes should be considered significant.</source>
          <target state="translated">O sistema de layout lê propriedades dentro de <ph id="ph1">&lt;xref:System.Windows.SizeChangedEventArgs&gt;</ph> classe de argumento desse evento, para determinar se as alterações de tamanho relatado devem ser consideradas significativas.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>This allows the layout system or your control-specific layout implementations to avoid forcing a layout change due to visually imperceptible differences between old and new height or width values.</source>
          <target state="translated">Isso permite que o sistema de layout ou de suas implementações de layout de controle específicos para evitar a imposição de uma alteração de layout devido a diferenças visualmente imperceptível entre valores de largura ou altura antiga e nova.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>The imperceptible differences might be due to rounding or same-result calculations of a floating-point data types.</source>
          <target state="translated">As diferenças imperceptível podem ser devido a cálculos de arredondamento ou mesmo resultado um ponto flutuante de tipos de dados.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Direct</source>
          <target state="translated">Direto</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SizeChanged">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.SizeChangedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.SizeChanged" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.SizeChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.SizeChangedEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.SizeChangedEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.SizeChangedEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.SizeChangedEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.SizeChangedEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.SourceUpdated">
          <source>Occurs when the source value changes for any existing property binding on this element.</source>
          <target state="translated">Ocorre quando o valor de origem é alterado em uma associação de propriedade existente nesse elemento.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SourceUpdated">
          <source>This event creates an alias for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;</ph> event that is raised by any <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> associated with this element.</source>
          <target state="translated">Esse evento cria um alias para o <ph id="ph1">&lt;xref:System.Windows.Data.Binding.SourceUpdated&gt;</ph> evento que é gerado por qualquer <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> associado a este elemento.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.SourceUpdated">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Style">
          <source>Gets or sets the style used by this element when it is rendered.</source>
          <target state="translated">Obtém ou define o estilo usado por este elemento quando ele é renderizado.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>The applied, nondefault style for the element, if present.</source>
          <target state="translated">O estilo não padrão aplicado a esse elemento, se houver.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>The default for a default-constructed <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O padrão para um <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> construído por padrão é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>For controls, the current style is often provided by a default style from control theming, or from styles generally applied to controls of that type by resources at page or application level (an implicit style).</source>
          <target state="translated">Para controles, o estilo atual normalmente é fornecido por um estilo de padrão de temas de controle, ou de estilos geralmente aplicado aos controles desse tipo por recursos no nível do aplicativo ou página (um estilo implícito).</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>This property does not set or return default (theme) styles, but it does return either an implicit style or an explicit style that is acting on the element.</source>
          <target state="translated">Essa propriedade não padrão não definido ou retorno estilos (tema), mas ela retorna um estilo implícito ou um estilo explícito que está atuando no elemento.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>In the case of implicit or explicit styles, it does not matter whether the style is specified as a resource or defined locally.</source>
          <target state="translated">No caso de estilos implícitos ou explícitos, não importa se o estilo é especificado como um recurso ou definido localmente.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Setting the styles has some restrictions.</source>
          <target state="translated">Definir os estilos tem algumas restrições.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>You can reset the entire <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property to a new <ph id="ph2">&lt;xref:System.Windows.Style&gt;</ph> at any time, which will force a layout recomposition.</source>
          <target state="translated">Você pode redefinir todo o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> propriedade para um novo <ph id="ph2">&lt;xref:System.Windows.Style&gt;</ph> a qualquer momento, forçando uma recomposition de layout.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>However, as soon as that style is placed in use by a loaded element, the <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> should be considered sealed.</source>
          <target state="translated">No entanto, assim que esse estilo é colocado em uso por um elemento carregado, o <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> devem ser consideradas lacrado.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <ph id="ph1">&lt;xref:System.Windows.Style.Setters%2A&gt;</ph>) causes an exception to be thrown.</source>
          <target state="translated">Tentativa de alterar qualquer propriedade individual de um estilo em uso (como qualquer coisa dentro da coleção de <ph id="ph1">&lt;xref:System.Windows.Style.Setters%2A&gt;</ph>) faz com que uma exceção seja lançada.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</source>
          <target state="translated">Um estilo que é definido na marcação é considerado para estar em uso assim que ele é carregado de um dicionário de recurso (para recursos), ou a página que está contida na for carregada (para estilos embutidos).</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> is a dependency property with special precedence.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> é uma propriedade de dependência com precedência especial.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>The locally set style generally operates at the highest precedence in the property system.</source>
          <target state="translated">Definido localmente estilo geralmente opera na precedência mais alta no sistema de propriedade.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> is null at this point, during loading the property system checks for implicit styles in local or application resources that specify that type.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> é nulo neste momento, durante o carregamento, o sistema de propriedade verifica estilos implícitos em recursos locais ou aplicativos que especificam o tipo.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>If the style is still null after this step, then the acting style for presentation purposes generally comes from the default (theme) style, but the default style is not returned in the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property value.</source>
          <target state="translated">Se o estilo for null ainda após essa etapa, o estilo de ação para fins de apresentação geralmente vêm de estilo padrão (tema), mas o estilo padrão não é retornado no <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>See <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept> or <bpt id="p2">[</bpt>Styling and Templating<ept id="p2">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>precedência de valor de propriedade de dependência<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept> ou <bpt id="p2">[</bpt>estilos e modelagem<ept id="p2">](~/docs/framework/wpf/controls/styling-and-templating.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>resourceExtension<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>One of the following: , or .</source>
          <target state="translated">Um dos seguintes:, ou.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>See <bpt id="p1">[</bpt>XAML Resources<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>recursos XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-resources.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>styleResourceKey<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>The key that identifies the style being requested.</source>
          <target state="translated">A chave que identifica o estilo que está sendo solicitado.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>The key refers to an existing resource in a <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</source>
          <target state="translated">A chave refere-se a um recurso existente em um <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Property element syntax is technically possible, but not recommended for most style scenarios.</source>
          <target state="translated">Sintaxe de elemento de propriedade é tecnicamente possível, mas não recomendado na maioria dos cenários de estilo.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>See <bpt id="p1">[</bpt>Inline Styles and Templates<ept id="p1">](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>modelos e estilos in-line<ept id="p1">](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>A binding reference using  or <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> is also possible, but uncommon.</source>
          <target state="translated">Uma referência de associação usando ou <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> também é possível, mas não é comum.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Style">
          <source>The following example defines a style in a resource dictionary.</source>
          <target state="translated">O exemplo a seguir define um estilo em um dicionário de recursos.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.StyleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Style" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Style" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>The name of the requested ambient property.</source>
          <target state="translated">O nome da propriedade de ambiente solicitada.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>For a description of this member, see the <ph id="ph1">&lt;see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Para obter uma descrição desse membro, consulte o método <ph id="ph1">&lt;see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="propertyName" /&gt;</ph> is available; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="propertyName" /&gt;</ph> estiver disponível; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Markup.IQueryAmbient&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Windows.Markup.IQueryAmbient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Tag">
          <source>Gets or sets an arbitrary object value that can be used to store custom information about this element.</source>
          <target state="translated">Obtém ou define um valor arbitrário de objeto que pode ser usado para armazenar informações personalizadas sobre este elemento.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>The intended value.</source>
          <target state="translated">O valor desejado.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>This property has no default value.</source>
          <target state="translated">Esta propriedade não tem valor padrão.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>This property is analogous to Tag properties in other Microsoft programming models, such as Visual Basic for Applications or Windows Forms.</source>
          <target state="translated">Esta propriedade equivale a propriedades da marca em outros modelos de programação Microsoft, como o Visual Basic para aplicativos ou formulários do Windows.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Tag%2A&gt;</ph> is intended to provide a pre-existing property location where you can store some basic custom information about any <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> without requiring you to subclass an element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Tag%2A&gt;</ph> visa fornecer um local de propriedade pré-existente, onde você pode armazenar alguns básicas informações personalizadas sobre qualquer <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> sem a necessidade de subclasse de um elemento.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>Because this property takes an object, you need to use the property element usage in order to set the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Tag%2A&gt;</ph> property in XAML to anything other than an object with a known and built-in type converter, such as a string.</source>
          <target state="translated">Como essa propriedade tem um objeto, você precisa usar o uso do elemento de propriedade para definir o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Tag%2A&gt;</ph> propriedade em XAML para algo diferente de um objeto com um conversor de tipo conhecido e internos, como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>Objects used in this manner are typically not within the standard WPF namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as XAML elements.</source>
          <target state="translated">Objetos usados dessa maneira normalmente não estão nos namespaces padrão do WPF e, portanto, podem exigir o mapeamento de namespace para o namespace externo para ser apresentado como elementos XAML.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>For details, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept> and <bpt id="p2">[</bpt>XAML and Custom Classes for WPF<ept id="p2">](~/docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>Namespaces XAML e o mapeamento de Namespace para WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept> e <bpt id="p2">[</bpt>XAML e Classes personalizadas para WPF<ept id="p2">](~/docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Tag">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.TagProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Tag" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Tag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.TargetUpdated">
          <source>Occurs when the target value changes for any property binding on this element.</source>
          <target state="translated">Ocorre quando o valor de destino é alterado em uma associação de propriedade nesse elemento.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.TargetUpdated">
          <source>This event creates an alias for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;</ph> event that is raised by any <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> associated with this element.</source>
          <target state="translated">Esse evento cria um alias para o <ph id="ph1">&lt;xref:System.Windows.Data.Binding.TargetUpdated&gt;</ph> evento que é gerado por qualquer <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> associado a este elemento.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.TargetUpdated">
          <source>This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms that the previous property value is now invalid according to any validation or caching scheme that the property or the data source support.</source>
          <target state="translated">Geralmente, isso significa que a associação em questão é uma associação bidirecional, e que a propriedade de dependência associado confirmará que o valor da propriedade anterior agora é inválido de acordo com qualquer validação ou esquema de cache que dão suporte a propriedade ou a fonte de dados.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.TargetUpdated">
          <source>Use the event data of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TargetUpdated&gt;</ph> event to determine the specific property that is reporting the target value update.</source>
          <target state="translated">Use os dados do evento de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TargetUpdated&gt;</ph> evento para determinar a propriedade específica que está relatando a atualização do valor de destino.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.TargetUpdated">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>Gets a reference to the template parent of this element.</source>
          <target state="translated">Obtém uma referência ao pai do modelo desse elemento.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>This property is not relevant if the element was not created through a template.</source>
          <target state="translated">Essa propriedade não é relevante se o elemento não foi criado por meio de um modelo.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>The element whose <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkTemplate" /&gt;</ph><ph id="ph2">&lt;see cref="P:System.Windows.FrameworkTemplate.VisualTree" /&gt;</ph> caused this element to be created.</source>
          <target state="translated">O elemento cujo <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkTemplate" /&gt;</ph> <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkTemplate.VisualTree" /&gt;</ph> causou esse elemento a ser criado.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>This value is frequently <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Esse valor é frequentemente <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph> is frequently <ph id="ph2">`null`</ph> for objects that are created in your application markup or code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph> é frequentemente <ph id="ph2">`null`</ph> para objetos que são criados na sua marcação de aplicativo ou código.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>This is because you create those objects directly, not via a template.</source>
          <target state="translated">Isso ocorre porque você cria esses objetos diretamente, não por meio de um modelo.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>Object references obtained by walking the logical tree from the root, or by typical name references, do not come from a template.</source>
          <target state="translated">Obtido percorrendo a árvore lógica da raiz, ou por referências de nome típico de referências de objeto, não vêm de um modelo.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>Cases where <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph> might not be <ph id="ph2">`null`</ph> include operations such as hit-testing, event handling for certain low-level input events, walking the visual tree with <ph id="ph3">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph>, or working with enumerators, which might return elements that came from templates.</source>
          <target state="translated">Casos onde <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph> pode não ser <ph id="ph2">`null`</ph> incluem operações como teste de clique, a manipulação de eventos para certos eventos de entrada baixo nível, percorra a árvore visual com <ph id="ph3">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph>, ou trabalhar com enumeradores, que podem retornar os elementos que veio de modelos.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>Another case is if you specifically call <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A&gt;</ph> against an existing <ph id="ph2">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> and are work with the returned object.</source>
          <target state="translated">Outra situação é se você chamar especificamente <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate.FindName%2A&gt;</ph> em relação a um existente <ph id="ph2">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> e trabalhar com o objeto retornado.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>Templates are actually shared objects, where the contents of the template are created only once.</source>
          <target state="translated">Modelos são objetos compartilhados na verdade, onde o conteúdo do modelo é criado apenas uma vez.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</source>
          <target state="translated">Portanto, se você obtiver uma referência de objeto para um elemento que veio de um modelo, você pode achar que a árvore lógica aparente não acessar a raiz da página.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.TemplatedParent">
          <source>In order to connect such a template reference to the page's logical tree, you should get the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph> value and continue to navigate that element tree as desired.</source>
          <target state="translated">Para conectar-se uma referência de modelo de árvore lógica da página, você deve obter o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TemplatedParent%2A&gt;</ph> valor e continuar a navegar árvore elemento conforme desejado.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>Gets or sets the tool-tip object that is displayed for this element in the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Obtém ou define o objeto de dica de ferramenta exibido para este elemento na <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>The tooltip object.</source>
          <target state="translated">O objeto de dica de ferramenta.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>If the value of this property is of type <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>, then that value is the tool-tip that will be used in the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</source>
          <target state="translated">Se o valor dessa propriedade é do tipo <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>, em seguida, esse valor é a dica de ferramenta que será usada no <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>If the value is of any other type, then that value will be used as the <bpt id="p1">*</bpt>content<ept id="p1">*</ept> for a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> provided (constructed) by the system.</source>
          <target state="translated">Se o valor for de qualquer outro tipo, esse valor será usado como o <bpt id="p1">*</bpt>conteúdo<ept id="p1">*</ept> para um <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> fornecido (construído) pelo sistema.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTipService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>The service class provides attached properties that can be used to further customize a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.</source>
          <target state="translated">A classe de serviço fornece as propriedades anexadas que podem ser usadas para personalizar um <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source><bpt id="p1">*</bpt>toolTipContent<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>toolTipContent<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>A string that becomes the display text for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph>.</source>
          <target state="translated">Uma cadeia de caracteres que se torna o texto exibido para o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source><bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>Some object, provided in object element form, that should be used as the content for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> .</source>
          <target state="translated">Um objeto, fornecido na forma de elemento de objeto, que deve ser usada como o conteúdo para o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>Typically this would be a <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or some other element that creates layout compositing for the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph>, eventually containing text content within the compositing.</source>
          <target state="translated">Geralmente isso seria uma <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> ou algum outro elemento que cria a composição de layout para o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph>, eventualmente com o conteúdo de texto dentro da composição.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>In this usage, the <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> element is created implicitly from the parsed <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, and the <bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept> content is set as its <ph id="ph3">&lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Nesse exemplo, o <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> elemento é criado implicitamente de analisada <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>e o <bpt id="p1">*</bpt>toolTipObjectContent<ept id="p1">*</ept> o conteúdo está definido como seu <ph id="ph3">&lt;xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">`ToolTip`</ph> .../&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">`ToolTip`</ph> ... / &gt;</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>None</source>
          <target state="translated">Nenhum</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.ToolTip">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> in code and then sets the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> property on a <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.StatusBar&gt;</ph> control.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> em código e, em seguida, configura o <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> propriedade em um <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.StatusBar&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Occurs just before any tooltip on the element is closed.</source>
          <target state="translated">Ocorre logo antes de qualquer dica de ferramenta no elemento seja fechada.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Marking the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipClosing&gt;</ph> event as handled does not cancel closing the tooltip.</source>
          <target state="translated">Marcar o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipClosing&gt;</ph> evento tratados não Cancelar para fechar a dica de ferramenta.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Once the tooltip is displayed, closing the tooltip is done only in response to user interaction with the UI.</source>
          <target state="translated">Depois que a dica de ferramenta é exibida, fechando a dica de ferramenta é feito apenas em resposta à interação do usuário com a interface do usuário.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>This event cannot be an <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.</source>
          <target state="translated">Esse evento não pode ser um <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</source>
          <target state="translated">Isso ocorre porque o campo de identificador desse evento reutiliza uma implementação de um serviço que não expõe métodos de adicionar ou remover de evento para o evento de nível de serviço.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Direct</source>
          <target state="translated">Direto</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipClosing">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;</ph> to implement class handling for this event in derived classes.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;</ph> para implementar a manipulação de classe para esse evento em classes derivadas.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Occurs when any tooltip on the element is opened.</source>
          <target state="translated">Ocorre quando qualquer dica de ferramenta no elemento é aberta.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>To prevent a tooltip from appearing in the UI, your handler for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipOpening&gt;</ph> can mark the <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipEventArgs&gt;</ph> event data handled.</source>
          <target state="translated">Para impedir que uma dica de ferramenta que aparece na interface do usuário, o manipulador para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipOpening&gt;</ph> pode marcar a <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTipEventArgs&gt;</ph> dados de eventos manipulados.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Otherwise, the tooltip is displayed, using the value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> property as the tooltip content.</source>
          <target state="translated">Caso contrário, a dica de ferramenta é exibida, usando o valor da <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> a propriedade como o conteúdo da dica de ferramenta.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Another possible scenario is that you could write a handler that resets the value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> property for the element that is the event source, just before the tooltip is displayed.</source>
          <target state="translated">Outro cenário possível é que você pode escrever um manipulador que redefine o valor de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> propriedade para o elemento que é a origem do evento, antes que a dica de ferramenta é exibida.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipOpening&gt;</ph> will not be raised if the value of <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> is <ph id="ph3">`null`</ph> or otherwise unset.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipOpening&gt;</ph> não será gerado se o valor de <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> é <ph id="ph3">`null`</ph> ou de outra forma não definida.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Do not deliberately set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> to <ph id="ph2">`null`</ph> while a tooltip is open or opening; this will not have the effect of closing the tooltip, and will instead create an undesirable visual artifact in the UI.</source>
          <target state="translated">Não defina deliberadamente <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTip%2A&gt;</ph> para <ph id="ph2">`null`</ph> enquanto uma dica de ferramenta está aberta ou abrindo; isso não terá o efeito de fechamento a dica de ferramenta e em vez disso, criará um artefato visual indesejável na interface de usuário.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipOpening&gt;</ph> event cannot be an <ph id="ph2">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ToolTipOpening&gt;</ph> evento não pode ser um <ph id="ph2">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</source>
          <target state="translated">Isso ocorre porque o campo de identificador desse evento reutiliza uma implementação de um serviço que não expõe métodos de adicionar ou remover de evento para o evento de nível de serviço.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Direct</source>
          <target state="translated">Direto</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.ToolTipOpening">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;</ph> to implement class handling for this event in derived classes.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.OnToolTipClosing%2A&gt;</ph> para implementar a manipulação de classe para esse evento em classes derivadas.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.ToolTipProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ToolTip" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.ToolTip" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>Gets the collection of triggers established directly on this element, or in child elements.</source>
          <target state="translated">Obtém a coleção de disparadores estabelecida diretamente nesse elemento ou em elementos filho.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>A strongly typed collection of <ph id="ph1">&lt;see cref="T:System.Windows.Trigger" /&gt;</ph> objects.</source>
          <target state="translated">Uma coleção fortemente tipada de objetos <ph id="ph1">&lt;see cref="T:System.Windows.Trigger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>This property can only be set in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> through the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</source>
          <target state="translated">Esta propriedade só pode ser definida <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> por meio de mostra a sintaxe de coleção, ou acessar o objeto de coleção e usar seus vários métodos, como adicionar.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>The property to access the collection object itself is read-only, the collection itself is read-write.</source>
          <target state="translated">A propriedade para acessar o objeto de coleção é somente leitura, a coleção em si é leitura / gravação.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>The property only exists on root elements; attempting to find it or set it elsewhere will cause an exception to be thrown.</source>
          <target state="translated">A propriedade existe somente em elementos raiz; tentando encontrá-lo ou defini-lo em outro lugar fará com que uma exceção seja lançada.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>This property does not enable you to examine triggers that exist as part of styles in use on this element.</source>
          <target state="translated">Essa propriedade permite que você examine gatilhos que existem como parte de estilos em uso neste elemento.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>It only reports the collection of triggers that are literally added to the collection, either in markup or code.</source>
          <target state="translated">O utilitário só reporta a coleção de gatilhos literalmente são adicionados à coleção, na marcação ou código.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>Elements do not typically have such elements existing by default (through a template for instance); it is more common for triggers that come from control compositing to be established in styles instead.</source>
          <target state="translated">Elementos normalmente não tem elementos existentes por padrão (por meio de um modelo para a instância); é mais comum para gatilhos que vêm de composição de controle seja estabelecida em estilos.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>In terms of behavior (and trying to establish which effect came from which element's declared <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt;</ph> collection), both the triggering condition and the trigger effect might be on this element, or might be on its child elements in the logical tree.</source>
          <target state="translated">Em termos de comportamento (e tentando estabelecer quais efeito veio de qual elemento da declarado <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Triggers%2A&gt;</ph> coleção), a condição de disparo e o efeito do gatilho pode ser neste elemento, ou pode estar em seus elementos filho na árvore lógica.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>Note that if you use lifetime events such as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> to get this collection, the child element's triggers might not yet be fully loaded, and the collection will be smaller than it would truly be at run time.</source>
          <target state="translated">Observe que, se você usar eventos de tempo de vida, como <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> para obter essa coleção, os gatilhos do elemento filho não ainda seja totalmente carregados e a coleção será menor do que seria realmente em tempo de execução.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>Note that the collection of triggers established on an element only supports <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph>, not property triggers (<ph id="ph2">&lt;xref:System.Windows.Trigger&gt;</ph>).</source>
          <target state="translated">Observe que a coleção de gatilhos estabelecida em um elemento só oferece suporte a <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph>, não os disparadores de propriedade (<ph id="ph2">&lt;xref:System.Windows.Trigger&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>If you require property triggers, you must place these within a style or template and then assign that style or template to the element either directly through the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property, or indirectly through an implicit style reference.</source>
          <target state="translated">Se você precisar de disparadores de propriedade, você deve colocá-los em um estilo ou modelo e, em seguida, atribuir esse estilo ou modelo para o elemento ou diretamente por meio de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> propriedade, ou indiretamente por meio de uma referência de estilo implícito.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>XAML Property Element Usage</source>
          <target state="translated">Uso do elemento propriedade XAML</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source><bpt id="p1">*</bpt>oneOrMoreTriggers<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreTriggers<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>One or more defined <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> elements.</source>
          <target state="translated">Um ou mais definido <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> elementos.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>Each such trigger is expected to contain valid storyboard actions and references.</source>
          <target state="translated">Cada gatilho tal deve conter referências e ações de storyboard válida.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>Note that this collection can only be established on the root element of a page.</source>
          <target state="translated">Observe que esta coleção só pode ser estabelecida no elemento raiz de uma página.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Triggers">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Visão geral de storyboards<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>The key identifier of the resource to be found.</source>
          <target state="translated">O identificador de chave do recurso a ser encontrado.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>Searches for a resource with the specified key, and returns that resource if found.</source>
          <target state="translated">Pesquisa um recurso com a chave especificada e retorna esse recurso, se encontrado.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>The found resource, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no resource with the provided <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found.</source>
          <target state="translated">O recurso encontrado ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum recurso fornecido <ph id="ph2">&lt;paramref name="key" /&gt;</ph> for encontrado.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>If the resource is not found on the calling element, the parent resource tree is searched upward through the logical tree, in the same way that the tree would be searched if a resource were requested by key at run time.</source>
          <target state="translated">Se o recurso não foi encontrado no elemento de chamada, a árvore de recursos pai é pesquisada para cima através de árvore lógica, da mesma forma que a árvore será pesquisada se um recurso foi solicitado por chave em tempo de execução.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>The method returns <ph id="ph1">`null`</ph> only if no resource of that key existed anywhere in the resource tree, per the existing conditions of the tree at the time that <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> is called.</source>
          <target state="translated">O método retorna <ph id="ph1">`null`</ph> somente se nenhum recurso de chave existe em qualquer lugar na árvore de recursos por condições existentes da árvore no momento em que <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</source>
          <target state="translated">Normalmente você imediatamente atribui o valor de retorno para o tipo da propriedade que você está tentando definido com o valor retornado do recurso.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph> method has similar behavior, except that it throws an exception if no resource with the provided key was returned.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindResource%2A&gt;</ph> método tem um comportamento semelhante, exceto que ele lança uma exceção se nenhum recurso com a chave fornecida foi retornado.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>The following example is implemented as a button handler, where the button being clicked sets its background to a resource-defined brush obtained by calling <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> on itself.</source>
          <target state="translated">O exemplo a seguir é implementado como um manipulador de botão, onde o botão sendo clicado conjuntos de seu plano de fundo para um pincel definido pelo recurso obtido chamando <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.TryFindResource%2A&gt;</ph> em si mesmo.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
          <source>This walks the element tree and finds the resource (the resource itself is defined in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and is not shown).</source>
          <target state="translated">Isso ajuda a árvore de elementos e localiza o recurso (o recurso em si é definido em <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> e não é mostrado).</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Occurs when the element is removed from within an element tree of loaded elements.</source>
          <target state="translated">Ocorre quando o elemento é removido de uma árvore de elementos carregados.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</source>
          <target state="translated">Os eventos roteados diretos não seguem uma rota, somente são tratados dentro do mesmo elemento no qual eles são gerados.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> in a style.</source>
          <target state="translated">Eventos roteados diretos suportam outro comportamento eventos roteados: eles dão suporte a uma coleção de manipuladores acessível e pode ser usados como um <ph id="ph1">&lt;xref:System.Windows.EventTrigger&gt;</ph> em um estilo.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> might both be raised on controls as a result of user-initiated system theme changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> podem ser gerados em controles como resultado das alterações de tema do sistema iniciada pelo usuário.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</source>
          <target state="translated">Uma alteração de tema faz com que um invalidação do modelo de controle e a árvore visual independente, que por sua vez faz com que todo o controle descarregar e recarregar.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Therefore <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> cannot be assumed to occur only on navigation away from the page.</source>
          <target state="translated">Portanto, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> não é considerado como ocorrem somente na navegação para fora da página.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Note that the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> event is not raised after an application begins shutting down.</source>
          <target state="translated">Observe que o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> evento não é gerado depois que um aplicativo começa o desligamento.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Application shutdown occurs when the condition defined by the <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> property occurs.</source>
          <target state="translated">Encerramento do aplicativo ocorre quando a condição definida pelo <ph id="ph1">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> propriedade ocorre.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>If you place cleanup code within a handler for the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> event, such as for a <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> or a <ph id="ph3">&lt;xref:System.Windows.Controls.UserControl&gt;</ph>, it may not be called as expected.</source>
          <target state="translated">Se você colocar o código de limpeza dentro de um manipulador para o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> evento, tal como para um <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> ou um <ph id="ph3">&lt;xref:System.Windows.Controls.UserControl&gt;</ph>, ele não pode ser chamado conforme o esperado.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Routed Event Information</source>
          <target state="translated">Informações de evento encaminhado</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Routing strategy</source>
          <target state="translated">Estratégia de roteamento</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Direct</source>
          <target state="translated">Direto</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.FrameworkElement.Unloaded">
          <source>Delegate</source>
          <target state="translated">delegado</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.UnloadedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Unloaded" /&gt;</ph> routed event.</source>
          <target state="translated">Identifica o evento roteado <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.Unloaded" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.UnloadedEvent">
          <source>Routed event identifiers are created when routed events are registered.</source>
          <target state="translated">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.UnloadedEvent">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</source>
          <target state="translated">Esses identificadores contém um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e método de utilitário para adicionar proprietários para o evento.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.UnloadedEvent">
          <source>You can use these identifiers to add class handlers.</source>
          <target state="translated">Você pode usar esses identificadores para adicionar manipuladores de classe.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.UnloadedEvent">
          <source>For more information about registering routed events, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre como registrar eventos roteados, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterRoutedEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.FrameworkElement.UnloadedEvent">
          <source>For more information about using routed event identifiers to add class handlers, see <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre o uso de identificadores de evento roteado para adicionar manipuladores de classe, consulte <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <source>Name of the name-object pair to remove from the current scope.</source>
          <target state="translated">Nome do par de nome-objeto a ser removido do escopo atual.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <source>Simplifies access to the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> de-registration method.</source>
          <target state="translated">Simplifica o acesso ao método de cancelamento de registro <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
          <source>You only need to un-register names if you intend to re-register another element with that same name.</source>
          <target state="translated">Você só precisa cancelar o registro nomes se você pretende registrar novamente o outro elemento com o mesmo nome.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
          <source>Reapplies the default style to the current <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>.</source>
          <target state="translated">Reaplica o estilo padrão para o <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>Gets or sets a value that indicates whether layout rounding should be applied to this element's size and position during layout.</source>
          <target state="translated">Obtém ou define um valor que indica se o arredondamento de layout deve ser aplicado ao tamanho e posição desse elemento durante o layout.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if layout rounding is applied; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o arredondamento de layout for aplicado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> property for an element is <ph id="ph2">`true`</ph>, all non-integral pixel values that are calculated during the <ph id="ph3">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.UIElement.Arrange%2A&gt;</ph> passes are rounded to whole pixel values.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> é de propriedade para um elemento <ph id="ph2">`true`</ph>, todos os valores de pixel integral não são calculados durante o <ph id="ph3">&lt;xref:System.Windows.UIElement.Measure%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Windows.UIElement.Arrange%2A&gt;</ph> passa é arredondadas para valores de inteiro de pixels.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>This property is inherited by child elements.</source>
          <target state="translated">Essa propriedade é herdada por elementos filho.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>You should set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> to <ph id="ph2">`true`</ph> on the root element.</source>
          <target state="translated">Você deve definir <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> para <ph id="ph2">`true`</ph> no elemento raiz.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The layout system adds child coordinates to the parent coordinates; therefore, if the parent coordinates are not on a pixel boundary, the child coordinates are also not on a pixel boundary.</source>
          <target state="translated">O sistema de layout adiciona coordenadas filho com as coordenadas pai; Portanto, se as coordenadas pai não estiverem em um limite de pixel, as coordenadas de filho também não são em um limite de pixel.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>If <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> cannot be set at the root, set <ph id="ph2">&lt;xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt;</ph> on the child to obtain the effect that you want.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> não pode ser definido na raiz, defina <ph id="ph2">&lt;xref:System.Windows.UIElement.SnapsToDevicePixels%2A&gt;</ph> no filho para obter o efeito desejado.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>Drawing objects on pixel boundaries eliminates the semi-transparent edges that are produced by anti-aliasing, when an edge falls in the middle of a device pixel.</source>
          <target state="translated">Objetos de desenho em limites de pixel elimina as bordas semitransparentes que são produzidas por suavização, quando uma borda fica no meio de um pixel de dispositivo.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The following illustration shows the output of a single pixel-width line that falls in the middle of a device pixel.</source>
          <target state="translated">A ilustração a seguir mostra a saída de uma linha de largura de pixel único que está no meio de um pixel de dispositivo.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The line on the left does not use layout rounding and is anti-aliased.</source>
          <target state="translated">A linha à esquerda não use o arredondamento de layout e é sem alias.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The line on the right uses layout rounding.</source>
          <target state="translated">A linha à direita usa arredondamento de layout.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source><bpt id="p1">![</bpt>Anti&amp;#45;aliased line compared to single pixel line.<ept id="p1">]</ept><bpt id="p2">(~/add/media/pixelsnaplinecompare.PNG "</bpt>Anti-aliased line compared to single pixel line.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Anti&amp;#45;linha de um alias em comparação comparada a linha de pixel único. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/pixelsnaplinecompare.PNG "</bpt>Linha suavizada comparada à linha de pixel único.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>When you use layout rounding and <ph id="ph1">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph> sizing, the layout system creates small variations in the column or row measurements to avoid subpixel rendering.</source>
          <target state="translated">Quando você usa arredondamento de layout e <ph id="ph1">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph> de dimensionamento, o sistema de layout cria pequenas variações nas medidas de linha ou coluna para evitar a renderização sub-pixel.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>For example, if a grid has a total width of 100 with 3 columns each of size <ph id="ph1">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph>, instead of creating three columns that have an equal width of 33.3, the layout system creates 2 columns that have a width of 33 and one that has a width of 34.</source>
          <target state="translated">Por exemplo, se uma grade tem uma largura total de 100 com 3 colunas de tamanho <ph id="ph1">&lt;xref:System.Windows.GridUnitType.Star&gt;</ph>, em vez de criar três colunas que têm uma largura igual de 33,3, o sistema de layout cria 2 colunas que têm uma largura de 33 e um que tenha uma largura de 34.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>In .NET 4.6 changes were made to layout rounding to reduce instances of clipping in controls with borders.</source>
          <target state="translated">Foram feitas alterações ao layout de arredondamento para reduzir as instâncias de recorte em controles de bordas em .NET 4.6.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>By default, this feature is enabled if your Target Framework is .NET Framework 4.6 or higher.</source>
          <target state="translated">Por padrão, esse recurso é habilitado se a estrutura de destino é .NET Framework 4.6 ou posterior.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>Applications that target earlier versions of the framework can opt in into the new behavior by adding the following setting to an app.config file: <ph id="ph1">`&lt;runtime&gt;&lt;AppContextSwitchOverrides value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/&gt;&lt;/runtime&gt;`</ph> The setting only takes effect when the application is running on the .NET Framework 4.6.</source>
          <target state="translated">Aplicativos que versões anteriores do framework de destino podem aceitar o novo comportamento adicionando a seguinte configuração para um arquivo App. config: <ph id="ph1">`&lt;runtime&gt;&lt;AppContextSwitchOverrides value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/&gt;&lt;/runtime&gt;`</ph> a configuração terá efeito somente quando o aplicativo está em execução no .NET Framework 4.6.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The following example demonstrates the effect that the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> property has on a single pixel-width line.</source>
          <target state="translated">O exemplo a seguir demonstra o efeito que o <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.UseLayoutRounding%2A&gt;</ph> propriedade tem em uma linha de largura de pixel único.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>The line on the left does not use layout rounding and the line on the right uses layout rounding.</source>
          <target state="translated">A linha à esquerda não use o arredondamento de layout e a linha à direita usa arredondamento de layout.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.UseLayoutRounding">
          <source>If you slowly resize the window, you can see the difference that layout rounding makes.</source>
          <target state="translated">Se você lentamente redimensionar a janela, você pode ver a diferença que arredondamento torna o layout.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</source>
          <target state="translated">Obtém ou define as características de alinhamento vertical aplicadas a este elemento quando ele é composto dentro de um elemento pai, como um painel ou controle de itens.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>A vertical alignment setting.</source>
          <target state="translated">Uma configuração de alinhamento vertical.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.VerticalAlignment.Stretch" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see cref="F:System.Windows.VerticalAlignment.Stretch" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>When <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> properties are explicitly set on an element, these measurements take layout precedent and cancel the regular effects of setting this property to <ph id="ph3">&lt;xref:System.Windows.VerticalAlignment.Stretch&gt;</ph>.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> propriedades são definidas explicitamente em um elemento, essas medidas levar precedentes de layout e cancelam os efeitos de definir esta propriedade <ph id="ph3">&lt;xref:System.Windows.VerticalAlignment.Stretch&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> is the <ph id="ph2">[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]</ph> property accessor for what is in reality a dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> é o <ph id="ph2">[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]</ph> acessador de propriedade para o que é na verdade uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly controls.</source>
          <target state="translated">Essa propriedade de dependência particular com bastante frequência tem seu valor aparente "padrão" definido em classes de elemento derivado, particularmente os controles de modo diferente.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>This generally occurs in one of two ways: the dependency property is re-registered to a particular  derived class, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</source>
          <target state="translated">Isso geralmente ocorre em uma das duas maneiras: a propriedade de dependência é registrada novamente para uma determinada classe derivada, mas com diferentes metadados para a configuração de seus padrões; ou há um estilo de padrão que está sendo aplicado que define esse valor de propriedade de dependência de maneira diferente.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>For example, the apparent "default" of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> control will be <ph id="ph3">&lt;xref:System.Windows.VerticalAlignment.Center&gt;</ph>, even though <ph id="ph4">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> inherits <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> direct from <ph id="ph6">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated">Por exemplo, o aparente "padrão" de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> para um <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> controle será <ph id="ph3">&lt;xref:System.Windows.VerticalAlignment.Center&gt;</ph>, embora <ph id="ph4">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> herda <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> direta de <ph id="ph6">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>This is because that value was reset within the default style of <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph>, within the style's control template.</source>
          <target state="translated">Isso ocorre porque esse valor foi redefinida no estilo padrão de <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph>, no modelo de controle do estilo.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> does not use <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> when composing layout, because <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> is based on absolute positioning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> Não use <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt;</ph> ao compor o layout, porque <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> baseia-se no posicionamento absoluto.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>When inherited by <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> or any derived classes, <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> redefines the default value of this property to be <ph id="ph3">&lt;xref:System.Windows.VerticalAlignment.Center&gt;</ph>.</source>
          <target state="translated">Quando herdado por <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> ou qualquer classes derivadas, <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBoxItem&gt;</ph> redefine o valor padrão dessa propriedade para ser <ph id="ph3">&lt;xref:System.Windows.VerticalAlignment.Center&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VerticalAlignment">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>Gets the number of visual child elements within this element.</source>
          <target state="translated">Obtém o número de elementos filho visuais dentro desse elemento.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>The number of visual child elements for this element.</source>
          <target state="translated">O número de elementos filho visuais para esse elemento.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementation of <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph> always returns either zero or one.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> implementação de <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph> sempre retorna zero ou um.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>Classes that maintain a visual child collection that might exceed one must override both this property and <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>.</source>
          <target state="translated">As classes que mantêm uma coleção de filhos visuais que pode exceder uma devem substituir essa propriedade e <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>This property is generally used to determine the upper bounds of the current child collection for purposes of implementing the layout overrides (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph>).</source>
          <target state="translated">Essa propriedade é geralmente usada para determinar os limites superiores da coleção filho atual para fins de implementar as substituições de layout (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>The following example shows how a custom adorner uses the values declared by a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> that it maintains for its multiple visual children and reports these values through overrides of <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir mostra como um adorner personalizado usa os valores de declarada por um <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> que mantém seus vários filhos visual e reporta esses valores por meio de substituições de <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.VisualChildrenCount%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>If your class supports more than one visual child in a child element collection, override this property to return the count of elements in that collection.</source>
          <target state="translated">Se sua classe oferece suporte a mais de um visual filho em uma coleção de elementos filho, ignorar esta propriedade para retornar a contagem de elementos na coleção.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>You must do this even if the collection object itself returns a count.</source>
          <target state="translated">Você deve fazer isso mesmo que o próprio objeto de coleção retorna uma contagem.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.VisualChildrenCount">
          <source>Element layout logic at the WPF framework level presumes that all elements will return a valid count through their <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /&gt;</ph> property.</source>
          <target state="translated">Lógica de layout do elemento no nível do framework WPF presume que todos os elementos retornará uma contagem válida por meio de seus <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="P:System.Windows.FrameworkElement.Width">
          <source>Gets or sets the width of the element.</source>
          <target state="translated">Obtém ou define a largura do elemento.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>The width of the element, in <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</source>
          <target state="translated">A largura do elemento, em <ph id="ph1">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>This value must be equal to or greater than 0.0.</source>
          <target state="translated">Este valor deve ser igual ou maior que 0,0.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">Consulte os Comentários para ver informações sobre o limite superior.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>This is one of three properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> that specify width information.</source>
          <target state="translated">Esta é uma das três propriedades em <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> que especificam as informações de largura.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>The other two are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>.</source>
          <target state="translated">As outras duas são <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>If there is a conflict between these values, the order of application for actual width determination is first <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> must be honored, then <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>, and finally if each of these are within bounds, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</source>
          <target state="translated">Se houver um conflito entre esses valores, a ordem do aplicativo para a determinação de largura real é primeiro <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.MinWidth%2A&gt;</ph> devem ser cumprido, em seguida, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.MaxWidth%2A&gt;</ph>e, finalmente, se cada um deles está dentro dos limites, <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>The return value of this property is always the same as any value that was set to it.</source>
          <target state="translated">O valor de retorno dessa propriedade é sempre igual a qualquer valor que foi definido para ele.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>In contrast, the value of the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> may vary.</source>
          <target state="translated">Em contraste, o valor de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph> podem variar.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>The layout may have rejected the suggested size for some reason.</source>
          <target state="translated">O layout pode ter o tamanho sugerido rejeitada por algum motivo.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Also, the layout system itself works asynchronously relative to the property system set of <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> and may not have processed that particular sizing property change yet.</source>
          <target state="translated">Além disso, o sistema de layout funciona de forma assíncrona em relação ao conjunto de sistema de propriedade de <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> e pode não ter processado específica dimensionamento de alteração de propriedade ainda.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>In addition to acceptable <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, this property can also be <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Além disso, para aceitável <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores, essa propriedade também pode ser <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>This is how you specify auto sizing behavior.</source>
          <target state="translated">Isso é como especificar comportamento de dimensionamento automático.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> você definir o valor para a cadeia de caracteres "Automática" (não diferencia maiusculas de minúsculas) para habilitar o comportamento de dimensionamento de auto.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Auto sizing behavior implies that the element will fill the width available to it.</source>
          <target state="translated">Comportamento de dimensionamento de auto implica que o elemento preencher a largura disponível para ele.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Note however that specific controls frequently supply default values in their default styles that will disable the auto sizing behavior unless it is specifically re-enabled.</source>
          <target state="translated">No entanto, observe que os controles específicos frequentemente fornecem valores padrão em seus estilos padrão que irá desabilitar o auto comportamento de dimensionamento, a menos que ela seja reativada especificamente.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>In addition to the validation check, there is a nondeterministic upper value bound for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> that is enforced by the layout system (this is a very large number, larger than <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph> but smaller than <ph id="ph3">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Além de verificação de validação, há um valor superior não determinístico associado para <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> que é imposta pelo sistema de layout (Este é um número muito grande, maior do que <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph> mas menor do que <ph id="ph3">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>If you exceed this bound, the element will not render, and no exception is thrown.</source>
          <target state="translated">Se você exceder esse associado, o elemento não será processada e nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Do not set <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</source>
          <target state="translated">Não defina <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> para um valor que é significativamente maior do que o tamanho máximo de qualquer exibição visual possíveis, ou você pode exceder esse limite superior não determinístico.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source><bpt id="p1">*</bpt>double<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>double<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>String representation of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value equal to or greater than 0.0.</source>
          <target state="translated">Representação de cadeia de caracteres um <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor igual ou maior que 0.0.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>See Remarks for upper bound information.</source>
          <target state="translated">Consulte os Comentários para ver informações sobre o limite superior.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>This value is interpreted as a <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> measurement.</source>
          <target state="translated">Esse valor é interpretado como um <ph id="ph1">[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]</ph> medida.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Strings need not explicitly include decimal points.</source>
          <target state="translated">Cadeias de caracteres não precisam explicitamente incluir pontos decimais.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>For instance a value of <ph id="ph1">`1`</ph> is acceptable.</source>
          <target state="translated">Por exemplo, um valor de <ph id="ph1">`1`</ph> é aceitável.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>qualifiedDouble<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>A <bpt id="p1">*</bpt>double<ept id="p1">*</ept> value as described above, followed by one of the following unit declaration strings: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>duplo<ept id="p1">*</ept> valor conforme descrito acima, seguido por um dos seguintes unidade declaração cadeias de caracteres: <ph id="ph1">`px`</ph>, <ph id="ph2">`in`</ph>, <ph id="ph3">`cm`</ph>, <ph id="ph4">`pt`</ph>.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source><ph id="ph1">`px`</ph> (default) is <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></source>
          <target state="translated"><ph id="ph1">`px`</ph> é (padrão) <ph id="ph2">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source><ph id="ph1">`in`</ph> is inches; 1in==96px</source>
          <target state="translated"><ph id="ph1">`in`</ph> polegadas; em 1 = = 96px</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source><ph id="ph1">`cm`</ph> is centimeters; 1cm==(96/2.54) px</source>
          <target state="translated"><ph id="ph1">`cm`</ph> centímetros; 1cm==(96/2.54) px</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source><ph id="ph1">`pt`</ph> is points; 1pt==(96/72) px</source>
          <target state="translated"><ph id="ph1">`pt`</ph> pontos; 1pt==(96/72) px</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Enables autosizing behavior.</source>
          <target state="translated">Habilita o comportamento de dimensionamento automático.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>See Remarks.</source>
          <target state="translated">Consulte Observações.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Dependency Property Information</source>
          <target state="translated">Informações da propriedade de dependência</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Identifier field</source>
          <target state="translated">Campo de identificador</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.FrameworkElement.Width">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Propriedades de metadados é definido como <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" uid="F:System.Windows.FrameworkElement.WidthProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Width" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.Width" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>