<Type Name="NameScope" FullName="System.Windows.NameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b6860a22e200f8b73abbbfe5adb79d149e0dba7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55398961" /></Metadata><TypeSignature Language="C#" Value="public class NameScope : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.INameScope, class System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="DocId" Value="T:System.Windows.NameScope" />
  <TypeSignature Language="VB.NET" Value="Public Class NameScope&#xA;Implements ICollection(Of KeyValuePair(Of String, Object)), IDictionary(Of String, Object), IEnumerable(Of KeyValuePair(Of String, Object)), INameScopeDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScope : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Windows::Markup::INameScopeDictionary" />
  <TypeSignature Language="F#" Value="type NameScope = class&#xA;    interface INameScopeDictionary&#xA;    interface INameScope&#xA;    interface IDictionary&lt;string, obj&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScopeDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4876a-101">Implementa suporte básico WPF para os métodos <see cref="T:System.Windows.Markup.INameScope" /> que armazenam ou recuperam os mapeamentos nome-objeto em um namescope XAML específico.</span><span class="sxs-lookup"><span data-stu-id="4876a-101">Implements base WPF support for the <see cref="T:System.Windows.Markup.INameScope" /> methods that store or retrieve name-object mappings into a particular XAML namescope.</span></span> <span data-ttu-id="4876a-102">Adiciona o suporte à propriedade anexada para simplificar a obtenção ou definição de nomes de namescopes XAML dinamicamente no nível de elemento.</span><span class="sxs-lookup"><span data-stu-id="4876a-102">Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-103">Essa classe implementa o suporte interno de namescope XAML para tratamento de WPF de XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-103">This class implements built-in XAML namescope support for WPF treatment of XAML.</span></span> <span data-ttu-id="4876a-104"><xref:System.Windows.NameScope> Ajuda na criação de namescopes XAML inicias com base na análise de XAML, como quando criando uma instância de estilos e modelos.</span><span class="sxs-lookup"><span data-stu-id="4876a-104"><xref:System.Windows.NameScope> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</span></span> <span data-ttu-id="4876a-105">Ele também dá suporte à criação de namescopes XAML por processos que ocorrem fora do normal carregamento de XAML dos elementos pela implementação do processador XAML WPF.</span><span class="sxs-lookup"><span data-stu-id="4876a-105">It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</span></span>  
  
 <span data-ttu-id="4876a-106"><xref:System.Windows.NameScope> é geralmente mais dedicada ao fornecimento de infraestrutura que para cenários de código de usuário comuns que envolvem o trabalho com um namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-106"><xref:System.Windows.NameScope> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</span></span> <span data-ttu-id="4876a-107">Na maioria dos cenários, o <xref:System.Windows.FrameworkElement.FindName%2A> métodos expostos na <xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> são métodos mais apropriados para chamar para pesquisar elementos pelo nome definido pelo XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-107">For most scenarios, the <xref:System.Windows.FrameworkElement.FindName%2A> methods exposed on <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate methods to call to search for elements by XAML-defined name.</span></span> <span data-ttu-id="4876a-108">O <xref:System.Windows.FrameworkElement.Name%2A> propriedades expostas pela <xref:System.Windows.FrameworkElement> e <xref:System.Windows.FrameworkContentElement> são propriedades mais apropriadas usar para definir o nome inicial como atributos de marcação.</span><span class="sxs-lookup"><span data-stu-id="4876a-108">The <xref:System.Windows.FrameworkElement.Name%2A> properties exposed by <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate properties to use to set the initial name as markup attributes.</span></span>  
  
 <span data-ttu-id="4876a-109">Os vários métodos de <xref:System.Windows.NameScope> são usados por outras classes que mantêm os namescopes XAML para dar suporte e elementos base <xref:System.Windows.Markup.INameScope.RegisterName%2A> e <xref:System.Windows.Markup.INameScope.FindName%2A>.</span><span class="sxs-lookup"><span data-stu-id="4876a-109">The various methods of <xref:System.Windows.NameScope> are used by base elements and other classes that maintain XAML namescopes in order to support <xref:System.Windows.Markup.INameScope.RegisterName%2A> and <xref:System.Windows.Markup.INameScope.FindName%2A>.</span></span> <span data-ttu-id="4876a-110">Você geralmente usa a API no <xref:System.Windows.NameScope> somente se você estiver substituindo ou aumentando o comportamento do elemento base para como eles processem namescopes XAML para elementos de raiz de uma página XAML e como parte dos modelos de classe (que usam um namescope XAML separado do restante das página).</span><span class="sxs-lookup"><span data-stu-id="4876a-110">You generally use the API in the <xref:System.Windows.NameScope> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</span></span>  
  
 <span data-ttu-id="4876a-111">Na [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> fornece implementações de interfaces de coleção, de modo que você pode acessar as coleções de nomes que são mantidos por um namescope XAML, incluindo a adição a ele por meio de chamadas para um <xref:System.Windows.NameScope.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4876a-111">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <xref:System.Windows.NameScope.Add%2A> method.</span></span>  
  
 <span data-ttu-id="4876a-112">Para obter mais informações sobre os conceitos de namescope XAML, consulte [Namescopes de XAML do WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="4876a-112">For more information on XAML namescope concepts, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="4876a-113">Nomes em um namescope XAML devem usar uma gramática específica que restringe as cadeias de caracteres que você pode usar para entradas de <xref:System.Windows.NameScope> API.</span><span class="sxs-lookup"><span data-stu-id="4876a-113">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="4876a-114">Ver [gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="4876a-114">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4876a-115">Inicializa uma nova instância da classe <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-115">Initializes a new instance of the <see cref="T:System.Windows.NameScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4876a-116">Adiciona um item à coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-116">Adds an item to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit" Usage="nameScope.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4876a-117">Um <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (a chave é <see cref="T:System.String" />, o valor é <see cref="T:System.Object" />) que representa o mapeamento de nome a ser adicionado ao namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-117">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />) that represents the name mapping to add to the XAML namescope.</span></span></param>
        <summary><span data-ttu-id="4876a-118">Adiciona um item à coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-118">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4876a-119">Um ou ambos os componentes de <paramref name="item" /> são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-119">Either or both components of <paramref name="item" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="nameScope.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4876a-120">A chave de cadeia de caracteres, que é o nome do mapeamento namescope XAML a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="4876a-120">The string key, which is the name of the XAML namescope mapping to add.</span></span></param>
        <param name="value"><span data-ttu-id="4876a-121">O valor do objeto, que é a referência de objeto do mapeamento de namescope XAML a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="4876a-121">The object value, which is the object reference of the XAML namescope mapping to add.</span></span></param>
        <summary><span data-ttu-id="4876a-122">Adiciona um item à coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-122">Adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-123">Esse método encapsula basicamente <xref:System.Windows.NameScope.Add%2A> para que não é necessário envolver o <xref:System.Collections.Generic.KeyValuePair%602> tipo no seu uso.</span><span class="sxs-lookup"><span data-stu-id="4876a-123">This method basically wraps <xref:System.Windows.NameScope.Add%2A> so that it is not necessary to involve the <xref:System.Collections.Generic.KeyValuePair%602> type in your usage.</span></span>  
  
 <span data-ttu-id="4876a-124">Nomes em um namescope XAML devem usar uma gramática específica que restringe as cadeias de caracteres que você pode usar para entradas de <xref:System.Windows.NameScope> API.</span><span class="sxs-lookup"><span data-stu-id="4876a-124">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="4876a-125">Ver [gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="4876a-125">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-126"><paramref name="key" /> ou <paramref name="value" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-126"><paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="nameScope.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4876a-127">Remove todos os itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-127">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="nameScope.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4876a-128">O item a ser localizado na coleção, especificado como um <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (a chave é <see cref="T:System.String" />, o valor é <see cref="T:System.Object" />).</span><span class="sxs-lookup"><span data-stu-id="4876a-128">The item to find in the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="4876a-129">Determina se a coleção contém um item especificado.</span><span class="sxs-lookup"><span data-stu-id="4876a-129">Determines whether the collection contains a specified item.</span></span></summary>
        <returns><span data-ttu-id="4876a-130"><see langword="true" /> se o <see cref="T:System.Collections.Generic.KeyValuePair`2" /> especificado identifica um mapeamento existente neste <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-130"><see langword="true" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> identifies an existing mapping in this <see cref="T:System.Windows.NameScope" /> .</span></span> <span data-ttu-id="4876a-131"><see langword="false" /> se o <see cref="T:System.Collections.Generic.KeyValuePair`2" /> especificado não existe no <see cref="T:System.Windows.NameScope" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4876a-131"><see langword="false" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-132">Geralmente você só está interessado em um nome já está definido no namescope XAML, e qual valor de referência de objeto ele é mapeado para é irrelevante.</span><span class="sxs-lookup"><span data-stu-id="4876a-132">Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</span></span> <span data-ttu-id="4876a-133">Para este cenário, você pode chamar <xref:System.Windows.NameScope.ContainsKey%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="4876a-133">For this scenario, you can call <xref:System.Windows.NameScope.ContainsKey%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4876a-134"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-134"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="nameScope.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4876a-135">A chave de cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="4876a-135">The string key to find.</span></span></param>
        <summary><span data-ttu-id="4876a-136">Retorna a informação de se um nome fornecido já existe ou não neste <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-136">Returns whether a provided name already exists in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <returns><span data-ttu-id="4876a-137"><see langword="true" /> se o <paramref name="key" /> especificado identifica um nome para um mapeamento existente neste <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-137"><see langword="true" /> if the specified <paramref name="key" /> identifies a name for an existing mapping in this <see cref="T:System.Windows.NameScope" />.</span></span> <span data-ttu-id="4876a-138"><see langword="false" /> se o <paramref name="key" /> especificado não existe no <see cref="T:System.Windows.NameScope" /> atual.</span><span class="sxs-lookup"><span data-stu-id="4876a-138"><see langword="false" /> if the specified <paramref name="key" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-139">Nomes em um namescope XAML devem usar uma gramática específica que restringe as cadeias de caracteres que você pode usar para entradas de <xref:System.Windows.NameScope> API.</span><span class="sxs-lookup"><span data-stu-id="4876a-139">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="4876a-140">Ver [gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="4876a-140">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-141"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-141"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit" Usage="nameScope.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4876a-142">A matriz unidimensional que é o destino dos elementos copiados da coleção. A matriz deve ter a indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="4876a-142">The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="4876a-143">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="4876a-143">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="4876a-144">Copia os elementos da coleção em uma matriz, começando em um índice de matriz específico.</span><span class="sxs-lookup"><span data-stu-id="4876a-144">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.NameScope.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4876a-145">Retorna o número de itens na coleção de nomes mapeados neste <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-145">Returns the number of items in the collection of mapped names in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <value><span data-ttu-id="4876a-146">Número de itens na coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-146">The number of items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj&#xA;override this.FindName : string -&gt; obj" Usage="nameScope.FindName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4876a-147">Parte do nome de um mapeamento existente para o qual recuperar a parte do objeto.</span><span class="sxs-lookup"><span data-stu-id="4876a-147">Name portion of an existing mapping to retrieve the object portion for.</span></span></param>
        <summary><span data-ttu-id="4876a-148">Retorna o objeto correspondente no namescope XAML mantido por este <see cref="T:System.Windows.NameScope" />, com base em uma cadeia de caracteres de nome fornecida.</span><span class="sxs-lookup"><span data-stu-id="4876a-148">Returns the corresponding object in the XAML namescope maintained by this <see cref="T:System.Windows.NameScope" />, based on a provided name string.</span></span></summary>
        <returns><span data-ttu-id="4876a-149">O objeto solicitado que é mapeado com <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-149">The requested object that is mapped with <paramref name="name" />.</span></span> <span data-ttu-id="4876a-150">Pode retornar <see langword="null" /> se <paramref name="name" /> foi fornecido como <see langword="null" /> ou como uma cadeia de caracteres vazia ou se nenhum objeto correspondente foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="4876a-150">Can return <see langword="null" /> if <paramref name="name" /> was provided as <see langword="null" /> or empty string, or if no matching object was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-151">Vários elementos de base (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) também expor uma `FindName` método com uma funcionalidade idêntica.</span><span class="sxs-lookup"><span data-stu-id="4876a-151">Several base elements (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) also expose a `FindName` method with identical functionality.</span></span> <span data-ttu-id="4876a-152">As versões de elemento base realizar uma pesquisa de namescope XAML dentro da árvore lógica convencional, trabalhando em direção ao elemento raiz.</span><span class="sxs-lookup"><span data-stu-id="4876a-152">The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</span></span> <span data-ttu-id="4876a-153">Uma vez determinado o namescope XAML, que namescope XAML é consultado para o nome solicitado.</span><span class="sxs-lookup"><span data-stu-id="4876a-153">Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNameScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.INameScope GetNameScope (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.INameScope GetNameScope(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::INameScope ^ GetNameScope(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNameScope : System.Windows.DependencyObject -&gt; System.Windows.Markup.INameScope" Usage="System.Windows.NameScope.GetNameScope dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="4876a-154">O objeto do qual obter o namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-154">The object to get the XAML namescope from.</span></span></param>
        <summary><span data-ttu-id="4876a-155">Fornece o acessador get da propriedade anexada <see cref="P:System.Windows.NameScope.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-155">Provides the attached property get accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="4876a-156">Um namescope XAML, como uma instância de <see cref="T:System.Windows.Markup.INameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-156">A XAML namescope, as an <see cref="T:System.Windows.Markup.INameScope" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-157">A finalidade desse método é que ambos para implementar o `get` acessador para usar <xref:System.Windows.NameScope.NameScope%2A> como uma propriedade anexada no uso do XAML e fornecer o acessador para executar a operação equivalente em código.</span><span class="sxs-lookup"><span data-stu-id="4876a-157">The purpose of this method is both to implement the `get` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-158"><paramref name="dependencyObject" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-158"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.NameScope.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4876a-159">Obtém um valor que indica se a coleção é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="4876a-159">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="4876a-160">Sempre retorna <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-160">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Windows.NameScope.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4876a-161">O nome de cadeia de caracteres para o mapeamento de nome XAML a ser obtido ou definido.</span><span class="sxs-lookup"><span data-stu-id="4876a-161">The string name for the XAML name mapping to get or set.</span></span></param>
        <summary><span data-ttu-id="4876a-162">Obtém ou define o item com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="4876a-162">Gets or sets the item with the specified key.</span></span></summary>
        <value><span data-ttu-id="4876a-163">O valor do objeto mapeado pelo nome XAML fornecido como <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-163">The value of the object mapped by the XAML name provided as <paramref name="key" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-164">O <paramref name="key" /> fornecido como <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-164"><paramref name="key" /> is provided as <see langword="null" />.</span></span>  
  
<span data-ttu-id="4876a-165">- ou -</span><span class="sxs-lookup"><span data-stu-id="4876a-165">-or-</span></span> 
 <span data-ttu-id="4876a-166"><paramref name="value" /> é fornecido como <see langword="null" /> para uma operação de definição.</span><span class="sxs-lookup"><span data-stu-id="4876a-166"><paramref name="value" /> is provided as <see langword="null" /> for a set operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;string&gt;" Usage="System.Windows.NameScope.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4876a-167">Obtém uma coleção das chaves no dicionário <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-167">Gets a collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="4876a-168">Uma coleção de chaves no <see cref="T:System.Windows.NameScope" /> dicionário.</span><span class="sxs-lookup"><span data-stu-id="4876a-168">A collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScope">
      <MemberSignature Language="C#" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="ILAsm" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.NameScope" />
      <MemberSignature Language="VB.NET" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="F#" Value="see GetNameScope, and SetNameScope" Usage="see GetNameScope, and SetNameScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4876a-169">Obtém ou define instâncias <see cref="T:System.Windows.NameScope" /> dinamicamente anexadas.</span><span class="sxs-lookup"><span data-stu-id="4876a-169">Gets or sets dynamically attached <see cref="T:System.Windows.NameScope" /> instances.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-170">Essa propriedade anexada requer o uso de propriedades anexadas em XAML ou o uso do <xref:System.Windows.NameScope.GetNameScope%2A> e <xref:System.Windows.NameScope.SetNameScope%2A> acessadores no código.</span><span class="sxs-lookup"><span data-stu-id="4876a-170">This attached property requires attached property usage in XAML, or use of the <xref:System.Windows.NameScope.GetNameScope%2A> and <xref:System.Windows.NameScope.SetNameScope%2A> accessors in code.</span></span> <span data-ttu-id="4876a-171">Definindo o namescope no XAML não é comum.</span><span class="sxs-lookup"><span data-stu-id="4876a-171">Setting the namescope in XAML is not common.</span></span> <span data-ttu-id="4876a-172">O uso da propriedade anexada é principalmente para facilitar a anexando namescopes XAML para objetos que não compartilham a herança para implementações de namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-172">The attached property usage is primarily to facilitate attaching XAML namescopes to objects that do not share inheritance for XAML namescope implementations.</span></span> <span data-ttu-id="4876a-173"><xref:System.Windows.DependencyObject> e classes derivadas dão suporte a essa herança nativamente.</span><span class="sxs-lookup"><span data-stu-id="4876a-173"><xref:System.Windows.DependencyObject> and derived classes support this inheritance natively.</span></span>  
  
<a name="dependencyPropertyInfo_NameScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4876a-174">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="4876a-174">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4876a-175">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="4876a-175">Identifier field</span></span>|<xref:System.Windows.NameScope.NameScopeProperty>|  
|<span data-ttu-id="4876a-176">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="4876a-176">Metadata properties set to `true`</span></span>|<span data-ttu-id="4876a-177">Nenhum</span><span class="sxs-lookup"><span data-stu-id="4876a-177">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="NameScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.NameScope.NameScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.NameScope.NameScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4876a-178">Identifica a propriedade <see cref="P:System.Windows.NameScope.NameScope" /> anexada.</span><span class="sxs-lookup"><span data-stu-id="4876a-178">Identifies the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit&#xA;override this.RegisterName : string * obj -&gt; unit" Usage="nameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4876a-179">O nome a ser usado para mapear o objeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="4876a-179">The name to use for mapping the given object.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="4876a-180">O objeto a ser mapeado para o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="4876a-180">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="4876a-181">Registra um novo par nome/objeto dentro do namescope XAML atual.</span><span class="sxs-lookup"><span data-stu-id="4876a-181">Registers a new name-object pair into the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-182">O <paramref name="name" /> ou <paramref name="scopedElement" /> foi fornecido como <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-182"><paramref name="name" /> or <paramref name="scopedElement" /> was provided as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4876a-183"><paramref name="name" /> foi fornecido como uma cadeia de caracteres vazia</span><span class="sxs-lookup"><span data-stu-id="4876a-183"><paramref name="name" /> was provided as empty string</span></span> 
<span data-ttu-id="4876a-184">- ou -</span><span class="sxs-lookup"><span data-stu-id="4876a-184">-or-</span></span> 
 <span data-ttu-id="4876a-185">O <paramref name="name" /> fornecido foi rejeitado pelo analisador porque ele continha caracteres inválidos para um nome XAML</span><span class="sxs-lookup"><span data-stu-id="4876a-185"><paramref name="name" /> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</span></span> 
<span data-ttu-id="4876a-186">- ou -</span><span class="sxs-lookup"><span data-stu-id="4876a-186">-or-</span></span> 
 <span data-ttu-id="4876a-187">O <paramref name="name" /> fornecido pode resultar em um registro de nome duplicado.</span><span class="sxs-lookup"><span data-stu-id="4876a-187"><paramref name="name" /> provided would result in a duplicate name registration.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4876a-188">Remove o objeto específico da coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-188">Removes the specific object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="nameScope.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4876a-189">O objeto a ser removido da coleção, especificado como um <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (a chave é <see cref="T:System.String" />, o valor é <see cref="T:System.Object" />).</span><span class="sxs-lookup"><span data-stu-id="4876a-189">The object to remove from the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="4876a-190">Remove o objeto específico da coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-190">Removes the specific object from the collection.</span></span></summary>
        <returns><span data-ttu-id="4876a-191"><see langword="true" /> se o item foi removido com êxito da coleção; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-191"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="4876a-192">Esse método também retornará <see langword="false" /> se o item não for encontrado na coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-192">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-193">Porque <xref:System.Windows.NameScope> é um dicionário que não há nenhum conceito de primeira ocorrência; qualquer dado <xref:System.Collections.Generic.KeyValuePair%602> tem a garantia exclusiva.</span><span class="sxs-lookup"><span data-stu-id="4876a-193">Because <xref:System.Windows.NameScope> is a dictionary there is no concept of first occurrence; any given <xref:System.Collections.Generic.KeyValuePair%602> is guaranteed unique.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="nameScope.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4876a-194">A chave de cadeia de caracteres, que é o nome do mapeamento namescope XAML a ser removido.</span><span class="sxs-lookup"><span data-stu-id="4876a-194">The string key, which is the name of the XAML namescope mapping to remove.</span></span></param>
        <summary><span data-ttu-id="4876a-195">Remove um mapeamento para um nome especificado da coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-195">Removes a mapping for a specified name from the collection.</span></span></summary>
        <returns><span data-ttu-id="4876a-196"><see langword="true" /> se o item foi removido com êxito da coleção; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-196"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="4876a-197">Esse método também retornará <see langword="false" /> se o item não for encontrado na coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-197">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-198">Esse método encapsula basicamente <xref:System.Windows.NameScope.UnregisterName%2A>, retornando `false` nos casos em que, caso contrário, teriam disparado exceções em <xref:System.Windows.NameScope.UnregisterName%2A>.</span><span class="sxs-lookup"><span data-stu-id="4876a-198">This method basically wraps <xref:System.Windows.NameScope.UnregisterName%2A>, returning `false` in cases that otherwise would have raised exceptions in <xref:System.Windows.NameScope.UnregisterName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameScope">
      <MemberSignature Language="C#" Value="public static void SetNameScope (System.Windows.DependencyObject dependencyObject, System.Windows.Markup.INameScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNameScope(class System.Windows.DependencyObject dependencyObject, class System.Windows.Markup.INameScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNameScope(System::Windows::DependencyObject ^ dependencyObject, System::Windows::Markup::INameScope ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNameScope : System.Windows.DependencyObject * System.Windows.Markup.INameScope -&gt; unit" Usage="System.Windows.NameScope.SetNameScope (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Markup.INameScope" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="4876a-199">O objeto cujo namescope XAML deve ser alterado.</span><span class="sxs-lookup"><span data-stu-id="4876a-199">Object to change XAML namescope for.</span></span></param>
        <param name="value"><span data-ttu-id="4876a-200">O novo namescope XAML, usando uma interface convertida.</span><span class="sxs-lookup"><span data-stu-id="4876a-200">The new XAML namescope, using an interface cast.</span></span></param>
        <summary><span data-ttu-id="4876a-201">Fornece o acessador set da propriedade anexada <see cref="P:System.Windows.NameScope.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-201">Provides the attached property set accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-202">A finalidade desse método é que ambos para atuar como o `set` acessador para usar <xref:System.Windows.NameScope.NameScope%2A> como uma propriedade anexada no uso do XAML e fornecer o acessador para executar a operação equivalente em código.</span><span class="sxs-lookup"><span data-stu-id="4876a-202">The purpose of this method is both to act as the `set` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-203"><paramref name="dependencyObject" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-203"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4876a-204">Retorna um enumerador que itera em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-204">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="4876a-205">Um enumerador que itera em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-205">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4876a-206">Retorna um enumerador que itera em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-206">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="4876a-207">Um enumerador que itera em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="4876a-207">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string *  -&gt; bool&#xA;override this.TryGetValue : string *  -&gt; bool" Usage="nameScope.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4876a-208">A chave do valor a ser obtido.</span><span class="sxs-lookup"><span data-stu-id="4876a-208">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="4876a-209">Quando esse método retorna, ele contém o valor associado à chave especificada, caso a chave seja encontrada; caso contrário, um objeto nulo.</span><span class="sxs-lookup"><span data-stu-id="4876a-209">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</span></span> <span data-ttu-id="4876a-210">Este parâmetro é passado não inicializado.</span><span class="sxs-lookup"><span data-stu-id="4876a-210">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4876a-211">Obtém o valor associado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="4876a-211">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="4876a-212">true se o <see cref="T:System.Windows.NameScope" /> contém um mapeamento para o nome fornecido como <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-212">true if the <see cref="T:System.Windows.NameScope" /> contains a mapping for the name provided as <paramref name="key" />.</span></span> <span data-ttu-id="4876a-213">Do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="4876a-213">Otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit&#xA;override this.UnregisterName : string -&gt; unit" Usage="nameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4876a-214">O nome do mapeamento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="4876a-214">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="4876a-215">Remove um mapeamento de nome-objeto do namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="4876a-215">Removes a name-object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4876a-216">Antes de chamar esse método, você pode usar <xref:System.Windows.NameScope.FindName%2A> para determinar se um mapeamento de nome-objeto específico existe.</span><span class="sxs-lookup"><span data-stu-id="4876a-216">Before calling this method, you can use <xref:System.Windows.NameScope.FindName%2A> to determine whether a specific name-object mapping exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4876a-217"><paramref name="name" /> foi fornecido como uma cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="4876a-217"><paramref name="name" /> was provided as empty string.</span></span>  
  
<span data-ttu-id="4876a-218">- ou -</span><span class="sxs-lookup"><span data-stu-id="4876a-218">-or-</span></span> 
 <span data-ttu-id="4876a-219">O <paramref name="name" /> fornecido não tinha sido registrado.</span><span class="sxs-lookup"><span data-stu-id="4876a-219"><paramref name="name" /> provided had not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4876a-220"><paramref name="name" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-220"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;obj&gt;" Usage="System.Windows.NameScope.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4876a-221">Obtém uma coleção dos valores no dicionário <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="4876a-221">Gets a collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="4876a-222">Uma coleção dos valores a <see cref="T:System.Windows.NameScope" /> dicionário.</span><span class="sxs-lookup"><span data-stu-id="4876a-222">A collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>