<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8557652b4b165aa49213450463eba1ffb0a2f7de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679790" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementa uma estrutura de dados para descrever uma propriedade como um caminho abaixo de outra propriedade ou abaixo de um tipo proprietário. Caminhos de propriedade são usados na vinculação de dados a objetos e em cronogramas e storyboards para animações.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe contém uma cadeia de caracteres <xref:System.Windows.PropertyPath.Path%2A>e a lista de propriedades de dependência são o <xref:System.Windows.PropertyPath.PathParameters%2A> na cadeia de caracteres <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath> dá suporte a dois modos de comportamento:  
  
 **O modo de origem** descreve um caminho para uma propriedade que é usada como uma fonte para alguma outra operação. Esse modo é usado pelo <xref:System.Windows.Data.Binding> classe para dar suporte a associação de dados.  
  
 **Modo de destino** descreve um caminho para uma propriedade que será definido como uma propriedade de destino. Esse modo é usado por animação para oferecer suporte a setters de storyboard e linha do tempo.  
  
 Por exemplo, `Background.Opacity` é um caminho de duas etapas. Esse caminho implica: primeiro, encontre o `Background` o objeto de valor de obter a propriedade de um objeto que o `Background` propriedade é definida como e, em seguida, obter o valor da `Opacity` propriedade no objeto.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Uso do Atributo XAML  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *propertyPath*  
 Uma cadeia de caracteres que é avaliada como um caminho de propriedade simples ou complexos. A sintaxe para a configuração de um <xref:System.Windows.PropertyPath> na [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] é versátil mas complexa e é descrito no tópico separado [sintaxe XAML de PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyPath" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Um caminho de propriedade que o descreve um caminho para uma propriedade [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] ou uma propriedade de dependência única.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyPath" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor tem dois usos completamente diferentes, dependendo se ele está sendo usado para o caminho da propriedade modo de origem para uma associação, ou para um caminho de propriedade de apenas uma etapa de modo de destino para um destino de storyboard.  
  
 Se usar esta <xref:System.Windows.PropertyPath> no modo de origem para uma associação, `parameter` é uma cadeia de caracteres que representa um nome de propriedade, ou pode ser uma cadeia de caracteres que descreve um caminho "passo a passo" para a propriedade no [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modelo de objeto do objeto que está sendo usado como a origem para uma associação. Para um caminho de propriedade de associação, o caractere que identifica uma etapa de"" é um ponto (.). Também há suporte para referências de indexador (incluindo vários indexadores e diferenciação de tipo). Para obter mais detalhes sobre a sintaxe da cadeia de caracteres usada especificamente pelo <xref:System.Windows.Data.Binding> de objeto, consulte <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Uma propriedade usada como uma origem de associação não precisa ser uma propriedade de dependência. Se a associação bidirecional, a propriedade referenciada deve ser leitura / gravação. Observe também que o destino da associação tem uma propriedade de dependência. Para obter detalhes, consulte [visão geral de associação de dados](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Se usar esta <xref:System.Windows.PropertyPath> no modo de destino para um caminho de etapa única para um destino de storyboard, `parameter` geralmente é fornecido como tipo <xref:System.Windows.DependencyProperty>. Você também pode especificar uma cadeia de caracteres que é o <xref:System.Windows.DependencyProperty.Name%2A>. Qualquer uma delas é avaliada como o mesmo resultado, porque ele é armazenado internamente como uma cadeia de caracteres. Um fornecido <xref:System.Windows.DependencyProperty> é convertido em uma cadeia de caracteres por meio de <xref:System.Windows.Markup.DependencyPropertyConverter>. O <xref:System.Windows.Markup.DependencyPropertyConverter> oferece suporte a um formato de nome qualificado para propriedades de dependência, portanto, você pode especificar um *typeName*.* propertyName* qualificado a cadeia de caracteres do nome de propriedade de dependência para o <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> construtor no código. O caminho qualificado para o identificador de propriedade de dependência é um conceito diferente um caminho complexo. Um caminho complexo <xref:System.Windows.PropertyPath> em vez disso, deve ser criado com o <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> construtor.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Uma cadeia de caracteres que especifica o <see cref="P:System.Windows.PropertyPath.Path" />, em um formato de token.</param>
        <param name="pathParameters">Uma matriz de objetos que define o <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.PropertyPath" /> com a cadeia de caracteres de token de caminho e os parâmetros fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta assinatura geralmente é usada somente para o modo de destino <xref:System.Windows.PropertyPath> usos com caminhos complexos.  
  
 Este construtor dá suporte a `params` para o `pathParameters` argumento de construtor. Portanto, você pode especificar o conteúdo de `pathParameters` como uma série de argumentos de construtor separada por vírgulas que preenchem a matriz, em vez de precisar de uma matriz de dimensão e preencha-o com o `pathParameters` itens. Cada item que você especificar deve ser um dos seguintes tipos: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Para obter mais informações sobre os requisitos dos parâmetros, consulte <xref:System.Windows.PropertyPath.Path%2A> e <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres que descreve o caminho.</summary>
        <value>A cadeia de caracteres que descreve o caminho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A cadeia de caracteres contida nesta propriedade tem três significados completamente diferentes dependendo se um <xref:System.Windows.PropertyPath> está sendo usado para o caminho da propriedade modo de origem para uma associação, para um caminho de propriedade de apenas uma etapa de modo de destino para um destino de storyboard ou um caminho complexo para um destino de storyboard.  
  
 Se usar esta <xref:System.Windows.PropertyPath> no modo de origem para uma associação, <xref:System.Windows.PropertyPath.Path%2A> é uma cadeia de caracteres que representa um nome de propriedade, ou pode ser uma cadeia de caracteres que descreve um caminho "passo a passo" para a propriedade no [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modelo de objeto do objeto que está sendo usado como a origem para uma associação. Para um caminho de propriedade de associação, o caractere que identifica uma etapa de"" é um ponto (.). Também há suporte para referências de indexador (incluindo vários indexadores e diferenciação de tipo). Para obter mais detalhes sobre a sintaxe da cadeia de caracteres usada especificamente pelo <xref:System.Windows.Data.Binding> de objeto, consulte <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Uma propriedade usada como uma origem de associação não precisa ser uma propriedade de dependência. Se a associação bidirecional, a origem da propriedade deve ser leitura / gravação. Observe também que o destino da associação tem uma propriedade de dependência. Para obter detalhes, consulte [visão geral de associação de dados](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Se usar esta <xref:System.Windows.PropertyPath> no modo de destino para um caminho de etapa única para um destino de storyboard, <xref:System.Windows.PropertyPath> é uma cadeia de caracteres que é um *typeName*.* propertyName* qualificado sequência de nome de propriedade de dependência.  
  
 Se usar esta <xref:System.Windows.PropertyPath> para um caminho complexo para um destino de storyboard, <xref:System.Windows.PropertyPath.Path%2A> é um formato de cadeia de caracteres editáveis que descreve as relações entre os vários objetos fornecidos no <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
-   Cada item na matriz é especificado neste formato pelo índice de matriz para o item entre parênteses. Por exemplo, para especificar o primeiro item na matriz, o token de cadeia de caracteres é `(0)`.  
  
-   Relações entre itens ("etapas" no caminho) são especificadas por um ponto (.). A propriedade do ponto é a primeira etapa no caminho, a propriedade após é a segunda etapa e assim por diante (você pode especificar etapas além dos dois). A última etapa na cadeia sempre representa a propriedade sendo animada.  
  
-   Itens dentro de propriedades de coleção são acessados com uma sintaxe de indexador, com o índice dentro de colchetes ([e]). É o indexador aditivo para o token que representa a propriedade. Por exemplo, o seguinte é um caminho de duas etapas, com a combinação de token na primeira etapa Especifica o segundo item de dentro da coleção de propriedade: `(0)[1].(1)` . Você não pode usar um indexador na última propriedade da cadeia; não é possível animar a posição de coleção real, você deve animar uma propriedade no objeto.  
  
 A cadeia de caracteres de caminho para um <xref:System.Windows.PropertyPath> geralmente é estabelecido por meio de construtores: o <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> assinatura para associações ou destinos de storyboard única etapa, o <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> assinatura para destinos storyboard de várias etapas.  
  
 **XAML:** quando você usa um <xref:System.Windows.PropertyPath> para descrever uma referência de propriedade em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], como um valor de atributo, a cadeia de caracteres que você especifique primeiro é manipulado por um conversor de tipo (<xref:System.Windows.PropertyPathConverter>). Este conversor de tipo, em seguida, processa a cadeia de caracteres e com base em sua sintaxe chamará uma da <xref:System.Windows.PropertyPath> assinaturas de construtor. Geralmente, esta indireção por meio de conversor de tipo de tratamento de um valor de atributo é como você usa <xref:System.Windows.PropertyPath> em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], em vez de declarar um <xref:System.Windows.PropertyPath> elemento e, em seguida, aplicar valores específicos aos atributos como objeto <xref:System.Windows.PropertyPath.Path%2A> e <xref:System.Windows.PropertyPath.PathParameters%2A>. Para obter mais informações, consulte [sintaxe XAML de PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Membros de <xref:System.Windows.PropertyPath> tipo geralmente não são definidos em uma conexão direta [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxe. Consulte Observações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a lista de parâmetros a serem usados quando o caminho se refere aos parâmetros indexados.</summary>
        <value>A lista de parâmetros.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As propriedades de um <xref:System.Windows.PropertyPath> normalmente são estabelecidas por meio de construtores. Configuração <xref:System.Windows.PropertyPath.PathParameters%2A>, o <xref:System.Windows.PropertyPath.%23ctor%2A> construtor é particularmente conveniente porque o `pathParameters` argumento do construtor é designado como `params`, que significa que você não precisa criar ou uma matriz para a construção de dimensão. Você simplesmente especifica cada membro da matriz como um parâmetro adicional.  
  
 Se a propriedade final que é o destino for um <xref:System.Windows.Freezable> de tipo, que o valor será clonado. Para obter detalhes, consulte [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 A avaliação real da cadeia de propriedade é executada por mecanismos de animação de storyboard. No <xref:System.Windows.PropertyPath> nível, nenhuma validação é executada para certificar-se de que as etapas do caminho se conectar em todos os. Por exemplo, você pode construir um caminho de propriedade que tenha <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> como a primeira etapa, e <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> como a segunda etapa. Mas esse caminho de propriedade falhará se realmente aplicadas como um destino, porque o tipo de pincel que preenchimentos <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> não tem um <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> propriedade. Caminhos de propriedade inválido falharem em modo silencioso. Para obter mais informações, consulte [Visão geral de storyboards](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **XAML:** quando você usa um <xref:System.Windows.PropertyPath> para descrever uma referência de propriedade em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], como um valor de atributo, a cadeia de caracteres que você especifique primeiro é manipulado por um conversor de tipo (<xref:System.Windows.PropertyPathConverter>). Este conversor de tipo, em seguida, processa a cadeia de caracteres e com base em sua sintaxe chamará uma da <xref:System.Windows.PropertyPath> assinaturas de construtor. Geralmente, esta indireção por meio de conversor de tipo de tratamento de um valor de atributo é como você usa <xref:System.Windows.PropertyPath> em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], em vez de declarar um <xref:System.Windows.PropertyPath> elemento e, em seguida, aplicar valores específicos aos atributos como objeto <xref:System.Windows.PropertyPath.Path%2A> e <xref:System.Windows.PropertyPath.PathParameters%2A>. Para obter mais informações, consulte [sintaxe XAML de PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Membros de <xref:System.Windows.PropertyPath> tipo geralmente não são definidos em uma conexão direta [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxe. Consulte Observações.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>