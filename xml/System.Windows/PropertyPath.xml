<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyPath.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58557652b4b165aa49213450463eba1ffb0a2f7de.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8557652b4b165aa49213450463eba1ffb0a2f7de</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Implements a data structure for describing a property as a path below another property, or below an owning type.</source>
          <target state="translated">Implementa uma estrutura de dados para descrever uma propriedade como um caminho abaixo de outra propriedade ou abaixo de um tipo proprietário.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Property paths are used in data binding to objects, and in storyboards and timelines for animations.</source>
          <target state="translated">Caminhos de propriedade são usados na vinculação de dados a objetos e em cronogramas e storyboards para animações.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This class contains a string <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>, and list of dependency properties that are the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph> into the string <ph id="ph3">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>.</source>
          <target state="translated">Essa classe contém uma cadeia de caracteres <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>e a lista de propriedades de dependência são o <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph> na cadeia de caracteres <ph id="ph3">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> supports two modes of behavior:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> dá suporte a dois modos de comportamento:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">**</bpt>Source mode<ept id="p1">**</ept> describes a path to a property that is used as a source for some other operation.</source>
          <target state="translated"><bpt id="p1">**</bpt>O modo de origem<ept id="p1">**</ept> descreve um caminho para uma propriedade que é usada como uma fonte para alguma outra operação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This mode is used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class to support data binding.</source>
          <target state="translated">Esse modo é usado pelo <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> classe para dar suporte a associação de dados.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">**</bpt>Target mode<ept id="p1">**</ept> describes a path to a property that will be set as a target property.</source>
          <target state="translated"><bpt id="p1">**</bpt>Modo de destino<ept id="p1">**</ept> descreve um caminho para uma propriedade que será definido como uma propriedade de destino.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This mode is used by animation in support of storyboard and timeline setters.</source>
          <target state="translated">Esse modo é usado por animação para oferecer suporte a setters de storyboard e linha do tempo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>For instance, <ph id="ph1">`Background.Opacity`</ph> is a two-step path.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`Background.Opacity`</ph> é um caminho de duas etapas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This path implies: first, find the <ph id="ph1">`Background`</ph> property of an object, get the value object that the <ph id="ph2">`Background`</ph> property is set to, and then get the value of the <ph id="ph3">`Opacity`</ph> property on that object.</source>
          <target state="translated">Esse caminho implica: primeiro, encontre o <ph id="ph1">`Background`</ph> o objeto de valor de obter a propriedade de um objeto que o <ph id="ph2">`Background`</ph> propriedade é definida como e, em seguida, obter o valor da <ph id="ph3">`Opacity`</ph> propriedade no objeto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>XAML Attribute Usage</source>
          <target state="translated">Uso do Atributo XAML</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>XAML Values</source>
          <target state="translated">Valores XAML</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">*</bpt>propertyPath<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>propertyPath<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>A string that is evaluated to be either a simple or complex property path.</source>
          <target state="translated">Uma cadeia de caracteres que é avaliada como um caminho de propriedade simples ou complexos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>The syntax for setting a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is versatile but complex, and is described in the separate topic <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">A sintaxe para a configuração de um <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> na <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> é versátil mas complexa e é descrito no tópico separado <bpt id="p1">[</bpt>sintaxe XAML de PropertyPath<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A property path that either describes a path to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> property, or a single dependency property.</source>
          <target state="translated">Um caminho de propriedade que o descreve um caminho para uma propriedade <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> ou uma propriedade de dependência única.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</source>
          <target state="translated">Este construtor tem dois usos completamente diferentes, dependendo se ele está sendo usado para o caminho da propriedade modo de origem para uma associação, ou para um caminho de propriedade de apenas uma etapa de modo de destino para um destino de storyboard.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in source mode for a binding, <ph id="ph2">`parameter`</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">Se usar esta <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> no modo de origem para uma associação, <ph id="ph2">`parameter`</ph> é uma cadeia de caracteres que representa um nome de propriedade, ou pode ser uma cadeia de caracteres que descreve um caminho "passo a passo" para a propriedade no <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> modelo de objeto do objeto que está sendo usado como a origem para uma associação.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">Para um caminho de propriedade de associação, o caractere que identifica uma etapa de"" é um ponto (.).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">Também há suporte para referências de indexador (incluindo vários indexadores e diferenciação de tipo).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For more details on the syntax of the string as specifically used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais detalhes sobre a sintaxe da cadeia de caracteres usada especificamente pelo <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> de objeto, consulte <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">Uma propriedade usada como uma origem de associação não precisa ser uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If the binding updates two-way, the property referenced must be read-write.</source>
          <target state="translated">Se a associação bidirecional, a propriedade referenciada deve ser leitura / gravação.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">Observe também que o destino da associação tem uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>visão geral de associação de dados<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in target mode for a single-step path for a storyboard target, <ph id="ph2">`parameter`</ph> is generally provided as type <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated">Se usar esta <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> no modo de destino para um caminho de etapa única para um destino de storyboard, <ph id="ph2">`parameter`</ph> geralmente é fornecido como tipo <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>You can also specify a string that is the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;</ph>.</source>
          <target state="translated">Você também pode especificar uma cadeia de caracteres que é o <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Either of these evaluate to the same result, because it is stored internally as a string.</source>
          <target state="translated">Qualquer uma delas é avaliada como o mesmo resultado, porque ele é armazenado internamente como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A provided <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> is converted to a string through <ph id="ph2">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>.</source>
          <target state="translated">Um fornecido <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> é convertido em uma cadeia de caracteres por meio de <ph id="ph2">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> supports a qualified naming format for dependency properties, so you can specify a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string to the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor in code.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> oferece suporte a um formato de nome qualificado para propriedades de dependência, portanto, você pode especificar um <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> qualificado a cadeia de caracteres do nome de propriedade de dependência para o <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> construtor no código.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>The qualified path to the dependency property identifier is a different concept than a complex path.</source>
          <target state="translated">O caminho qualificado para o identificador de propriedade de dependência é um conceito diferente um caminho complexo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A complex-path <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> should instead be created with the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Um caminho complexo <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> em vez disso, deve ser criado com o <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>A string that specifies the <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.Path" /&gt;</ph>, in a tokenized format.</source>
          <target state="translated">Uma cadeia de caracteres que especifica o <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.Path" /&gt;</ph>, em um formato de token.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>An array of objects that sets the <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.PathParameters" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de objetos que define o <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.PathParameters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class, with the provided pathing token string and parameters.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> com a cadeia de caracteres de token de caminho e os parâmetros fornecidos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>This signature is generally only used for target-mode <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> usages with complex paths.</source>
          <target state="translated">Esta assinatura geralmente é usada somente para o modo de destino <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> usos com caminhos complexos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>This constructor supports <ph id="ph1">`params`</ph> for the <ph id="ph2">`pathParameters`</ph> constructor argument.</source>
          <target state="translated">Este construtor dá suporte a <ph id="ph1">`params`</ph> para o <ph id="ph2">`pathParameters`</ph> argumento de construtor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Therefore you can specify the contents of <ph id="ph1">`pathParameters`</ph> as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the <ph id="ph2">`pathParameters`</ph> items.</source>
          <target state="translated">Portanto, você pode especificar o conteúdo de <ph id="ph1">`pathParameters`</ph> como uma série de argumentos de construtor separada por vírgulas que preenchem a matriz, em vez de precisar de uma matriz de dimensão e preencha-o com o <ph id="ph2">`pathParameters`</ph> itens.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Each item you specify must be one of the following types: <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Cada item que você especificar deve ser um dos seguintes tipos: <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>For more information on the requirements of the parameters, see <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre os requisitos dos parâmetros, consulte <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.PropertyPath.Path">
          <source>Gets or sets the string that describes the path.</source>
          <target state="translated">Obtém ou define a cadeia de caracteres que descreve o caminho.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The string that describes the path.</source>
          <target state="translated">A cadeia de caracteres que descreve o caminho.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The string contained in this property has three completely different meanings depending on whether a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</source>
          <target state="translated">A cadeia de caracteres contida nesta propriedade tem três significados completamente diferentes dependendo se um <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> está sendo usado para o caminho da propriedade modo de origem para uma associação, para um caminho de propriedade de apenas uma etapa de modo de destino para um destino de storyboard ou um caminho complexo para um destino de storyboard.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in source mode for a binding, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">Se usar esta <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> no modo de origem para uma associação, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> é uma cadeia de caracteres que representa um nome de propriedade, ou pode ser uma cadeia de caracteres que descreve um caminho "passo a passo" para a propriedade no <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> modelo de objeto do objeto que está sendo usado como a origem para uma associação.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">Para um caminho de propriedade de associação, o caractere que identifica uma etapa de"" é um ponto (.).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">Também há suporte para referências de indexador (incluindo vários indexadores e diferenciação de tipo).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For more details on the syntax of the string as specifically used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais detalhes sobre a sintaxe da cadeia de caracteres usada especificamente pelo <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> de objeto, consulte <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">Uma propriedade usada como uma origem de associação não precisa ser uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If the binding updates two-way, the property source must be read-write.</source>
          <target state="translated">Se a associação bidirecional, a origem da propriedade deve ser leitura / gravação.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">Observe também que o destino da associação tem uma propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>visão geral de associação de dados<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in target mode for a single-step path for a storyboard target, <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> is a string that is a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string.</source>
          <target state="translated">Se usar esta <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> no modo de destino para um caminho de etapa única para um destino de storyboard, <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> é uma cadeia de caracteres que é um <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> qualificado sequência de nome de propriedade de dependência.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> for a complex path for a storyboard target, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> is a tokenized string format that describes the relationships of the various objects given in the <ph id="ph3">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Se usar esta <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> para um caminho complexo para um destino de storyboard, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> é um formato de cadeia de caracteres editáveis que descreve as relações entre os vários objetos fornecidos no <ph id="ph3">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</source>
          <target state="translated">Cada item na matriz é especificado neste formato pelo índice de matriz para o item entre parênteses.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For example, to specify the first item in the array, the string token is <ph id="ph1">`(0)`</ph>.</source>
          <target state="translated">Por exemplo, para especificar o primeiro item na matriz, o token de cadeia de caracteres é <ph id="ph1">`(0)`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Relationships between items ("steps" in the path) are specified by a dot (.).</source>
          <target state="translated">Relações entre itens ("etapas" no caminho) são especificadas por um ponto (.).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</source>
          <target state="translated">A propriedade do ponto é a primeira etapa no caminho, a propriedade após é a segunda etapa e assim por diante (você pode especificar etapas além dos dois).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The last step in the chain always represents the property being animated.</source>
          <target state="translated">A última etapa na cadeia sempre representa a propriedade sendo animada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</source>
          <target state="translated">Itens dentro de propriedades de coleção são acessados com uma sintaxe de indexador, com o índice dentro de colchetes ([e]).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The indexer is additive to the token representing the property.</source>
          <target state="translated">É o indexador aditivo para o token que representa a propriedade.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: <ph id="ph1">`(0)[1].(1)`</ph> .</source>
          <target state="translated">Por exemplo, o seguinte é um caminho de duas etapas, com a combinação de token na primeira etapa Especifica o segundo item de dentro da coleção de propriedade: <ph id="ph1">`(0)[1].(1)`</ph> .</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</source>
          <target state="translated">Você não pode usar um indexador na última propriedade da cadeia; não é possível animar a posição de coleção real, você deve animar uma propriedade no objeto.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The path string for a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> is typically established through the constructors: the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.Object%29&gt;</ph> signature for bindings or single-step storyboard targets, the <ph id="ph3">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> signature for multi-step storyboard targets.</source>
          <target state="translated">A cadeia de caracteres de caminho para um <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> geralmente é estabelecido por meio de construtores: o <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.Object%29&gt;</ph> assinatura para associações ou destinos de storyboard única etapa, o <ph id="ph3">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> assinatura para destinos storyboard de várias etapas.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> to describe a property reference in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> quando você usa um <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> para descrever uma referência de propriedade em <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, como um valor de atributo, a cadeia de caracteres que você especifique primeiro é manipulado por um conversor de tipo (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>This type converter then processes the string and based on its syntax will call one of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> constructor signatures.</source>
          <target state="translated">Este conversor de tipo, em seguida, processa a cadeia de caracteres e com base em sua sintaxe chamará uma da <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> assinaturas de construtor.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>This indirection through the type converter handling an attribute value is generally how you use <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> object element and then applying specific values to attributes such as <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Geralmente, esta indireção por meio de conversor de tipo de tratamento de um valor de atributo é como você usa <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> em <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, em vez de declarar um <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> elemento e, em seguida, aplicar valores específicos aos atributos como objeto <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>sintaxe XAML de PropertyPath<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>XAML Text Usage</source>
          <target state="translated">Uso de texto XAML</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type are not typically set in a direct <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> tipo geralmente não são definidos em uma conexão direta <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sintaxe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>See Remarks.</source>
          <target state="translated">Consulte Observações.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Gets the list of parameters to use when the path refers to indexed parameters.</source>
          <target state="translated">Obtém a lista de parâmetros a serem usados quando o caminho se refere aos parâmetros indexados.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The parameter list.</source>
          <target state="translated">A lista de parâmetros.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The properties for a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> are typically established through the constructors.</source>
          <target state="translated">As propriedades de um <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> normalmente são estabelecidas por meio de construtores.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For setting <ph id="ph1">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;</ph> constructor is particularly convenient because the <ph id="ph3">`pathParameters`</ph> constructor argument is designated as <ph id="ph4">`params`</ph>, meaning that you do not need to create or dimension an array for construction.</source>
          <target state="translated">Configuração <ph id="ph1">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>, o <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;</ph> construtor é particularmente conveniente porque o <ph id="ph3">`pathParameters`</ph> argumento do construtor é designado como <ph id="ph4">`params`</ph>, que significa que você não precisa criar ou uma matriz para a construção de dimensão.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>You simply specify each member of the array as an additional parameter.</source>
          <target state="translated">Você simplesmente especifica cada membro da matriz como um parâmetro adicional.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>If the final property that is the target is a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> type, that value will be cloned.</source>
          <target state="translated">Se a propriedade final que é o destino for um <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> de tipo, que o valor será clonado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For details, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Para obter detalhes, consulte <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</source>
          <target state="translated">A avaliação real da cadeia de propriedade é executada por mecanismos de animação de storyboard.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>At the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> level, no validation is performed to make sure that the steps of the path connect at all.</source>
          <target state="translated">No <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> nível, nenhuma validação é executada para certificar-se de que as etapas do caminho se conectar em todos os.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For instance, you can construct a property path that has <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> as the first step, and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType&gt;</ph> as the second step.</source>
          <target state="translated">Por exemplo, você pode construir um caminho de propriedade que tenha <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> como a primeira etapa, e <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType&gt;</ph> como a segunda etapa.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>But such a property path would fail if actually applied as a target, because the Brush type that fills <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> does not have a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Mas esse caminho de propriedade falhará se realmente aplicadas como um destino, porque o tipo de pincel que preenchimentos <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> não tem um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Invalid property paths fail silently.</source>
          <target state="translated">Caminhos de propriedade inválido falharem em modo silencioso.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Visão geral de storyboards<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> to describe a property reference in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> quando você usa um <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> para descrever uma referência de propriedade em <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, como um valor de atributo, a cadeia de caracteres que você especifique primeiro é manipulado por um conversor de tipo (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>This type converter then processes the string and based on its syntax will call one of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> constructor signatures.</source>
          <target state="translated">Este conversor de tipo, em seguida, processa a cadeia de caracteres e com base em sua sintaxe chamará uma da <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> assinaturas de construtor.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>This indirection through the type converter handling an attribute value is generally how you use <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> object element and then applying specific values to attributes such as <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Geralmente, esta indireção por meio de conversor de tipo de tratamento de um valor de atributo é como você usa <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> em <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, em vez de declarar um <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> elemento e, em seguida, aplicar valores específicos aos atributos como objeto <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> e <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>sintaxe XAML de PropertyPath<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>XAML Text Usage</source>
          <target state="translated">Uso de texto XAML</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type are not typically set in a direct <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Membros de <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> tipo geralmente não são definidos em uma conexão direta <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sintaxe.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>See Remarks.</source>
          <target state="translated">Consulte Observações.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>