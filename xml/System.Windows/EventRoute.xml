<Type Name="EventRoute" FullName="System.Windows.EventRoute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02d1305ebeb0a6c76c92a7fce85fd8fb3aa59110" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55348833" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventRoute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRoute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventRoute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRoute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRoute sealed" />
  <TypeSignature Language="F#" Value="type EventRoute = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1463-101">Representa o contêiner da rota a ser seguido por um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="b1463-101">Represents the container for the route to be followed by a routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1463-102">Esta classe corresponde à válido <xref:System.Windows.RoutedEvent>e contém uma lista ordenada de objeto e o manipulador de lista de pares de destino que se referem à rota de evento para o evento.</span><span class="sxs-lookup"><span data-stu-id="b1463-102">This class corresponds to a valid <xref:System.Windows.RoutedEvent>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</span></span> <span data-ttu-id="b1463-103"><xref:System.Windows.EventRoute> dá suporte à adição de novas entradas à lista e permite também os manipuladores na lista a ser invocado.</span><span class="sxs-lookup"><span data-stu-id="b1463-103"><xref:System.Windows.EventRoute> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</span></span>  
  
 <span data-ttu-id="b1463-104">As operações mais normais para adicionar manipuladores para [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] eventos não exigir a trabalhar com essa classe (por exemplo, use <xref:System.Windows.EventManager> métodos para adicionar a manipulação de classe ou de consulta para manipuladores existentes de um evento).</span><span class="sxs-lookup"><span data-stu-id="b1463-104">Most normal operations for adding handlers for [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events do not require working with this class (for instance, use <xref:System.Windows.EventManager> methods to add class handling, or query for existing handlers of an event).</span></span> <span data-ttu-id="b1463-105">Essa classe é principalmente para uso quando elementos têm um conhecimento específico sobre elementos filho ou elementos pai que que fosse mais prático adicionar elementos a ou remover elementos de rota padrão calculado do evento.</span><span class="sxs-lookup"><span data-stu-id="b1463-105">This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRoute (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRoute(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventRoute : System.Windows.RoutedEvent -&gt; System.Windows.EventRoute" Usage="new System.Windows.EventRoute routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="b1463-106">O identificador de evento não NULL a ser associado a esta rota de evento.</span><span class="sxs-lookup"><span data-stu-id="b1463-106">The non-NULL event identifier to be associated with this event route.</span></span></param>
        <summary><span data-ttu-id="b1463-107">Inicializa uma instância da classe <see cref="T:System.Windows.EventRoute" />.</span><span class="sxs-lookup"><span data-stu-id="b1463-107">Initializes an instance of the <see cref="T:System.Windows.EventRoute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object target, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(object target, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (target As Object, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ target, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.Add : obj * Delegate * bool -&gt; unit" Usage="eventRoute.Add (target, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b1463-108">Especifica o objeto de destino do qual o manipulador é a ser adicionada à rota.</span><span class="sxs-lookup"><span data-stu-id="b1463-108">Specifies the target object of which the handler is to be added to the route.</span></span></param>
        <param name="handler"><span data-ttu-id="b1463-109">Especifica o manipulador a ser adicionado para a rota.</span><span class="sxs-lookup"><span data-stu-id="b1463-109">Specifies the handler to be added to the route.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="b1463-110">Indica se o ouvinte detecta ou não os eventos que já foram tratados.</span><span class="sxs-lookup"><span data-stu-id="b1463-110">Indicates whether or not the listener detects events that have already been handled.</span></span></param>
        <summary><span data-ttu-id="b1463-111">Adiciona o manipulador especificado para o destino especificado à rota.</span><span class="sxs-lookup"><span data-stu-id="b1463-111">Adds the specified handler for the specified target to the route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1463-112">Não é um erro ao adicionar um manipulador para uma instância de destino específico duas vezes.</span><span class="sxs-lookup"><span data-stu-id="b1463-112">It is not an error to add a handler for a particular target instance twice.</span></span> <span data-ttu-id="b1463-113">Nesse caso, o manipulador será chamado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="b1463-113">In such a case, the handler will be called twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchNode">
      <MemberSignature Language="C#" Value="public object PeekBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchNode();" />
      <MemberSignature Language="F#" Value="member this.PeekBranchNode : unit -&gt; obj" Usage="eventRoute.PeekBranchNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1463-114">Retorna o elemento superior na pilha de rota de evento na qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-114">Returns the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="b1463-115">O elemento superior na pilha de rota de evento na qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-115">The top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchSource">
      <MemberSignature Language="C#" Value="public object PeekBranchSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchSource" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchSource();" />
      <MemberSignature Language="F#" Value="member this.PeekBranchSource : unit -&gt; obj" Usage="eventRoute.PeekBranchSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1463-116">Retorna a origem para o elemento superior na pilha de rota de evento no qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-116">Returns the source for the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="b1463-117">A origem para o elemento superior na pilha de rota de evento no qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-117">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBranchNode">
      <MemberSignature Language="C#" Value="public object PopBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PopBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PopBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PopBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PopBranchNode();" />
      <MemberSignature Language="F#" Value="member this.PopBranchNode : unit -&gt; obj" Usage="eventRoute.PopBranchNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1463-118">Retorna o nó superior na pilha de rota de evento na qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-118">Returns the top-most node on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="b1463-119">O nó superior na pilha de rota de evento na qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-119">The top-most node on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushBranchNode">
      <MemberSignature Language="C#" Value="public void PushBranchNode (object node, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushBranchNode(object node, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushBranchNode (node As Object, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushBranchNode(System::Object ^ node, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="member this.PushBranchNode : obj * obj -&gt; unit" Usage="eventRoute.PushBranchNode (node, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="b1463-120">O elemento superior na pilha de rota de evento na qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-120">The top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <param name="source"><span data-ttu-id="b1463-121">A origem para o elemento superior na pilha de rota de evento no qual duas árvores lógicas divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-121">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <summary><span data-ttu-id="b1463-122">Adiciona o nó superior à pilha de rota de evento no qual duas árvores lógicos divergem.</span><span class="sxs-lookup"><span data-stu-id="b1463-122">Adds the top-most node to the event route stack at which two logical trees diverge.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>