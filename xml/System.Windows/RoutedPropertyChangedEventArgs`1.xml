<Type Name="RoutedPropertyChangedEventArgs&lt;T&gt;" FullName="System.Windows.RoutedPropertyChangedEventArgs&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0a93583f19c4dd6ab7706cf71670bf75deab00f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30676820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoutedPropertyChangedEventArgs&lt;T&gt; : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedPropertyChangedEventArgs`1&lt;T&gt; extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedPropertyChangedEventArgs(Of T)&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class RoutedPropertyChangedEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">O tipo da propriedade de dependência que foi alterada.</typeparam>
    <summary>Fornece dados sobre uma alteração de valor de uma propriedade de dependência, conforme relatado por determinados eventos roteados, incluindo os valores anterior e atual da propriedade que foi alterada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso é uma classe genérica onde a classe é usada para dados de evento eventos diferentes. Os eventos roteados diferentes podem especificar a restrição de tipo de genérica para gerar uma classe de dados de evento de um tipo específico. Depois que a classe é restrito, o <xref:System.Windows.RoutedPropertyChangedEventArgs%601.OldValue%2A> e <xref:System.Windows.RoutedPropertyChangedEventArgs%601.NewValue%2A> propriedades também refletem essas restrições de tipo; assim, você pode usar uma classe de dados de evento comuns para eventos de outra propriedade alterada sem a necessidade de representantes de diferentes para cada tipo de propriedade possíveis.  
  
 Incluem eventos roteados que relata uma alteração de propriedade em que o representante incorpora essa classe de dados de evento <xref:System.Windows.Controls.Primitives.RangeBase.ValueChanged>, onde a restrição de tipo (e valores novos e antigos passados em argumentos) são do tipo <xref:System.Double>, e <xref:System.Windows.Controls.TreeView.SelectedItemChanged>, em que a restrição de tipo é <xref:System.Object>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RoutedPropertyChangedEventHandler`1" />
    <altmember cref="T:System.Windows.RoutedEventArgs" />
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedPropertyChangedEventArgs (T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T oldValue, !T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (oldValue As T, newValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedPropertyChangedEventArgs(T oldValue, T newValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="oldValue">Valor anterior da propriedade, antes de o evento ser gerado.</param>
        <param name="newValue">Valor atual da propriedade no momento do evento.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> com valores novos e antigos fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os tipos de passado devem corresponder às restrições declaradas da genérica específica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedPropertyChangedEventArgs (T oldValue, T newValue, System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T oldValue, !T newValue, class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedPropertyChangedEventArgs(T oldValue, T newValue, System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="oldValue">Valor anterior da propriedade, antes de o evento ser gerado.</param>
        <param name="newValue">Valor atual da propriedade no momento do evento.</param>
        <param name="routedEvent">Identificador do evento roteado para o qual essa classe de argumentos transmite informações.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> com valores novos e antigos fornecidos e um identificador de evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os tipos de passado para `oldValue` e `newValue` devem corresponder às restrições declaradas da genérica específica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">O manipulador genérico a ser chamado de uma forma específica ao tipo.</param>
        <param name="genericTarget">O destino no qual chamar o manipulador.</param>
        <summary>Invoca manipuladores de eventos em uma forma específica de tipo, o que pode aumentar a eficiência do sistema de eventos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa implementação converte o manipulador genérico como um <xref:System.Windows.RoutedPropertyChangedEventHandler%601> e, em seguida, invoca. Para obter detalhes sobre esse padrão de implementação e os motivos para ele, consulte <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> e [visão geral sobre eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public T NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T NewValue { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o novo valor de uma propriedade conforme relatado por um evento de propriedade alterada.</summary>
        <value>O valor genérico. Em uma implementação prática do <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, o tipo genérico dessa propriedade é substituído com o tipo restrito da implementação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A restrição de valor e o tipo dessa propriedade será estabelecida pelo construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public T OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T OldValue { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor anterior da propriedade conforme relatado por um evento de propriedade alterada.</summary>
        <value>O valor genérico. Em uma implementação prática do <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, o tipo genérico dessa propriedade é substituído com o tipo restrito da implementação.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A restrição de valor e o tipo dessa propriedade será estabelecida pelo <xref:System.Windows.RoutedPropertyChangedEventArgs%601> argumentos de tipo do construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>