<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8036a2eb2c4e97b52acc1ce9ac3087cd15c6eeae" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55424077" /></Metadata><TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7ca58-101">Fornece uma classe base de nível de núcleo do WPF para elementos de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-101">Provides a WPF core-level base class for content elements.</span></span> <span data-ttu-id="7ca58-102">Elementos de conteúdo são projetados para apresentação de estilo de fluxo usando um modelo de layout intuitivo orientado para marcação e um modelo de objeto deliberadamente simples.</span><span class="sxs-lookup"><span data-stu-id="7ca58-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-103"><xref:System.Windows.ContentElement> Define as seguintes características comuns de conteúdo:</span><span class="sxs-lookup"><span data-stu-id="7ca58-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="7ca58-104">Input: Todos os <xref:System.Windows.ContentElement> classes derivadas fornecem suporte para captura básica de entrada do teclado, mouse, operações de arrastar e soltar, controles de caneta e aceleradores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="7ca58-105">Foco: Todos os <xref:System.Windows.ContentElement> classes derivadas são potencialmente focalizáveis.</span><span class="sxs-lookup"><span data-stu-id="7ca58-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="7ca58-106">(No entanto, o estado de controle padrão para o <xref:System.Windows.ContentElement> classe base é `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="7ca58-107">Para obter detalhes sobre como fazer uma <xref:System.Windows.ContentElement> focalizável, consulte <xref:System.Windows.ContentElement.Focusable%2A>.) Além disso, essa classe contém [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] que você pode usar para percorrer o foco entre elementos relacionados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="7ca58-108">Eventos: <xref:System.Windows.ContentElement> inclui eventos que estão relacionados à entrada e foco; ele também inclui eventos para alterações no estado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="7ca58-109">Em muitos casos, o <xref:System.Windows.ContentElement> eventos são eventos roteados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="7ca58-110">Em alguns casos, os eventos roteados têm túnel e de propagação estratégias de roteamento, geradas como eventos separados em resposta ao mesmo estado ou condição.</span><span class="sxs-lookup"><span data-stu-id="7ca58-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="7ca58-111">Além disso, <xref:System.Windows.ContentElement> define [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] que podem acionar eventos e roteados que podem adicionar ou remover manipuladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="7ca58-112"><xref:System.Windows.ContentElement> compartilha muitos comum [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] com <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="7ca58-113">Estas armadilhas [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] não vêm de uma herança de classe compartilhada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="7ca58-114">Mas eles compartilham a nomenclatura comuns, um comportamento semelhante e semelhante implementação interna de [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] em cada classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="7ca58-115">A similaridade é porque <xref:System.Windows.ContentElement> e <xref:System.Windows.UIElement> são cada classes que são um elemento base, embora cada um tem intenções diferentes para o seu comportamento de modelo de objeto de marcação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="7ca58-116">Em particular, <xref:System.Windows.UIElement> descender de <xref:System.Windows.Media.Visual>, que fornece o gráfico de baixo nível de suporte para renderização de um <xref:System.Windows.ContentElement> para uma região retangular dentro de uma janela composta, enquanto <xref:System.Windows.ContentElement> adia o processamento, de modo que conceitos mais comum para cenários de documento, como o fluxo e a disposição, têm suporte com mais facilidade.</span><span class="sxs-lookup"><span data-stu-id="7ca58-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="7ca58-117">Esses dois relacionados classes também implementam as interfaces comuns <xref:System.Windows.IInputElement> e <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-118">O <see cref="T:System.Windows.ContentElement" /> classe ainda não define todos os aspectos de um elemento de conteúdo completo para apresentação de estilo de fluxo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-118">The <see cref="T:System.Windows.ContentElement" /> class does not yet define all aspects of a complete content element for flow-style presentation.</span></span> <span data-ttu-id="7ca58-119"><see cref="T:System.Windows.FrameworkContentElement" /> é uma classe derivada imediatamente de <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-119"><see cref="T:System.Windows.FrameworkContentElement" /> is an immediately derived class of <see cref="T:System.Windows.ContentElement" />.</span></span> <span data-ttu-id="7ca58-120"><see cref="T:System.Windows.FrameworkContentElement" /> inclui um conjunto mais completo de membros adicionais que dão suporte à renderização de um <see cref="T:System.Windows.FrameworkContentElement" /> dentro de um host de conteúdo e usando o sistema de layout de nível de estrutura do WPF.</span><span class="sxs-lookup"><span data-stu-id="7ca58-120"><see cref="T:System.Windows.FrameworkContentElement" /> includes a more complete set of additional members that support rendering a <see cref="T:System.Windows.FrameworkContentElement" /> within a content host and using the WPF framework-level layout system.</span></span></para></block>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-121">Inicializa uma nova instância da classe <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-121">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ca58-122">Adiciona um manipulador de eventos roteados de um evento roteado especificado, adicionando o manipulador à coleção de manipuladores no elemento atual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-122">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="7ca58-123">Um identificador do evento roteado a ser manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-123">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="7ca58-124">Uma referência à implementação do manipulador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-124">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="7ca58-125">Adiciona um manipulador de eventos roteados de um evento roteado especificado, adicionando o manipulador à coleção de manipuladores no elemento atual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-125">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-126">Você pode adicionar o mesmo manipulador para o mesmo evento várias vezes sem gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="7ca58-126">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="7ca58-127">No entanto, o manipulador é realmente chamado várias vezes quando o evento é manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-127">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="7ca58-128">Portanto, considere como esse comportamento pode ter efeitos colaterais que deve ser considerados em sua implementação do manipulador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-128">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="7ca58-129">Você normalmente usa esse método para fornecer a implementação do acessador "Adicionar" para o [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] padrão de acesso do evento de um evento roteado personalizado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-129">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="7ca58-130">Um identificador do evento roteado a ser manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-130">An identifier for the.routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="7ca58-131">Uma referência à implementação do manipulador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-131">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="7ca58-132"><see langword="true" /> para registrar o manipulador de modo que ele seja invocado mesmo quando o evento roteado estiver marcado como tratado nos dados do evento; <see langword="false" /> para registrar o manipulador com a condição padrão que não será chamado se o evento roteado já estiver marcado como tratado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-132"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="7ca58-133">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-133">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="7ca58-134">Não solicite sempre para tratar novamente um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-134">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="7ca58-135">Adiciona um manipulador de eventos roteados de um evento roteado especificado, adicionando o manipulador à coleção de manipuladores no elemento atual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-135">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="7ca58-136">Especifique <paramref name="handledEventsToo" /> como <see langword="true" /> para que o manipulador fornecido seja invocado para eventos roteados que já tenham sido marcados como manipulados por outro elemento na rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-136">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-137">Processamento de eventos de entrada de baixo nível em uma forma prática é uma tarefa complexa.</span><span class="sxs-lookup"><span data-stu-id="7ca58-137">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="7ca58-138">Muitos controles que implementam o comportamento em que um determinado evento é marcado como manipulado e é substituído por outro evento mais intuitivo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-138">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="7ca58-139">Em geral, um controle só será marcar um evento de entrada de plataforma como manipulado, se houver algum intenção de design para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="7ca58-139">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="7ca58-140">Em determinados cenários, as intenções de design não podem ser o que requer sua manipulação específica do evento de entrada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-140">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="7ca58-141">É para esses cenários que registrar manipuladores com `handledEventsToo` como `true` é apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-141">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="7ca58-142">Mas você não deve fazer isso regularmente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-142">But you should not do this routinely.</span></span> <span data-ttu-id="7ca58-143">Invocar manipuladores em resposta a todos os eventos, mesmo se manipulado complicar a sua própria lógica de processamento de eventos do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-143">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="7ca58-144">Você poderá ver uma diminuição no desempenho se a lógica de manipulador é significativa.</span><span class="sxs-lookup"><span data-stu-id="7ca58-144">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="7ca58-145">Você deve reservar o uso de anexar manipuladores de eventos já manipulado para situações em que você já tenha descoberto durante o processo de desenvolvimento que certos controles estão lidando com eventos que deseja processar com a lógica do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-145">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="7ca58-146">Outra técnica para evitar o comportamento de determinadas combinações de controle de eventos de manipulação de classe é usar a alternativa de visualização do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-146">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="7ca58-147">Por exemplo, se <xref:System.Windows.ContentElement.MouseLeftButtonDown> está marcado como manipulado pela manipulação de classe, você poderá adicionar manipuladores para <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="7ca58-147">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="7ca58-148">Você pode adicionar o mesmo manipulador para o mesmo evento várias vezes sem gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="7ca58-148">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="7ca58-149">No entanto, o manipulador é realmente chamado várias vezes quando o evento é manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-149">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="7ca58-150">Portanto, considere como esse comportamento pode ter efeitos colaterais que deve ser considerados em sua implementação do manipulador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-150">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="7ca58-151">Você normalmente usa esse método para fornecer a implementação do acessador "Adicionar" para o [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] padrão de acesso do evento de um evento roteado personalizado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-151">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-152">O exemplo a seguir implementa um manipulador invocado na <xref:System.Windows.FrameworkElement.Initialized> evento em uma página que anexa um manipulador definido para um dos elementos nomeados na página usando `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-152">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="7ca58-153">Esse manipulador seria invocado mesmo se os dados do evento compartilhado como tratado antes de alcançar o elemento de manipulação na rota de marcado de outro elemento ao longo da rota.</span><span class="sxs-lookup"><span data-stu-id="7ca58-153">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="7ca58-154">A rota de eventos à qual os manipuladores são adicionados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-154">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="7ca58-155">Os dados de evento usados para adicionar os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-155">The event data that is used to add the handlers.</span></span> <span data-ttu-id="7ca58-156">Esse método usa a propriedade <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> dos argumentos para criar os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-156">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span></span></param>
        <summary><span data-ttu-id="7ca58-157">Adiciona manipuladores ao <see cref="T:System.Windows.EventRoute" /> especificado para a coleção do manipulador de eventos <see cref="T:System.Windows.ContentElement" /> atual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-157">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-158">Use esse método para elementos do host de conteúdo (independentemente se eles implementam <xref:System.Windows.IContentHost>) para adicionar manipuladores para os elementos filho de host de conteúdo para o host <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-158">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-159">Obtém ou define um valor que indica se um elemento pode ser usado como o destino de uma operação do tipo "arrastar e soltar".</span><span class="sxs-lookup"><span data-stu-id="7ca58-159">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="7ca58-160"><see langword="true" /> se um elemento pode ser usado como o destino de uma operação do tipo "arrastar e soltar"; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-160"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-161">O valor padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-162">Operações de arrastar e soltar não são habilitadas por padrão e deve ser habilitadas, deliberadamente, definindo <xref:System.Windows.ContentElement.AllowDrop%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-162">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="7ca58-163">Além dessa configuração básica, o comportamento de arrastar e soltar é inteiramente específico da implementação e não é definido pelo <xref:System.Windows.ContentElement> ou qualquer outra classe de elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-163">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="7ca58-164">Alguns controles, por exemplo, <xref:System.Windows.Controls.RichTextBox>, têm um comportamento padrão, mas não <xref:System.Windows.ContentElement> as classes derivadas têm esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-164">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="7ca58-165">Para obter mais informações sobre o arrastar e soltar, consulte [arrastar e soltar de visão geral da](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-165">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="7ca58-166"><xref:System.Windows.FrameworkContentElement> substitui os metadados para essa propriedade de dependência em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-166"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="7ca58-167">Especificamente, <xref:System.Windows.FrameworkContentElement> designa que essa propriedade permite que a herança do valor da propriedade (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> é `true` nos metadados).</span><span class="sxs-lookup"><span data-stu-id="7ca58-167">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="7ca58-168">Herança do valor da propriedade neste contexto significa que, se não houver elementos filho com nenhum outro valor para <xref:System.Windows.ContentElement.AllowDrop%2A> atribuído por meio de estilos, o valor do elemento pai mais próximo com esse valor atribuído (novamente, seja em estilos, por padrão ou valores locais valores, ou um valor local), em seguida, o valor do elemento pai é atribuído a todos os elementos filho não atribuído pelo sistema de propriedades.</span><span class="sxs-lookup"><span data-stu-id="7ca58-168">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="7ca58-169">Isso significa que você pode especificar se deseja permitir operações de descarte no elemento raiz e, em seguida, propagar o valor para todos os <xref:System.Windows.FrameworkContentElement> elementos filho que não especificamente atribuído um valor de `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-169">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-170">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-171">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-171">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="7ca58-172">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-173">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-173">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-174">O exemplo a seguir define <xref:System.Windows.ContentElement.AllowDrop%2A> em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7ca58-174">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-175">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.AllowDrop" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-175">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ca58-176">Aplica uma animação a uma propriedade de dependência especificada neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-176">Applies an animation to a specified dependency property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="7ca58-177">O identificador para a propriedade a ser animada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-177">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="7ca58-178">O relógio de animação que controla e declara a animação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-178">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="7ca58-179">Aplica uma animação a uma propriedade de dependência especificada neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-179">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="7ca58-180">Todas as animações existentes são interrompidas e substituídas pela nova animação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-180">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-181">Para remover uma animação de uma propriedade, especifique o identificador para essa propriedade como `dp` e especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-181">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="7ca58-182">Isso remove a animação e a propriedade animada é definida como seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-182">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="7ca58-183">No entanto, o relógio de animação originalmente associado não será interrompido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-183">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="7ca58-184">Todas as outras animações atribuídas a esse relógio continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-184">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="7ca58-185">A propriedade a ser animada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-185">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="7ca58-186">O relógio de animação que controla e declara a animação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-186">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="7ca58-187">Um valor da enumeração.</span><span class="sxs-lookup"><span data-stu-id="7ca58-187">A value of the enumeration.</span></span> <span data-ttu-id="7ca58-188">O padrão é <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, que interromperá a animação existente, substituindo-a pela nova.</span><span class="sxs-lookup"><span data-stu-id="7ca58-188">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="7ca58-189">Aplica uma animação a uma propriedade de dependência especificada nesse elemento, com a capacidade de especificar o que ocorrerá se a propriedade já tiver uma animação em execução.</span><span class="sxs-lookup"><span data-stu-id="7ca58-189">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-190">Para remover uma animação de uma propriedade, especifique o identificador para essa propriedade como `dp` e especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-190">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="7ca58-191">Isso remove a animação e a propriedade animada é definida como seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-191">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="7ca58-192">No entanto, o relógio de animação originalmente associado não será interrompido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-192">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="7ca58-193">Todas as outras animações atribuídas a esse relógio continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-193">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-194">Obtém um valor que indica se pelo menos um toque é capturado para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-194">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-195"><see langword="true" /> se pelo menos um toque for capturado para esse elemento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-195"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-196">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-196">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-197">Obtém um valor que indica se ao menos um toque é capturado nesse elemento ou elementos filho na sua árvore visual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-197">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="7ca58-198"><see langword="true" /> Se pelo menos um toque é capturado para esse elemento ou elementos filho na árvore visual; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-198"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-199">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-199">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-200">Obtém um valor que indica se pelo menos um toque é feito sobre esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-200">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-201"><see langword="true" /> se pelo menos um toque for pressionado sobre esse elemento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-201"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-202">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-202">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-203">Obtém um valor que indica se pelo menos um toque for pressionado sobre esse elemento ou elementos filho na sua árvore visual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-203">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="7ca58-204"><see langword="true" /> se pelo menos um toque for pressionado sobre esse elemento ou elementos filho na sua árvore visual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-204"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-205">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-205">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ca58-206">Inicia uma animação de uma propriedade animada especificada neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-206">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="7ca58-207">A propriedade a ser animada, que é especificada como um identificador da propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="7ca58-207">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="7ca58-208">A linha do tempo da animação a ser iniciada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-208">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="7ca58-209">Inicia uma animação de uma propriedade animada especificada neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-209">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-210">Quando você verifica se uma propriedade é animada, observe que a animação começará e ser considerada animado quando o primeiro quadro além do ponto de partida sem animação é renderizado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-210">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="7ca58-211">Se o <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` é `null`, todas as animações atuais serão removidas e o valor atual da propriedade é mantido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-211">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="7ca58-212">Se todo o `animation` valor é `null`, todas as animações serão removidas da propriedade e o valor da propriedade será revertido para seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-212">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="7ca58-213">No entanto, a linha do tempo de animação originalmente associado não será interrompida.</span><span class="sxs-lookup"><span data-stu-id="7ca58-213">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="7ca58-214">Todas as outras animações atribuídas a essa linha do tempo, continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-214">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="7ca58-215">A propriedade a ser animada, que é especificada como o identificador da propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="7ca58-215">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="7ca58-216">A linha do tempo da animação a ser aplicada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-216">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="7ca58-217">Um valor de enumeração que especifica como a nova animação interage com todas as animações atuais (em execução) que já estão afetando o valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="7ca58-217">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="7ca58-218">Inicia uma animação específica para uma propriedade animada especificada neste elemento, com a opção de especificar o que acontece se a propriedade já tiver uma animação em execução.</span><span class="sxs-lookup"><span data-stu-id="7ca58-218">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-219">Quando você verifica se uma propriedade é animada, observe que a animação começará e ser considerada animado quando o primeiro quadro além do ponto de partida sem animação é renderizado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-219">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="7ca58-220">Se o <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` é `null`, todas as animações atuais serão removidas e o valor atual da propriedade é mantido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-220">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="7ca58-221">Se todo o `animation` valor é `null`, todas as animações serão removidas da propriedade e o valor da propriedade será revertido para seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-221">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="7ca58-222">No entanto, a linha do tempo de animação originalmente associado não será interrompida.</span><span class="sxs-lookup"><span data-stu-id="7ca58-222">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="7ca58-223">Todas as outras animações atribuídas a essa linha do tempo, continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-223">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-224">Tenta forçar a captura do mouse para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-224">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-225"><see langword="true" /> se o mouse for capturado com êxito; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-225"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-226">Para ser capturados, um elemento deve ser habilitado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-226">To be captured, an element must be enabled.</span></span> <span data-ttu-id="7ca58-227">Verifique se <xref:System.Windows.ContentElement.IsEnabled%2A> está `true` antes de chamar <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-227">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="7ca58-228">Se chamar <xref:System.Windows.ContentElement.CaptureMouse%2A> retorna `true`, em seguida, <xref:System.Windows.ContentElement.IsMouseCaptured%2A> também é `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-228">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="7ca58-229">Se chamar <xref:System.Windows.ContentElement.CaptureMouse%2A> retorna `true`, em seguida, a <xref:System.Windows.ContentElement.GotMouseCapture> e <xref:System.Windows.ContentElement.IsMouseCapturedChanged> eventos são gerados, com <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> no evento dados relatados como o elemento no qual o <xref:System.Windows.ContentElement.CaptureMouse%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="7ca58-230">Se você forçar a captura, você pode interferir com capturas de existentes – especialmente com capturas que se relacionam com arrastar e soltar com o mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-230">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="7ca58-231">Para limpar a captura do mouse de todos os elementos, chame <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> com o `element` parâmetro fornecido como `null`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-231">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-232">O exemplo a seguir captura o mouse ou libera a captura, com base em se o mouse já é capturado pelo elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-232">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="7ca58-233">Observe que este exemplo converte o elemento de destino de captura em potencial para o <xref:System.Windows.IInputElement> da interface e, portanto, inicialmente é chamar o <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="7ca58-233">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7ca58-234">A projeção para <xref:System.Windows.IInputElement> é uma técnica que será útil se você não tiver certeza se o elemento que você deseja ter captura o mouse é uma <xref:System.Windows.UIElement> ou um <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-234">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="7ca58-235">A conversão de interface e o método de interface chamam, em seguida, chama o específicos do tipo CaptureMouse implementação apropriado internamente sem a necessidade de uma avaliação convertido em um <xref:System.Windows.UIElement> ou <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-235">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="7ca58-236">Essa mesma técnica de conversão funciona para outros membros que <xref:System.Windows.IInputElement> define, por exemplo muitos dos eventos relacionados à entrada e outros métodos de entrada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-236">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-237">Tenta forçar a captura da caneta para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-237">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-238"><see langword="true" /> se a caneta for capturada com êxito, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-238"><see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-239">A implementação do padrão com base no dispositivo de caneta padrão subjacente sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-239">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="7ca58-240">No entanto, se você estiver estendendo os dispositivos de entrada que fornecem a implementação de dispositivo para o sistema de entrada, é possível criar um sistema com uma implementação de dispositivo de caneta alternativos que pode retornar resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="7ca58-240">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="7ca58-241">Quando um elemento captura a caneta, ele recebe entrada de caneta, mesmo se a caneta está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-241">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="7ca58-242">Normalmente, a caneta é capturada somente durante as operações de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-242">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="7ca58-243">Chamar este método chama uma subjacente estática <xref:System.Windows.Input.Stylus> método <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-243">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="7ca58-244">O comportamento de captura real é implementado pela implementação de dispositivo de caneta ativa.</span><span class="sxs-lookup"><span data-stu-id="7ca58-244">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="7ca58-245">Para ser capturados, um elemento deve ser habilitado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-245">To be captured, an element must be enabled.</span></span> <span data-ttu-id="7ca58-246">Verifique se <xref:System.Windows.ContentElement.IsEnabled%2A> está `true` retornar antes de chamar <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-246">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="7ca58-247">Se chamar <xref:System.Windows.ContentElement.CaptureStylus%2A> retorna `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> também é `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-247">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="7ca58-248">O dispositivo a ser capturado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-248">The device to capture.</span></span></param>
        <summary><span data-ttu-id="7ca58-249">Tenta forçar a captura de um toque para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-249">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-250"><see langword="true" /> se o toque especificado for capturado para esse elemento; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-250"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> retornará `false` se o <xref:System.Windows.Input.TouchDevice> atualmente é capturado para outro elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="7ca58-252">Se <xref:System.Windows.ContentElement.CaptureTouch%2A> retorna `true`, em seguida, a <xref:System.Windows.ContentElement.GotTouchCapture> é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-252">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="7ca58-253">Para liberar a captura de um único toque desse elemento, use o <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> método e especifique o dispositivo de toque para liberar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-253">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="7ca58-254">Para liberar todos os toques desse elemento, use o <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7ca58-254">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ca58-255"><paramref name="touchDevice" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-255"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-256">Obtém uma coleção de objetos <see cref="T:System.Windows.Input.CommandBinding" /> associados a esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-256">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-257">A coleção de todos os objetos <see cref="T:System.Windows.Input.CommandBinding" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-257">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-258">Um <xref:System.Windows.Input.CommandBinding> permite a manipulação de comando de um comando específico para esse elemento e declara a ligação entre um comando, seus eventos e os manipuladores anexados por este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-258">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="7ca58-259">Outra maneira comum para preencher a <xref:System.Windows.ContentElement.CommandBindings%2A> coleção é usar <xref:System.Windows.Input.CommandManager> métodos por meio de programação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-259">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="7ca58-260">Uso do elemento propriedade XAML</span><span class="sxs-lookup"><span data-stu-id="7ca58-260">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7ca58-261">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7ca58-261">XAML Values</span></span>  
 <span data-ttu-id="7ca58-262">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="7ca58-262">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="7ca58-263">Um ou mais <xref:System.Windows.Input.CommandBinding> elementos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-263">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="7ca58-264">Cada um deles deve ter uma <xref:System.Windows.Input.CommandBinding.Command%2A> atributo definido como um comando conhecido, e os atributos definidos para o <xref:System.Windows.Input.CommandBinding.CanExecute> e <xref:System.Windows.Input.CommandBinding.Executed> implementações de manipulador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-264">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="7ca58-265">Para obter mais informações, consulte <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-265">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-266">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como o destino de arrastar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-266">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-267">Esse evento cria um alias para o <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-267">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-268">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.DragEnter> evento associado subjacente <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-268">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-269">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-270">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-270">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="7ca58-271">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-271">Routing strategy</span></span>|<span data-ttu-id="7ca58-272">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-272">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-273">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-273">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-274">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-274">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="7ca58-275">Substituir <xref:System.Windows.ContentElement.OnDragEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-275">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-276">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-276">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-277">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-278">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-279">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-280">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-281">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-282">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como a origem de arrastar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-282">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-283">Esse evento cria um alias para o <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-283">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-284">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.DragLeave> evento associado subjacente <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-284">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-285">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-286">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-286">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="7ca58-287">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-287">Routing strategy</span></span>|<span data-ttu-id="7ca58-288">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-288">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-289">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-290">O evento por túnel correspondente é <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-290">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="7ca58-291">Substituir <xref:System.Windows.ContentElement.OnDragLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-291">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-292">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-292">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-293">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-293">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-294">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-294">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-295">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-295">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-296">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-296">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-297">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-297">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-298">Ocorre quando o sistema de entrada relata um evento do tipo "arrastar" subjacente com esse elemento como a reprodução automática potencial.</span><span class="sxs-lookup"><span data-stu-id="7ca58-298">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-299">Esse evento ocorre mesmo se a operação de arrastar se origina dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-299">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="7ca58-300">Se a operação de arrastar inicia fora dos limites e, em seguida, move dentro, esse evento também é gerado, bem como <xref:System.Windows.ContentElement.DragEnter> e relacionados a eventos de visualização.</span><span class="sxs-lookup"><span data-stu-id="7ca58-300">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="7ca58-301">Esse evento cria um alias para o <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-301">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-302">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.DragOver> evento associado subjacente <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-302">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-303">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-303">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-304">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-304">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="7ca58-305">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-305">Routing strategy</span></span>|<span data-ttu-id="7ca58-306">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-306">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-307">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-307">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-308">O evento por túnel correspondente é <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-308">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="7ca58-309">Substituir <xref:System.Windows.ContentElement.OnDragOver%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-309">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-310">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-310">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-311">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-311">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-312">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-312">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-313">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-313">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-314">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-314">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-315">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-315">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-316">Ocorre quando o sistema de entrada relata um evento soltar subjacente com esse elemento sendo uma reprodução automática.</span><span class="sxs-lookup"><span data-stu-id="7ca58-316">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-317">Esse evento cria um alias para o <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-317">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-318">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.Drop> evento associado subjacente <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-318">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-319">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-319">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-320">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-320">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="7ca58-321">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-321">Routing strategy</span></span>|<span data-ttu-id="7ca58-322">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-322">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-323">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-323">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-324">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-324">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="7ca58-325">Substituir <xref:System.Windows.ContentElement.OnDrop%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-325">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-326">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.Drop" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-326">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-327">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-327">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-328">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-328">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-329">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-329">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-330">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-330">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-331">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-331">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-332">Tenta definir o foco para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-332">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-333"><see langword="true" /> se o foco do teclado puder ser definido para esse elemento, <see langword="false" /> se a chamada desse método não forçou o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-333"><see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-334">Para ser focalizável, <xref:System.Windows.ContentElement.Focusable%2A> e <xref:System.Windows.ContentElement.IsEnabled%2A> devem ser `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-334">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="7ca58-335">Observe que quase todos os <xref:System.Windows.ContentElement> classes derivadas não são <xref:System.Windows.ContentElement.Focusable%2A> por padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-335">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="7ca58-336">Mesmo se um elemento é a manipulação de eventos focalizável e habilitada, dentro de uma árvore específica, (por exemplo, para um controle de composição) pode responder a eventos de foco visualização, não permitindo que nele, o foco, portanto, esse método retornaria `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-336">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="7ca58-337">Foco em geral é regido por dois conceitos separados: foco do teclado e foco lógico, que nem sempre são idênticos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-337">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="7ca58-338">Esse método define o foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-338">This method sets the logical focus.</span></span> <span data-ttu-id="7ca58-339">Não há nenhum meio programático para definir o foco do teclado especificamente; o foco do teclado é determinado pela entrada do usuário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-339">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="7ca58-340">Para obter mais informações, consulte [visão geral do foco](~/docs/framework/wpf/advanced/focus-overview.md) e [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-340">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="7ca58-341">Se chamar <xref:System.Windows.ContentElement.Focus%2A> retorna `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> e <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> também são `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-341">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="7ca58-342">Se as propriedades relacionadas não ainda estiverem `true`, quando você chama <xref:System.Windows.ContentElement.Focus%2A>, um ou mais dos seguintes eventos são gerados na seguinte ordem: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (origem é o novo destino de foco), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (origem é o novo destino de foco).</span><span class="sxs-lookup"><span data-stu-id="7ca58-342">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-343">O exemplo a seguir é um manipulador de eventos de página carregada que localiza um especificado chamado parágrafo no documento e define o foco para ele.</span><span class="sxs-lookup"><span data-stu-id="7ca58-343">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="7ca58-344">Parágrafos não são focalizáveis por padrão. Este parágrafo específico tinha um estilo aplicado (não mostrado) que usou um estilo <xref:System.Windows.Setter> para torná-lo focalizável.</span><span class="sxs-lookup"><span data-stu-id="7ca58-344">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-345">Obtém ou define um valor que indica se um elemento pode receber foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-345">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="7ca58-346"><see langword="true" /> se o elemento for focalizável; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-346"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="7ca58-347">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-347">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-348">Somente o elemento focalizado recebe entrada do teclado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-348">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="7ca58-349">Determinadas classes derivadas podem substituir metadados para essa propriedade de dependência, de modo que a classe derivada é focada pelo padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-349">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="7ca58-350">Quando herdada pela <xref:System.Windows.Documents.Hyperlink> ou suas classes derivadas, <xref:System.Windows.Documents.Hyperlink> substitui os metadados para essa propriedade de dependência e redefine o valor padrão dessa propriedade para ser `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-350">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-351">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-351">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-352">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-352">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="7ca58-353">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-353">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-354">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-354">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-355">O exemplo a seguir cria um estilo que torna um <xref:System.Windows.Documents.Paragraph> focalizável por padrão e fornece um comportamento visual quando ele recebe o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-355">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-356">Quando você derivar de <see cref="T:System.Windows.ContentElement" />, considere se você deseja que o elemento a ser focalizável, porque, por padrão ele não poderá ser focalizável.</span><span class="sxs-lookup"><span data-stu-id="7ca58-356">When you derive from <see cref="T:System.Windows.ContentElement" />, consider whether you want your element to be focusable, because by default it will not be focusable.</span></span> <span data-ttu-id="7ca58-357">Se você quiser que o elemento a ser focalizável, substitua os metadados para essa propriedade em seu construtor estático da classe derivada da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="7ca58-357">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span></span> 
<span data-ttu-id="7ca58-358">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span><span class="sxs-lookup"><span data-stu-id="7ca58-358">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span></span> 
<span data-ttu-id="7ca58-359">onde <paramref name="myElement" /> é o nome de classe do tipo que você está substituindo o valor de metadados no.</span><span class="sxs-lookup"><span data-stu-id="7ca58-359">where <paramref name="myElement" /> is the class name of the type that you are overriding the metadata value on.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-360">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.Focusable" /> muda.</span><span class="sxs-lookup"><span data-stu-id="7ca58-360">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-361">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-361">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-362">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-362">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="7ca58-363">A propriedade de dependência a ser verificada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-363">The.dependency property to check.</span></span></param>
        <summary><span data-ttu-id="7ca58-364">Retorna o valor da propriedade base da propriedade especificada neste elemento, desconsiderando qualquer possível valor animado de uma animação parada ou em execução.</span><span class="sxs-lookup"><span data-stu-id="7ca58-364">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="7ca58-365">O valor da propriedade como se não houvesse nenhuma animação anexada à propriedade de dependência especificada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-365">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-366">Se não houvesse nenhuma animação é anexadas à propriedade o <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> valor retornado sempre é idêntico de <xref:System.Windows.DependencyObject.GetValue%2A> valor de retorno.</span><span class="sxs-lookup"><span data-stu-id="7ca58-366">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="7ca58-367">Se houver animações anexadas, toda animação possíveis derivado valores, incluindo o início e parada de valores é ignoradas e o valor da propriedade é determinado com base em todas as outras entradas possíveis.</span><span class="sxs-lookup"><span data-stu-id="7ca58-367">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="7ca58-368">Para obter mais informações, consulte [Precedência do valor da propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-368">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-369">Quando substituído em uma classe derivada, retornará um pai [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] alternativo para esse elemento se nenhum pai visual existir.</span><span class="sxs-lookup"><span data-stu-id="7ca58-369">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="7ca58-370">Um objeto se a implementação de uma classe derivada tiver uma conexão alternativa pai com o relatório.</span><span class="sxs-lookup"><span data-stu-id="7ca58-370">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-371">Retorna a implementação de virtual padrão desse método `null`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-371">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="7ca58-372"><xref:System.Windows.FrameworkContentElement> Fornece uma implementação prática.</span><span class="sxs-lookup"><span data-stu-id="7ca58-372"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="7ca58-373">Pais alternativos são usados para roteamento de eventos, nos casos em que um elemento cria uma estrutura pai alternativo para que seus eventos são roteados de forma que diverge do padrão de roteamento na árvore visual para o pai padrão, ou para baixo no estratégia de roteamento de visualização.</span><span class="sxs-lookup"><span data-stu-id="7ca58-373">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-374">Ocorre quando o sistema de entrada relata um evento de arrastar e soltar subjacente que envolve este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-374">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-375">O <xref:System.Windows.ContentElement.GiveFeedback> evento permite que a origem de um evento de arrastar para modificar a aparência do ponteiro do mouse para dar ao usuário feedback visual durante uma operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-375">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="7ca58-376">Os comentários visuais reforçam que uma operação de arrastar-e-soltar está em processo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-376">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="7ca58-377">Esse evento cria um alias para o <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.GiveFeedback> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-377">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-378">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.GiveFeedback> evento associado subjacente <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-378">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-379">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-380">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-380">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="7ca58-381">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-381">Routing strategy</span></span>|<span data-ttu-id="7ca58-382">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-382">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-383">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-383">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="7ca58-384">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-384">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="7ca58-385">Substituir <xref:System.Windows.ContentElement.OnGiveFeedback%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-385">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-386">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-386">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-387">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-387">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-388">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-388">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-389">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-389">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-390">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-390">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-391">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-391">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-392">Ocorre quando este elemento tem foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-392">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-393">Foco lógico é diferente do foco do teclado se foco deliberadamente é forçado por meio de uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-393">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="7ca58-394">Nesse cenário, o foco do teclado permanece onde ele é e o elemento no qual um <xref:System.Windows.ContentElement.Focus%2A> método é chamado ainda obtém de foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-394">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="7ca58-395">Uma interpretação mais precisa desse evento é que ele é gerado quando o valor da <xref:System.Windows.ContentElement.IsFocused%2A> propriedade de um elemento na rota é alterada de `false` para `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-395">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="7ca58-396">Como este evento usa o roteamento por propagação, o elemento que recebe o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-396">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-397">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que ganhou o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-397">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-398">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-398">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-399">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-399">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="7ca58-400">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-400">Routing strategy</span></span>|<span data-ttu-id="7ca58-401">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-401">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-402">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-402">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="7ca58-403">Não há nenhum evento de túnel correspondente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-403">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-404">Substituir <xref:System.Windows.ContentElement.OnGotFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-404">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-405">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-405">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-406">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-406">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-407">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-407">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-408">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-408">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-409">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-409">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-410">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-410">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-411">Ocorre quando o teclado está focalizado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-411">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-412"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> é um evento semelhante que rastreia as alterações de status em uma propriedade que mantém o estado de foco para um elemento; o <xref:System.Windows.ContentElement.GotKeyboardFocus> é gerado em muitas das mesmas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="7ca58-412"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="7ca58-413">Como este evento usa o roteamento por propagação, o elemento que tem o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-413">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-414">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que tem o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-414">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="7ca58-415">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.GotKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-415">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-416">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.GotKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-416">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-417">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-418">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-418">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="7ca58-419">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-419">Routing strategy</span></span>|<span data-ttu-id="7ca58-420">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-420">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-421">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-421">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="7ca58-422">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-422">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="7ca58-423">Substituir <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-423">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-424">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-424">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-425">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-425">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-426">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-426">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-427">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-427">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-428">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-428">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-429">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-429">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-430">Ocorre quando este elemento captura o mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-430">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-431">Quando um elemento captura o mouse, ele recebe entrada do mouse, mesmo se o ponteiro do mouse está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-431">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="7ca58-432">O mouse normalmente é capturado apenas durante operações de arrastar e soltar e permanece capturado até que ocorra a ação drop da operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-432">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="7ca58-433">Como este evento usa o roteamento por propagação, o elemento que tem captura pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-433">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-434">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> no evento de captura de dados para determinar o elemento real que tem o mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-434">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="7ca58-435">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.GotMouseCapture> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-435">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-436">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.GotMouseCapture> evento associado subjacente <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-436">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-437">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-437">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-438">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-438">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="7ca58-439">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-439">Routing strategy</span></span>|<span data-ttu-id="7ca58-440">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-440">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-441">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-441">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7ca58-442">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-442">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-443">Substituir <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-443">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-444">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-444">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-445">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-445">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-446">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-446">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-447">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-447">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-448">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-448">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-449">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-449">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-450">Ocorre quando este elemento captura a caneta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-450">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-451">Quando um elemento captura a caneta, ele recebe entrada de caneta, mesmo se o ponteiro está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-451">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="7ca58-452">A caneta normalmente é capturada apenas durante operações de arrastar e soltar e retém captura até que ocorra a ação drop da operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-452">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="7ca58-453">Como este evento usa o roteamento por propagação, o elemento que tem captura pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-453">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-454">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que tem captura.</span><span class="sxs-lookup"><span data-stu-id="7ca58-454">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="7ca58-455">Esse evento cria um alias para o evento anexado para essa classe, de modo que <xref:System.Windows.ContentElement.GotStylusCapture> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-455">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-456">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.GotStylusCapture> evento associado subjacente <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-456">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-457">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-457">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-458">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-458">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="7ca58-459">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-459">Routing strategy</span></span>|<span data-ttu-id="7ca58-460">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-460">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-461">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-461">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-462">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-462">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-463">Substituir <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-463">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-464">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-464">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-465">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-465">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-466">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-466">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-467">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-467">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-468">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-468">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-469">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-469">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-470">Ocorre quando um toque é capturado para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-470">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-471">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-471">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-472">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-472">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="7ca58-473">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-473">Routing strategy</span></span>|<span data-ttu-id="7ca58-474">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-474">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-475">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-475">Delegate</span></span>|<span data-ttu-id="7ca58-476"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-476"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-477">Substituir <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-477">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-478">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.GotTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-478">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-479">Obtém um valor que indica se esse elemento tem propriedades animadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-479">Gets a value that indicates whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="7ca58-480"><see langword="true" /> se este elemento tem animações anexadas a uma de suas propriedades; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-480"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-481">Essa propriedade retorna `true` para persistentes animações (unclocked, sempre em execução) ou para as animações que têm uma linha do tempo específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-481">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-482">Obtém a coleção de associações de entrada associadas a este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-482">Gets the collection of input bindings that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-483">A coleção de ligações de entrada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-483">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-484">Suportam a associações de entrada a associação de comandos para dispositivos de entrada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-484">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="7ca58-485">Por exemplo, <xref:System.Windows.Input.MouseBinding> implementa associações que incluem propriedades que são específicas para dispositivos de mouse de entrada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-485">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="7ca58-486">A coleção de associações de entrada inclui as associações de entrada que pertencem ao tipo e também as associações de entrada que são declaradas na instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-486">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="7ca58-487">Uma propriedade relacionada, <xref:System.Windows.ContentElement.CommandBindings%2A>, mantém uma coleção de associações de comando.</span><span class="sxs-lookup"><span data-stu-id="7ca58-487">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="7ca58-488">Essas associações diferem das associações de entrada que eles representam o próximo nível para baixo de processamento do comando - ações que estão vinculados a conhecidos de comandos e manipuladores de classe específica para eles.</span><span class="sxs-lookup"><span data-stu-id="7ca58-488">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="7ca58-489">Uso do elemento propriedade XAML</span><span class="sxs-lookup"><span data-stu-id="7ca58-489">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="7ca58-490">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="7ca58-490">XAML Values</span></span>  
 <span data-ttu-id="7ca58-491">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="7ca58-491">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="7ca58-492">Um ou mais <xref:System.Windows.Input.InputBinding> elementos (normalmente a <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding> classes derivadas).</span><span class="sxs-lookup"><span data-stu-id="7ca58-492">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="7ca58-493">Cada um deles deve ter uma <xref:System.Windows.Input.InputBinding.Command%2A> e <xref:System.Windows.Input.InputBinding.Gesture%2A> conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-493">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-494">Obtém ou define um valor que indica se esse elemento está habilitado no [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7ca58-494">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="7ca58-495"><see langword="true" /> se o elemento estiver habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-495"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-496">O valor padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-496">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-497">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-497">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-498">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-498">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="7ca58-499">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-499">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-500">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-500">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-501">O exemplo a seguir cria um estilo que inclui um setter de propriedade que fornece um comportamento visual alternativo quando um <xref:System.Windows.Documents.Hyperlink> é definido como <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-501">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-502">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsEnabled" /> neste elemento é alterado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-502">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-503">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-503">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-504">Obtém um valor que se torna o valor retornado de <see cref="P:System.Windows.ContentElement.IsEnabled" /> em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-504">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="7ca58-505"><see langword="true" /> se o elemento estiver habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-505"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-506">A implementação padrão dessa propriedade armazena o valor em cache e também calcula se o elemento pai desse elemento está habilitado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-506">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="7ca58-507">(Se o pai não estiver habilitado, o elemento filho não pode ser habilitado com eficiência em práticos [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Se você optar por substituir essa implementação, certifique-se de que você chame a implementação base para preservar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-507">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-508">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-508">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-509">Obtém um valor que determina se esse elemento tem foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-509">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="7ca58-510"><see langword="true" /> se esse elemento tiver o foco lógico; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-510"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-511">Foco lógico pode diferir do foco do teclado, se um aplicativo tiver várias divisões de foco, tais como entre o conteúdo do menu e o restante do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-511">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="7ca58-512">Nesse cenário, só pode ser o foco do teclado em um elemento de interface do usuário do aplicativo, no entanto, certos elementos na outras divisões de foco ainda podem manter foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-512">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="7ca58-513">Para obter mais informações sobre o foco lógico, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md) e [visão geral do foco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-513">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-514">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-514">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-515">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-515">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="7ca58-516">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-516">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-517">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-517">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-518">O exemplo a seguir cria um estilo que torna um <xref:System.Windows.Documents.Paragraph> focalizável por padrão e fornece um comportamento visual quando ele recebe o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-518">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-519">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsFocused" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-519">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-520">Obtém um valor que indica se um sistema de método de entrada, como um [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], está habilitado para processamento de entrada para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-520">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-521"><see langword="true" /> se um método de entrada estiver ativo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-521"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-522">O valor padrão da propriedade anexada subjacente é <see langword="true" />; no entanto, esse valor é influenciado pelo estado de métodos de entrada em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="7ca58-522">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-523">Essa propriedade retorna o valor retornado pela propriedade anexada <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> para os métodos de entrada atualmente habilitados (teclado, fala e outros dispositivos de entrada).</span><span class="sxs-lookup"><span data-stu-id="7ca58-523">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-524">Obtém um valor que indica se esse elemento tem o foco do teclado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-524">Gets a value that indicates whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="7ca58-525"><see langword="true" /> se esse elemento tiver o foco do teclado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-525"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-526">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-526">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-527">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-527">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-528">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-528">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="7ca58-529">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-529">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-530">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-530">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-531">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-531">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-532">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-532">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-533">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-533">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-534">Obtém um valor que indica se o foco do teclado está em qualquer lugar dentro do elemento ou elementos filho.</span><span class="sxs-lookup"><span data-stu-id="7ca58-534">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span></span></summary>
        <value><span data-ttu-id="7ca58-535"><see langword="true" /> se o foco do teclado está no elemento ou em seus elementos filho; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-535"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-536">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-536">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-537">Alterações ao valor dessa propriedade normalmente geram a <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> evento, a menos que uma classe derivada tiver substituído <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> para suprimir o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-537">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="7ca58-538">Você não definir essa propriedade diretamente, mas você pode definir o foco para o elemento chamando <xref:System.Windows.ContentElement.Focus%2A>, ou fazendo uma <xref:System.Windows.ContentElement.MoveFocus%2A> solicitação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-538">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="7ca58-539">Qualquer uma dessas chamadas de método pode alterar esse valor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="7ca58-539">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-540">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-540">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-541">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-541">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="7ca58-542">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-542">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-543">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-543">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-544">Ocorre quando o valor da propriedade <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-544">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-545">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-545">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-546">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-546">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-547">Obtém um valor que indica se o mouse é capturado por esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-547">Gets a value that indicates whether the mouse is captured by this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-548"><see langword="true" /> se o elemento tiver a captura do mouse; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-548"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-549">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-549">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-550">Estado de captura do mouse está relacionado a operações de arrastar e soltar no processo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-550">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-551">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-551">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-552">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-552">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="7ca58-553">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-553">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-554">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-554">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-555">O exemplo a seguir ativa o estado de captura do mouse ou desativa com base em se o mouse já é capturado pelo elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-555">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-556">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-556">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-557">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-557">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-558">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsMouseCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-558">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-559">Obtém um valor que determina se a captura do mouse é mantida por esse elemento ou elementos filho em sua árvore de elementos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-559">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span></span></summary>
        <value><span data-ttu-id="7ca58-560"><see langword="true" /> se esse elemento ou um elemento contido tiver captura do mouse; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-560"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-561">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-561">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-562">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-562">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-563">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-563">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="7ca58-564">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-564">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-565">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-565">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-566">Ocorre quando o valor do <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> é alterado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-566">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-567">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-567">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-568">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-568">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-569">Obtém um valor que indica se a posição do ponteiro do mouse corresponde aos resultados de teste de clique, que levam em consideração a composição de elementos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-569">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="7ca58-570"><see langword="true" /> se o ponteiro do mouse estiver sobre o mesmo resultado do elemento que um teste de clique; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-570"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-571">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-571">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-572">Diferentemente <xref:System.Windows.ContentElement.IsMouseOver%2A>, essa propriedade só é `true` se o ponteiro do mouse está sobre o elemento literal – assim como para um teste de clique.</span><span class="sxs-lookup"><span data-stu-id="7ca58-572">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="7ca58-573">Se, em vez disso, o ponteiro do mouse está sobre um elemento filho, em particular sobre os elementos que fazem parte de um elemento modelo mais profundo e composição, essa propriedade será `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-573">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="7ca58-574">A menos que você sabe como um controle é composto (por exemplo, você usa essa propriedade em um modelo de controle personalizado para um controle que você definir), essa propriedade pode retornar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-574">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="7ca58-575">Na maioria dos cenários em que você não estiver criando controles, use <xref:System.Windows.ContentElement.IsMouseOver%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="7ca58-575">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="7ca58-576">Se o mouse é capturado por esse elemento, e essa propriedade é `true` no momento da captura, essa propriedade continuarão a retornar `true` até que a captura do mouse é perdida e o ponteiro não está sobre seus limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-576">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-577">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-577">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-578">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-578">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="7ca58-579">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-579">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-580">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-580">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-581">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-581">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-582">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-582">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-583">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-583">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-584">Obtém um valor que indica se o ponteiro do mouse está localizado sobre esse elemento (incluindo os elementos filho visuais ou sua composição de controle).</span><span class="sxs-lookup"><span data-stu-id="7ca58-584">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span></span></summary>
        <value><span data-ttu-id="7ca58-585"><see langword="true" /> se o ponteiro do mouse estiver sobre o elemento ou seus elementos filho; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-585"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-586">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-586">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-587">Embora não exista um evento de "IsMouseOverChanged" análogo, fazer vários eventos semelhantes.</span><span class="sxs-lookup"><span data-stu-id="7ca58-587">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="7ca58-588">Por exemplo, você pode usar <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, e <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-588">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="7ca58-589">Se este elemento captura o mouse, essa propriedade permanece `true` até que a captura do mouse é perdida e o ponteiro do mouse sai dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-589">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-590">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-590">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-591">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-591">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="7ca58-592">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-592">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-593">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-593">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-594">O exemplo a seguir cria um estilo que inclui um setter de propriedade que fornece um comportamento visual alternativo quando um <xref:System.Windows.Documents.Hyperlink> relatórios <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-594">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-595">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsMouseOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-595">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-596">Obtém um valor que indica se a caneta é capturada para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-596">Gets a value that indicates whether the stylus is captured to this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-597"><see langword="true" /> se o elemento tem captura da caneta; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-597"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-598">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-598">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-599">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-599">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-600">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-600">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-601">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-602">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-602">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="7ca58-603">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-603">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-604">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-605">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-605">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-606">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-606">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-607">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsStylusCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-607">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-608">Obtém um valor que determina se a captura da caneta é mantida por esse elemento, incluindo elementos filho e composição de controle.</span><span class="sxs-lookup"><span data-stu-id="7ca58-608">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span></span></summary>
        <value><span data-ttu-id="7ca58-609"><see langword="true" /> Se a captura da caneta é mantida dentro desse elemento; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-609"><see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-610">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-610">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-611">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-611">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-612">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-612">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-613">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-613">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="7ca58-614">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-614">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-615">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-615">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-616">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-616">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-617">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-617">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-618">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-618">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-619">Obtém um valor que indica se a posição da caneta corresponde aos resultados de teste de clique, que levam em consideração a composição dos elementos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-619">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="7ca58-620"><see langword="true" /> Se a caneta está sobre o mesmo elemento como um teste de clique; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-620"><see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-621">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-621">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-622">Diferentemente <xref:System.Windows.ContentElement.IsStylusOver%2A>, essa propriedade só é `true` se a caneta está sobre o elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-622">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="7ca58-623">Se, em vez disso, a caneta está sobre um elemento filho ou elementos que fazem parte da composição de mais de um elemento, essa propriedade será `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-623">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="7ca58-624">A menos que você sabe como um controle é composto (por exemplo, você usa essa propriedade em um modelo de controle personalizado para um controle que você definir), essa propriedade pode retornar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-624">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="7ca58-625">Na maioria dos cenários em que você não estiver criando controles, use <xref:System.Windows.ContentElement.IsStylusOver%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="7ca58-625">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="7ca58-626">Se este elemento tem captura da caneta e esta propriedade é `true` no momento da captura, essa propriedade permanece `true` até que a captura da caneta é perdida e não está sobre seus limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-626">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="7ca58-627">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-627">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-628">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-628">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-629">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-629">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-630">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-630">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="7ca58-631">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-631">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-632">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-632">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-633">Ocorre quando o valor da propriedade <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> é alterado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-633">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-634">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-634">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-635">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-635">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-636">Obtém um valor que indica se a caneta está localizada sobre esse elemento (incluindo elementos filho visuais).</span><span class="sxs-lookup"><span data-stu-id="7ca58-636">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="7ca58-637"><see langword="true" /> Se a caneta está sobre o elemento ou seus elementos filho; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-637"><see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7ca58-638">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-638">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-639">Se este elemento tem captura da caneta, essa propriedade permanece `true` até que a captura da caneta é perdida e o ponteiro está fora dos seus limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-639">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="7ca58-640">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-640">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-641">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-641">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7ca58-642">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="7ca58-642">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-643">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-643">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="7ca58-644">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="7ca58-644">Metadata properties set to `true`</span></span>|<span data-ttu-id="7ca58-645">Nenhum</span><span class="sxs-lookup"><span data-stu-id="7ca58-645">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-646">Identifica a propriedade de dependência <see cref="P:System.Windows.ContentElement.IsStylusOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-646">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-647">Ocorre quando uma tecla é pressionada enquanto o foco está neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-647">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-648">Manipulação de chave interage com outros recursos de plataforma, como a composição de texto e dos comandos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-648">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="7ca58-649">O <xref:System.Windows.ContentElement.KeyDown> é um evento de entrada de texto de nível inferior pode não se comportar conforme o esperado em certos controles.</span><span class="sxs-lookup"><span data-stu-id="7ca58-649">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="7ca58-650">Isso ocorre porque alguns controles têm a composição de controle ou manipulação de classe que fornece uma versão de nível mais alto de texto, manipulação de entrada e eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-650">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="7ca58-651">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.KeyDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-651">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-652">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.KeyDown> evento associado subjacente <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-652">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-653">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-653">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-654">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-654">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="7ca58-655">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-655">Routing strategy</span></span>|<span data-ttu-id="7ca58-656">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-656">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-657">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-657">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="7ca58-658">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-658">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-659">Substituir <xref:System.Windows.ContentElement.OnKeyDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-659">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-660">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-660">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-661">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-661">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-662">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-662">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-663">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-663">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-664">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-664">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-665">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-665">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-666">Ocorre quando uma chave é liberada enquanto o foco está neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-666">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-667">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.ContentElement.KeyUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-667">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-668">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.KeyUp> evento associado subjacente <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-668">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-669">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-670">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-670">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="7ca58-671">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-671">Routing strategy</span></span>|<span data-ttu-id="7ca58-672">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-672">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-673">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-673">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="7ca58-674">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-674">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-675">Substituir <xref:System.Windows.ContentElement.OnKeyUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-675">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-676">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-676">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-677">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-678">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-679">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-680">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-681">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-682">Ocorre quando este elemento perde o foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-682">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-683">Foco lógico é diferente do foco do teclado se o foco é deliberadamente forçado imediatamente, usando uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-683">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="7ca58-684">Neste cenário, permanece de foco do teclado em que ele é e o elemento no qual um <xref:System.Windows.ContentElement.Focus%2A> método é chamado ainda obtém de foco lógico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-684">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="7ca58-685">Uma interpretação mais precisa desse evento é que ele é gerado quando o valor da <xref:System.Windows.ContentElement.IsFocused%2A> muda de propriedade de um elemento na rota de `true` para `false`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-685">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="7ca58-686">Como este evento usa o roteamento por propagação, o elemento que perde o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-686">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-687">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que ganhou o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-687">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-688">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-688">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-689">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-689">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="7ca58-690">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-690">Routing strategy</span></span>|<span data-ttu-id="7ca58-691">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-691">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-692">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-692">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="7ca58-693">Não há nenhum evento de túnel correspondente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-693">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-694">Substituir <xref:System.Windows.ContentElement.OnLostFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-694">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-695">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-695">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-696">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-696">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-697">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-697">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-698">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-698">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-699">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-699">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-700">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-700">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-701">Ocorre quando o teclado não está mais focalizado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-701">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-702">Como este evento usa o roteamento por propagação, o elemento que perdeu o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-702">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-703">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-703">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="7ca58-704">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.LostKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-704">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-705">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.LostKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-705">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-706">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-706">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-707">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-707">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="7ca58-708">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-708">Routing strategy</span></span>|<span data-ttu-id="7ca58-709">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-709">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-710">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-710">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="7ca58-711">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-711">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="7ca58-712">Substituir <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-712">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-713">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-713">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-714">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-714">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-715">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-715">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-716">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-716">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-717">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-717">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-718">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-718">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-719">Ocorre quando este elemento perde a captura do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-719">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-720">Quando um elemento captura o mouse, ele recebe entrada do mouse, mesmo se o ponteiro está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-720">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="7ca58-721">Normalmente, o mouse é capturado apenas durante operações de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-721">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="7ca58-722">Como este evento usa o roteamento por propagação, o elemento perde a captura pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-722">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-723">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu a captura.</span><span class="sxs-lookup"><span data-stu-id="7ca58-723">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="7ca58-724">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.LostMouseCapture> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-724">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-725">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.LostMouseCapture> evento associado subjacente <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-725">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-726">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-727">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-727">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="7ca58-728">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-728">Routing strategy</span></span>|<span data-ttu-id="7ca58-729">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-729">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-730">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-730">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7ca58-731">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-731">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-732">Substituir <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-732">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-733">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-733">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-734">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-735">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-736">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-737">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-738">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-739">Ocorre quando este elemento perde a captura da caneta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-739">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-740">Quando um elemento captura a caneta, ele recebe entrada de caneta, mesmo se o ponteiro está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="7ca58-740">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="7ca58-741">Normalmente, a caneta é capturada somente durante as operações de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-741">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="7ca58-742">Como este evento usa o roteamento por propagação, o elemento que perde o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-742">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-743">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-743">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="7ca58-744">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.LostStylusCapture> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-744">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-745">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.LostStylusCapture> evento associado subjacente <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-745">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-746">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-746">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-747">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-747">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="7ca58-748">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-748">Routing strategy</span></span>|<span data-ttu-id="7ca58-749">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-749">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-750">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-750">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-751">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-751">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-752">Substituir <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-752">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-753">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-753">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-754">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-754">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-755">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-755">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-756">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-756">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-757">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-757">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-758">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-758">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-759">Ocorre quando este elemento perde a captura do toque.</span><span class="sxs-lookup"><span data-stu-id="7ca58-759">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-760">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-760">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-761">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-761">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="7ca58-762">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-762">Routing strategy</span></span>|<span data-ttu-id="7ca58-763">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-763">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-764">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-764">Delegate</span></span>|<span data-ttu-id="7ca58-765"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-765"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-766">Substituir <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-766">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-767">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.LostTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-767">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-768">Ocorre quando qualquer botão do mouse é pressionado enquanto o ponteiro está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-768">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-769">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.MouseDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-769">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-770">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.MouseDown> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-770">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-771">O <xref:System.Windows.ContentElement.MouseDown> é normalmente gerado junto com qualquer um <xref:System.Windows.ContentElement.MouseLeftButtonDown> ou <xref:System.Windows.ContentElement.MouseRightButtonDown>, que correspondem a um pressionamento de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-771">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="7ca58-772"><xref:System.Windows.ContentElement.MouseLeftButtonDown> e <xref:System.Windows.ContentElement.MouseRightButtonDown> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-772"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="7ca58-773">Consulte os comentários para <xref:System.Windows.ContentElement.MouseLeftButtonDown> ou <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-773">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ca58-774">Alguns <xref:System.Windows.ContentElement> as classes derivadas que têm o comportamento do tipo de controle, por exemplo, <xref:System.Windows.Documents.Hyperlink>, pode ter inerentes a manipulação de classe para eventos do botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-774">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="7ca58-775">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-775">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="7ca58-776">A classe tratamento geralmente marca subjacente <xref:System.Windows.Input.Mouse> eventos de classe como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-776">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="7ca58-777">Depois que o evento é marcado como manipulado, outros manipuladores de instância que são anexados a esse elemento não são acionados normalmente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-777">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="7ca58-778">Qualquer outras classe ou instância manipuladores que estão anexados a elementos na direção por propagação na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-778">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="7ca58-779">Você pode resolver o problema descrito no item anterior importante e ainda receber <xref:System.Windows.ContentElement.MouseDown> eventos para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem, usando qualquer uma dessas soluções de manipulação de classe:</span><span class="sxs-lookup"><span data-stu-id="7ca58-779">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="7ca58-780">Anexar manipuladores para o <xref:System.Windows.ContentElement.PreviewMouseDown> evento, que não está marcado como manipulado pelos controles.</span><span class="sxs-lookup"><span data-stu-id="7ca58-780">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="7ca58-781">Observe que, como esse é um evento de visualização, a rota é iniciado na raiz e túneis ao controle.</span><span class="sxs-lookup"><span data-stu-id="7ca58-781">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="7ca58-782">Registrar um manipulador no controle de forma procedimental chamando <xref:System.Windows.ContentElement.AddHandler%2A> e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos do mesmo se eles já estão marcados como manipulados nos dados do evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-782">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-783">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-783">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-784">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-784">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="7ca58-785">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-785">Routing strategy</span></span>|<span data-ttu-id="7ca58-786">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-786">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-787">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-787">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-788">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-788">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-789">Substituir <xref:System.Windows.ContentElement.OnMouseDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-789">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-790">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-790">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-791">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-791">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-792">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-792">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-793">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-793">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-794">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-794">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-795">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-795">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-796">Ocorre quando o ponteiro do mouse entra nos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-796">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-797"><xref:System.Windows.ContentElement.MouseEnter> é um [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-797"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="7ca58-798">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-798">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="7ca58-799">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-799">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="7ca58-800">Embora <xref:System.Windows.ContentElement.MouseEnter> rastreia quando o ponteiro do mouse entra nos limites de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.ContentElement.IsMouseOver%2A> o valor da propriedade foi alterado de `false` para `true` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-800">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="7ca58-801">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.MouseEnter> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-801">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-802">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.MouseEnter> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-802">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-803">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-803">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-804">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-804">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="7ca58-805">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-805">Routing strategy</span></span>|<span data-ttu-id="7ca58-806">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-806">Direct</span></span>|  
|<span data-ttu-id="7ca58-807">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-807">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7ca58-808">Substituir <xref:System.Windows.ContentElement.OnMouseEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-808">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-809">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-809">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-810">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-810">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-811">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-811">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-812">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-812">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-813">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-813">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-814">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-814">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-815">Ocorre quando o ponteiro do mouse sai dos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-815">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-816"><xref:System.Windows.ContentElement.MouseLeave> é um [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-816"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="7ca58-817">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-817">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="7ca58-818">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-818">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="7ca58-819">Embora <xref:System.Windows.ContentElement.MouseLeave> rastreia quando o mouse sai de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.ContentElement.IsMouseOver%2A> o valor da propriedade foi alterado de `true` para `false` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-819">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="7ca58-820">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.MouseLeave> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-820">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-821">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.MouseLeave> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-821">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-822">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-822">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-823">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-823">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="7ca58-824">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-824">Routing strategy</span></span>|<span data-ttu-id="7ca58-825">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-825">Direct</span></span>|  
|<span data-ttu-id="7ca58-826">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-826">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7ca58-827">Substituir <xref:System.Windows.ContentElement.OnMouseLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-827">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-828">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-828">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-829">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-829">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-830">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-830">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-831">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-831">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-832">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-832">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-833">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-833">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-834">Ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-834">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-835">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-835">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-836">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-836">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-837">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-837">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-838">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-838">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-839">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-839">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-840">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-840">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-841">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-841">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ca58-842">Alguns <xref:System.Windows.ContentElement> as classes derivadas que têm o comportamento do tipo de controle, por exemplo, <xref:System.Windows.Documents.Hyperlink>, pode ter inerentes a manipulação de classe para eventos do botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-842">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="7ca58-843">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-843">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="7ca58-844">A classe tratamento geralmente marca subjacente <xref:System.Windows.Input.Mouse> eventos de classe como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-844">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="7ca58-845">Depois que o evento é marcado como manipulado, outros manipuladores de instância que são anexados a esse elemento não são acionados normalmente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-845">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="7ca58-846">Qualquer outras classe ou instância manipuladores que estão anexados a elementos na direção por propagação na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-846">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="7ca58-847">Você pode resolver o problema descrito no item anterior importante e ainda receber <xref:System.Windows.ContentElement.MouseLeftButtonDown> eventos para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem, usando qualquer uma dessas soluções de manipulação de classe:</span><span class="sxs-lookup"><span data-stu-id="7ca58-847">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="7ca58-848">Anexar manipuladores para o <xref:System.Windows.ContentElement.PreviewMouseDown> evento, que não está marcado como manipulado pelos controles.</span><span class="sxs-lookup"><span data-stu-id="7ca58-848">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="7ca58-849">Observe que, como esse é um evento de visualização, a rota é iniciado na raiz e túneis ao controle.</span><span class="sxs-lookup"><span data-stu-id="7ca58-849">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="7ca58-850">Registrar um manipulador no controle de forma procedimental chamando <xref:System.Windows.ContentElement.AddHandler%2A> e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos do mesmo se eles já estão marcados como manipulados nos dados do evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-850">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-851">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-851">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-852">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-852">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="7ca58-853">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-853">Routing strategy</span></span>|<span data-ttu-id="7ca58-854">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-854">Direct</span></span>|  
|<span data-ttu-id="7ca58-855">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-855">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-856">Substituir <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-856">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-857">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-857">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-858">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-858">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-859">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-859">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-860">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-860">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-861">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-861">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-862">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-862">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-863">Ocorre quando o botão esquerdo do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-863">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-864">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-864">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-865">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-865">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-866">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-866">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-867">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-867">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-868">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-868">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-869">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-869">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-870">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-870">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-871">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-871">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-872">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-872">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="7ca58-873">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-873">Routing strategy</span></span>|<span data-ttu-id="7ca58-874">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-874">Direct</span></span>|  
|<span data-ttu-id="7ca58-875">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-875">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-876">Substituir <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-876">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-877">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-877">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-878">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-878">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-879">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-879">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-880">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-880">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-881">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-881">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-882">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-882">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-883">Ocorre quando o ponteiro do mouse se move enquanto está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-883">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-884">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.MouseMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-884">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-885">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.MouseMove> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-885">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-886">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-886">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-887">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-887">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="7ca58-888">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-888">Routing strategy</span></span>|<span data-ttu-id="7ca58-889">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-889">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-890">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-890">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7ca58-891">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-891">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-892">Substituir <xref:System.Windows.ContentElement.OnMouseMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-892">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-893">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-893">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-894">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-894">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-895">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-895">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-896">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-896">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-897">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-897">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-898">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-898">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-899">Ocorre quando o botão direito do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-899">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-900">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-900">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-901">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-901">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-902">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-902">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-903">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-903">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-904">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-904">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-905">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-905">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-906">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-906">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-907">Eventos do botão direito do mouse frequentemente têm manipulação nativa em cenários de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-907">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="7ca58-908">Por exemplo, um botão direito do mouse para baixo pode exibir um menu de contexto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-908">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="7ca58-909">Ver [visão geral de ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-909">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-910">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-910">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-911">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-911">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="7ca58-912">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-912">Routing strategy</span></span>|<span data-ttu-id="7ca58-913">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-913">Direct</span></span>|  
|<span data-ttu-id="7ca58-914">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-914">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-915">Substituir <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-915">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-916">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-916">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-917">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-917">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-918">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-918">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-919">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-919">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-920">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-920">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-921">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-921">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-922">Ocorre quando o botão direito do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-922">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-923">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-923">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-924">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-924">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-925">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-925">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-926">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-926">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-927">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-927">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-928">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-928">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-929">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-929">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-930">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-930">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-931">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-931">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="7ca58-932">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-932">Routing strategy</span></span>|<span data-ttu-id="7ca58-933">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-933">Direct</span></span>|  
|<span data-ttu-id="7ca58-934">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-934">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-935">Substituir <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-935">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-936">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-936">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-937">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-937">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-938">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-938">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-939">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-939">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-940">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-940">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-941">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-941">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-942">Ocorre quando qualquer botão do mouse é liberado sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-942">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-943">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.MouseUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-943">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-944">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.MouseUp> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-944">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-945">O <xref:System.Windows.ContentElement.MouseUp> é normalmente gerado junto com qualquer um <xref:System.Windows.ContentElement.MouseLeftButtonUp> ou <xref:System.Windows.ContentElement.MouseRightButtonUp>, que correspondem a uma versão de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-945">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="7ca58-946"><xref:System.Windows.ContentElement.MouseLeftButtonUp> e <xref:System.Windows.ContentElement.MouseRightButtonUp> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-946"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="7ca58-947">Consulte os comentários para <xref:System.Windows.ContentElement.MouseLeftButtonUp> ou <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-947">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-948">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-948">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-949">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-949">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="7ca58-950">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-950">Routing strategy</span></span>|<span data-ttu-id="7ca58-951">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-951">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-952">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-952">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-953">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-953">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-954">Substituir <xref:System.Windows.ContentElement.OnMouseUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-954">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-955">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-955">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-956">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-956">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-957">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-957">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-958">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-958">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-959">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-959">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-960">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-960">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-961">Ocorre quando o usuário gira a roda do mouse enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-961">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-962">Captura de foco ou de mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber o <xref:System.Windows.ContentElement.MouseWheel> eventos de um elemento com foco ou capturado, o ponteiro do mouse, na verdade, pode ser em outro elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-962">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="7ca58-963">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.MouseWheel> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-963">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-964">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.MouseWheel> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-964">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-965">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-965">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-966">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-966">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="7ca58-967">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-967">Routing strategy</span></span>|<span data-ttu-id="7ca58-968">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-968">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-969">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-969">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="7ca58-970">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-970">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="7ca58-971">Substituir <xref:System.Windows.ContentElement.OnMouseWheel%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-971">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-972">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-972">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-973">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-973">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-974">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-974">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-975">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-975">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-976">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-976">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-977">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-977">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="7ca58-978">Uma solicitação de passagem, que contém uma propriedade que indica um modo para percorrer uma ordem de tabulação existente ou uma direção de movimentação visualmente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-978">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="7ca58-979">Tenta mover o foco deste para outro elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-979">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="7ca58-980">A direção para mover o foco é especificada por uma direção de diretrizes, que é interpretada dentro da organização do pai visual deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-980">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-981"><see langword="true" /> se a passagem solicitada foi executada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-981"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-982">Verifique se que você verificar o valor de retorno desse método.</span><span class="sxs-lookup"><span data-stu-id="7ca58-982">Make sure you check the return value of this method.</span></span> <span data-ttu-id="7ca58-983">Um valor retornado de `false` pode ser retornado se a travessia é executado em uma parada de tabulação é definida pela composição de um controle e a solicitação de passagem não solicitou para encapsular.</span><span class="sxs-lookup"><span data-stu-id="7ca58-983">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-984">Retorna implementações de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específicas à classe para a infra-estrutura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7ca58-984">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="7ca58-985">A implementação de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica ao tipo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-985">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-986">A implementação desse método é normalmente chamar o construtor de um determinado <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementação e retorná-lo como o valor de retorno.</span><span class="sxs-lookup"><span data-stu-id="7ca58-986">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="7ca58-987">Todos os <see cref="T:System.Windows.ContentElement" /> classes derivadas devem implementar esse método para fornecer suas próprias específicos <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementações para o [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infraestrutura.</span><span class="sxs-lookup"><span data-stu-id="7ca58-987">All <see cref="T:System.Windows.ContentElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="7ca58-988">Para obter detalhes sobre como implementar esse padrão, consulte <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-988">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-989">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-989">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-990">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragEnter" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-990">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-991">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-991">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-992">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-992">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-993">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-993">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-994">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-994">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-995">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-995">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-996">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-996">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-997">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-997">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-998">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-998">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-999">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-999">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1000">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1000">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1001">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1001">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1002">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragLeave" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1002">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1003">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1003">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1004">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1004">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1005">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1005">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1006">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1006">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1007">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1007">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1008">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1008">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1009">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1009">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1010">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1010">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1011">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1011">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1012">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1012">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1013">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1013">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1014">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragOver" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1014">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1015">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1015">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1016">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1016">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1017">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1017">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1018">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1018">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1019">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1019">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1020">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1020">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1021">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1021">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1022">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1022">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1023">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1023">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1024">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1024">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1025">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1025">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1026">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragEnter" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1026">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1027">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1027">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1028">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1028">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1029">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1029">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1030">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1030">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1031">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1031">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1032">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1032">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1033">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1033">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1034">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1034">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1035">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1035">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1036">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1036">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1037">O <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1037">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1038">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.GiveFeedback" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1038">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1039">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1039">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1040">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1040">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1041">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1041">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1042">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1042">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1043">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1043">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1044">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1044">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1045">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1045">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1046">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1046">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1047">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1047">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1048">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1048">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1049">Um <see cref="T:System.Windows.RoutedEventArgs" /> que contém dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1049">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="7ca58-1050">Esses dados de evento devem conter o identificador para o evento <see cref="E:System.Windows.ContentElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1050">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="7ca58-1051">Gera o evento roteado <see cref="E:System.Windows.ContentElement.GotFocus" /> usando os dados de evento fornecidos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1051">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1052">Esse método, embora virtual, têm uma implementação padrão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1052">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="7ca58-1053">Isso em \* implementação do método destina-se para gerar o evento, e essa mesma implementação de método é chamada internamente para aumentar o evento quando o <xref:System.Windows.ContentElement.IsFocused%2A> alterações de valor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1053">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="7ca58-1054">O <xref:System.Windows.ContentElement.OnGotFocus%2A> difere de implementação de algum outro [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] em \* implementações, que fornecem apenas uma maneira conveniente de adicionar a manipulação de classe para que o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1054">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-1055">A menos que você tenha uma necessidade deliberada e incomuns não geram os eventos de foco, certifique-se de que sua implementação chama a implementação base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1055">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="7ca58-1056">Caso contrário, o <see cref="E:System.Windows.ContentElement.GotFocus" /> evento não é acionado durante as operações típicas de usuário que normalmente define o foco para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1056">Otherwise, the <see cref="E:System.Windows.ContentElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="7ca58-1057">Se você não pretender seu elemento a ser focalizáveis, você pode impedir que o elemento focalizável definindo <see cref="P:System.Windows.ContentElement.Focusable" /> para <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1057">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span> <span data-ttu-id="7ca58-1058">Observe que, por padrão uma <see cref="P:System.Windows.ContentElement.Focusable" /> não for focalizável, portanto definir <see cref="P:System.Windows.ContentElement.Focusable" /> deliberadamente não pode ser necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1058">Note that by default a <see cref="P:System.Windows.ContentElement.Focusable" /> is not focusable, therefore setting <see cref="P:System.Windows.ContentElement.Focusable" /> deliberately might not be necessary.</span></span></para></block>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1059">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1059">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1060">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1060">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1061">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1061">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1062">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1062">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1063">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1063">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1064">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1064">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1065">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1065">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1066">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1066">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1067">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1067">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1068">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1068">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1069">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1069">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1070">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1070">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1071">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1071">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1072">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1072">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1073">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1073">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1074">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1074">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1075">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1075">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1076">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1076">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1077">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1077">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1078">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1078">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1079">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1079">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1080">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1080">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1081">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1081">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1082">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1082">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1083">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1083">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1084">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1084">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1085">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1085">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1086">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1086">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1087">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1087">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1088">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1088">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1089">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1089">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1090">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1090">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1091">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1091">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1092">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1092">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1093">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1093">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1094">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1094">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1095">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1095">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1096">Fornece tratamento de classes para os eventos roteados <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> que ocorrem quando um toque é capturado para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1096">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1097">O <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1097">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1098">Substituir <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.GotTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1098">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="7ca58-1099">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1099">Be sure to call the base class' <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1100">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1100">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1101">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1101">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1102">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1102">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1103">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> alterações de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1103">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="7ca58-1104">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1104">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1105">Em seguida, a <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1105">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1106">Observe que o <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1106">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="7ca58-1107">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1107">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1108">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1108">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1109">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1109">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1110">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1110">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1111">Um <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1111">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1112">Invocado pouco antes do evento <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> ser gerado por este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1112">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="7ca58-1113">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1113">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1114">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1114">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1115">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1115">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1116">Em seguida, a <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1116">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1117">Observe que o <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1117">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="7ca58-1118">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1118">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1119">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1119">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1120">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1120">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1121">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1121">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1122">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1122">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1123">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1123">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1124">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1124">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1125">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsMouseCaptured%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1125">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1126">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1126">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1127">Em seguida, a <xref:System.Windows.ContentElement.IsMouseCapturedChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1127">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1128">Observe que o <xref:System.Windows.ContentElement.IsMouseCapturedChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1128">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="7ca58-1129">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1129">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1130">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1130">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1131">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1131">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1132">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1132">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1133">Um <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1133">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1134">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1134">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1135">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1135">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-1136">Esse método virtual é gerado quando o valor da <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1136">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1137">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1137">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1138">Em seguida, a <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1138">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1139">Observe que o evento não é um evento roteado. Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1139">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="7ca58-1140">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1140">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1141">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1141">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1142">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1142">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1143">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1143">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1144">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1144">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1145">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1145">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1146">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1146">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1147">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1147">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1148">Em seguida, a <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1148">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1149">Observe que o <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1149">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="7ca58-1150">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1150">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1151">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1151">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1152">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1152">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1153">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1153">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1154">Um <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1154">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1155">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1155">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1156">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1156">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1157">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsStylusCaptured%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1157">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1158">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1158">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1159">Em seguida, a <xref:System.Windows.ContentElement.IsStylusCapturedChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1159">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1160">Observe que o evento não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1160">Notice that the event is not a routed event.</span></span> <span data-ttu-id="7ca58-1161">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1161">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1162">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1162">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1163">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1163">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1164">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1164">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1165">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1165">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1166">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1166">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1167">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1167">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1168">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1168">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1169">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1169">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1170">Em seguida, a <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1170">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1171">Observe que o evento não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1171">Notice that the event is not a routed event.</span></span> <span data-ttu-id="7ca58-1172">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1172">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1173">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1173">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1174">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1174">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1175">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1175">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1176">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1176">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1177">Invocado quando um evento <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1177">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="7ca58-1178">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1178">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1179">Esse método virtual é gerado quando o valor da <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1179">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="7ca58-1180">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1180">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="7ca58-1181">Em seguida, a <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1181">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="7ca58-1182">Observe que o evento não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1182">Notice that the event is not a routed event.</span></span> <span data-ttu-id="7ca58-1183">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1183">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="7ca58-1184">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1184">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1185">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1185">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1186">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1186">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1187">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1187">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1188">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1188">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1189">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1189">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1190">Pressionamentos de tecla são tratados por um Gerenciador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1190">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="7ca58-1191">Outros recursos de programação que dependem de pressionamentos de teclas, por exemplo, associações de entrada e comandos, podem manipular o pressionamento de tecla antes que ele é exposto como um pressionamento de tecla geral.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1191">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="7ca58-1192">Se esses entrada recursos do sistema marcam o evento como manipulado, em seguida, <xref:System.Windows.ContentElement.OnKeyDown%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1192">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1193">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1193">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1194">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1194">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1195">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1195">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1196">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1196">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1197">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1197">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1198">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1198">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1199">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1199">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1200">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1200">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1201">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1201">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1202">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1202">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1203">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1203">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1204">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1204">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1205">Pressionamentos de tecla são tratados por um Gerenciador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1205">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="7ca58-1206">Outros recursos de programação que dependem de pressionamentos de teclas, por exemplo, associações de entrada e comandos, podem manipular o pressionamento de tecla antes que ele é exposto como um pressionamento de tecla geral.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1206">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="7ca58-1207">Se esses entrada recursos do sistema marcam o evento como manipulado, em seguida, <xref:System.Windows.ContentElement.OnKeyUp%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1207">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1208">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1208">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1209">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1209">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1210">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1210">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1211">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1211">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1212">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1212">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1213">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1213">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1214">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1214">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1215">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1215">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1216">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1216">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1217">Um <see cref="T:System.Windows.RoutedEventArgs" /> que contém dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1217">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="7ca58-1218">Esses dados de evento devem conter o identificador para o evento <see cref="E:System.Windows.ContentElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1218">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="7ca58-1219">Gera o evento roteado <see cref="E:System.Windows.ContentElement.LostFocus" /> usando os dados de evento fornecidos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1219">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1220">Esse método, embora virtual, têm uma implementação padrão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1220">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="7ca58-1221">Isso em \* implementação do método destina-se para gerar o evento, e essa mesma implementação de método é chamada internamente para aumentar o evento quando o <xref:System.Windows.ContentElement.IsFocused%2A> alterações de valor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1221">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="7ca58-1222">Essa implementação é diferente de algum outro [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] em \* implementações, que fornecem apenas uma maneira conveniente de adicionar a manipulação de classe para que o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1222">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7ca58-1223">A menos que você tenha uma necessidade deliberada e incomuns não geram os eventos de foco, certifique-se de que sua implementação chama a implementação base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1223">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="7ca58-1224">Caso contrário, o <see cref="E:System.Windows.ContentElement.LostFocus" /> evento não é acionado durante as operações típicas de usuário que normalmente define o foco para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1224">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="7ca58-1225">Se você não pretender seu elemento a ser focalizáveis, você pode impedir que o elemento focalizável definindo <see cref="P:System.Windows.ContentElement.Focusable" /> para <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1225">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1226">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1226">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1227">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1227">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1228">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1228">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1229">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1229">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1230">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1230">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1231">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1231">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1232">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1232">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1233">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1233">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1234">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1234">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1235">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1235">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1236">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1236">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1237">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1237">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1238">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1238">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1239">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1239">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1240">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1240">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1241">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1241">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1242">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1242">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1243">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1243">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1244">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1244">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1245">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1245">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1246">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1246">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1247">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1247">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1248">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1248">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1249">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1249">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1250">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1250">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1251">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1251">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1252">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1252">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1253">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1253">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1254">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1254">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1255">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1255">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1256">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1256">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1257">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1257">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1258">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1258">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1259">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1259">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1260">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1260">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1261">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1261">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1262">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1262">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1263">Fornece tratamento de classes para o evento roteado <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> que ocorre quando este elemento perde a captura de toque.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1263">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1264">O <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1264">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1265">Substituir <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.LostTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1265">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="7ca58-1266">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1266">Be sure to call the base class' <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1267">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1267">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1268">Esses dados de evento relatam detalhes sobre o botão do mouse que foi pressionado e o estado tratado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1268">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="7ca58-1269">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1269">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1270">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1270">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1271">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1271">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="7ca58-1272">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1272">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="7ca58-1273">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.ContentElement.OnMouseDown%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1273">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1274">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.ContentElement.MouseLeftButtonDown> e <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1274">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="7ca58-1275">Qualquer um desses eventos podem ser gerado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1275">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="7ca58-1276">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1276">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="7ca58-1277">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1277">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="7ca58-1278">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1278">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="7ca58-1279">Manipulando <xref:System.Windows.ContentElement.OnMouseDown%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse possíveis velocidade das ações de.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1279">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="7ca58-1280">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1280">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="7ca58-1281">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1281">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="7ca58-1282">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1282">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1283">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1283">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1284">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1284">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1285">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1285">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1286">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1286">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1287">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1287">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1288">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1288">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1289">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1289">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1290">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1290">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1291">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1291">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1292">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1292">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="7ca58-1293">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1293">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1294">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1294">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1295">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1295">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1296">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1296">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="7ca58-1297">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1297">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1298">Nesse caso, o evento correspondente é um evento roteado, com uma estratégia de roteamento direto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1298">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="7ca58-1299">Marcar o evento como manipulado ainda é útil para que os manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1299">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1300">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1300">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1301">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1301">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="7ca58-1302">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1302">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1303">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1303">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1304">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1304">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1305">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1305">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="7ca58-1306">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1306">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1307">Nesse caso, o evento correspondente é um evento roteado, com uma estratégia de roteamento direto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1307">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="7ca58-1308">Marcar o evento como manipulado ainda é útil para que os manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1308">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1309">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1309">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1310">Os dados do evento relatam que o botão esquerdo do mouse foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1310">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="7ca58-1311">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> sem tratamento é gerado nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1311">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="7ca58-1312">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1312">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1313">O <xref:System.Windows.ContentElement.MouseLeftButtonDown> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1313">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1314"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1314"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="7ca58-1315">Embora você pode marcar o <xref:System.Windows.ContentElement.MouseLeftButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1315">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1316">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1316">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1317">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1317">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1318">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1318">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1319">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1319">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1320">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1320">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="7ca58-1321">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1321">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="7ca58-1322">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1322">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="7ca58-1323">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1323">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="7ca58-1324">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Button> e substituir <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> em sua classe derivada sem chamar a implementação base; no entanto, isso substituir desabilita o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1324">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1325">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1325">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1326">Os dados do evento relatam que o botão esquerdo foi liberado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1326">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="7ca58-1327">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1327">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1328">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1328">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1329">O <xref:System.Windows.ContentElement.MouseLeftButtonUp> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1329">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1330"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1330"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="7ca58-1331">Embora você pode marcar o <xref:System.Windows.ContentElement.MouseLeftButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1331">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1332">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1332">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1333">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1333">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1334">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1334">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1335">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1335">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1336">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1336">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1337">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1337">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1338">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1338">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1339">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1339">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1340">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1340">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1341">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1341">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1342">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1342">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1343">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1343">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1344">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1344">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1345">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1345">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1346">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1346">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1347">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1347">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1348">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1348">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1349">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1349">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1350">Os dados do evento relatam que o botão direito do mouse foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1350">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="7ca58-1351">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1351">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1352">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1352">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1353">O <xref:System.Windows.ContentElement.MouseRightButtonDown> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1353">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1354"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1354"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="7ca58-1355">Embora você pode marcar o <xref:System.Windows.ContentElement.MouseRightButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1355">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1356">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1356">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1357">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1357">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1358">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1358">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1359">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1359">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1360">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1360">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="7ca58-1361">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1361">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="7ca58-1362">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1362">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="7ca58-1363">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1363">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="7ca58-1364">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Control> e substituir <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> em sua classe derivada sem base chamada; no entanto, essa substituição desativa os serviços de menu de contexto em seu controle, que fazem parte do <xref:System.Windows.Controls.Control> comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1364">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1365">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1365">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1366">Os dados do evento relatam que o botão direito do mouse foi liberado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1366">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="7ca58-1367">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1367">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1368">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1368">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1369">O <xref:System.Windows.ContentElement.MouseRightButtonUp> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1369">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1370"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1370"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="7ca58-1371">Embora você pode marcar o <xref:System.Windows.ContentElement.MouseRightButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1371">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1372">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1372">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1373">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1373">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1374">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1374">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1375">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1375">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1376">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1376">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1377">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1377">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1378">Os dados do evento relatam que o botão do mouse foi liberado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1378">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="7ca58-1379">Invocado quando um evento roteado <see cref="E:System.Windows.Input.Mouse.MouseUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1379">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1380">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1380">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1381">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1381">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="7ca58-1382">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1382">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="7ca58-1383">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.ContentElement.OnMouseUp%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1383">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1384">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.ContentElement.MouseLeftButtonUp> e <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1384">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="7ca58-1385">Qualquer um desses eventos pode ser disparado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1385">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="7ca58-1386">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1386">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="7ca58-1387">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1387">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="7ca58-1388">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1388">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="7ca58-1389">Manipulando <xref:System.Windows.ContentElement.OnMouseUp%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse de possíveis ações de.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1389">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="7ca58-1390">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1390">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="7ca58-1391">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1391">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="7ca58-1392">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1392">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1393">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1393">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1394">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1394">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1395">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1395">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1396">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1396">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1397">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1397">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1398">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1398">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1399">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1399">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1400">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1400">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1401">O <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1401">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1402">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1402">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1403">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1403">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1404">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1404">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1405">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1405">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1406">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1406">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1407">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1407">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1408">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1408">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1409">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1409">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1410">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1410">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1411">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1411">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1412">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1412">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1413">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1413">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1414">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1414">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1415">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1415">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1416">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1416">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1417">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1417">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1418">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1418">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1419">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1419">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1420">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1420">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1421">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1421">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1422">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1422">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1423">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1423">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1424">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1424">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1425">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1425">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1426">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1426">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1427">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1427">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1428">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1428">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1429">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1429">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1430">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1430">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1431">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1431">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1432">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1432">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1433">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1433">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1434">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1434">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1435">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1435">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1436">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1436">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1437">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1437">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1438">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1438">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1439">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1439">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1440">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1440">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1441">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1441">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1442">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1442">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1443">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1443">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1444">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1444">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1445">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1445">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1446">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1446">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1447">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1447">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1448">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1448">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1449">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1449">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1450">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1450">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1451">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1451">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1452">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1452">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1453">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDrop" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1453">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1454">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1454">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1455">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1455">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1456">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1456">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1457">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1457">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1458">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1458">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1459">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1459">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1460">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1460">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1461">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1461">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1462">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1462">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1463">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1463">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1464">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1464">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1465">O <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1465">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1466">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1466">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1467">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1467">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1468">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1468">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1469">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1469">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1470">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1470">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1471">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1471">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1472">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1472">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1473">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1473">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1474">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1474">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1475">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1475">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1476">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1476">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1477">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1477">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1478">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1478">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1479">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1479">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1480">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1480">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1481">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1481">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1482">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1482">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1483">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1483">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1484">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1484">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1485">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1485">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1486">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1486">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1487">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1487">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1488">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1488">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1489">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1489">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1490">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1490">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1491">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1491">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1492">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1492">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1493">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1493">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1494">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1494">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1495">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1495">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1496">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1496">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1497">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1497">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1498">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1498">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1499">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1499">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1500">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1500">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1501">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1501">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1502">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1502">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1503">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1503">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1504">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1504">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1505">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1505">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1506">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1506">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1507">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1507">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1508">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1508">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1509">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1509">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1510">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1510">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1511">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1511">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1512">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1512">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1513">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1513">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1514">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1514">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1515">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1515">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1516">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1516">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1517">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1517">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1518">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1518">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1519">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1519">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1520">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1520">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1521">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1521">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1522">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1522">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1523">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1523">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1524">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1524">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1525">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1525">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1526">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1526">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1527">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1527">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1528">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1528">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1529">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1529">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1530">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1530">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1531">Os dados de evento relatam que um ou mais botões do mouse foram pressionados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1531">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="7ca58-1532">Invocado quando um evento roteado anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1532">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1533">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1533">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1534">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1534">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="7ca58-1535">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1535">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="7ca58-1536">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1536">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1537">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> e <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1537">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="7ca58-1538">Qualquer um desses eventos podem ser gerado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1538">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="7ca58-1539">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1539">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="7ca58-1540">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1540">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="7ca58-1541">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1541">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="7ca58-1542">Manipulando <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse possíveis velocidade das ações de.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1542">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="7ca58-1543">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1543">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="7ca58-1544">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1544">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="7ca58-1545">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1545">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1546">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1546">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1547">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1547">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1548">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1548">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1549">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1549">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1550">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1550">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1551">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1551">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1552">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1552">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1553">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1553">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1554">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1554">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1555">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1555">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1556">Os dados do evento relatam que o botão esquerdo do mouse foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1556">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="7ca58-1557">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1557">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1558">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1558">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1559">O <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1559">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1560"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1560"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="7ca58-1561">Embora você pode marcar o <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1561">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1562">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1562">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1563">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1563">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1564">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1564">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1565">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1565">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1566">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1566">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="7ca58-1567">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1567">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="7ca58-1568">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1568">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="7ca58-1569">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1569">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="7ca58-1570">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Button> e substituir <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> em sua classe derivada sem chamar a implementação base; no entanto, isso substituir desabilita o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1570">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1571">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1571">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1572">Os dados do evento relatam que o botão esquerdo foi liberado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1572">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="7ca58-1573">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1573">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1574">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1574">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1575">O <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1575">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1576"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1576"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="7ca58-1577">Embora você pode marcar o <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1577">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1578">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1578">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1579">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1579">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1580">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1580">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1581">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1581">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1582">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1582">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1583">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1583">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1584">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1584">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1585">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1585">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1586">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1586">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1587">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1587">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1588">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1588">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1589">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1589">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1590">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1590">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1591">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1591">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1592">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1592">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1593">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1593">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1594">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1594">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1595">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1595">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1596">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1596">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1597">Os dados do evento relatam que o botão direito do mouse foi pressionado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1597">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="7ca58-1598">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1598">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1599">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1599">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1600">O <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1600">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1601"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1601"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="7ca58-1602">Embora você pode marcar o <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1602">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1603">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1603">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1604">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1604">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1605">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1605">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1606">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1606">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1607">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1607">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="7ca58-1608">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1608">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="7ca58-1609">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1609">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="7ca58-1610">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1610">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="7ca58-1611">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Control> e substituir <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> em sua classe derivada sem base chamada; no entanto, essa substituição desativa os serviços de menu de contexto em seu controle, que fazem parte do <xref:System.Windows.Controls.Control> comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1611">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1612">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1612">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1613">Os dados do evento relatam que o botão direito do mouse foi liberado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1613">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="7ca58-1614">Invocado quando um evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1614">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1615">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1615">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1616">O <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1616">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="7ca58-1617"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.ContentElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1617"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="7ca58-1618">Embora você pode marcar o <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1618">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="7ca58-1619">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1619">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1620">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.ContentElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1620">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="7ca58-1621">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1621">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="7ca58-1622">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1622">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ca58-1623">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.ContentElement> substituindo <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1623">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1624">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1624">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="7ca58-1625">Os dados de evento informam que um ou mais botões do mouse foram soltos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1625">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="7ca58-1626">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1626">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1627">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1627">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1628">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1628">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="7ca58-1629">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1629">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="7ca58-1630">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1630">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="7ca58-1631">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> e <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1631">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="7ca58-1632">Qualquer um desses eventos pode ser disparado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1632">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="7ca58-1633">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1633">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="7ca58-1634">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1634">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="7ca58-1635">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1635">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="7ca58-1636">Manipulando <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse de possíveis ações de.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1636">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="7ca58-1637">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1637">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="7ca58-1638">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1638">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="7ca58-1639">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1639">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1640">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1640">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1641">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1641">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1642">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1642">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1643">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1643">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1644">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1644">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1645">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1645">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1646">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1646">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1647">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1647">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1648">O <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1648">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1649">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1649">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1650">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1650">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1651">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1651">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1652">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1652">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1653">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1653">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1654">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1654">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1655">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1655">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1656">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1656">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1657">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1657">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1658">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1658">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1659">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1659">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1660">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1660">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1661">O <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1661">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1662">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1662">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1663">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1663">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1664">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1664">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1665">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1665">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1666">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1666">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1667">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1667">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1668">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1668">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1669">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1669">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1670">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1670">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1671">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1671">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1672">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1672">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1673">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1673">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1674">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1674">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1675">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1675">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1676">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1676">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1677">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1677">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1678">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1678">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1679">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1679">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1680">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1680">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1681">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1681">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1682">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1682">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1683">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1683">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1684">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1684">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1685">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1685">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1686">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1686">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1687">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1687">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1688">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1688">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1689">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1689">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1690">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1690">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1691">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1691">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1692">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1692">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1693">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1693">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1694">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1694">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1695">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1695">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1696">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1696">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1697">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1697">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1698">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1698">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1699">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1699">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1700">O <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1700">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1701">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1701">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1702">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1702">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1703">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1703">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1704">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1704">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1705">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1705">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1706">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1706">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1707">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1707">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1708">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1708">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1709">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1709">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1710">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1710">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1711">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1711">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1712">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1712">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1713">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1713">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1714">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1714">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1715">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1715">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1716">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1716">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1717">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1717">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1718">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1718">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1719">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1719">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1720">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1720">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1721">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1721">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1722">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1722">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1723">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1723">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1724">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1724">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1725">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1725">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1726">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1726">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1727">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1727">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1728">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1728">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1729">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1729">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1730">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1730">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1731">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1731">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1732">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1732">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1733">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1733">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1734">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1734">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1735">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1735">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1736">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1736">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1737">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1737">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1738">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1738">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1739">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1739">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1740">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1740">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1741">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1741">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1742">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1742">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1743">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1743">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1744">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1744">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1745">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1745">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1746">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1746">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1747">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1747">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1748">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1748">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1749">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1749">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1750">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1750">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1751">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1751">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1752">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1752">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1753">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1753">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1754">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1754">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1755">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1755">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1756">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1756">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1757">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1757">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1758">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1758">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1759">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1759">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1760">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1760">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1761">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1761">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1762">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1762">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1763">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1763">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1764">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1764">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1765">O <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1765">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1766">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1766">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1767">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1767">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1768">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1768">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1769">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1769">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1770">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1770">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1771">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1771">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1772">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1772">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1773">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1773">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1774">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1774">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1775">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1775">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1776">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1776">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1777">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1777">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1778">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1778">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1779">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1779">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1780">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1780">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1781">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1781">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1782">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1782">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1783">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1783">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1784">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1784">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1785">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1785">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1786">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1786">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1787">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1787">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1788">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1788">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1789">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1789">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1790">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1790">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1791">O <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1791">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1792">Invocado quando um evento anexado <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1792">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1793">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1793">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1794">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1794">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1795">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1795">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1796">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1796">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1797">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1797">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1798">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1798">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1799">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1799">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1800">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1800">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1801">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1801">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1802">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1802">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="7ca58-1803">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1803">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1804">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1804">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1805">Fornece tratamento de classes para os eventos roteados <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> que ocorrem quando um toque pressiona esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1805">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1806">O <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1806">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1807">Substituir <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.PreviewTouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1807">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="7ca58-1808">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1808">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1809">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1810">Fornece manipulação de classes para o evento roteado <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> que ocorre quando há uma movimentação de toque nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1810">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1811">O <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1811">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1812">Substituir <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.PreviewTouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1812">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="7ca58-1813">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1813">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1814">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1815">Fornece tratamento de classe para os eventos roteados <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> que ocorrem quando um toque é liberado dentro desse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1815">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1816">O <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1816">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1817">Substituir <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.PreviewTouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1817">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="7ca58-1818">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1818">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1819">O <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1819">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1820">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1820">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1821">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1821">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1822">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1822">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1823">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1823">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1824">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1824">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1825">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1825">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1826">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1826">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1827">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1827">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1828">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1828">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1829">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1829">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1830">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1830">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1831">O <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1831">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1832">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1832">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1833">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1833">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1834">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1834">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1835">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1835">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1836">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1836">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1837">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1837">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1838">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1838">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1839">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1839">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1840">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1840">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1841">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1841">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1842">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1842">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1843">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1843">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1844">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1844">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1845">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1845">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1846">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1846">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1847">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1847">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1848">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1848">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1849">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1849">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1850">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1850">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1851">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1851">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1852">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1852">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1853">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1853">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1854">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1854">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1855">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1855">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1856">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1856">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1857">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1857">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1858">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1858">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1859">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1859">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1860">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1860">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1861">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1861">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1862">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1862">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1863">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1863">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1864">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1864">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1865">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1865">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1866">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1866">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1867">O <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1867">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1868">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1868">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1869">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1869">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1870">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1870">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1871">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1871">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1872">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1872">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1873">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1873">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1874">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1874">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1875">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1875">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1876">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1876">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1877">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1877">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1878">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1878">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1879">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1879">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1880">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> sem tratamento é gerado por esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1880">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="7ca58-1881">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1881">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1882">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1882">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1883">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1883">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1884">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1884">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="7ca58-1885">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1885">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1886">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1886">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1887">Marcar o evento como manipulado ainda é útil para impedir a manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1887">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1888">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1888">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1889">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1889">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1890">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1890">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1891">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1891">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1892">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1892">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1893">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1893">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1894">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1894">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1895">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1895">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1896">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1896">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1897">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1897">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1898">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1898">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1899">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1899">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1900">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1900">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1901">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1901">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1902">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1902">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1903">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1903">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1904">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1904">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1905">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1905">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1906">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1906">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1907">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1907">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1908">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1908">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1909">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1909">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1910">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1910">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1911">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1911">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1912">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1912">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1913">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> sem tratamento é gerado por esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1913">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="7ca58-1914">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1914">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1915">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1915">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1916">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1916">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="7ca58-1917">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1917">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="7ca58-1918">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1918">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1919">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1919">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1920">Marcar o evento como manipulado ainda é útil para impedir a manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1920">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1921">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1921">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1922">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1922">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1923">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1923">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1924">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1924">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1925">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1925">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1926">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1926">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1927">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1927">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1928">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1928">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1929">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1929">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1930">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1930">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1931">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1931">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1932">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1932">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1933">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1933">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1934">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1934">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1935">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1935">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1936">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1936">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1937">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1937">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1938">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1938">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1939">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1939">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1940">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1940">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1941">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1941">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1942">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1942">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1943">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1943">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1944">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1944">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1945">O <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1945">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1946">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1946">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1947">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1947">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1948">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1948">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1949">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1949">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1950">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1950">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1951">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1951">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1952">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1952">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1953">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1953">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1954">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1954">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1955">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1955">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1956">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1956">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1957">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1957">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1958">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1958">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1959">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1959">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1960">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1960">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1961">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1961">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1962">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1962">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1963">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1963">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1964">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1964">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1965">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1965">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1966">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1966">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1967">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1967">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1968">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1968">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1969">O <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1969">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1970">Invocado quando um evento anexado <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1970">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="7ca58-1971">Implemente esse método para adicionar tratamento de classe a esse evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1971">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1972">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1972">This method has no default implementation.</span></span> <span data-ttu-id="7ca58-1973">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1973">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="7ca58-1974">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1974">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="7ca58-1975">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1975">In this case the matching event is a routed event.</span></span> <span data-ttu-id="7ca58-1976">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1976">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="7ca58-1977">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1977">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="7ca58-1978">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1978">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="7ca58-1979">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.ContentElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1979">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="7ca58-1980">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1980">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1981">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1981">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1982">Fornece tratamento de classes para os eventos roteados <see cref="E:System.Windows.ContentElement.TouchDown" /> que ocorrem quando há um toque nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1982">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1983">O <xref:System.Windows.ContentElement.OnTouchDown%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1983">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1984">Substituir <xref:System.Windows.ContentElement.OnTouchDown%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.TouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1984">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="7ca58-1985">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnTouchDown%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1985">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1986">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1987">Fornece tratamento de classes para os eventos roteados de <see cref="E:System.Windows.ContentElement.TouchEnter" /> que ocorre quando um toque é movido de fora para dentro dos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1987">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1988">O <xref:System.Windows.ContentElement.OnTouchEnter%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1988">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1989">Substituir <xref:System.Windows.ContentElement.OnTouchEnter%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.TouchEnter> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1989">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="7ca58-1990">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnTouchEnter%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1990">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1991">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1992">Fornece tratamento de classe para o evento roteado <see cref="E:System.Windows.ContentElement.TouchLeave" /> que ocorre quando um toque é movido de dentro para fora dos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1992">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1993">O <xref:System.Windows.ContentElement.OnTouchLeave%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1993">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1994">Substituir <xref:System.Windows.ContentElement.OnTouchLeave%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.TouchLeave> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1994">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="7ca58-1995">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnTouchLeave%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1995">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-1996">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-1997">Fornece manipulação de classes para o evento roteado <see cref="E:System.Windows.ContentElement.TouchMove" /> que ocorre quando há uma movimentação de toque nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1997">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-1998">O <xref:System.Windows.ContentElement.OnTouchMove%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1998">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-1999">Substituir <xref:System.Windows.ContentElement.OnTouchMove%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.TouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-1999">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="7ca58-2000">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnTouchMove%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2000">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-2001">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7ca58-2002">Fornece tratamento de classe para os eventos roteados <see cref="E:System.Windows.ContentElement.TouchUp" /> que ocorrem quando um toque é liberado dentro desse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2002">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2003">O <xref:System.Windows.ContentElement.OnTouchUp%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2003">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="7ca58-2004">Substituir <xref:System.Windows.ContentElement.OnTouchUp%2A> em uma classe derivada para manipular o <xref:System.Windows.ContentElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2004">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="7ca58-2005">Certifique-se de chamar a classe base <xref:System.Windows.ContentElement.OnTouchUp%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2005">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="7ca58-2006">A direção da passagem do foco solicitada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2006">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="7ca58-2007">Quando substituído em uma classe derivada, retorna o elemento que deve receber o foco para uma direção de passagem do foco especificada, sem realmente mover o foco para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2007">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-2008">O elemento que teria recebido foco, se <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> realmente fosse invocado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2008">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2009">A implementação padrão desse método nesta classe está incompleta e sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2009">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2010">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como o destino de arrastar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2010">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2011">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewDragEnter> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2011">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2012">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewDragEnter> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2012">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2013">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2013">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2014">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2014">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="7ca58-2015">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2015">Routing strategy</span></span>|<span data-ttu-id="7ca58-2016">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2016">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2017">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2017">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-2018">O evento por propagação correspondente é <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2018">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="7ca58-2019">Substituir <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2019">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2020">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewDragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2020">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2021">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2021">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2022">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2022">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2023">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2023">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2024">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2024">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2025">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2025">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2026">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como a origem de arrastar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2026">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2027">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewDragLeave> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2027">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2028">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewDragLeave> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2028">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2029">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2029">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2030">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2030">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="7ca58-2031">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2031">Routing strategy</span></span>|<span data-ttu-id="7ca58-2032">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2032">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2033">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2033">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-2034">O evento por propagação correspondente é <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2034">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="7ca58-2035">Substituir <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2035">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2036">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewDragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2036">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2037">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2037">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2038">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2038">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2039">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2039">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2040">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2040">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2041">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2041">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2042">Ocorre quando o sistema de entrada relata um evento do tipo "arrastar" subjacente com esse elemento como a reprodução automática potencial.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2042">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2043">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewDragOver> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2043">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2044">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewDragOver> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2044">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2045">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2045">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2046">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2046">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="7ca58-2047">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2047">Routing strategy</span></span>|<span data-ttu-id="7ca58-2048">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2048">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2049">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2049">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-2050">O evento por propagação correspondente é <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2050">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="7ca58-2051">Substituir <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2051">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2052">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewDragOver" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2052">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2053">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2053">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2054">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2054">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2055">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2055">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2056">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2056">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2057">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2057">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2058">Ocorre quando o sistema de entrada relata um evento soltar subjacente com esse elemento sendo uma reprodução automática.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2058">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2059">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewDrop> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2059">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2060">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewDrop> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2060">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2061">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2061">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2062">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2062">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="7ca58-2063">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2063">Routing strategy</span></span>|<span data-ttu-id="7ca58-2064">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2064">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2065">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2065">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="7ca58-2066">O evento por propagação correspondente é <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2066">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="7ca58-2067">Substituir <xref:System.Windows.ContentElement.OnPreviewDrop%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2067">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2068">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewDrop" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2068">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2069">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2069">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2070">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2070">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2071">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2071">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2072">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2072">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2073">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2073">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2074">Ocorre quando uma operação de arrastar e soltar se inicia.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2074">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2075">O <xref:System.Windows.ContentElement.PreviewGiveFeedback> evento permite que a origem de um evento de arrastar para modificar a aparência do ponteiro do mouse, para dar ao usuário feedback visual durante uma operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2075">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="7ca58-2076">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewGiveFeedback> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2076">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2077">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewGiveFeedback> evento associado subjacente <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2077">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2078">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2078">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2079">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2079">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="7ca58-2080">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2080">Routing strategy</span></span>|<span data-ttu-id="7ca58-2081">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2081">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2082">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2082">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="7ca58-2083">O evento por propagação correspondente é <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2083">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="7ca58-2084">Substituir <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2084">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2085">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2085">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2086">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2086">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2087">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2087">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2088">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2088">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2089">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2089">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2090">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2090">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2091">Ocorre quando o teclado está focalizado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2091">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2092">Como este evento usa o encapsulamento de roteamento, o elemento que tem o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2092">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-2093">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que tem o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2093">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="7ca58-2094">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2094">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2095">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2095">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2096">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2096">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2097">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2097">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="7ca58-2098">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2098">Routing strategy</span></span>|<span data-ttu-id="7ca58-2099">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2099">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2100">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2100">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="7ca58-2101">O evento por propagação correspondente é <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2101">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="7ca58-2102">Substituir <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2102">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2103">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2103">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2104">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2104">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2105">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2105">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2106">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2106">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2107">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2107">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2108">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2108">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2109">Ocorre quando uma tecla é pressionada enquanto o teclado está focalizado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2109">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2110">Manipulação de chave interage com outros recursos de plataforma, como a composição de texto e dos comandos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2110">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="7ca58-2111">O <xref:System.Windows.ContentElement.KeyDown> é um evento de entrada de texto de nível inferior pode não se comportar conforme o esperado em certos controles.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2111">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="7ca58-2112">Isso ocorre porque alguns controles têm a composição de controle ou manipulação de classe que fornece uma versão de nível mais alto de texto, manipulação de entrada e eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2112">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="7ca58-2113">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewKeyDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2113">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2114">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewKeyDown> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2114">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2115">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2115">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2116">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2116">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="7ca58-2117">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2117">Routing strategy</span></span>|<span data-ttu-id="7ca58-2118">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2118">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2119">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2119">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="7ca58-2120">O evento por propagação correspondente é <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2120">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2121">Substituir <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2121">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2122">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2122">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2123">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2123">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2124">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2124">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2125">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2125">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2126">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2126">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2127">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2127">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2128">Ocorre quando uma tecla é liberada enquanto o teclado está focalizado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2128">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2129">Manipulação de chave interage com outros recursos de plataforma, como a composição de texto e dos comandos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2129">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="7ca58-2130">O <xref:System.Windows.ContentElement.KeyUp> é um evento de entrada de texto de nível inferior pode não se comportar conforme o esperado em certos controles.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2130">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="7ca58-2131">Isso ocorre porque alguns controles têm a composição de controle ou manipulação de classe que fornece uma versão de nível mais alto de texto, manipulação de entrada e eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2131">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="7ca58-2132">Para obter detalhes, consulte a documentação de controles individuais.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2132">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="7ca58-2133">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewKeyUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2133">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2134">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewKeyUp> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2134">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2135">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2136">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2136">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="7ca58-2137">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2137">Routing strategy</span></span>|<span data-ttu-id="7ca58-2138">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2138">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2139">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2139">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="7ca58-2140">O evento por propagação correspondente é <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2140">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2141">Substituir <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2141">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2142">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2142">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2143">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2143">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2144">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2144">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2145">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2145">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2146">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2146">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2147">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2147">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2148">Ocorre quando o teclado não está mais focalizado neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2148">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2149">Como este evento usa o encapsulamento de roteamento, o elemento que perdeu o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2149">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="7ca58-2150">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu o foco.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2150">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="7ca58-2151">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2151">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2152">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2152">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2153">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2153">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2154">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2154">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="7ca58-2155">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2155">Routing strategy</span></span>|<span data-ttu-id="7ca58-2156">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2156">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2157">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2157">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="7ca58-2158">O evento por propagação correspondente é <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2158">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="7ca58-2159">Substituir <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2159">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2160">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2160">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2161">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2161">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2162">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2162">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2163">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2163">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2164">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2164">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2165">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2165">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2166">Ocorre quando qualquer botão do mouse é pressionado enquanto o ponteiro está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2166">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2167">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewMouseDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2167">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2168">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewMouseDown> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2168">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2169">O <xref:System.Windows.ContentElement.PreviewMouseDown> é normalmente gerado junto com qualquer um <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> ou <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, que correspondem a um pressionamento de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2169">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="7ca58-2170"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> e <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2170"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="7ca58-2171">Consulte os comentários para <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> ou <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2171">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2172">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2172">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2173">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2173">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="7ca58-2174">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2174">Routing strategy</span></span>|<span data-ttu-id="7ca58-2175">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2175">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2176">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2176">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2177">O evento por propagação correspondente é <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2177">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2178">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2178">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2179">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2179">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2180">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2180">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2181">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2181">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2182">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2182">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2183">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2183">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2184">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2184">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2185">Ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2185">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2186">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2186">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-2187">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2187">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-2188">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2188">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-2189">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2189">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-2190">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2190">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-2191">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2191">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-2192">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2192">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2193">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2193">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2194">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2194">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="7ca58-2195">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2195">Routing strategy</span></span>|<span data-ttu-id="7ca58-2196">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2196">Direct</span></span>|  
|<span data-ttu-id="7ca58-2197">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2197">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2198">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2198">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2199">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2199">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2200">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2200">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2201">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2201">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2202">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2202">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2203">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2203">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2204">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2204">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2205">Ocorre quando o botão esquerdo do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2205">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2206">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2206">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-2207">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2207">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-2208">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2208">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-2209">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2209">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-2210">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2210">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-2211">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2211">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-2212">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2212">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2213">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2214">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2214">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="7ca58-2215">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2215">Routing strategy</span></span>|<span data-ttu-id="7ca58-2216">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2216">Direct</span></span>|  
|<span data-ttu-id="7ca58-2217">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2217">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2218">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2218">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2219">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2219">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2220">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2220">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2221">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2222">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2222">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2223">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2223">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2224">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2224">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2225">Ocorre quando o ponteiro do mouse se move enquanto está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2225">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2226">Esse evento ocorre quando o ponteiro do mouse entra pela primeira vez em que os limites do elemento, e também quando o ponteiro do mouse se move enquanto ainda permanecem dentro dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2226">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="7ca58-2227">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewMouseMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2227">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2228">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewMouseMove> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2228">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2229">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2229">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2230">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2230">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="7ca58-2231">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2231">Routing strategy</span></span>|<span data-ttu-id="7ca58-2232">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2232">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2233">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2233">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="7ca58-2234">O evento por propagação correspondente é <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2234">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2235">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2235">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2236">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2236">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2237">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2237">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2238">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2238">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2239">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2239">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2240">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2240">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2241">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2241">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2242">Ocorre quando o botão direito do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2242">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2243">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2243">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-2244">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2244">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-2245">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2245">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-2246">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2246">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-2247">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2247">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-2248">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2248">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-2249">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2249">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2250">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2250">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2251">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2251">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="7ca58-2252">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2252">Routing strategy</span></span>|<span data-ttu-id="7ca58-2253">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2253">Direct</span></span>|  
|<span data-ttu-id="7ca58-2254">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2254">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2255">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2255">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2256">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2256">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2257">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2257">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2258">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2258">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2259">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2259">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2260">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2260">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2261">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2261">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2262">Ocorre quando o botão direito do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2262">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2263">Embora isso [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2263">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="7ca58-2264">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2264">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="7ca58-2265">Os argumentos desse evento expõem os argumentos de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2265">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="7ca58-2266">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.ContentElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2266">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="7ca58-2267">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.ContentElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2267">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="7ca58-2268">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2268">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="7ca58-2269">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2269">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2270">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2270">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2271">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2271">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="7ca58-2272">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2272">Routing strategy</span></span>|<span data-ttu-id="7ca58-2273">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2273">Direct</span></span>|  
|<span data-ttu-id="7ca58-2274">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2274">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2275">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2275">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2276">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2276">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2277">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2278">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2279">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2280">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2281">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2282">Ocorre quando qualquer botão do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2282">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2283">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewMouseUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2283">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2284">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewMouseUp> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2284">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2285">O <xref:System.Windows.ContentElement.PreviewMouseUp> é normalmente gerado junto com qualquer um <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> ou <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, que correspondem a um pressionamento de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2285">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="7ca58-2286"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> e <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2286"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="7ca58-2287">Consulte os comentários para <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> ou <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2287">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2288">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2288">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2289">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2289">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="7ca58-2290">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2290">Routing strategy</span></span>|<span data-ttu-id="7ca58-2291">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2291">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2292">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2292">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2293">O evento por propagação correspondente é <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2293">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2294">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2294">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2295">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2295">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2296">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2296">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2297">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2298">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2298">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2299">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2299">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2300">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2300">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2301">Ocorre quando o usuário gira a roda do mouse enquanto o ponteiro do mouse está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2301">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2302">Captura de foco ou de mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber esse evento de um elemento com foco ou capturado, o ponteiro do mouse, na verdade, pode ser em outro elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2302">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="7ca58-2303">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewMouseMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2303">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2304">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewMouseMove> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2304">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2305">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2305">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2306">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2306">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="7ca58-2307">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2307">Routing strategy</span></span>|<span data-ttu-id="7ca58-2308">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2308">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2309">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2309">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="7ca58-2310">O evento por propagação correspondente é <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2310">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="7ca58-2311">Substituir <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2311">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2312">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2312">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2313">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2313">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2314">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2314">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2315">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2315">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2316">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2316">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2317">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2317">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2318">Ocorre quando há uma alteração no estado do botão do teclado ou do mouse durante uma operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2318">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2319">O <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> evento permite que a origem do arrasto declarar se a operação de arrastar e soltar deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2319">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="7ca58-2320">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2320">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2321">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> evento associado subjacente <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2321">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2322">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2322">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2323">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2323">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="7ca58-2324">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2324">Routing strategy</span></span>|<span data-ttu-id="7ca58-2325">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2325">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2326">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2326">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="7ca58-2327">O evento por propagação correspondente é <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2327">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="7ca58-2328">Substituir <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2328">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2329">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2329">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2330">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2330">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2331">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2331">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2332">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2332">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2333">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2333">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2334">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2334">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2335">Ocorre quando o botão da caneta é pressionado enquanto o ponteiro está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2335">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2336">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusButtonDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2336">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2337">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusButtonDown> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2337">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2338">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2338">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2339">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2339">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2340">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2340">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2341">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2341">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="7ca58-2342">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2342">Routing strategy</span></span>|<span data-ttu-id="7ca58-2343">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2343">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2344">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2344">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2345">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2345">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2346">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2346">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2347">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2347">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2348">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2348">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2349">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2350">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2350">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2351">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2351">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2352">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2352">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2353">Ocorre quando o botão da caneta é liberado enquanto o ponteiro está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2353">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2354">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusButtonUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2354">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2355">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusButtonUp> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2355">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2356">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2356">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2357">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2357">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2358">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2358">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2359">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2359">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="7ca58-2360">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2360">Routing strategy</span></span>|<span data-ttu-id="7ca58-2361">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2361">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2362">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2362">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2363">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2363">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2364">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2364">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2365">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2365">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2366">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2366">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2367">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2367">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2368">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2368">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2369">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2369">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2370">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2370">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2371">Ocorre quando a caneta toca o digitalizador enquanto está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2371">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2372">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2372">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2373">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusDown> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2373">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2374">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2374">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2375">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2375">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2376">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2376">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2377">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2377">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="7ca58-2378">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2378">Routing strategy</span></span>|<span data-ttu-id="7ca58-2379">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2379">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2380">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2380">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="7ca58-2381">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2381">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2382">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2382">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2383">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2383">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2384">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2384">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2385">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2386">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2386">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2387">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2387">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2388">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2388">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2389">Ocorre quando a caneta se move sobre um elemento sem tocar de fato o digitalizador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2389">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2390">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusInAirMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2390">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2391">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusInAirMove> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2391">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2392">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2392">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2393">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2393">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2394">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2394">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2395">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2395">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="7ca58-2396">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2396">Routing strategy</span></span>|<span data-ttu-id="7ca58-2397">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2397">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2398">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2398">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2399">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2399">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2400">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2400">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2401">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2401">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2402">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2402">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2403">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2403">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2404">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2404">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2405">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2405">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2406">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2406">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2407">Ocorre quando a caneta está sobre este elemento e perto o suficiente do digitalizador para ser detectada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2407">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2408">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusInRange> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2408">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2409">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusInRange> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2409">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2410">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2410">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2411">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2411">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2412">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2413">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2413">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="7ca58-2414">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2414">Routing strategy</span></span>|<span data-ttu-id="7ca58-2415">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2415">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2416">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2416">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2417">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2417">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="7ca58-2418">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2418">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2419">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2419">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2420">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2421">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2422">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2423">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2424">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2425">Ocorre quando a caneta se move enquanto está sobre o elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2425">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="7ca58-2426">A caneta deve se mover enquanto está sendo detectada pelo digitalizador para gerar este evento, caso contrário, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2426">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2427">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2427">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2428">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusMove> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2428">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2429">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2429">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2430">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2430">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2431">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2431">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2432">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2432">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="7ca58-2433">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2433">Routing strategy</span></span>|<span data-ttu-id="7ca58-2434">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2434">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2435">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2435">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2436">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2436">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2437">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2437">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2438">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2438">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2439">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2439">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2440">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2440">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2441">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2441">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2442">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2442">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2443">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2443">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2444">Ocorre quando a caneta está longe demais do digitalizador para ser detectada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2444">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2445">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2445">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2446">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2446">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2447">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2447">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2448">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2448">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2449">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2449">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2450">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2450">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="7ca58-2451">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2451">Routing strategy</span></span>|<span data-ttu-id="7ca58-2452">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2452">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2453">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2453">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2454">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2454">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="7ca58-2455">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2455">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2456">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2456">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2457">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2457">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2458">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2458">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2459">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2459">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2460">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2460">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2461">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2461">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2462">Ocorre quando o usuário executa um dos diversos gestos da caneta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2462">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2463">Para obter informações sobre gestos da caneta, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2463">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="7ca58-2464">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2464">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2465">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2465">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2466">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2466">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2467">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2467">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2468">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2468">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2469">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2469">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="7ca58-2470">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2470">Routing strategy</span></span>|<span data-ttu-id="7ca58-2471">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2471">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2472">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2472">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="7ca58-2473">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2473">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="7ca58-2474">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2474">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2475">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2475">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2476">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2476">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2477">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2477">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2478">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2478">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2479">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2479">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2480">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2480">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2481">Ocorre quando o usuário retira a caneta do digitalizador enquanto ela está sobre esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2481">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2482">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewStylusDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2482">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2483">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewStylusDown> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2483">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2484">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2484">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2485">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2485">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2486">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2487">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2487">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="7ca58-2488">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2488">Routing strategy</span></span>|<span data-ttu-id="7ca58-2489">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2489">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2490">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2490">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2491">O evento por propagação correspondente é <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2491">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2492">Substituir <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2492">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2493">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2493">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2494">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2494">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2495">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2495">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2496">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2496">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2497">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2497">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2498">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2498">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2499">Ocorre quando este elemento obtém texto de forma independente de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2499">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2500">O <xref:System.Windows.ContentElement.PreviewTextInput> evento permite que um componente ou aplicativo para escutar a entrada de texto de forma independente de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2500">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="7ca58-2501">O teclado é o principal meio de <xref:System.Windows.ContentElement.PreviewTextInput>; mas outros dispositivos de entrada de fala e manuscrito também podem gerar <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2501">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="7ca58-2502">Por causa de combinações de teclas - em teclados padrão ou por meio de editores de método de entrada - vários eventos de chave podem gerar apenas um evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2502">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="7ca58-2503">Esse evento cria um alias para o <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.PreviewTextInput> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2503">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2504">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.PreviewTextInput> evento associado subjacente <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2504">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2505">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2505">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2506">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2506">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="7ca58-2507">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2507">Routing strategy</span></span>|<span data-ttu-id="7ca58-2508">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2508">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2509">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2509">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="7ca58-2510">O evento por propagação correspondente é <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2510">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="7ca58-2511">Substituir <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2511">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2512">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewTextInput" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2512">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2513">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2513">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2514">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2514">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2515">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2515">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2516">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2516">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2517">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2517">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2518">Ocorre quando um dedo toca a tela enquanto está sobre esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2518">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2519">Por padrão, o <xref:System.Windows.ContentElement.PreviewTouchDown> e <xref:System.Windows.ContentElement.TouchDown> eventos não ocorrem até que um dedo toca na tela e move.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2519">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="7ca58-2520">Pressionando um dedo na tela e mantendo sem movê-lo faz com que o toque e mantenha o comportamento de um <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2520">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="7ca58-2521">O comportamento de pressionar e segurar é equivalente ao botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2521">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="7ca58-2522">Para fazer com que o <xref:System.Windows.ContentElement.PreviewTouchDown> e <xref:System.Windows.ContentElement.TouchDown> eventos ocorram, assim que um dedo toca a tela, defina as <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> anexado à propriedade `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2522">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2523">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2523">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2524">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2524">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="7ca58-2525">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2525">Routing strategy</span></span>|<span data-ttu-id="7ca58-2526">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2526">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2527">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2527">Delegate</span></span>|<span data-ttu-id="7ca58-2528"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2528"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2529">O evento por propagação correspondente é <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2529">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2530">Substituir <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2530">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2531">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewTouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2531">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2532">Ocorre quando um dedo se move na tela enquanto está sobre esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2532">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2533">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2533">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2534">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2534">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="7ca58-2535">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2535">Routing strategy</span></span>|<span data-ttu-id="7ca58-2536">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2536">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2537">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2537">Delegate</span></span>|<span data-ttu-id="7ca58-2538"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2538"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2539">O evento por propagação correspondente é <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2539">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2540">Substituir <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2540">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2541">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewTouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2541">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2542">Ocorre quando um dedo é gerado fora da tela enquanto o dedo está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2542">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2543">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2543">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2544">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2544">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="7ca58-2545">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2545">Routing strategy</span></span>|<span data-ttu-id="7ca58-2546">O túnel</span><span class="sxs-lookup"><span data-stu-id="7ca58-2546">Tunneling</span></span>|  
|<span data-ttu-id="7ca58-2547">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2547">Delegate</span></span>|<span data-ttu-id="7ca58-2548"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2548"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2549">O evento por propagação correspondente é <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2549">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2550">Substituir <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2550">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2551">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.PreviewTouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2551">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2552">Ocorre quando há uma alteração no estado do botão do teclado ou do mouse durante uma operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2552">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2553">O evento <xref:System.Windows.ContentElement.QueryContinueDrag> permite que a fonte de arrastar determine se a operação do tipo "arrastar e soltar" deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2553">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="7ca58-2554">Esse evento cria um alias para o <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.QueryContinueDrag> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2554">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2555">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.QueryContinueDrag> evento associado subjacente <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2555">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2556">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2556">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2557">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2557">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="7ca58-2558">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2558">Routing strategy</span></span>|<span data-ttu-id="7ca58-2559">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2559">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2560">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2560">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="7ca58-2561">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2561">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="7ca58-2562">Substituir <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2562">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2563">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2563">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2564">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2564">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2565">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2565">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2566">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2566">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2567">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2567">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2568">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2568">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2569">Ocorre quando a exibição do cursor é solicitada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2569">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="7ca58-2570">Este evento é gerado em um elemento toda vez que o ponteiro do mouse se move para uma nova localização, o que significa que o objeto de cursor talvez precise ser alterado de acordo com sua nova posição.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2570">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2571">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.QueryCursor> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2571">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2572">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.QueryCursor> evento associado subjacente <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2572">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2573">O cursor está sendo referenciado por este nome de evento não é necessariamente o cursor de texto (também conhecido como o ponto de inserção).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2573">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="7ca58-2574">Em vez disso, o cursor neste contexto é o objeto que declara a exibição gráfica na tela relacionada a vários dispositivos relacionados à entrada possíveis ou conceitos de programação do Windows.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2574">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="7ca58-2575">Esse objeto é representado pelo <xref:System.Windows.Input.Cursor> classe no WPF.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2575">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="7ca58-2576">O sistema de entrada do WPF permite que você altere esse cursor quando ele representa a posição na tela do ponteiro do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2576">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="7ca58-2577">Você pode usar valores predefinidos do <xref:System.Windows.Input.Cursors> enumeração, ou você pode declarar um cursor personalizado como um arquivo de imagem.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2577">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="7ca58-2578">Ouvindo o <xref:System.Windows.ContentElement.QueryCursor> evento não é uma técnica eficiente para o gerenciamento de cursor.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2578">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="7ca58-2579">Em vez disso, cada elemento deve definir seu próprio comportamento de cursor com <xref:System.Windows.FrameworkContentElement.Cursor%2A> e <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2579">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="7ca58-2580">Você só deve confiar em <xref:System.Windows.ContentElement.QueryCursor> se você não estiver usando os elementos de base de nível de framework WPF, ou em extraordinária circunstâncias em que definir o comportamento do cursor em uma base por elemento não atender às suas necessidades.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2580">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="7ca58-2581">Para obter mais informações sobre como implementar o comportamento do cursor em resposta às <xref:System.Windows.ContentElement.QueryCursor>, consulte <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2581">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2582">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2582">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2583">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2583">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="7ca58-2584">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2584">Routing strategy</span></span>|<span data-ttu-id="7ca58-2585">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2585">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2586">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2586">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="7ca58-2587">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2587">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="7ca58-2588">Substituir <xref:System.Windows.ContentElement.OnQueryCursor%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2588">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2589">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2589">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2590">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2590">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2591">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2591">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2592">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2592">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2593">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2593">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2594">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2594">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7ca58-2595">Um <see cref="T:System.Windows.RoutedEventArgs" /> que contém os dados do evento e também identifica o evento a ser acionado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2595">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="7ca58-2596">Aciona um evento roteado específico.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2596">Raises a specific routed event.</span></span> <span data-ttu-id="7ca58-2597">O <see cref="T:System.Windows.RoutedEvent" /> a ser gerado é identificado na instância <see cref="T:System.Windows.RoutedEventArgs" /> fornecida (como a propriedade <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> desses dados de eventos).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2597">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2598">O `e` parâmetro é digitado como o tipo de base comum para todos os dados de evento roteado; no entanto, os dados do evento devem ser fornecidos como o tipo de dados de evento mais específico que está disponível para o evento que está sendo gerado, porque <xref:System.Windows.RoutedEventArgs> contêm classes derivadas de propriedades específicas de dados reais que se destinam-se para o evento específico quando ele é gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2598">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="7ca58-2599"><xref:System.Windows.RoutedEventArgs> não é apenas as propriedades de estado para o evento; Ele também identifica qual evento roteado para elevar.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2599"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="7ca58-2600">Essa acionando o evento padrão e os dados de evento roteado ambos diferem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] classes de eventos e dados, que normalmente contêm apenas as propriedades que são relacionadas ao evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2600">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-2601">O exemplo a seguir cria dados de evento, acrescenta o identificador de evento para os dados e, em seguida, usa a instância de dados de evento para gerar um evento roteado personalizado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2601">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-2602">Libera todos os dispositivos de toque capturados desse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2602">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-2603">Libera a captura do mouse, se esse elemento tiver mantido a captura.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2603">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2604">Se esse elemento não pode ser mantida a captura, chamar este método não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2604">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="7ca58-2605">Considere verificar o valor de <xref:System.Windows.ContentElement.IsMouseCaptured%2A> antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2605">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ca58-2606">O seguinte manipulador de captura ou libera a captura do mouse acordo com os estados do botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2606">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="7ca58-2607">O exemplo mostra como usar o movimento do mouse capturados para fins de alternativa que mover o ponteiro do mouse no [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="7ca58-2607">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-2608">Libera a captura do dispositivo de caneta, se esse elemento tiver mantido a captura.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2608">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2609">Se esse elemento não pode ser mantida a captura, chamar este método não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2609">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="7ca58-2610">Considere verificar o valor de <xref:System.Windows.ContentElement.IsStylusCaptured%2A> antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2610">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="7ca58-2611">O dispositivo a ser liberado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2611">The device to release.</span></span></param>
        <summary><span data-ttu-id="7ca58-2612">Tenta liberar o dispositivo de toque especificado desse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2612">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="7ca58-2613"><see langword="true" /> se o dispositivo de toque estiver liberado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2613"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ca58-2614"><paramref name="touchDevice" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2614"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="7ca58-2615">O identificador do evento roteado ao qual o manipulador está anexado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2615">The identifier of the.routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="7ca58-2616">A implementação do manipulador específico para remover da coleção de manipuladores de eventos neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2616">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="7ca58-2617">Remove o manipulador de eventos roteados especificado desse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2617">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2618">O cenário mais comum para usar esta [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] é quando você implementa o [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] evento "wrapper" que está associado um evento roteado personalizado, especialmente quando você implementa a lógica de "remover" para manipuladores no [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] nível.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2618">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="7ca58-2619">O exemplo a seguir esta seção ilustra esse cenário de comentários.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2619">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="7ca58-2620">Chamar esse método não tem nenhum efeito se não houvesse nenhum manipulador registrado com os critérios que correspondem aos parâmetros de entrada para a chamada de método.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2620">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="7ca58-2621">Se mais de um manipulador está anexado que correspondeu aos critérios, somente o primeiro manipulador no evento de armazenamento do manipulador é removido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2621">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="7ca58-2622">Esse comportamento é consistente com [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] comportamento do `-=` operador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2622">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="7ca58-2623">Nem `routedEvent` nem `handler` pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2623">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="7ca58-2624">A tentativa de fornecer o valor como `null` gerarão uma exceção.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2624">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="7ca58-2625">Este método ignora a `handledEventsToo` informações de parâmetro, que serão fornecidas se o manipulador foi inicialmente adicionada com o <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura que permite a manipulação de eventos já manipulados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2625">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="7ca58-2626">Qualquer tipo de manipulador é removido.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2626">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-2627">Indica se os processos de serialização devem serializar o conteúdo da propriedade <see cref="P:System.Windows.ContentElement.CommandBindings" /> em instâncias dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2627">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="7ca58-2628"><see langword="true" /> se o valor da propriedade <see cref="P:System.Windows.ContentElement.CommandBindings" /> precisar ser serializado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2628"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2629">Isso retornará `true` se <xref:System.Windows.ContentElement.CommandBindings%2A> é definido localmente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2629">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="7ca58-2630">Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.UIElement.CommandBindings%2A> propriedade não tem um valor padrão simples.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2630">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="7ca58-2631">Este método indica se a propriedade foi alterada do seu valor padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2631">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="7ca58-2632">Normalmente você invoca esse método se você estiver desenvolvendo um designer ou desenvolver seu próprio controle incorporando um <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2632">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="7ca58-2633">Para obter mais informações, consulte [definindo valores padrão com os métodos ShouldSerialize e redefinir](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2633">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ca58-2634">Indica se os processos de serialização devem serializar o conteúdo da propriedade <see cref="P:System.Windows.ContentElement.InputBindings" /> em instâncias dessa classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2634">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="7ca58-2635"><see langword="true" /> se o valor da propriedade <see cref="P:System.Windows.ContentElement.InputBindings" /> precisar ser serializado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2635"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2636">Isso retornará `true` se <xref:System.Windows.ContentElement.InputBindings%2A> é definido localmente.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2636">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="7ca58-2637">Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.UIElement.InputBindings%2A> propriedade não tem um valor padrão simples.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2637">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="7ca58-2638">Este método indica se a propriedade foi alterada do seu valor padrão.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2638">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="7ca58-2639">Normalmente você invoca esse método se você estiver desenvolvendo um designer ou desenvolver seu próprio controle incorporando um <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2639">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="7ca58-2640">Para obter mais informações, consulte [definindo valores padrão com os métodos ShouldSerialize e redefinir](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2640">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2641">Ocorre quando o botão da caneta é pressionado enquanto o ponteiro está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2641">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2642">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusButtonDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2642">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2643">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusButtonDown> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2643">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2644">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2644">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2645">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2645">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2646">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2647">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2647">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="7ca58-2648">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2648">Routing strategy</span></span>|<span data-ttu-id="7ca58-2649">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2649">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2650">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2650">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2651">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2651">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2652">Substituir <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2652">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2653">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2653">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2654">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2654">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2655">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2655">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2656">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2656">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2657">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2657">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2658">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2658">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2659">Ocorre quando o botão da caneta é liberado enquanto o ponteiro está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2659">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2660">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusButtonUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2660">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2661">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusButtonUp> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2661">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2662">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2662">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2663">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2663">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2664">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2664">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2665">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2665">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="7ca58-2666">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2666">Routing strategy</span></span>|<span data-ttu-id="7ca58-2667">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2667">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2668">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2668">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="7ca58-2669">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2669">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2670">Substituir <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2670">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2671">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2671">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2672">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2672">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2673">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2673">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2674">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2674">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2675">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2675">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2676">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2676">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2677">Ocorre quando a caneta toca o digitalizador enquanto está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2677">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2678">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusDown> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2678">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2679">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusDown> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2679">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2680">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2680">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2681">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2681">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2682">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2682">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2683">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2683">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="7ca58-2684">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2684">Routing strategy</span></span>|<span data-ttu-id="7ca58-2685">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2685">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2686">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2686">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="7ca58-2687">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2687">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2688">Substituir <xref:System.Windows.ContentElement.OnStylusDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2688">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2689">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2689">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2690">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2690">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2691">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2691">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2692">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2692">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2693">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2693">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2694">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2694">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2695">Ocorre quando a caneta entra nos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2695">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2696"><xref:System.Windows.ContentElement.StylusEnter> é um [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2696"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="7ca58-2697">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2697">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="7ca58-2698">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2698">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="7ca58-2699">Embora <xref:System.Windows.ContentElement.StylusEnter> rastreia quando a caneta entra nos limites de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.ContentElement.IsStylusOver%2A> o valor da propriedade foi alterado de `false` para `true` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2699">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="7ca58-2700">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusEnter> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2700">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2701">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusEnter> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2701">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2702">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2702">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2703">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2703">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2704">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2704">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2705">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2705">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="7ca58-2706">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2706">Routing strategy</span></span>|<span data-ttu-id="7ca58-2707">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2707">Direct</span></span>|  
|<span data-ttu-id="7ca58-2708">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2708">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2709">Substituir <xref:System.Windows.ContentElement.OnStylusEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2709">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2710">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2710">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2711">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2711">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2712">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2712">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2713">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2713">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2714">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2714">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2715">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2715">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2716">Ocorre quando a caneta se move sobre um elemento sem tocar de fato o digitalizador.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2716">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2717">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusInAirMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2717">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2718">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusInAirMove> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2718">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2719">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2719">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2720">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2720">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2721">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2721">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2722">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2722">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="7ca58-2723">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2723">Routing strategy</span></span>|<span data-ttu-id="7ca58-2724">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2724">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2725">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2725">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2726">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2726">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2727">Substituir <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2727">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2728">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2728">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2729">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2729">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2730">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2730">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2731">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2731">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2732">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2732">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2733">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2733">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2734">Ocorre quando a caneta está sobre este elemento e perto o suficiente do digitalizador para ser detectada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2734">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2735">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusInRange> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2735">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2736">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusInRange> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2736">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2737">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2737">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2738">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2738">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2739">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2739">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2740">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2740">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="7ca58-2741">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2741">Routing strategy</span></span>|<span data-ttu-id="7ca58-2742">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2742">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2743">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2743">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2744">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2744">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="7ca58-2745">Substituir <xref:System.Windows.ContentElement.OnStylusInRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2745">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2746">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2746">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2747">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2747">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2748">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2748">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2749">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2749">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2750">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2750">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2751">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2751">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2752">Ocorre quando a caneta sai dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2752">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2753"><xref:System.Windows.ContentElement.StylusLeave> é um [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md) que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2753"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="7ca58-2754">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2754">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="7ca58-2755">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2755">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="7ca58-2756">Embora <xref:System.Windows.ContentElement.StylusLeave> rastreia quando a caneta sai dos limites de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.ContentElement.IsStylusOver%2A> o valor da propriedade foi alterado de `true` para `false` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2756">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="7ca58-2757">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusLeave> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2757">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2758">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusLeave> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2758">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2759">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2759">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2760">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2760">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2761">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2761">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2762">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2762">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="7ca58-2763">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2763">Routing strategy</span></span>|<span data-ttu-id="7ca58-2764">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2764">Direct</span></span>|  
|<span data-ttu-id="7ca58-2765">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2765">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2766">Substituir <xref:System.Windows.ContentElement.OnStylusLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2766">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2767">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2767">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2768">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2768">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2769">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2769">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2770">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2770">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2771">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2771">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2772">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2772">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2773">Ocorre quando a caneta se move sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2773">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="7ca58-2774">A caneta deve mover-se enquanto está no digitalizador para gerar este evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2774">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="7ca58-2775">Caso contrário, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> será gerado.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2775">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2776">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusMove> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2776">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2777">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusMove> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2777">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2778">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2778">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2779">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2779">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2780">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2780">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2781">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2781">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="7ca58-2782">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2782">Routing strategy</span></span>|<span data-ttu-id="7ca58-2783">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2783">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2784">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2784">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2785">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2785">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2786">Substituir <xref:System.Windows.ContentElement.OnStylusMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2786">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2787">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2787">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2788">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2788">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2789">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2789">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2790">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2790">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2791">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2791">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2792">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2792">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2793">Ocorre quando a caneta está sobre o elemento e longe demais do digitalizador para ser detectada.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2793">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2794">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusOutOfRange> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2794">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2795">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusOutOfRange> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2795">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2796">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2796">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2797">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2797">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2798">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2798">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2799">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2799">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="7ca58-2800">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2800">Routing strategy</span></span>|<span data-ttu-id="7ca58-2801">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2801">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2802">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2802">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2803">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2803">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="7ca58-2804">Substituir <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2804">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2805">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2805">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2806">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2806">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2807">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2807">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2808">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2808">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2809">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2809">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2810">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2810">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2811">Ocorre quando o usuário executa um dos diversos gestos da caneta.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2811">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2812">Para obter mais informações sobre gestos da caneta, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2812">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="7ca58-2813">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusSystemGesture> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2813">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2814">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusSystemGesture> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2814">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2815">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2815">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2816">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2816">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2817">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2817">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2818">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2818">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="7ca58-2819">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2819">Routing strategy</span></span>|<span data-ttu-id="7ca58-2820">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2820">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2821">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2821">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="7ca58-2822">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2822">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="7ca58-2823">Substituir <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2823">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2824">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2824">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2825">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2825">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2826">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2826">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2827">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2827">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2828">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2828">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2829">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2829">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2830">Ocorre quando o usuário retira a caneta do digitalizador enquanto ela está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2830">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2831">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.StylusUp> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2831">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2832">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.StylusUp> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2832">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="7ca58-2833">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2833">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="7ca58-2834">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="7ca58-2834">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2835">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2835">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2836">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2836">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="7ca58-2837">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2837">Routing strategy</span></span>|<span data-ttu-id="7ca58-2838">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2838">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2839">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2839">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="7ca58-2840">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2840">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2841">Substituir <xref:System.Windows.ContentElement.OnStylusUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2841">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2842">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2842">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2843">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2843">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2844">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2844">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2845">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2845">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2846">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2846">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2847">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2847">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2848">Ocorre quando este elemento obtém texto de forma independente de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2848">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="7ca58-2849">Esse evento já pode ser marcado como manipulados pelas implementações internas de controles compostos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2849">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="7ca58-2850">Consulte o comentário abaixo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2850">See Remark below.</span></span>  
  
 <span data-ttu-id="7ca58-2851">O <xref:System.Windows.ContentElement.TextInput> evento já pode ser marcado como manipulados pelas implementações internas de controles compostos.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2851">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="7ca58-2852">Por exemplo, uma <xref:System.Windows.Controls.TextBox> é um controle composto no qual o <xref:System.Windows.ContentElement.TextInput> evento já estiver marcado como manipulado; dentro de sua composição.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2852">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="7ca58-2853">Controles de fazer isso, porque o controle precisa interpretar alguns tipos de entrada, como teclas de direção, como tendo um significado especial para esse controle.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2853">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="7ca58-2854">Se você usar <xref:System.Windows.ContentElement.PreviewTextInput> como o evento em que você anexa manipuladores para entrada de texto, você poderá receber resultados melhores.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2854">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="7ca58-2855">Essa técnica contorna a maioria dos casos em que a composição de controle já marcou este evento como manipulado e impede que o seu manipulador de receber o evento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2855">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="7ca58-2856">O <xref:System.Windows.ContentElement.TextInput> evento permite que um componente ou aplicativo para escutar a entrada de texto de forma independente de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2856">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="7ca58-2857">O teclado é o principal meio de <xref:System.Windows.ContentElement.TextInput>, mas outros dispositivos de entrada de fala e manuscrito também podem gerar <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2857">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="7ca58-2858">Por causa de combinações de teclas - em teclados padrão ou por meio de editores de método de entrada - vários eventos de chave podem gerar apenas um evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2858">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="7ca58-2859">Esse evento cria um alias para o <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.ContentElement.TextInput> faz parte da classe a lista de membros quando <xref:System.Windows.ContentElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2859">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="7ca58-2860">Manipuladores de eventos que estão anexados para o <xref:System.Windows.ContentElement.TextInput> evento associado subjacente <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2860">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2861">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2861">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2862">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2862">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="7ca58-2863">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2863">Routing strategy</span></span>|<span data-ttu-id="7ca58-2864">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2864">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2865">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2865">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="7ca58-2866">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2866">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="7ca58-2867">Substituir <xref:System.Windows.ContentElement.OnTextInput%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2867">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2868">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.TextInput" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2868">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2869">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2869">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="7ca58-2870">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2870">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="7ca58-2871">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2871">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="7ca58-2872">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2872">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="7ca58-2873">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2873">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2874">Ocorre quando um dedo toca a tela enquanto está sobre esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2874">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2875">Por padrão, o <xref:System.Windows.ContentElement.PreviewTouchDown> e <xref:System.Windows.ContentElement.TouchDown> eventos não ocorrem até que um dedo toca na tela e move.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2875">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="7ca58-2876">Pressionando um dedo na tela e mantendo sem movê-lo faz com que o toque e mantenha o comportamento de um <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2876">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="7ca58-2877">O comportamento de pressionar e segurar é equivalente ao botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2877">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="7ca58-2878">Para fazer com que o <xref:System.Windows.ContentElement.PreviewTouchDown> e <xref:System.Windows.ContentElement.TouchDown> eventos ocorram, assim que um dedo toca a tela, defina as <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> anexado à propriedade `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2878">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2879">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2879">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2880">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2880">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="7ca58-2881">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2881">Routing strategy</span></span>|<span data-ttu-id="7ca58-2882">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2882">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2883">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2883">Delegate</span></span>|<span data-ttu-id="7ca58-2884"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2884"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2885">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2885">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="7ca58-2886">Substituir <xref:System.Windows.ContentElement.OnTouchDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2886">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2887">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.TouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2887">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2888">Ocorre quando um toque é movido de fora para dentro dos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2888">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ca58-2889">Esse evento é gerado sempre, se o dispositivo de toque é capturado para esse elemento de interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2889">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2890">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2890">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2891">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2891">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="7ca58-2892">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2892">Routing strategy</span></span>|<span data-ttu-id="7ca58-2893">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2893">Direct</span></span>|  
|<span data-ttu-id="7ca58-2894">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2894">Delegate</span></span>|<span data-ttu-id="7ca58-2895"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2895"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2896">Substituir <xref:System.Windows.ContentElement.OnTouchEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2896">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2897">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.TouchEnter" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2897">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2898">Obtém todos os dispositivos de toque capturados para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2898">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-2899">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> capturados para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2899">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2900">Obtém todos os dispositivos de toque que são capturados para esse elemento ou os elementos filho na árvore visual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2900">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="7ca58-2901">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que são capturados para esse elemento ou elementos filho na árvore visual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2901">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2902">Obtém todos os dispositivos de toque nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2902">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="7ca58-2903">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> nesse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2903">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2904">Obtém todos os dispositivos de toque que estão sobre esse elemento ou sobre os elementos filho na árvore visual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2904">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="7ca58-2905">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que estão acima desse elemento ou dos elementos filho na árvore visual.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2905">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2906">Ocorre quando um toque é movido de dentro para fora dos limites deste elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2906">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2907">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2907">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2908">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2908">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="7ca58-2909">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2909">Routing strategy</span></span>|<span data-ttu-id="7ca58-2910">Direto</span><span class="sxs-lookup"><span data-stu-id="7ca58-2910">Direct</span></span>|  
|<span data-ttu-id="7ca58-2911">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2911">Delegate</span></span>|<span data-ttu-id="7ca58-2912"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2912"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2913">Substituir <xref:System.Windows.ContentElement.OnTouchLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2913">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2914">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.TouchLeave" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2914">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2915">Ocorre quando um dedo se move na tela enquanto está sobre esse elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2915">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2916">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2916">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2917">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2917">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="7ca58-2918">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2918">Routing strategy</span></span>|<span data-ttu-id="7ca58-2919">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2919">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2920">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2920">Delegate</span></span>|<span data-ttu-id="7ca58-2921"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2921"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2922">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2922">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="7ca58-2923">Substituir <xref:System.Windows.ContentElement.OnTouchMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2923">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2924">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.TouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2924">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2925">Ocorre quando um dedo é gerado fora da tela enquanto o dedo está sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2925">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="7ca58-2926">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2926">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7ca58-2927">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="7ca58-2927">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="7ca58-2928">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="7ca58-2928">Routing strategy</span></span>|<span data-ttu-id="7ca58-2929">Propagação</span><span class="sxs-lookup"><span data-stu-id="7ca58-2929">Bubbling</span></span>|  
|<span data-ttu-id="7ca58-2930">delegado</span><span class="sxs-lookup"><span data-stu-id="7ca58-2930">Delegate</span></span>|<span data-ttu-id="7ca58-2931"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2931"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="7ca58-2932">O evento por túnel correspondente é <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2932">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="7ca58-2933">Substituir <xref:System.Windows.ContentElement.OnTouchUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2933">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ca58-2934">Identifica o evento roteado <see cref="E:System.Windows.ContentElement.TouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="7ca58-2934">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>