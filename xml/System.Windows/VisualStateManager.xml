<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualStateManager.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b4daa92282153a35abd2da928e1de70dd1be505d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4daa92282153a35abd2da928e1de70dd1be505d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.VisualStateManager">
          <source>Manages states and the logic for transitioning between states for controls.</source>
          <target state="translated">Gerencia os estados e a lógica para fazer a transição entre estados para controles.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> permite que você especifique os estados para um controle, a aparência de um controle quando ele está em um determinado estado, e quando um controle altera estados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> might have a slightly different appearance when it is pressed than when it is not pressed.</source>
          <target state="translated">Por exemplo, um <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> pode ter uma aparência ligeiramente diferente quando ele é pressionado que quando ele não seja pressionado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Two states that the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> defines correspond to when it is pressed (<ph id="ph2">`"Pressed"`</ph>) and when it is not (<ph id="ph3">`"Normal"`</ph>).</source>
          <target state="translated">Dois estados que o <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> define correspondem às quando ele é pressionado (<ph id="ph2">`"Pressed"`</ph>) e quando não é (<ph id="ph3">`"Normal"`</ph>).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The appearance of a control when it is in a state is defined by a <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>.</source>
          <target state="translated">A aparência de um controle quando ele está em um estado é definida por um <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>A <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> objects that specify how the control's appearance changes when the control is in that state.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> contém uma coleção de <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> objetos que especificam como a aparência do controle é alterado quando o controle está nesse estado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>You add visual states to a control by setting the <ph id="ph1">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.</source>
          <target state="translated">Adicionar estados visuais para um controle, definindo o <ph id="ph1">`VisualStateManager.VisualStateGroups`</ph> anexado a propriedade do controle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Each <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> contains a collection of <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objects that are mutually exclusive.</source>
          <target state="translated">Cada <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> contém uma coleção de <ph id="ph2">&lt;xref:System.Windows.VisualState&gt;</ph> objetos que são mutuamente exclusivos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>That is, the control is always in exactly one state of in each <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</source>
          <target state="translated">Ou seja, o controle é sempre exatamente um estado de em cada <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> also enables you to specify when a control enters a specific state.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> também permite que você especifique quando um controle entra em um estado específico.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The method that you should call to change states depends on your scenario.</source>
          <target state="translated">O método que você deve chamar mude de estado depende de seu cenário.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If you create a control that uses the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, call the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method.</source>
          <target state="translated">Se você criar um controle que usa o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> no seu <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, chame o <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For more information about how to create controls that use the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, see <bpt id="p1">[</bpt>Creating a Control That Has a Customizable Appearance<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como criar controlam que usam o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, consulte <bpt id="p1">[</bpt>criando um controle que tem uma aparência personalizável<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If you use the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element), call the <ph id="ph5">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method.</source>
          <target state="translated">Se você usar o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> fora de um <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (por exemplo, se você usar um <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> em um <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> ou em um único elemento), chamar o <ph id="ph5">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>In either case, the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</source>
          <target state="translated">Em ambos os casos, o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> executa a lógica necessária para adequadamente iniciar e parar os storyboards que estão associados com o estado envolvido.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For example, suppose that a control defines the states, <ph id="ph1">`State1`</ph> and <ph id="ph2">`State2`</ph>, each of which has a storyboard associated with it.</source>
          <target state="translated">Por exemplo, suponha que um controle define os estados, <ph id="ph1">`State1`</ph> e <ph id="ph2">`State2`</ph>, cada qual com um storyboard associado a ele.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If the control is in <ph id="ph1">`State1`</ph> and you pass <ph id="ph2">`State2`</ph> to <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.VisualStateManager&gt;</ph> starts the storyboard in <ph id="ph6">`State2`</ph> and stops the storyboard in <ph id="ph7">`State1`</ph>.</source>
          <target state="translated">Se o controle está no <ph id="ph1">`State1`</ph> e passar <ph id="ph2">`State2`</ph> para <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>, o <ph id="ph5">&lt;xref:System.Windows.VisualStateManager&gt;</ph> inicia o storyboard <ph id="ph6">`State2`</ph> e interrompe o storyboard no <ph id="ph7">`State1`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Controls that are included with <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> use the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to change visual states.</source>
          <target state="translated">Controles que estão incluídos com <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> usar o <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> para alterar os estados visuais.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>When you create a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a control that is included with <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, you can add <ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objects to the control's <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to specify the control's appearance in a certain state.</source>
          <target state="translated">Quando você cria um <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> para um controle que está incluído no <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, você pode adicionar <ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objetos para o controle <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> para especificar a aparência do controle em um determinado estado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>To find the names of the visual states for the controls that are included with <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id="p1">[</bpt>Control Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>.</source>
          <target state="translated">Para localizar os nomes dos estados visuais para os controles que estão incluídos com <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, consulte <bpt id="p1">[</bpt>modelos e estilos de controle<ept id="p1">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The control's logic handles transitioning between states, so you do not need to do anything other than define the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> objects in the new <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">Identificadores de lógica de controle em transição entre estados, portanto você não precisa fazer nada diferente de definem o <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> objetos no novo <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>For more information about how to create control templates for existing controls, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como criar modelos de controle para controles existentes, consulte <bpt id="p1">[</bpt>Personalizando a aparência de um controle existente, criando um ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If you want to implement your own logic for transitioning between states, you must inherit from <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, override the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method, and set the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType&gt;</ph> attached property on the control that uses the custom logic.</source>
          <target state="translated">Se você quiser implementar sua própria lógica para fazer a transição entre estados, você deve herdar de <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, substituir o <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> método e defina o <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType&gt;</ph> anexado a propriedade do controle que usa a lógica personalizada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> and adds a <ph id="ph2">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> named <ph id="ph3">`CommonStates`</ph> to the <ph id="ph4">`VisualStateManager.VisualStatesGroups`</ph> attached property.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> e adiciona um <ph id="ph2">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> chamado <ph id="ph3">`CommonStates`</ph> para o <ph id="ph4">`VisualStateManager.VisualStatesGroups`</ph> propriedade anexada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The example defines the <ph id="ph1">`MouseOver`</ph> and <ph id="ph2">`Normal`</ph><ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objects in the <ph id="ph4">`CommonStates`</ph><ph id="ph5">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</source>
          <target state="translated">O exemplo define o <ph id="ph1">`MouseOver`</ph> e <ph id="ph2">`Normal`</ph> <ph id="ph3">&lt;xref:System.Windows.VisualState&gt;</ph> objetos no <ph id="ph4">`CommonStates`</ph> <ph id="ph5">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>When the user moves the mouse pointer over the <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, it changes from red to green over one half second.</source>
          <target state="translated">Quando o usuário move o ponteiro do mouse sobre o <ph id="ph1">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph>, ele muda de vermelho para verde sobre um meio segundo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>When the user moves the mouse away from the rectangle, the <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> immediately changes back to red.</source>
          <target state="translated">Quando o usuário move o mouse fora do retângulo, o <ph id="ph1">&lt;xref:System.Windows.Controls.Grid&gt;</ph> imediatamente alterações de volta para vermelho.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>Note that the <ph id="ph1">`Normal`</ph> state does not define a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.</source>
          <target state="translated">Observe que o <ph id="ph1">`Normal`</ph> estado não define uma <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> is not required because when the <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> transitions from the <ph id="ph3">`MouseOver`</ph> state to the <ph id="ph4">`Normal`</ph> state, the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> for <ph id="ph6">`MouseOver`</ph> is stopped and the <ph id="ph7">&lt;xref:System.Windows.Media.SolidColorBrush.Color%2A&gt;</ph> property for the <ph id="ph8">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> returns to red.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> não é necessário porque quando o <ph id="ph2">&lt;xref:System.Windows.Shapes.Rectangle&gt;</ph> faz a transição do <ph id="ph3">`MouseOver`</ph> estado para o <ph id="ph4">`Normal`</ph> estado, o <ph id="ph5">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> para <ph id="ph6">`MouseOver`</ph> é interrompida e o <ph id="ph7">&lt;xref:System.Windows.Media.SolidColorBrush.Color%2A&gt;</ph> propriedade para o <ph id="ph8">&lt;xref:System.Windows.Media.SolidColorBrush&gt;</ph> retorna para vermelho.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>The following example shows the event handler that is defined in the previous example and calls the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to transition between states.</source>
          <target state="translated">O exemplo a seguir mostra o manipulador de eventos é definido no exemplo anterior e chama o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> método para fazer a transição entre estados.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.VisualStateManager">
          <source>If the rectangle in the previous example was part of a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, the example would have to call the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method.</source>
          <target state="translated">Se o retângulo no exemplo anterior fazia parte de um <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, o exemplo precisa chamar o <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
          <source>The element to get the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> attached property from.</source>
          <target state="translated">O elemento do qual a propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> deve ser obtida.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> attached property.</source>
          <target state="translated">Obtém a propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
          <source>The visual state manager that transitions between the states of a control.</source>
          <target state="translated">O gerenciador de estado visual que faz a transição entre os estados de um controle.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
          <source>The element to get the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> attached property from.</source>
          <target state="translated">O elemento do qual a propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> deve ser obtida.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> attached property.</source>
          <target state="translated">Obtém a propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> objects that is associated with the specified object.</source>
          <target state="translated">A coleção de objetos <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> associados ao objeto especificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">Um elemento raiz que contém o <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The state to transition to.</source>
          <target state="translated">O estado para fazer a transição.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> object to transition between states; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para usar um objeto <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> para fazer a transição entre estados, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Transitions the element between two states.</source>
          <target state="translated">Faz a transição do elemento entre dois estados.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Use this method to transition states that are defined by an application, rather than defined by a control.</source>
          <target state="translated">Use esse método para fazer a transição de estados que são definidos por um aplicativo, em vez de definidos por um controle.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle fizer a transição para o novo estado com êxito, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.DataTemplate&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph>).</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> método alterar estados em um elemento fora de um <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (por exemplo, se você usar um <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> em uma <ph id="ph4">&lt;xref:System.Windows.DataTemplate&gt;</ph> ou <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> método se você estiver alterando estados em um controle que usa o <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> em seu <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following example creates an application that prompts the user to guess a number between 1 and 100.</source>
          <target state="translated">O exemplo a seguir cria um aplicativo que solicita ao usuário para estimar um número entre 1 e 100.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</source>
          <target state="translated">Quando o usuário insere um número, o aplicativo indica se a previsão é muito alta, muito baixo ou correto.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> creates the user interface for the application and defines 4 states: <ph id="ph2">`TooLow`</ph>, <ph id="ph3">`TooHigh`</ph>, <ph id="ph4">`Correct`</ph>, and <ph id="ph5">`Guessing`</ph>.</source>
          <target state="translated">O seguinte <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> cria a interface do usuário para o aplicativo e define os 4 estados: <ph id="ph2">`TooLow`</ph>, <ph id="ph3">`TooHigh`</ph>, <ph id="ph4">`Correct`</ph>, e <ph id="ph5">`Guessing`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>When the application begins, it is in the <ph id="ph1">`Guessing`</ph> state.</source>
          <target state="translated">Quando o aplicativo começa, ela fica no <ph id="ph1">`Guessing`</ph> estado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following code shows the logic of the application.</source>
          <target state="translated">O código a seguir mostra a lógica do aplicativo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>When the user enters a number and clicks the button, the application calls <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> to transition to <ph id="ph2">`TooHigh`</ph>, <ph id="ph3">`TooLow`</ph>, or <ph id="ph4">`Correct`</ph> to provide feedback to the user about the guess.</source>
          <target state="translated">Quando o usuário insere um número e clica no botão, o aplicativo chama <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> a transição para <ph id="ph2">`TooHigh`</ph>, <ph id="ph3">`TooLow`</ph>, ou <ph id="ph4">`Correct`</ph> para fornecer comentários ao usuário sobre a previsão.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>To try this example, call the <ph id="ph1">`GenerateNumber`</ph> method when the application begins.</source>
          <target state="translated">Para testar este exemplo, chamar o <ph id="ph1">`GenerateNumber`</ph> método quando o aplicativo começa.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The control to transition between states.</source>
          <target state="translated">O controle para fazer a transição entre estados.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The state to transition to.</source>
          <target state="translated">O estado para fazer a transição.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> object to transition between states; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para usar um objeto <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> para fazer a transição entre estados, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Transitions the control between two states.</source>
          <target state="translated">Faz a transição do controle entre dois estados.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Use this method to transition states on control that has a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ControlTemplate" /&gt;</ph>.</source>
          <target state="translated">Use este método para estados de transição no controle que tem um <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ControlTemplate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle fizer a transição para o novo estado com êxito, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> método se você estiver alterando estados em um controle que usa o <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> em seu <ph id="ph3">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element).</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> método alterar estados em um elemento fora de um <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (por exemplo, se você usar um <ph id="ph3">&lt;xref:System.Windows.VisualStateManager&gt;</ph> em um <ph id="ph4">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> ou em um único elemento).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>The following example demonstrates a control that uses the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method to transition between states.</source>
          <target state="translated">O exemplo a seguir demonstra um controle que usa o <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> método para fazer a transição entre estados.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>For the entire example, see <bpt id="p1">[</bpt>Creating a Control That Has a Customizable Appearance<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</source>
          <target state="translated">Para o exemplo completo, consulte <bpt id="p1">[</bpt>criando um controle que tem uma aparência personalizável<ept id="p1">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="control" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The control to transition between states.</source>
          <target state="translated">O controle para fazer a transição entre estados.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">Um elemento raiz que contém o <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The name of the state to transition to.</source>
          <target state="translated">O nome do estado para o qual a transição será feita.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> that the state belongs to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> ao qual o estado pertence.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The representation of the state to transition to.</source>
          <target state="translated">A representação do estado para o qual a transição será feita.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> object to transition between states; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para usar um objeto <ph id="ph2">&lt;see cref="T:System.Windows.VisualTransition" /&gt;</ph> para fazer a transição entre estados, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>Transitions a control between states.</source>
          <target state="translated">Faz a transição de um controle entre estados.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control successfully transitioned to the new state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o controle fizer a transição para o novo estado com êxito, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> método executa a lógica necessária para iniciar e parar os storyboards que estão associados com a transição de adequadamente.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>When a control calls <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> to change its state, the <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> does the following:</source>
          <target state="translated">Quando um controle chama <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> para alterar o estado, o <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> faz o seguinte:</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>First, if the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is transitioning to has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard begins.</source>
          <target state="translated">Primeiro, se o <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> que o controle está em transição para tem um <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, inicia o storyboard.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is coming from has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard ends.</source>
          <target state="translated">Em seguida, se o <ph id="ph1">&lt;xref:System.Windows.VisualState&gt;</ph> tem que o controle é proveniente de um <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, as extremidades de storyboard.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>If the control is already in the <ph id="ph1">`stateName`</ph> state, <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Se o controle já está no <ph id="ph1">`stateName`</ph> estado, <ph id="ph2">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> não executa nenhuma ação e retorna <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>If <ph id="ph1">`stateName`</ph> does not exist in the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of <ph id="ph3">`control`</ph>, <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`stateName`</ph> não existe no <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> de <ph id="ph3">`control`</ph>, <ph id="ph4">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> não executa nenhuma ação e retorna <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>You can implement your own <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to provide different logic for transitioning between states.</source>
          <target state="translated">Você pode implementar seu próprio <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph> para fornecer uma lógica diferente para fazer a transição entre estados.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</source>
          <target state="translated">Por exemplo, você pode alterar a lógica descrita anteriormente, ou você pode fornecer lógica para fazer a transição entre tipos de animação personalizada.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>To implement a <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, create a class that inherits from <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> and override the <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method.</source>
          <target state="translated">Para implementar um <ph id="ph1">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, crie uma classe que herda de <ph id="ph2">&lt;xref:System.Windows.VisualStateManager&gt;</ph> e substituir o <ph id="ph3">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
          <source>To use the custom class, set the <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt;</ph> property to an object of your custom type.</source>
          <target state="translated">Para usar a classe personalizada, defina a <ph id="ph1">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt;</ph> propriedade a um objeto do seu tipo personalizado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The object that the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event occurred on.</source>
          <target state="translated">O objeto no qual o evento <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> ocorreu.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning from.</source>
          <target state="translated">O estado do qual o controle está fazendo a transição.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning to.</source>
          <target state="translated">O estado para o qual o controle está fazendo a transição.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The control that is transitioning states.</source>
          <target state="translated">O controle que está fazendo a transição de estados.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">Um elemento raiz que contém o <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event on the specified <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> object.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> no objeto <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id="ph3">`control`</ph> parameter is set to the control that owns <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> é ativada a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> de um controle, o <ph id="ph3">`control`</ph> parâmetro está definido para o controle que possui <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> is <ph id="ph4">`null`</ph> and you should use the <ph id="ph5">`stateGroupsRoot`</ph> parameter.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> é definido em um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> é <ph id="ph4">`null`</ph> e você deve usar o <ph id="ph5">`stateGroupsRoot`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The object that the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event occurred on.</source>
          <target state="translated">O objeto no qual o evento <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> ocorreu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning from.</source>
          <target state="translated">O estado do qual o controle está fazendo a transição.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The state that the control is transitioning to.</source>
          <target state="translated">O estado para o qual o controle está fazendo a transição.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The control that is transitioning states.</source>
          <target state="translated">O controle que está fazendo a transição de estados.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>The root element that contains the <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</source>
          <target state="translated">Um elemento raiz que contém o <ph id="ph1">&lt;see cref="T:System.Windows.VisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> event on the specified <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> object.</source>
          <target state="translated">Gera o evento <ph id="ph1">&lt;see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /&gt;</ph> no objeto <ph id="ph2">&lt;see cref="T:System.Windows.VisualStateGroup" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id="ph3">`control`</ph> parameter is set to the control that owns <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> é ativada a <ph id="ph2">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> de um controle, o <ph id="ph3">`control`</ph> parâmetro está definido para o controle que possui <ph id="ph4">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> is <ph id="ph4">`null`</ph> and you should use the <ph id="ph5">`stateGroupsRoot`</ph> parameter.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> é definido em um <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph3">`control`</ph> é <ph id="ph4">`null`</ph> e você deve usar o <ph id="ph5">`stateGroupsRoot`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stateGroupsRoot" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newState" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> em uma classe derivada, certifique-se de chamar a classe base <ph id="ph2">&lt;see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /&gt;</ph> método para que registrado delegados receber o evento.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
          <source>The object to set the property on.</source>
          <target state="translated">O objeto no qual a propriedade deve ser definida.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
          <source>The visual state manager that transitions between the states of a control.</source>
          <target state="translated">O gerenciador de estado visual que faz a transição entre os estados de um controle.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph> attached property.</source>
          <target state="translated">Define a propriedade anexada <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="F:System.Windows.VisualStateManager.VisualStateGroupsProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph> dependency property.</source>
          <target state="translated">Identifica a propriedade de dependência <ph id="ph1">&lt;see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>