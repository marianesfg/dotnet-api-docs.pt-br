<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d597cd5f450f95f3ab2d5d0597aa8da7e36488a4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37493059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece um método auxiliar único (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) que informa que a origem do sistema de propriedades para o valor efetivo de uma propriedade de dependência.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sistema de propriedades é bastante complexo e se baseia em racionalizar os valores potencialmente provenientes de uma variedade de entradas, com base em uma precedência de determinação do valor estabelecido. Porque essas fontes potencialmente vir de código de tempo de execução, da marcação compilado, ou até mesmo de configurações do usuário de tempo de execução, ele pode ser útil saber exatamente qual participante no sistema de valor de propriedade de dependência é estabelecer o valor que você obtém ao chamar <xref:System.Windows.DependencyObject.GetValue%2A>em tempo de execução nessa propriedade. Se o valor é proveniente de uma fonte diferente do que você tinha a intenção, você talvez precise ajustar alguns aspectos do seu aplicativo. A fonte de valor pode ser um estilo, um tema, um valor local, uma animação, uma associação ou um valor de tempo de execução com base, como configurações do sistema por meio de temas ou recursos do sistema. Para obter mais informações, consulte [Precedência do valor da propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Outro mecanismo que relata na propriedade em geral, em vez de uma instância específica da propriedade em um objeto, é os metadados de propriedade. Os metadados de propriedade são localização chamando <xref:System.Windows.DependencyProperty.GetMetadata%2A> e examinando retornado <xref:System.Windows.PropertyMetadata> (ou uma das várias classes derivadas possíveis que os metadados de propriedade retornada são conversíveis para).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">O elemento que contém o <c>dependencyProperty</c> para o qual relatar as informações.</param>
        <param name="dependencyProperty">O identificador da propriedade de dependência para o qual relatar informações.</param>
        <summary>Retorna uma estrutura que relata várias características do sistema de propriedade e de metadados de uma propriedade de dependência especificada em determinado <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Uma estrutura <see cref="T:System.Windows.ValueSource" /> que relata as informações específicas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você deve chamar esse método em um contexto, de modo que os participantes tardios na determinação do valor da propriedade são capazes de agir em uma propriedade. Por exemplo, associações não podem estar ativas em uma propriedade, a menos que todos os elementos de participantes na árvore de elementos são carregados e a vinculação assíncrona é propagada e o objeto de origem de associação está conectado. Da mesma forma, os recursos, incluindo todos os dicionários de tema necessários devem estar disponíveis.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Um elemento que pertence a uma instância de modelo.</param>
        <param name="dependencyProperty">Uma propriedade de dependência.</param>
        <summary>Indica se um elemento especificado pertence a uma instância de um modelo que define um valor para a propriedade especificada que pode ser alterada em tempo de execução com base em alterações em outro lugar.</summary>
        <returns>
          <see langword="true" /> se <paramref name="elementInTemplate" /> pertencer a uma instância de um modelo que define um valor para a propriedade especificada que poderá ser alterada em tempo de execução com base em alterações em outro lugar; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Exemplos de valores que podem ser alterados em tempo de execução com base em alterações em outro lugar são valores definidos por <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> e <xref:System.Windows.DynamicResourceExtension> objetos.

Esse método fornece mais informações em casos em que o valor da <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> é de propriedade <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.
As informações são principalmente de uso para as ferramentas de diagnóstico.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>