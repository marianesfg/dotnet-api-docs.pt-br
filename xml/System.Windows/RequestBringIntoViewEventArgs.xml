<Type Name="RequestBringIntoViewEventArgs" FullName="System.Windows.RequestBringIntoViewEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d1a9c14ed9171240e8980e9efc8a43107b009dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestBringIntoViewEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestBringIntoViewEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestBringIntoViewEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5321-101">Fornece dados para o evento roteado <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5321-101">Provides data for the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5321-102">O <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> é gerado por elementos ao chamar <xref:System.Windows.FrameworkElement.BringIntoView%2A> desse elemento.</span><span class="sxs-lookup"><span data-stu-id="d5321-102">The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element.</span></span> <span data-ttu-id="d5321-103">Geralmente, esse evento roteado não é tratado pela origem.</span><span class="sxs-lookup"><span data-stu-id="d5321-103">Generally, this routed event is not handled by the source.</span></span> <span data-ttu-id="d5321-104">Classes intermediárias que não implementam roláveis regiões ou conceitos semelhantes que corta o conteúdo não devem manipular o evento.</span><span class="sxs-lookup"><span data-stu-id="d5321-104">Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.</span></span>  <span data-ttu-id="d5321-105">O evento deve ter permissão para bolhas para elementos pai que implementam uma região de rolagem ou especifiquem <xref:System.Windows.UIElement.ClipToBounds%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="d5321-105">The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`.</span></span> <span data-ttu-id="d5321-106">Esses elementos pai normalmente fornecem manipulação de classe para o <xref:System.Windows.FrameworkElement.RequestBringIntoView> evento, que é onde a lógica de processamento necessário ocorre sempre que um determinado elemento solicita que ele se tornar visíveis dentro da região de recorte.</span><span class="sxs-lookup"><span data-stu-id="d5321-106">Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.</span></span>  
  
 <span data-ttu-id="d5321-107">Elementos de conteúdo podem fazer com que o evento a ser gerado por seus hosts de conteúdo (chamando <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> e gerando <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> do host de conteúdo).</span><span class="sxs-lookup"><span data-stu-id="d5321-107">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="d5321-108">Da mesma forma, você pode solicitar os elementos de árvore lógica para ser colocado em modo de exibição com o método auxiliar <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5321-108">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5321-109">Um <xref:System.Windows.Controls.ListBox> implementa um método relacionado, mas diferente <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5321-109">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
  </Docs>
  <Members>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="d5321-110">O manipulador genérico a ser chamado de uma forma específica ao tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-110">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="d5321-111">O destino no qual chamar o manipulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-111">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5321-112">Invoca manipuladores de eventos em uma forma específica de tipo, o que pode aumentar a eficiência do sistema de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-112">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5321-113">Essa implementação converte o manipulador genérico como um <xref:System.Windows.RequestBringIntoViewEventHandler> e, em seguida, invoca.</span><span class="sxs-lookup"><span data-stu-id="d5321-113">This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it.</span></span> <span data-ttu-id="d5321-114">Para obter detalhes sobre esse padrão de implementação e os motivos para ele, consulte <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> e [visão geral sobre eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d5321-114">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TargetObject { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5321-115">Obtém o objeto que deve ficar visível em resposta ao evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-115">Gets the object that should be made visible in response to the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5321-116">O objeto que chamou <see cref="M:System.Windows.FrameworkElement.BringIntoView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-116">The object that called <see cref="M:System.Windows.FrameworkElement.BringIntoView" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5321-117">Esse objeto normalmente é o mesmo objeto, como retornado por <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5321-117">This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.RoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TargetRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect TargetRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect TargetRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRect As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect TargetRect { System::Windows::Rect get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5321-118">Obtém a região retangular no espaço de coordenadas do objeto que deve ficar visível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-118">Gets the rectangular region in the object's coordinate space which should be made visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5321-119">O espaço retangular solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5321-119">The requested rectangular space.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5321-120">Se a assinatura de <xref:System.Windows.FrameworkElement.BringIntoView%2A> que foi chamado gerar o evento não especificou um retângulo de destino, essa propriedade pode ser o <xref:System.Windows.Rect.Empty%2A> valor o <xref:System.Windows.Rect> estrutura.</span><span class="sxs-lookup"><span data-stu-id="d5321-120">If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn't specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      </Docs>
    </Member>
  </Members>
</Type>