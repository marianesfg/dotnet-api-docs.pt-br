<Type Name="Window" FullName="System.Windows.Window">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30e9c154175370c143890004c37ed150b5ecabbb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456195" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9d0d1-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d0d1-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-102">O ponto de interação entre um usuário e um aplicativo autônomo é uma janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="9d0d1-103">Um [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] janela consiste em duas áreas distintas:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="9d0d1-104">Uma área não cliente, que hospeda os ornamentos do windows, incluindo um ícone, o título, o menu do sistema, botão Minimizar, maximizar o botão, o botão Restaurar, o botão Fechar e uma borda.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="9d0d1-105">Uma área do cliente, que hospeda o conteúdo específico do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="9d0d1-106">Uma janela padrão é mostrada na figura a seguir:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="9d0d1-107">![Elementos de janela](~/add/media/windowoverviewfigure1.PNG "elementos da janela")</span><span class="sxs-lookup"><span data-stu-id="9d0d1-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="9d0d1-108"><xref:System.Windows.Window> encapsula a capacidade de criar, configurar, exibir e gerenciar o tempo de vida do windows e caixas de diálogo e fornece os seguintes serviços de chave:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="9d0d1-109">**Gerenciamento de vida útil**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="9d0d1-110">**Gerenciamento de janela**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-111">**Aparência e comportamento**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="9d0d1-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="9d0d1-112">**Caixas de diálogo**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-113">Além disso, <xref:System.Windows.Application> expõe suporte especial para gerenciar todas as janelas em um aplicativo:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="9d0d1-114">Aplicativo mantém uma lista de todas as janelas que atualmente são instanciados no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="9d0d1-115">Essa lista é exposta pelo <xref:System.Windows.Application.Windows%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="9d0d1-116">Por padrão, <xref:System.Windows.Application.MainWindow%2A> é definido automaticamente com uma referência ao primeiro <xref:System.Windows.Window> instanciado em um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="9d0d1-117">Esta janela, tornando o janela principal do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="9d0d1-118">Um <xref:System.Windows.Window> pode ser implementada usando marcação, marcação e code-behind ou código.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="9d0d1-119"><xref:System.Windows.Window> é usado principalmente para exibir as janelas e caixas de diálogo para aplicativos autônomos.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="9d0d1-120">No entanto, para aplicativos que exigem a navegação no nível da janela, como assistentes, você pode usar <xref:System.Windows.Navigation.NavigationWindow> ; <xref:System.Windows.Navigation.NavigationWindow> deriva <xref:System.Windows.Window> e estende com suporte de navegação de estilo de navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-121">Ilhas de conteúdo navegável podem ser incorporadas em outros contêineres de conteúdo e o conteúdo usando <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="9d0d1-122"><xref:System.Windows.Window> precisa de `UnmanagedCode` permissão de segurança a ser instanciado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="9d0d1-123">Isso tem as seguintes consequências:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="9d0d1-124">-aplicativos autônomos implantado irá solicitar a elevação de permissões quando iniciado a partir de zonas de Internet ou Intranet Local.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]<span data-ttu-id="9d0d1-125"> qualquer coisa que solicitarem menor que permissões completas não poderá criar uma instância de janelas ou caixas de diálogo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-125"> that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="9d0d1-126">Para obter informações sobre considerações de segurança e de implantação de aplicativo autônomo, consulte [estratégia de segurança do WPF - segurança da plataforma](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="9d0d1-127">Um <xref:System.Windows.Window> é um <xref:System.Windows.Controls.ContentControl>, que significa que ele pode conter um único objeto de qualquer tipo (como uma cadeia de caracteres, uma imagem ou um painel).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="9d0d1-128">Para obter mais informações, consulte a classe <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="9d0d1-129">Além disso, <xref:System.Windows.Window> é um elemento raiz e, portanto, não pode ser parte de outro conteúdo de elemento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-130">O <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, e <xref:System.Windows.Window.Left%2A> propriedades definidas em um <xref:System.Windows.Window> por meio de um estilo não serão aplicadas em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="9d0d1-131">Personalizando o controle de janela</span><span class="sxs-lookup"><span data-stu-id="9d0d1-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="9d0d1-132">Para aplicar as mesmas configurações de propriedade a vários <xref:System.Windows.Window> controles, use o <xref:System.Windows.FrameworkElement.Style%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="9d0d1-133">Você pode modificar o padrão <xref:System.Windows.Controls.ControlTemplate> para que o controle uma aparência exclusiva.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="9d0d1-134">Para obter mais informações sobre como criar um <xref:System.Windows.Controls.ControlTemplate>, consulte [Personalizando a aparência de um controle existente, criando um ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="9d0d1-135">Para ver as partes e os estados que são específicos para o <xref:System.Windows.Window>, consulte [modelos e estilos de janela](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="9d0d1-136">Propriedades de dependência para este controle podem ser definidas pelo estilo padrão do controle.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-136">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="9d0d1-137">Se uma propriedade é definida por um estilo padrão, a propriedade pode ser alterada de seu valor padrão quando o controle é exibido no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="9d0d1-138">O estilo padrão é determinado pelo qual tema de área de trabalho é usado quando o aplicativo está em execução.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="9d0d1-139">Para obter mais informações, consulte [padrão WPF temas](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-139">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-140">Definir uma propriedade visual só terá efeito se essa propriedade estiver presente em ambos <xref:System.Windows.Window> controle do modelo padrão e é definido usando um.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-140">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Window> control's default template and is set by using a .</span></span> <span data-ttu-id="9d0d1-141">Você pode encontrar uma lista de propriedades visuais na seção "Alterando o Visual estrutura de um controle de" [Personalizando a aparência de um controle existente, criando um ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-141">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-142">O exemplo a seguir mostra como uma janela padrão é definido usando apenas marcação:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-142">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="9d0d1-143">A exemplo a seguir mostra como uma janela padrão é definida usando somente de código:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-143">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="9d0d1-144">O exemplo a seguir mostra como uma janela padrão é definido usando uma combinação de marcação e code-behind.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-144">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-145">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-145">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-146">O construtor inicializa o <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, e <xref:System.Windows.Window.Left%2A> propriedades padrão <xref:System.Windows.Window> valores.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-146">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="9d0d1-147">Se uma janela é criada dentro de um <xref:System.AppDomain> que tem um <xref:System.Windows.Application> do objeto, o construtor adiciona o <xref:System.Windows.Window> objeto ao conjunto de <xref:System.Windows.Application>-gerenciados windows por meio do <xref:System.Windows.Application.Windows%2A> propriedade do <xref:System.Windows.Application> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-147">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9d0d1-148">permissão para que esse objeto chamar métodos nativos não seguros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-148">for permission for this object to call unsafe native methods.</span>
          </span>
          <span data-ttu-id="9d0d1-149">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-150">Attempts to bring the window to the foreground and activates it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-150">Attempts to bring the window to the foreground and activates it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d0d1-151">
            <see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-151">
              <see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-152">As regras que determinam se a janela está ativada são as mesmas usadas pelo [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` função (User32. dll).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-152">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="9d0d1-153">Se a janela é ativada em um aplicativo do Windows Presentation Foundation que não é um aplicativo de primeiro plano do usuário, <xref:System.Windows.Application.Activated> é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-153">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-154">Este método não pode ser chamado quando uma janela está hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-154">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-155">permissão ativar uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-155">for permission to activate a window.</span>
          </span>
          <span data-ttu-id="9d0d1-156">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-156">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-157">Occurs when a window becomes the foreground window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-157">Occurs when a window becomes the foreground window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-158">Uma janela é ativada (torna-se a janela de primeiro plano) quando:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-158">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="9d0d1-159">A janela é aberta pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-159">The window is first opened.</span></span>  
  
-   <span data-ttu-id="9d0d1-160">Um usuário alterna para uma janela, selecionando-o com o mouse, pressione ALT + TAB ou no Gerenciador de tarefas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-160">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="9d0d1-161">Um usuário clica no botão da janela na barra de tarefas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-161">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="9d0d1-162">Windows que precisam detectar quando eles se tornar ativa pode manipular o <xref:System.Windows.Window.Activated> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-162">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="9d0d1-163">Depois de uma janela é ativada pela primeira vez, podem ser desativado e reativado muitas vezes durante seu ciclo de vida.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-163">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="9d0d1-164">Se o estado ou o comportamento de um aplicativo depende de seu estado de ativação, pode inspecionar <xref:System.Windows.Window.IsActive%2A> para determinar qual estado de ativação está em.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-164">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="9d0d1-165">Um aplicativo também pode ser <xref:System.Windows.Application.Activated>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-165">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-166">Gets or sets a value that indicates whether a window's client area supports transparency.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-166">Gets or sets a value that indicates whether a window's client area supports transparency.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-167">
            <see langword="true" /> se a janela der suporte à transparência; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-167">
              <see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-168">Quando o <xref:System.Windows.Controls.Control.Background%2A> propriedade de uma janela é definida como um transparente de cores, usando <xref:System.Windows.Media.Brushes.Transparent%2A> , por exemplo, a janela permanece opaca.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-168">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="9d0d1-169">Isso significa que a área de trabalho e quaisquer aplicativos em execução "sob" a janela não podem ser vistos.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-169">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="9d0d1-170">Para permitir esse tipo de transparência, <xref:System.Windows.Window.AllowsTransparency%2A> deve ser definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-170">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="9d0d1-171"><xref:System.Windows.Window.AllowsTransparency%2A> existe para facilitar a criação de janelas não retangulares e, consequentemente, quando <xref:System.Windows.Window.AllowsTransparency%2A> é definido como `true`, uma janela <xref:System.Windows.Window.WindowStyle%2A> propriedade deve ser definida como <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-171"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-172">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-173">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-173">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="9d0d1-174">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-175">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-175">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-176">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-176">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-177">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-177">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds">
          <span data-ttu-id="9d0d1-178">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-178">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-179">Override this method to arrange and size a window and its child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-179">Override this method to arrange and size a window and its child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d0d1-180">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-180">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-181"><xref:System.Windows.Window.ArrangeOverride%2A> não é chamado quando o <xref:System.Windows.UIElement.Visibility%2A> propriedade tem um valor de <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-181"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="9d0d1-182">Se o valor de <xref:System.Windows.UIElement.Visibility%2A> propriedade está <xref:System.Windows.Visibility.Hidden> ou <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-182">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-183">Quando o <xref:System.Windows.Window.Show%2A> ou <xref:System.Windows.Window.ShowDialog%2A> são chamadas, o <xref:System.Windows.UIElement.Visibility%2A> propriedade de um <xref:System.Windows.Window> é definido como <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-183">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-184">Manually closes a <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-184">Manually closes a <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-185">Um <xref:System.Windows.Window> pode ser fechada usando uma das várias, mecanismos conhecidos, fornecido pelo sistema localizado na sua barra de título, incluindo:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-185">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="9d0d1-186">ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-186">ALT+F4.</span></span>  
  
-   <span data-ttu-id="9d0d1-187">Menu do sistema &#124; **fechar**.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-187">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="9d0d1-188">**Fechar** botão.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-188">**Close** button.</span></span>  
  
 <span data-ttu-id="9d0d1-189">Um <xref:System.Windows.Window> também pode ser fechada usando um dos vários mecanismos conhecidos na área do cliente que são fornecidos por desenvolvedores, incluindo:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-189">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="9d0d1-190">**Arquivo** &#124; **Exit** em uma janela principal.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-190">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="9d0d1-191">**Arquivo** &#124; **fechar** ou um **fechar** botão em uma janela filho.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-191">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-192">**Okey** e **Cancelar** botões em uma caixa de diálogo também são fornecido pelo desenvolvedor, embora será provavelmente conjunto <xref:System.Windows.Window.DialogResult%2A>, que fecha automaticamente uma janela que foi aberta chamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-192">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-193">Esses mecanismos exigem que você chamar explicitamente <xref:System.Windows.Window.Close%2A> para fechar uma janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-193">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-194">Se uma janela aberta chamando <xref:System.Windows.Window.ShowDialog%2A>e com um <xref:System.Windows.Controls.Button> com seus <xref:System.Windows.Controls.Button.IsCancel%2A> propriedade definida como true, será fechada automaticamente quando o botão é clicado ou ou ESC é pressionado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-194">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="9d0d1-195">Se a janela foi aberta usando <xref:System.Windows.Window.Show%2A>, no entanto, <xref:System.Windows.Window.Close%2A> deve ser chamado explicitamente, tais como de <xref:System.Windows.Controls.Primitives.ButtonBase.Click> manipulador de eventos para o <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-195">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="9d0d1-196">Fechar uma janela faz com que o <xref:System.Windows.Window.Closing> evento ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-196">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="9d0d1-197">Se o <xref:System.Windows.Window.Closing> evento não for cancelado, ocorre o seguinte:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-197">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="9d0d1-198">O <xref:System.Windows.Window> é removido do <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (se um <xref:System.Windows.Application> objeto existe).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-198">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="9d0d1-199">O <xref:System.Windows.Window> é removido do proprietário <xref:System.Windows.Window> se a relação de propriedade foi estabelecida antes da propriedade <xref:System.Windows.Window> foi exibido e depois o proprietário <xref:System.Windows.Window> foi aberto.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-199">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="9d0d1-200">O <xref:System.Windows.Window.Closed> é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-200">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="9d0d1-201">Criado por recursos não gerenciados a <xref:System.Windows.Window> são descartados.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-201">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="9d0d1-202">Se <xref:System.Windows.Window.ShowDialog%2A> foi chamado para mostrar o <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> retorna.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-202">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="9d0d1-203">Fechar um <xref:System.Windows.Window> faz com que todas as janelas que ela possui para ser fechado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-203">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="9d0d1-204">Além disso, fechar um <xref:System.Windows.Window> pode fazer com que um aplicativo para interromper a execução dependendo de como a <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> está definida.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-204">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-205">Este método não pode ser chamado quando uma janela está hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-205">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-206">A exemplo a seguir mostra um **arquivo** &#124; **Exit** menu está sendo tratado para chamar explicitamente o <xref:System.Windows.Window.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-206">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-207">permissão usar todas as janelas e eventos de entrada do usuário sem restrição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-207">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="9d0d1-208">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-208">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-209">Occurs when the window is about to close.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-209">Occurs when the window is about to close.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-210">Depois que esse evento é gerado, uma janela não pode ser impedida de fechamento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-210">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-211">
            <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-211">
              <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-212">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-212">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-213"><xref:System.Windows.Window.Closing> pode ser usado para detectar quando uma janela está sendo fechada (por exemplo, quando <xref:System.Windows.Window.Close%2A> é chamado).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-213"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="9d0d1-214">Além disso, <xref:System.Windows.Window.Closing> pode ser usado para impedir que uma janela seja fechada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-214">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="9d0d1-215">Para impedir que uma janela seja fechada, você pode definir o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriedade o <xref:System.ComponentModel.CancelEventArgs> argumento `true`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-215">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="9d0d1-216">O <xref:System.Windows.Window.Closing> é gerado quando <xref:System.Windows.Window.Close%2A> é chamado, se o usuário clica no botão Fechar uma janela, ou se o usuário pressionar ALT + F4.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-216">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="9d0d1-217">Se uma janela de propriedade foi aberta usando seu proprietário janela <xref:System.Windows.Window.Show%2A>e o proprietário da janela for fechada, a janela de propriedade <xref:System.Windows.Window.Closing> não é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-217">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="9d0d1-218">Se o proprietário de uma janela for fechado (consulte <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> não é gerado na janela de propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-218">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="9d0d1-219">Se <xref:System.Windows.Application.Shutdown%2A> é chamado, o <xref:System.Windows.Window.Closing> é gerado para cada janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-219">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="9d0d1-220">No entanto, se <xref:System.Windows.Window.Closing> é cancelado, o cancelamento é ignorado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-220">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="9d0d1-221">Se uma sessão encerrada porque um usuário efetua logoff ou desliga, <xref:System.Windows.Window.Closing> não é gerado; tratar <xref:System.Windows.Application.SessionEnding> para implementar o código que cancela o fechamento do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-221">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="9d0d1-222">Se você deseja mostrar e ocultar uma janela várias vezes durante o tempo de vida de um aplicativo e você não deseja reinstantiate janela sempre mostrá-la, você pode manipular o <xref:System.Windows.Window.Closing> evento, cancelá-la e chamar o <xref:System.Windows.Window.Hide%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-222">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="9d0d1-223">Em seguida, você pode chamar <xref:System.Windows.Window.Show%2A> na mesma instância para reabri-la.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-223">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-224">O exemplo a seguir demonstra um <xref:System.Windows.Window> que determina se é preciso fechar intervenção do usuário.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-224">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-225">
            <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-225">
              <see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-226">Occurs after a window's content has been rendered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-226">Occurs after a window's content has been rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-227">Se a janela não tem nenhum conteúdo, esse evento não será gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-227">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-228">Occurs when a window becomes a background window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-228">Occurs when a window becomes a background window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-229">Uma janela é desativada (se torna uma janela de plano de fundo) quando:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-229">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="9d0d1-230">Um usuário alterna para outra janela do aplicativo atual.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-230">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="9d0d1-231">Um usuário alterna para a janela em outro aplicativo usando ALT + TAB ou usando o Gerenciador de tarefas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-231">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="9d0d1-232">Um usuário clica no botão de barra de tarefas para uma janela em outro aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-232">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="9d0d1-233">Windows que precisam detectar quando eles se tornam desativados manipulando o <xref:System.Windows.Window.Deactivated> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-233">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="9d0d1-234">Depois de uma janela é desativada pela primeira vez, pode ser reativado e desativado muitas vezes durante seu ciclo de vida.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-234">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="9d0d1-235">Se o estado ou o comportamento de um aplicativo depende de seu estado de ativação, pode inspecionar <xref:System.Windows.Window.IsActive%2A> para determinar qual estado de ativação está em.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-235">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="9d0d1-236">Um aplicativo também pode ser <xref:System.Windows.Application.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-236">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-237">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-237">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-238">Um valor <see cref="T:System.Nullable`1" /> do tipo <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-238">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="9d0d1-239">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-239">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-240"><xref:System.Windows.Window.DialogResult%2A> pode ser usado em código que mostrava uma caixa de diálogo para determinar se um usuário aceita (`true`) ou cancelado (`false`) a caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-240"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="9d0d1-241">Se uma caixa de diálogo é aceita, isso significa para o código que abriu a caixa de diálogo para recuperar os dados que foram coletados pelo usuário e processá-la.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-241">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="9d0d1-242">Se uma caixa de diálogo foi cancelada, no entanto, isso significa que o código de chamada deve parar a nenhum processamento adicional.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-242">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="9d0d1-243">Por padrão, uma caixa de diálogo é cancelada quando um usuário faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-243">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="9d0d1-244">PressesALT + F4.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-244">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="9d0d1-245">Clica o **fechar** botão.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-245">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="9d0d1-246">Seleciona **fechar** no menu de sistema.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-246">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="9d0d1-247">Em todos esses casos, <xref:System.Windows.Window.DialogResult%2A> é `false` por padrão.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-247">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="9d0d1-248">Normalmente, uma caixa de diálogo fornece um botão especial para cancelar uma caixa de diálogo, que é o botão cujo <xref:System.Windows.Controls.Button.IsCancel%2A> está definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-248">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="9d0d1-249">Um botão configurado dessa forma será fechada automaticamente uma janela quando ou é pressionado ou quando é pressionada a tecla ESC.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-249">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="9d0d1-250">Em ambos os casos, <xref:System.Windows.Window.DialogResult%2A> permanece `false`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-250">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="9d0d1-251">Uma caixa de diálogo também normalmente fornece um botão aceitar, que é o botão cujo <xref:System.Windows.Controls.Button.IsDefault%2A> está definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-251">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="9d0d1-252">Um botão com essa configuração irá gerar seu <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento quando ele ou a tecla ENTER é pressionada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-252">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="9d0d1-253">No entanto, ele não fecha automaticamente a caixa de diálogo nem será definida <xref:System.Windows.Window.DialogResult%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-253">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="9d0d1-254">Você precisa gravar manualmente esse código, geralmente do <xref:System.Windows.Controls.Primitives.ButtonBase.Click> manipulador de eventos para o botão padrão.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-254">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="9d0d1-255"><xref:System.Windows.Window.DialogResult%2A> é `null` quando a caixa de diálogo é exibida mas não aceita nem cancelada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-255"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="9d0d1-256">Depois que uma caixa de diálogo é fechada, você pode obter o resultado da caixa de diálogo do valor retornado por <xref:System.Windows.Window.ShowDialog%2A> método, ou inspecionando o <xref:System.Windows.Window.DialogResult%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-256">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="9d0d1-257"><xref:System.Windows.Window.DialogResult%2A> só pode ser definida quando um <xref:System.Windows.Window> é aberta, chamando seu <xref:System.Windows.Window.ShowDialog%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-257"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-258">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-258">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-259">O exemplo a seguir mostra como configurar um botão Okey e um botão Cancelar para retornar as <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-259">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-260">
            <see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-260">
              <see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span>
          </span>
          <span data-ttu-id="9d0d1-261">-or-  <see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-261">-or-  <see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-262">Occurs after the DPI of the screen on which the Window is displayed changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-262">Occurs after the DPI of the screen on which the Window is displayed changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-263">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-263">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-264">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-264">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-265">O botão esquerdo do mouse deve estar inativos quando <xref:System.Windows.Window.DragMove%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-265">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="9d0d1-266">É uma maneira de detectar quando o botão esquerdo do mouse é pressionado lidar com o <xref:System.Windows.UIElement.MouseLeftButtonDown> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-266">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="9d0d1-267">Quando <xref:System.Windows.Window.DragMove%2A> é chamado, à esquerda deve ser pressionado o botão do mouse sobre a área exposta da área cliente da janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-267">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-268">Este método não pode ser chamado quando uma janela está hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-268">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-269">O exemplo a seguir mostra como substituir <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> chamar <xref:System.Windows.Window.DragMove%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-269">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-270">The left mouse button is not down.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-270">The left mouse button is not down.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-271">permissão arrastar uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-271">for permission to drag a window.</span>
          </span>
          <span data-ttu-id="9d0d1-272">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-272">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="9d0d1-273">The dependency object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-273">The dependency object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-274">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-274">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d0d1-275">A <see cref="T:System.Windows.Window" /> reference to the host window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-275">A <see cref="T:System.Windows.Window" /> reference to the host window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d0d1-276">
            <paramref name="dependencyObject" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-276">
              <paramref name="dependencyObject" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-277">Makes a window invisible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-277">Makes a window invisible.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-278">Uma janela não é fechada quando ele estiver oculto e não o <xref:System.Windows.Window.Closing> nem <xref:System.Windows.Window.Closed> é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-278">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="9d0d1-279">Em vez disso, a janela <xref:System.Windows.UIElement.Visibility%2A> está definida como <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-279">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9d0d1-280">Se uma janela do aplicativo <xref:System.Windows.Application.MainWindow%2A> e o aplicativo <xref:System.Windows.Application.ShutdownMode%2A> é <xref:System.Windows.ShutdownMode.OnMainWindowClose>, o aplicativo não é desligado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-280">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="9d0d1-281">Da mesma forma, o aplicativo não é desligado se uma janela é a única e modo de desligamento do aplicativo é <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-281">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="9d0d1-282">Se você deseja mostrar e ocultar uma janela várias vezes durante o tempo de vida de um aplicativo e você não deseja criar novamente a janela de cada vez mostrá-la, você pode manipular o <xref:System.Windows.Window.Closing> evento, cancelá-la e chamar o <xref:System.Windows.Window.Hide%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-282">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="9d0d1-283">Em seguida, você pode chamar <xref:System.Windows.Window.Show%2A> na mesma instância para abri-la novamente.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-283">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-284">
            <see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-284">
              <see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-285">Gets or sets a window's icon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-285">Gets or sets a window's icon.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-286">Um objeto <see cref="T:System.Windows.Media.ImageSource" /> que representa o ícone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-286">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-287">Aplicativos do Windows Presentation Foundation (WPF) independentes têm dois tipos de ícones:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-287">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="9d0d1-288">Ícone de um assembly, que é especificado usando o `<ApplicationIcon>` arquivo de compilação de propriedade no projeto do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-288">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="9d0d1-289">Esse ícone é usado como o ícone da área de trabalho para um assembly.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-289">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="9d0d1-290">Durante a depuração no Visual Studio, o ícone não pode aparecer devido ao processo de hospedagem.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-290">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="9d0d1-291">Se você executar o executável, o ícone será exibido.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-291">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="9d0d1-292">Para obter mais informações, consulte [Processo de hospedagem (vshost.exe)](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-292">For more information, see [Hosting Process (vshost.exe)](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="9d0d1-293">Um ícone por janela que é especificado pela configuração <xref:System.Windows.Window.Icon%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-293">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="9d0d1-294">Para cada janela, esse ícone é usado em sua barra de título, o botão da barra de tarefas e em sua entrada de lista de seleção de aplicativo ALT TAB.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-294">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="9d0d1-295">Uma janela WPF sempre exibe um ícone.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-295">A WPF window always displays an icon.</span></span> <span data-ttu-id="9d0d1-296">Quando um não for fornecido, definindo <xref:System.Windows.Window.Icon%2A>, WPF escolhe um ícone para exibir com base nas seguintes regras:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-296">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="9d0d1-297">Use o ícone de assembly, se especificado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-297">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="9d0d1-298">Se o ícone de assembly não for especificado, use o ícone padrão do Microsoft Windows.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-298">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="9d0d1-299">Se você usar <xref:System.Windows.Window.Icon%2A> para especificar um ícone de janela personalizada, você pode restaurar o ícone de aplicativo padrão definindo <xref:System.Windows.Window.Icon%2A> para `null`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-299">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="9d0d1-300">Um único ícone pode ser usado em uma variedade de maneiras no Windows, inclusive sendo mostrado na barra de título de uma janela, a barra de tarefas para uma janela, a lista de seleção de arquivo ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-300">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="9d0d1-301">Cada uma dessas mostra o ícone com um tamanho diferente; um ícone de 16 x 16 pixels é exibido na barra de título de uma janela e na barra de tarefas, enquanto um ícone de 32 x 32 pixels é exibido na lista de seleção de arquivo ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-301">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="9d0d1-302">Alguns aplicativos, como o [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], forneça um **exibição** menu que permite que você escolha o tamanho do ícone que você deseja exibir.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-302">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="9d0d1-303">Para atender a vários tamanhos de exibição, um arquivo de ícone é composto de um ou mais ícones reais em que cada uma representa uma versão do ícone que tem como alvo uma profundidade de cor e tamanho específica.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-303">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="9d0d1-304">Por exemplo, um ícone pode ter somente um único ícone de 16 x 16 pixels com 16 cores, enquanto outra pode conter 16 x 16 pixels e ícones de 32 x 32 pixels com 16 cores e de 256 cores.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-304">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="9d0d1-305">Se existirem ícones para todos os tamanhos possíveis e intensidades de cor em um arquivo de ícone <xref:System.Windows.Window> usará no ícone apropriado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-305">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="9d0d1-306">Se um arquivo de ícone contém apenas um subconjunto de todos os possíveis ícones, <xref:System.Windows.Window> usa o próximo ícone mais apropriado em ordem decrescente de tamanhos e profundidade de cor.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-306">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="9d0d1-307">O resultado é que um ícone sempre será usado por <xref:System.Windows.Window>, embora o ícone usado não pode direcionar a intensidade da cor e tamanho necessária.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-307">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="9d0d1-308">Por exemplo, um ícone de 16 x 16 pixels com 16 cores pode ser usado para exibir como um ícone de 32 x 32 pixels com 256 cores.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-308">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="9d0d1-309">Isso pode causar efeitos visuais indesejáveis, como pixilation, mas pode ser evitado por meio da criação de ícones de alvo de todos os tamanhos e intensidades de cor.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-309">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-310">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-310">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-311">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-311">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-312">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-312">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="9d0d1-313">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-313">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-314">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-314">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-315">O exemplo a seguir mostra como definir um ícone de janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-315">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-316">permissão definir o ícone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-316">for permission to set the icon.</span>
          </span>
          <span data-ttu-id="9d0d1-317">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-317">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-318">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-318">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-319">Gets a value that indicates whether the window is active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-319">Gets a value that indicates whether the window is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-320">
            <see langword="true" /> se a janela estiver ativa; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-320">
              <see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9d0d1-321">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-321">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-322">Uma janela ativa é a janela de primeiro plano atual do usuário e tem o foco, representado pela aparência da barra de título ativa.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-322">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="9d0d1-323">Uma janela ativa também será o principal de todas as janelas de nível superior não definir explicitamente o <xref:System.Windows.Window.Topmost%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-323">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-324">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-324">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-325">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-325">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="9d0d1-326">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-326">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-327">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-327">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-328">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-328">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-329">Gets or sets the position of the window's left edge, in relation to the desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-329">Gets or sets the position of the window's left edge, in relation to the desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-330">A posição a borda esquerda da janela, em unidades lógicas (1/96 de polegada).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-330">The position of the window's left edge, in logical units (1/96th of an inch).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-331">Quando o <xref:System.Windows.Window> é maximizada ou minimizada, esse valor representa a borda esquerda da restauração de ponto para o <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-331">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="9d0d1-332">Essa propriedade não pode ser definida por meio de um estilo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-332">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="9d0d1-333">Se você não especificar um valor de <xref:System.Windows.Window.Left%2A> é definido como o valor padrão do sistema.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-333">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="9d0d1-334">Você também pode especificar o valor padrão do sistema, definindo <xref:System.Windows.Window.Left%2A> para <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-334">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="9d0d1-335">Nem <xref:System.Double.NegativeInfinity> nem <xref:System.Double.PositiveInfinity> é um valor válido para <xref:System.Windows.Window.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-335">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-336">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-336">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-337">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-338">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-338">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="9d0d1-339">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-340">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-340">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-341">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-341">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-342">Occurs when the window's location changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-342">Occurs when the window's location changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-343">Localização da janela é alterado quando:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-343">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="9d0d1-344">Um usuário move uma janela arrastando-a com a barra de título da janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-344">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="9d0d1-345">Uma janela é movida após <xref:System.Windows.Window.DragMove%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-345">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="9d0d1-346">Tanto o <xref:System.Windows.Window.Left%2A> ou <xref:System.Windows.Window.Top%2A> propriedade configurada de forma programática.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-346">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="9d0d1-347">O **mover** item de menu do menu do sistema da janela é escolhido.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-347">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="9d0d1-348">O <xref:System.Windows.Window.WindowState%2A> propriedade é alterada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-348">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-349">Gets an enumerator for a window's logical child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-349">Gets an enumerator for a window's logical child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-350">Um <see cref="T:System.Collections.IEnumerator" /> elementos filho de uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-350">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="9d0d1-351">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-351">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span>
          </span>
          <span data-ttu-id="9d0d1-352">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-352">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-353">Override this method to measure the size of a window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-353">Override this method to measure the size of a window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d0d1-354">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-354">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-355"><xref:System.Windows.Window.MeasureOverride%2A> não é chamado quando o <xref:System.Windows.UIElement.Visibility%2A> propriedade tem um valor de <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-355"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="9d0d1-356">Se o valor de <xref:System.Windows.UIElement.Visibility%2A> propriedade está <xref:System.Windows.Visibility.Hidden> ou <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-356">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-357">Quando o <xref:System.Windows.Window.Show%2A> ou <xref:System.Windows.Window.ShowDialog%2A> são chamadas, o <xref:System.Windows.UIElement.Visibility%2A> propriedade de um <xref:System.Windows.Window> é definido como <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-357">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-358">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-358">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-359">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-359">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-360"><xref:System.Windows.Window.OnActivated%2A> gera o <xref:System.Windows.Window.Activated> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-360"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="9d0d1-361">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnActivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-361">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="9d0d1-362">O método substituído deve chamar <xref:System.Windows.Window.OnActivated%2A> na classe base se <xref:System.Windows.Window.Activated> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-362">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-363">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-363">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-364">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-364">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-365"><xref:System.Windows.Window.OnClosed%2A> gera o <xref:System.Windows.Window.Closed> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-365"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="9d0d1-366">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnClosed%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-366">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="9d0d1-367">O método substituído deve chamar <xref:System.Windows.Window.OnClosed%2A> na classe base se <xref:System.Windows.Window.Closed> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-367">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-368">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-368">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-369">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-369">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-370"><xref:System.Windows.Window.OnClosing%2A> gera o <xref:System.Windows.Window.Closing> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-370"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="9d0d1-371">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnClosing%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-371">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="9d0d1-372">O método substituído deve chamar <xref:System.Windows.Window.OnClosing%2A> na classe base se <xref:System.Windows.Window.Closing> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-372">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent">
          <span data-ttu-id="9d0d1-373">A reference to the root of the old content tree.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-373">A reference to the root of the old content tree.</span>
          </span>
        </param>
        <param name="newContent">
          <span data-ttu-id="9d0d1-374">A reference to the root of the new content tree.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-374">A reference to the root of the new content tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-375">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-375">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-376">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-376">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-377">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-377">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-378"><xref:System.Windows.Window.OnContentRendered%2A> gera o <xref:System.Windows.Window.ContentRendered> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-378"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="9d0d1-379">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnContentRendered%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-379">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="9d0d1-380">O método substituído deve chamar <xref:System.Windows.Window.OnContentRendered%2A> na classe base se <xref:System.Windows.Window.ContentRendered> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-380">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-381">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-381">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d0d1-382">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-382">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-383">Este método substitui <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-383">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-384">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-384">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-385">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-385">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-386"><xref:System.Windows.Window.OnDeactivated%2A> gera o <xref:System.Windows.Window.Deactivated> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-386"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="9d0d1-387">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnDeactivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-387">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="9d0d1-388">O método substituído deve chamar <xref:System.Windows.Window.OnDeactivated%2A> na classe base se <xref:System.Windows.Window.Deactivated> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-388">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi">
          <span data-ttu-id="9d0d1-389">The previous DPI scale setting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-389">The previous DPI scale setting.</span>
          </span>
        </param>
        <param name="newDpi">
          <span data-ttu-id="9d0d1-390">The new DPI scale setting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-390">The new DPI scale setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-391">Called when the DPI at which this window is rendered changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-391">Called when the DPI at which this window is rendered changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-392">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-392">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-393">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-393">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-394"><xref:System.Windows.Window.OnLocationChanged%2A> gera o <xref:System.Windows.Window.LocationChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-394"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="9d0d1-395">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnLocationChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-395">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="9d0d1-396">O método substituído deve chamar <xref:System.Windows.Window.OnLocationChanged%2A> na classe base se <xref:System.Windows.Window.LocationChanged> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-396">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-397">The data for the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-397">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-398">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-398">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-399">Esta implementação não altera o estado manipulado (o <xref:System.Windows.RoutedEventArgs.Handled%2A> propriedade) da <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> dados de evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-399">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9d0d1-400">
            <para>Se você substituir <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, sempre chamar a implementação base sua <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementação. Falha ao chamar a implementação base impede que as classes base manipular o evento, que pode alterar o comportamento de tempo de execução da classe final. Você pode chamar a implementação base antes ou depois do tratamento especial, dependendo dos seus requisitos.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-400">
              <para>If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-401">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-401">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-402">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-402">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-403"><xref:System.Windows.Window.OnSourceInitialized%2A> gera o <xref:System.Windows.Window.SourceInitialized> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-403"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="9d0d1-404">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnSourceInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-404">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="9d0d1-405">O método substituído deve chamar <xref:System.Windows.Window.OnSourceInitialized%2A> na classe base se <xref:System.Windows.Window.SourceInitialized> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-405">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9d0d1-406">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-406">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-407">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-407">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-408"><xref:System.Windows.Window.OnStateChanged%2A> gera o <xref:System.Windows.Window.StateChanged> evento.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-408"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="9d0d1-409">Um tipo que deriva de <xref:System.Windows.Window> podem substituir <xref:System.Windows.Window.OnStateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-409">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="9d0d1-410">O método substituído deve chamar <xref:System.Windows.Window.OnStateChanged%2A> na classe base se <xref:System.Windows.Window.StateChanged> precisa ser gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-410">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="9d0d1-411">The previous parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-411">The previous parent.</span>
          </span>
          <span data-ttu-id="9d0d1-412">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-412">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d0d1-413">Called when the parent of the window is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-413">Called when the parent of the window is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-414">Gets a collection of windows for which this window is the owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-414">Gets a collection of windows for which this window is the owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-415">Um <see cref="T:System.Windows.WindowCollection" /> que contém referências às janelas das quais esta janela é a proprietária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-415">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-416">Uma janela de propriedade é uma cujo <xref:System.Windows.Window.Owner%2A> propriedade é definida com uma referência a outra janela, que é conhecida como a janela do proprietário.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-416">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="9d0d1-417">Para localizar todas as janelas que possui uma janela do proprietário, você pode enumerar <xref:System.Windows.WindowCollection> que é retornado pelo <xref:System.Windows.Window.OwnedWindows%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-417">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-418">O exemplo a seguir mostra como enumerar <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-418">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-419">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-419">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-420">Um objeto <see cref="T:System.Windows.Window" /> que representa o proprietário deste <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-420">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-421">Quando uma janela filho é aberta por uma janela pai chamando <xref:System.Windows.Window.ShowDialog%2A>, é estabelecida uma relação implícita entre a janela pai e filho.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-421">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="9d0d1-422">Essa relação impõe determinados comportamentos, inclusive em relação ao minimizar, maximizar e restaurar.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-422">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="9d0d1-423">Quando uma janela filho é criada por uma janela pai chamando <xref:System.Windows.Window.Show%2A>, no entanto, a janela filho não tem uma relação com a janela pai.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-423">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="9d0d1-424">Isso significa que:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-424">This means that:</span></span>  
  
-   <span data-ttu-id="9d0d1-425">A janela filho não tem uma referência para a janela pai.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-425">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="9d0d1-426">O comportamento da janela filho não é dependente de comportamento da janela do pai. a janela pode cobrir a outra ou ser minimizada, maximizada e restaurada independentemente uns dos outros.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-426">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="9d0d1-427">Para permitir que você criar uma relação entre uma janela filho e uma janela pai, <xref:System.Windows.Window> oferece suporte a noção de propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-427">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="9d0d1-428">Propriedade é estabelecida quando o <xref:System.Windows.Window.Owner%2A> propriedade de uma janela (a janela de propriedade) é definida com uma referência a outra janela (a janela do proprietário).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-428">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="9d0d1-429">Quando essa relação é estabelecida, os seguintes comportamentos são exibidos:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-429">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="9d0d1-430">Se uma janela do proprietário é minimizada, todos os seu windows corporativos é minimizado também.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-430">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="9d0d1-431">Se uma janela de propriedade é minimizada, seu proprietário não é minimizado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-431">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="9d0d1-432">Se uma janela do proprietário é maximizada, a janela do proprietário e sua propriedade windows será restaurado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-432">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="9d0d1-433">Uma janela proprietária nunca pode abranger uma janela de propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-433">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="9d0d1-434">Propriedade do windows que não foram abertos usando <xref:System.Windows.Window.ShowDialog%2A> não são restritas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-434">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="9d0d1-435">O usuário ainda pode interagir com a janela do proprietário.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-435">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="9d0d1-436">Se você fechar uma janela do proprietário, sua propriedade windows também é fechado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-436">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="9d0d1-437">Se uma janela de propriedade foi aberta usando seu proprietário janela <xref:System.Windows.Window.Show%2A>e o proprietário da janela for fechada, a janela de propriedade <xref:System.Windows.Window.Closing> não é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-437">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="9d0d1-438">Quando você abre uma janela filho chamando <xref:System.Windows.Window.ShowDialog%2A>, você também deve definir o <xref:System.Windows.Window.Owner%2A> propriedade da janela filho.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-438">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="9d0d1-439">Se você não fizer isso, os usuários não será capazes de restaurar a janela filho e a janela pai, pressionando o botão de barra de tarefas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-439">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="9d0d1-440">Em vez disso, o pressionamento do botão de barra de tarefas produzirá uma lista do windows, incluindo a janela pai e filho, a seleção; somente a janela selecionada é restaurada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-440">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9d0d1-441">Você também deve definir o <xref:System.Windows.Window.Owner%2A> propriedade em uma janela que que é aberta, chamando <xref:System.Windows.Window.ShowDialog%2A> para verificar o comportamento correto com.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-441">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-442">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-442">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-443">O exemplo a seguir mostra como estabelecer a relação de propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-443">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9d0d1-444">A window tries to own itself  -or-  Two windows try to own each other.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-444">A window tries to own itself  -or-  Two windows try to own each other.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-445">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" />  -or-  The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-445">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" />  -or-  The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-446">permissão usar todas as janelas e eventos de entrada do usuário sem restrição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-446">for permission to use all windows and user input events without restriction.</span>
          </span>
          <span data-ttu-id="9d0d1-447">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-447">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-448">Gets or sets the resize mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-448">Gets or sets the resize mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-449">Um valor <see cref="T:System.Windows.ResizeMode" /> que especifica o modo de redimensionamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-449">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-450">Há quatro opções:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-450">There are four options:</span></span>  
  
-   <span data-ttu-id="9d0d1-451">**NoResize**.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-451">**NoResize**.</span></span> <span data-ttu-id="9d0d1-452">O usuário não pode redimensionar a janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-452">The user cannot resize the window.</span></span> <span data-ttu-id="9d0d1-453">As caixas de maximizar e minimizar não são mostradas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-453">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="9d0d1-454">**CanMinimize**.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-454">**CanMinimize**.</span></span> <span data-ttu-id="9d0d1-455">O usuário só pode minimizar a janela e restaurá-lo na barra de tarefas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-455">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="9d0d1-456">As caixas de minimizar e maximizar são mostradas, mas a caixa de minimização está habilitada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-456">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="9d0d1-457">**CanResize**.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-457">**CanResize**.</span></span> <span data-ttu-id="9d0d1-458">O usuário tem a capacidade total para redimensionar a janela, usando as caixas de minimizar e maximizar e uma estrutura de tópicos arrastável a janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-458">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="9d0d1-459">As caixas de minimizar e maximizar são mostradas e habilitadas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-459">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="9d0d1-460">(Padrão).</span><span class="sxs-lookup"><span data-stu-id="9d0d1-460">(Default).</span></span>  
  
-   <span data-ttu-id="9d0d1-461">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-461">**CanResizeWithGrip**.</span></span> <span data-ttu-id="9d0d1-462">Essa opção tem a mesma funcionalidade que <xref:System.Windows.ResizeMode.CanResize>, mas adiciona uma alça de redimensionamento"" para o canto inferior direito da janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-462">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-463">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-463">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-464">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-464">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-465">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-465">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="9d0d1-466">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-466">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-467">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-467">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-468">Gets the size and location of a window before being either minimized or maximized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-468">Gets the size and location of a window before being either minimized or maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-469">Uma <see cref="T:System.Windows.Rect" /> que especifica o tamanho e a localização de uma janela antes de ser minimizada ou maximizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-469">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-470">O retângulo de restauração é a região ocupada pela janela antes que ele foi minimizado ou maximizado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-470">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="9d0d1-471">Você pode usar <xref:System.Windows.Window.RestoreBounds%2A> para salvar o último tamanho e o local de uma janela antes do fechamento de um aplicativo e recuperar esses valores na próxima vez que um aplicativo é iniciado para restaurar uma janela à forma como um usuário deixou.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-471">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="9d0d1-472">Se você consultar <xref:System.Windows.Window.RestoreBounds%2A> antes que a janela foi mostrada ou depois que ele foi fechado, <xref:System.Windows.Rect.Empty%2A> será retornado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-472">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-473">Você não pode obter essa propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-473">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-474">O exemplo a seguir usa <xref:System.Windows.Window.RestoreBounds%2A> e armazenamento para garantir que o tamanho e a localização de uma janela são os mesmos que estavam na última vez em que a janela foi mostrada isolado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-474">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-475">permissão consultar o tamanho e a localização de uma janela delimitadora do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-475">for permission to query for the size and location of a window's bounding rectangle.</span>
          </span>
          <span data-ttu-id="9d0d1-476">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-476">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-477">Opens a window and returns without waiting for the newly opened window to close.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-477">Opens a window and returns without waiting for the newly opened window to close.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-478">Quando o <xref:System.Windows.Window> classe é instanciada, ela não é visível por padrão.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-478">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="9d0d1-479"><xref:System.Windows.Window.Show%2A> mostra uma janela e retorna imediatamente, sem esperar que a janela a ser fechado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-479"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="9d0d1-480">Consequentemente, a janela aberta não impede que usuários interagir com outras janelas no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-480">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="9d0d1-481">Esse tipo de janela é chamado um *sem janela restrita* janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-481">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="9d0d1-482">Exemplos comuns do windows sem janela restrita são paletas, caixas de ferramentas e janelas Propriedades.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-482">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="9d0d1-483">Para impedir que um usuário para interagir com uma janela específica, a janela deve ser aberto chamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-483">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-484">Uma janela que é aberta, chamando <xref:System.Windows.Window.Show%2A> does não automaticamente têm uma relação com a janela que a abriu; especificamente, a janela aberta não sabe qual janela aberto.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-484">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="9d0d1-485">Essa relação pode ser estabelecida com o <xref:System.Windows.Window.Owner%2A> propriedade e gerenciados usando o <xref:System.Windows.Window.OwnedWindows%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-485">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="9d0d1-486">Chamando <xref:System.Windows.Window.Show%2A> atinja o mesmo resultado final como configuração <xref:System.Windows.UIElement.Visibility%2A> propriedade o <xref:System.Windows.Window> do objeto para <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-486">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="9d0d1-487">No entanto, há uma diferença entre os dois de uma perspectiva de tempo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-487">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="9d0d1-488">Chamando <xref:System.Windows.Window.Show%2A> é uma operação síncrona que retorna somente após o <xref:System.Windows.FrameworkElement.Loaded> foi levantado o evento na janela filho:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-488">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="9d0d1-489">Definindo <xref:System.Windows.UIElement.Visibility%2A>, no entanto, é uma operação assíncrona que retorna imediatamente:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-489">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="9d0d1-490">Ao definir <xref:System.Windows.UIElement.Visibility%2A>, quaisquer eventos da janela registrar antes de definir <xref:System.Windows.UIElement.Visibility%2A> não pode ser gerado até após o método em que você definir <xref:System.Windows.UIElement.Visibility%2A> concluiu a execução.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-490">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-491">O exemplo a seguir demonstra como abrir uma janela não restrita.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-491">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-492">
            <see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-492">
              <see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-493">Gets or sets a value that indicates whether a window is activated when first shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-493">Gets or sets a value that indicates whether a window is activated when first shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-494">
            <see langword="true" /> se uma janela é ativada quando mostrada pela primeira vez; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-494">
              <see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9d0d1-495">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-495">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-496">Quando uma janela com seu <xref:System.Windows.Window.ShowActivated%2A> propriedade definida como `false` é aberto, a janela não está ativada e seu <xref:System.Windows.Window.Activated> evento não será gerado até que um usuário manualmente ativa a janela selecionando-a.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-496">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="9d0d1-497">Depois que a janela é selecionada, ele ativa e desativa normalmente.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-497">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="9d0d1-498">Para impedir que uma janela está sendo ativado quando ele for aberto, o <xref:System.Windows.Window.ShowActivated%2A> propriedade deve ser definida como `false` antes que a janela é mostrada (chamando <xref:System.Windows.Window.Show%2A>); configuração <xref:System.Windows.Window.ShowActivated%2A> para `false` depois que uma janela seja exibida não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-498">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="9d0d1-499">Configuração <xref:System.Windows.Window.ShowActivated%2A> para `false` em uma janela que é aberta modalmente, chamando <xref:System.Windows.Window.ShowDialog%2A>, não tem nenhum impacto real.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-499">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="9d0d1-500">Embora a janela restrita não será ativada, a janela modal impedirá o usuário ativar todas as janelas abertas.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-500">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-501">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-501">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-502">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-502">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="9d0d1-503">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-503">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-504">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-504">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-505">O exemplo a seguir mostra como usar marcação para configurar uma janela para ser aberto sem que está sendo ativado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-505">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="9d0d1-506">O exemplo a seguir mostra como usar código para configurar uma janela para ser aberto sem ele está sendo ativado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-506">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-507">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-507">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-508">Opens a window and returns only when the newly opened window is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-508">Opens a window and returns only when the newly opened window is closed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d0d1-509">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-509">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span>
          </span>
          <span data-ttu-id="9d0d1-510">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-510">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-511">Quando um <xref:System.Windows.Window> classe é instanciada, ela não é visível por padrão.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-511">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="9d0d1-512"><xref:System.Windows.Window.ShowDialog%2A> mostra a janela, desabilita todas as outras janelas no aplicativo e retorna somente quando a janela for fechada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-512"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="9d0d1-513">Esse tipo de janela é conhecido como um *modal* janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-513">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="9d0d1-514">Janelas modais são usadas principalmente como caixas de diálogo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-514">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="9d0d1-515">Uma caixa de diálogo é um tipo especial de janela que aplicativos usam para interagir com os usuários para executar tarefas, como abrir arquivos ou impressão de documentos.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-515">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="9d0d1-516">Caixas de diálogo geralmente permitem aos usuários aceitar ou cancelar a tarefa para a qual eles foram mostrados antes da caixa de diálogo é fechada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-516">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="9d0d1-517"><xref:System.Windows.Window.ShowDialog%2A> Retorna um <xref:System.Nullable%601> <xref:System.Boolean> valor que especifica se a atividade foi aceito ou cancelada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-517"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="9d0d1-518">O valor retornado é o valor da propriedade <xref:System.Windows.Window.DialogResult%2A> antes que uma janela seja fechada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-518">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="9d0d1-519">Para obter mais informações, consulte <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-519">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-520">Uma janela que é aberta, chamando o <xref:System.Windows.Window.ShowDialog%2A> método não tem uma relação com a janela que a abriu automaticamente; especificamente, a janela aberta não sabe qual janela aberto.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-520">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="9d0d1-521">Essa relação pode ser estabelecida com o <xref:System.Windows.Window.Owner%2A> propriedade e gerenciados usando o <xref:System.Windows.Window.OwnedWindows%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-521">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="9d0d1-522">Para dar suporte a [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automação (consulte [visão geral de automação de interface do usuário](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> devem ser definidas para uma janela aberta chamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-522">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-523">Quando um modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] janela (uma janela aberta chamando <xref:System.Windows.Window.ShowDialog%2A>) for fechada, ativado anteriormente janela for reativada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-523">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="9d0d1-524">Se um modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] janela tem uma janela do proprietário (consulte <xref:System.Windows.Window.Owner%2A>), a janela do proprietário não é reativado quando o modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] janela for fechada, a menos que era a janela ativada anteriormente.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-524">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-525">Este método não pode ser chamado quando uma janela está hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-525">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-526">O exemplo a seguir demonstra como abrir uma janela modal.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-526">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d0d1-527">
            <see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-527">
              <see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9d0d1-528">permissão ativar uma janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-528">for permission to activate a window.</span>
          </span>
          <span data-ttu-id="9d0d1-529">Enumeração associada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-529">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-530">Gets or sets a value that indicates whether the window has a task bar button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-530">Gets or sets a value that indicates whether the window has a task bar button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-531">
            <see langword="true" /> se a janela tiver um botão na barra de tarefas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-531">
              <see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9d0d1-532">Não se aplica quando a janela é hospedada em um navegador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-532">Does not apply when the window is hosted in a browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-533">Se <xref:System.Windows.Window.ShowInTaskbar%2A> é definido como `true`, a janela também aparecerá na lista de seleção de aplicativo ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-533">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="9d0d1-534">O ícone que é usado para o botão da barra de tarefas e a lista de seleção de aplicativo ALT + TAB é o valor da <xref:System.Windows.Window.Icon%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-534">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-535">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-535">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-536">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-536">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-537">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-537">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="9d0d1-538">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-538">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-539">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-539">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-540">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-540">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-541">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-541">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-542">Um valor <see cref="T:System.Windows.SizeToContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-542">A <see cref="T:System.Windows.SizeToContent" /> value.</span>
          </span>
          <span data-ttu-id="9d0d1-543">O padrão é <see cref="F:System.Windows.SizeToContent.Manual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-543">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-544">Quando <xref:System.Windows.Window.SizeToContent%2A> é definido como <xref:System.Windows.SizeToContent.WidthAndHeight>, configuração <xref:System.Windows.FrameworkElement.Height%2A> ou <xref:System.Windows.FrameworkElement.Width%2A> não tem nenhum efeito; ambas as propriedades podem ser definidas, mas os valores que são definidas com não são aplicados à janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-544">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="9d0d1-545">Quando <xref:System.Windows.Window.SizeToContent%2A> é definido como <xref:System.Windows.SizeToContent.Height>, configuração <xref:System.Windows.FrameworkElement.Height%2A> não altera a altura da janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-545">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="9d0d1-546">Quando <xref:System.Windows.Window.SizeToContent%2A> é definido como <xref:System.Windows.SizeToContent.Width>, configuração <xref:System.Windows.FrameworkElement.Width%2A> não altera a largura da janela.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-546">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="9d0d1-547">Se <xref:System.Windows.Window.SizeToContent%2A> tem um valor diferente de <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="9d0d1-547">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="9d0d1-548"><xref:System.Windows.Window.SizeToContent%2A> é definida automaticamente como <xref:System.Windows.SizeToContent.Manual> se um usuário redimensionar a janela usando a alça de redimensionamento ou arrastando a borda.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-548"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="9d0d1-549">Se o tamanho do conteúdo é alterado de forma que faz com que a janela para redimensionar em si, <xref:System.Windows.FrameworkElement.SizeChanged> é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-549">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="9d0d1-550">Se uma janela é transparente (consulte <xref:System.Windows.Window.AllowsTransparency%2A>), você deve considerar a configuração <xref:System.Windows.Window.SizeToContent%2A> para <xref:System.Windows.SizeToContent.WidthAndHeight> para garantir que a janela não seja maior que seu conteúdo visível.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-550">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-551">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-551">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-552">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-552">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-553">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-553">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="9d0d1-554">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-554">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-555">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-555">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9d0d1-556">O exemplo a seguir mostra como definir o <xref:System.Windows.Window.SizeToContent%2A> propriedade no código para especificar como uma janela é redimensionada para ajustar seu conteúdo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-556">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-557">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-557">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-558">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-558">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span>
          </span>
          <span data-ttu-id="9d0d1-559">See <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-559">See <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-560">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-560">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-561">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-561">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-562">O [! INCLUDE[Win7](~/Includes/Win7-MD.MD)] miniatura de barra de tarefas para o <see cref="T:System.Windows.Window" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-562">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-563">Para obter mais informações sobre como usar o [!INCLUDE[win7](~/includes/win7-md.md)] consulte em miniatura, na barra de tarefas de <xref:System.Windows.Shell.TaskbarItemInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-563">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-564">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-564">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-565">Gets or sets a window's title.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-565">Gets or sets a window's title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-566">Um <see cref="T:System.String" /> que contém o título da janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-566">A <see cref="T:System.String" /> that contains the window's title.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-567">O título de um <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, ou [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], também pode ser definida usando <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-567">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-568">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-568">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-569">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-569">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="9d0d1-570">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-570">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-571">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-571">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-572">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-572">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-573">Gets or sets the position of the window's top edge, in relation to the desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-573">Gets or sets the position of the window's top edge, in relation to the desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-574">A posição da parte superior da janela, em unidades lógicas (1/96").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-574">The position of the window's top, in logical units (1/96").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-575">Quando o <xref:System.Windows.Window> é maximizada ou minimizada, esse valor representa a borda superior da restauração de ponto para o <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-575">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="9d0d1-576">Essa propriedade não pode ser definida por meio de um estilo.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-576">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="9d0d1-577">Se você não especificar um valor de <xref:System.Windows.Window.Top%2A> é definido como o valor padrão do sistema.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-577">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="9d0d1-578">Você também pode especificar o valor padrão do sistema, definindo <xref:System.Windows.Window.Top%2A> para <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-578">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="9d0d1-579">Nem <xref:System.Double.NegativeInfinity> nem <xref:System.Double.PositiveInfinity> é um valor válido para <xref:System.Windows.Window.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-579">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-580">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-580">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-581">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-581">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-582">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-582">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="9d0d1-583">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-583">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-584">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-584">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-585">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-585">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-586">
            <see langword="true" /> se a janela aparecer na frente das demais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-586">
              <see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-587">Uma janela cujo <xref:System.Windows.Window.Topmost%2A> está definida como `true` aparece acima de todas as janelas cujo <xref:System.Windows.Window.Topmost%2A> propriedades são definidas como `false`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-587">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="9d0d1-588">No grupo do windows que tenha <xref:System.Windows.Window.Topmost%2A> está definida como `true`, a janela atualmente ativo é o mais alto.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-588">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="9d0d1-589">Da mesma forma para o grupo do windows que tenha <xref:System.Windows.Window.Topmost%2A> está definida como `false`.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-589">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-590">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-590">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-591">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-591">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-592">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-592">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="9d0d1-593">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-593">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-594">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-594">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-595">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-595">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-596">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-596">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-597">Gets or sets the position of the window when first shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-597">Gets or sets the position of the window when first shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-598">Um valor <see cref="T:System.Windows.WindowStartupLocation" /> que especifica a posição superior/esquerda de uma janela quando mostrada pela primeira vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-598">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span>
          </span>
          <span data-ttu-id="9d0d1-599">O padrão é <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-599">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-600">Configuração <xref:System.Windows.WindowStartupLocation> para <xref:System.Windows.WindowStartupLocation.Manual> faz com que uma janela deve ser posicionado de acordo com seu <xref:System.Windows.Window.Left%2A> e <xref:System.Windows.Window.Top%2A> valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-600">Setting <xref:System.Windows.WindowStartupLocation> to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="9d0d1-601">Se o <xref:System.Windows.Window.Left%2A> ou <xref:System.Windows.Window.Top%2A> propriedades não forem especificadas, seus valores são determinados pelo Windows.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-601">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="9d0d1-602">Configuração <xref:System.Windows.WindowStartupLocation.CenterScreen> faz com que uma janela deve ser posicionado no centro da tela que contém o cursor do mouse.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-602">Setting <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="9d0d1-603">Configuração <xref:System.Windows.WindowStartupLocation> para <xref:System.Windows.WindowStartupLocation.CenterOwner> faz com que uma janela deve ser posicionado no centro da sua janela do proprietário (consulte <xref:System.Windows.Window.Owner%2A>), se especificada.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-603">Setting <xref:System.Windows.WindowStartupLocation> to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A>), if specified.</span></span> <span data-ttu-id="9d0d1-604">A janela do proprietário pode ser uma janela de não-WPF ou outra janela do WPF.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-604">The owner window can be either another WPF window or a non-WPF window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-605">Para obter mais informações sobre janelas WPF com o windows não-WPF, consulte [WPF e Win32 interoperação](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) e <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-605">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span>  
  
 <span data-ttu-id="9d0d1-606">Se uma janela do proprietário não for especificada, a posição da janela é determinada da mesma forma como se <xref:System.Windows.WindowStartupLocation> é definido como <xref:System.Windows.WindowStartupLocation.Manual>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-606">If an owner window is not specified, the position of the window is determined in the same way as if <xref:System.Windows.WindowStartupLocation> is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-607">Você não pode definir ou obter o valor dessa propriedade quando uma janela está hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-607">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-608">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-608">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-609">Um <see cref="T:System.Windows.WindowState" /> que determina se uma janela está restaurada, minimizada ou maximizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-609">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span>
          </span>
          <span data-ttu-id="9d0d1-610">O padrão é <see cref="F:System.Windows.WindowState.Normal" /> (restaurada).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-610">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-611">Antes de uma janela é minimizada ou maximizada, seu tamanho e local são armazenados em <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-611">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="9d0d1-612">Quando uma janela é restaurada posteriormente, seus valores de tamanho e local são restaurados com os valores de <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-612">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="9d0d1-613">Quando o <xref:System.Windows.Window.WindowState%2A> propriedade for alterada, <xref:System.Windows.Window.StateChanged> é gerado.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-613">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-614">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-614">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-615">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-615">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-616">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-616">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="9d0d1-617">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-617">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-618">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-618">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-619">Gets or sets a window's border style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-619">Gets or sets a window's border style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d0d1-620">Um <see cref="T:System.Windows.WindowStyle" /> que especifica um estilo de borda da janela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-620">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span>
          </span>
          <span data-ttu-id="9d0d1-621">O padrão é <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-621">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d0d1-622"><xref:System.Windows.Window.WindowStyle%2A> pode ser uma da <xref:System.Windows.WindowStyle> valores de enumeração, incluindo <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (padrão), e <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-622"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="9d0d1-623">A figura a seguir mostra os estilos de janela no [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (tema Aero do Windows Vista, com efeito de transparência habilitado):</span><span class="sxs-lookup"><span data-stu-id="9d0d1-623">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="9d0d1-624">![Estilos de janela](~/add/media/windowoverviewfigure6.PNG "estilos de janela")</span><span class="sxs-lookup"><span data-stu-id="9d0d1-624">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d0d1-625">Você não pode definir ou obter esta propriedade quando uma janela é hospedada em um navegador.</span><span class="sxs-lookup"><span data-stu-id="9d0d1-625">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9d0d1-626">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="9d0d1-626">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9d0d1-627">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="9d0d1-627">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="9d0d1-628">Propriedades de metadados é definido como `true`</span><span class="sxs-lookup"><span data-stu-id="9d0d1-628">Metadata properties set to `true`</span></span>|<span data-ttu-id="9d0d1-629">Nenhum</span><span class="sxs-lookup"><span data-stu-id="9d0d1-629">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d0d1-630">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d0d1-630">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>