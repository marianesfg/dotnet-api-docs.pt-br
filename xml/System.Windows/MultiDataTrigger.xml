<Type Name="MultiDataTrigger" FullName="System.Windows.MultiDataTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ae634ba841bc7e869d2c05bd36ba97c5f9a3d61" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36458457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MultiDataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiDataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiDataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiDataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiDataTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiDataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um gatilho que aplica valores de propriedade ou executa ações quando os dados associados atendem a um conjunto de condições.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.MultiDataTrigger> objeto é semelhante a um <xref:System.Windows.MultiTrigger>, exceto que as condições de uma <xref:System.Windows.MultiDataTrigger> são baseados nos valores de propriedade dos dados vinculados em vez de um <xref:System.Windows.UIElement>. Em um <xref:System.Windows.MultiDataTrigger>, uma condição for atendida quando o valor da propriedade do item de dados corresponde especificado <xref:System.Windows.Condition.Value%2A>. Você pode usar setters ou <xref:System.Windows.TriggerBase.EnterActions%2A> e <xref:System.Windows.TriggerBase.ExitActions%2A> propriedades para aplicar as alterações ou iniciar ações quando todas as condições forem atendidas.  
  
 O <xref:System.Windows.MultiDataTrigger.Setters%2A> propriedade de um <xref:System.Windows.MultiDataTrigger> objeto pode consistir apenas de <xref:System.Windows.Setter> objetos. Adicionando um <xref:System.Windows.Setter> filho para uma <xref:System.Windows.MultiDataTrigger> objeto adiciona implicitamente para o <xref:System.Windows.SetterBaseCollection> para o <xref:System.Windows.MultiDataTrigger> objeto. <xref:System.Windows.EventSetter> Não há suporte para objetos; somente <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> suporta <xref:System.Windows.EventSetter> objetos.  
  
 Para obter informações sobre quando usar gatilhos e quando usar outras técnicas, consulte [visão geral de modelagem de dados](~/docs/framework/wpf/data/data-templating-overview.md).  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriedade o <xref:System.Windows.Controls.ListBox> está associado a `Places`, uma <xref:System.Collections.ObjectModel.ObservableCollection%601> de `Place` objetos. `Place` os objetos têm propriedades `Name` e `State`. A definição de `Place` e `Places` não são mostradas.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> do <xref:System.Windows.Controls.ListBox> exibe um `Place` objeto. O <xref:System.Windows.Style> no exemplo é aplicada a cada <xref:System.Windows.Controls.ListBoxItem>. O <xref:System.Windows.Condition> elementos do <xref:System.Windows.MultiDataTrigger> especificar que, se o `Name` e `State` do `Place` item são dados `Portland` e `OR` respectivamente, em seguida, o plano de fundo correspondente <xref:System.Windows.Controls.ListBoxItem> está definido para `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiDataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiDataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.MultiDataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiDataTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Windows.Condition" /> . As alterações de valores de propriedade são aplicadas quando todas as condições na coleção são atendidas.</summary>
        <value>Uma coleção de objetos <see cref="T:System.Windows.Condition" /> . O padrão é uma coleção vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um <xref:System.Windows.MultiDataTrigger> objeto é semelhante a um <xref:System.Windows.MultiTrigger>, exceto que as condições de uma <xref:System.Windows.MultiDataTrigger> são baseados nos valores de propriedade dos dados vinculados em vez de um <xref:System.Windows.UIElement>. Em um <xref:System.Windows.MultiDataTrigger>, uma condição for atendida quando o valor da propriedade do item de dados corresponde especificado <xref:System.Windows.Condition.Value%2A>. Se o valor é primeiro convertido para o tipo do valor de associação, se possível, e, em seguida, os dois valores são comparados usando o `Object.Equals` método. O <xref:System.Windows.MultiTrigger> se aplica a ações ou setters associados quando todas as condições forem verdadeiras (binário `AND` operação).  
  
 Para uma <xref:System.Windows.MultiDataTrigger>, cada condição na coleção deve definir ambos os <xref:System.Windows.Condition.Binding%2A> e <xref:System.Windows.Condition.Value%2A> propriedades. Para obter mais informações, consulte <xref:System.Windows.Condition.Binding%2A>.  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>Uso do elemento propriedade XAML  
  
```  
<object>  
  <object.Conditions>  
    zeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *zeroOrMoreConditions*  
 Zero ou mais <xref:System.Windows.Condition> objetos.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriedade o <xref:System.Windows.Controls.ListBox> está associado a `Places`, uma <xref:System.Collections.ObjectModel.ObservableCollection%601> de `Place` objetos. `Place` os objetos têm propriedades `Name` e `State`. A definição de `Place` e `Places` não são mostradas.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> do <xref:System.Windows.Controls.ListBox> exibe um `Place` objeto. O <xref:System.Windows.Style> no exemplo é aplicada a cada <xref:System.Windows.Controls.ListBoxItem>. O <xref:System.Windows.Condition> elementos do <xref:System.Windows.MultiDataTrigger> especificar que, se o `Name` e `State` do `Place` item são dados `Portland` e `OR` respectivamente, em seguida, o plano de fundo correspondente <xref:System.Windows.Controls.ListBoxItem> está definido para `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiDataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Windows.Setter" /> que descrevem os valores de propriedade que serão aplicados quando todas as condições de <see cref="T:System.Windows.MultiDataTrigger" /> forem atendidas.</summary>
        <value>Uma coleção de objetos <see cref="T:System.Windows.Setter" /> . O valor padrão é uma coleção vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger> permite que você inicie ações usando o <xref:System.Windows.TriggerBase.EnterActions%2A> ou <xref:System.Windows.TriggerBase.ExitActions%2A> propriedades, ou para definir valores de propriedade usando <xref:System.Windows.Setter> objetos quando os dados associados atendem a um conjunto de condições.  
  
 Se houver duas <xref:System.Windows.Setter> objetos nas coleções de setter igual ou diferente, configurando a mesma propriedade, o <xref:System.Windows.Setter> que é declarada última é usada.  
  
 Adicionando um <xref:System.Windows.Setter> filho para uma <xref:System.Windows.MultiDataTrigger> objeto adiciona implicitamente para o <xref:System.Windows.SetterBaseCollection> para o <xref:System.Windows.MultiDataTrigger> objeto. <xref:System.Windows.EventSetter> Não há suporte para objetos; somente <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> suporta <xref:System.Windows.EventSetter> objetos.  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Uso do elemento propriedade XAML  
  
```  
<object>  
    zeroOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *zeroOrMoreSetters*  
 Zero ou mais <xref:System.Windows.Setter> objetos.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriedade o <xref:System.Windows.Controls.ListBox> está associado a `Places`, uma <xref:System.Collections.ObjectModel.ObservableCollection%601> de `Place` objetos. `Place` os objetos têm propriedades `Name` e `State`. A definição de `Place` e `Places` não são mostradas.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> do <xref:System.Windows.Controls.ListBox> exibe um `Place` objeto. O <xref:System.Windows.Style> no exemplo é aplicada a cada <xref:System.Windows.Controls.ListBoxItem>. O <xref:System.Windows.Condition> elementos do <xref:System.Windows.MultiDataTrigger> especificar que, se o `Name` e `State` do `Place` item são dados `Portland` e `OR` respectivamente, em seguida, o plano de fundo correspondente <xref:System.Windows.Controls.ListBoxItem> está definido para `Cyan`.  
  
 Observe que `<MultiDataTrigger.Setters>` está implícito.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O objeto filho a ser adicionado.</param>
        <summary>Adiciona um objeto filho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.MultiDataTrigger> é convertida em uma interface de <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser adicionado ao objeto.</param>
        <summary>Adiciona o conteúdo do texto de um nó ao objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.MultiDataTrigger> é convertida em uma interface de <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>