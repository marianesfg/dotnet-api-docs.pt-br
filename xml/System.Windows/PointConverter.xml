<Type Name="PointConverter" FullName="System.Windows.PointConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d698a99f9340575998bf3fe8a1a52d80cf669758" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36458294" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PointConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PointConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PointConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PointConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PointConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type PointConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cd807-101">Converte instâncias de outros tipos de e para um <see cref="T:System.Windows.Point" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd807-101">Converts instances of other types to and from a <see cref="T:System.Windows.Point" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd807-102">O seguinte exemplo de código usa um <xref:System.Windows.PointConverter> para converter uma cadeia de caracteres em um <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="cd807-102">The following code example uses a <xref:System.Windows.PointConverter> to convert a string into a <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointConverterExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointconverterexample_csharp)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Point" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PointConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PointConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd807-103">Inicializa uma nova instância da classe <see cref="T:System.Windows.PointConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-103">Initializes a new instance of the <see cref="T:System.Windows.PointConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="pointConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="cd807-104">Descreve as informações de contexto de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-104">Describes the context information of a type.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="cd807-105">O tipo da origem que está sendo avaliada para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-105">The type of the source that is being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd807-106">Determina se um objeto pode ser convertido de um determinado tipo em uma instância de um <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-106">Determines whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd807-107">
            <see langword="true" /> se o tipo puder ser convertido para um <see cref="T:System.Windows.Point" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-107">
              <see langword="true" /> if the type can be converted to a <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="pointConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="cd807-108">Descreve as informações de contexto de um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-108">Describes the context information of a type.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="cd807-109">O tipo desejado para o qual se está avaliando converter este <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-109">The desired type this <see cref="T:System.Windows.Point" /> is being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd807-110">Determina se uma instância de um <see cref="T:System.Windows.Point" /> pode ser convertida em um tipo diferente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-110">Determines whether an instance of a <see cref="T:System.Windows.Point" /> can be converted to a different type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd807-111">
            <see langword="true" /> se este <see cref="T:System.Windows.Point" /> puder ser convertido para <paramref name="destinationType" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-111">
              <see langword="true" /> if this <see cref="T:System.Windows.Point" /> can be converted to <paramref name="destinationType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="pointConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="cd807-112">Fornece informações contextuais necessárias para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-112">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="cd807-113">Informações culturais a serem respeitadas durante a conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-113">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cd807-114">O objeto sendo convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-114">The object being converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd807-115">Tenta converter o objeto especificado em um <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-115">Attempts to convert the specified object to a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd807-116">O <see cref="T:System.Windows.Point" /> criado da conversão de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-116">The <see cref="T:System.Windows.Point" /> created from converting <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd807-117">Para determinar se uma conversão é possível sem realmente executar a conversão, use o <xref:System.Windows.PointConverter.CanConvertFrom%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cd807-117">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertFrom%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cd807-118">Gerada se o objeto especificado for NULL ou for um tipo que não possa ser convertido em um <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-118">Thrown if the specified object is NULL or is a type that cannot be converted to a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="pointConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="cd807-119">Fornece informações contextuais necessárias para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-119">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="cd807-120">Informações culturais a serem respeitadas durante a conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-120">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cd807-121">O <see cref="T:System.Windows.Point" /> a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-121">The <see cref="T:System.Windows.Point" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="cd807-122">O tipo para o qual converter este <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-122">The type to convert this <see cref="T:System.Windows.Point" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd807-123">Tenta converter um <see cref="T:System.Windows.Point" /> para um tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-123">Attempts to convert a <see cref="T:System.Windows.Point" /> to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd807-124">O objeto criado da conversão deste <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-124">The object created from converting this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd807-125">Para determinar se uma conversão é possível sem realmente executar a conversão, use o <xref:System.Windows.PointConverter.CanConvertTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cd807-125">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cd807-126">Gerada se <paramref name="value" /> é <see langword="null" /> ou não é um <see cref="T:System.Windows.Point" /> ou então se <paramref name="destinationType" /> não é um dos tipos válidos para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd807-126">Thrown if <paramref name="value" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.Point" />, or if the <paramref name="destinationType" /> is not one of the valid types for conversion.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>