<Type Name="ValidateValueCallback" FullName="System.Windows.ValidateValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89aba3c617b357a974c2d5eb1f15d2f3c4cb20ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool ValidateValueCallback(object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValidateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateValueCallback(value As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool ValidateValueCallback(System::Object ^ value);" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="value">
      <span data-ttu-id="1c6d8-101">O valor a ser validado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c6d8-101">The value to be validated.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="1c6d8-102">Representa um método usado como um retorno de chamada que valida o valor efetivo de uma propriedade de dependência.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c6d8-102">Represents a method used as a callback that validates the effective value of a  dependency property.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="1c6d8-103">
        <see langword="true" /> se o valor foi validado; <see langword="false" /> se o valor enviado era inválido.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c6d8-103">
          <see langword="true" /> if the value was validated; <see langword="false" /> if the submitted value was invalid.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c6d8-104">Com base neste delegado de retornos de chamada são usados por determinados assinaturas de <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> e relacionados métodos, como <xref:System.Windows.DependencyProperty.RegisterAttached%2A> e equivalentes de somente leitura.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-104">Callbacks based on this delegate are used by certain signatures of <xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType> and related methods, such as <xref:System.Windows.DependencyProperty.RegisterAttached%2A> and read-only equivalents.</span></span> <span data-ttu-id="1c6d8-105">Você deve usar assinaturas que usam o `validateValueCallback` parâmetro se desejar validação específica do valor da propriedade sempre que seu efetivo está definido.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-105">You should use signatures that take the `validateValueCallback` parameter if you want specific validation of the property value each time that its effective is set.</span></span> <span data-ttu-id="1c6d8-106">Em seguida, você deve implementar esse retorno de chamada, de modo que ele executa a validação real do valor proposto.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-106">You should then implement this callback such that it performs the actual validation of the proposed value.</span></span> <span data-ttu-id="1c6d8-107">O retorno de chamada deve retornar `true` se o valor enviado para o retorno de chamada for válido, e `false` caso contrário.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-107">The callback should return `true` if the value submitted to the callback is valid, and `false` otherwise.</span></span> <span data-ttu-id="1c6d8-108">Um `false` valor irá gerar uma exceção na parte específica do sistema de propriedades em que o conjunto de propriedade inválido foi tentado, para que seu aplicativo deve estar preparado para tratar essas exceções.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-108">A `false` value will produce an exception in the specific portion of the property system where the invalid property set was attempted, so your application should be prepared to handle these exceptions.</span></span>  
  
 <span data-ttu-id="1c6d8-109">Retornos de chamada de validação são armazenados em identificadores de propriedade de dependência, em vez de metadados de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-109">Validation callbacks are stored on dependency property identifiers, rather than dependency property metadata.</span></span> <span data-ttu-id="1c6d8-110">O retorno de chamada de validação não tem acesso a uma instância específica de um <xref:System.Windows.DependencyObject> no qual a propriedade é definida e somente pode influenciar quais valores são aceitas em geral para a propriedade.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-110">Your validation callback does not have access to a specific instance of a <xref:System.Windows.DependencyObject> on which the property is set, and can only influence what values are accepted for the property in general.</span></span> <span data-ttu-id="1c6d8-111">Se você precisar de um retorno de chamada que pode alterar os valores de propriedade com base em uma instância específica, você deve usar uma combinação de um <xref:System.Windows.CoerceValueCallback> e <xref:System.Windows.PropertyChangedCallback> retornos de chamada como aplicadas aos metadados da propriedade de sua propriedade.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-111">If you need a callback that can change property values based on a specific instance, you should use a combination of a <xref:System.Windows.CoerceValueCallback> and <xref:System.Windows.PropertyChangedCallback> callbacks as applied to the property metadata of your property.</span></span> <span data-ttu-id="1c6d8-112">Você também pode aplicar esses retornos de chamada para propriedades relacionadas que devem influenciar o valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-112">You might also apply these callbacks to related properties that should influence your property's value.</span></span> <span data-ttu-id="1c6d8-113">Para obter detalhes, consulte [retornos de chamada de propriedade de dependência e validação](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span><span class="sxs-lookup"><span data-stu-id="1c6d8-113">For details, see [Dependency Property Callbacks and Validation](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c6d8-114">O exemplo a seguir inclui uma implementação desse retorno de chamada para validar um intervalo de valores para uma propriedade de dependência personalizada.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-114">The following example includes an implementation of this callback to validate a range of values for a custom dependency property.</span></span> <span data-ttu-id="1c6d8-115">Nesse caso, o valor da propriedade espera uma enumeração, e a validação garante que o valor fornecido é avaliada como um membro de enumeração.</span><span class="sxs-lookup"><span data-stu-id="1c6d8-115">In this case the property value expects an enumeration, and the validation assures that the provided value evaluates to a member of that enumeration.</span></span>  
  
 [!code-csharp[DPCustom#ValidateValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#validatevaluecallback)]
 [!code-vb[DPCustom#ValidateValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#validatevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>