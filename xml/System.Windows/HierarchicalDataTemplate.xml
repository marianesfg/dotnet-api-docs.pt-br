<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="199cb29677bd977727dae2cdd864f03ba6aecfca" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36459338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma <see cref="T:System.Windows.DataTemplate" /> que fornece suporte a <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, como <see cref="T:System.Windows.Controls.TreeViewItem" /> ou <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 No exemplo a seguir, `ListLeagueList` é uma lista de objetos `League`. Cada objeto `League` tem um `Name` e uma coleção de objetos `Division`. Cada `Division` tem um `Name` e uma coleção de objetos `Team`; cada objeto `Team` tem um `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 O exemplo mostra que, com o uso de <xref:System.Windows.HierarchicalDataTemplate>, você pode facilmente exibir dados de lista que contém outras listas. Segue uma captura de tela do exemplo.  
  
 ![Captura de tela de exemplo de HierarchicalDataTemplate](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate captura de tela de exemplo")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.HierarchicalDataTemplate" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.HierarchicalDataTemplate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">O tipo para o qual esse modelo foi projetado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.HierarchicalDataTemplate" /> com o tipo especificado para o qual o modelo é destinado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `dataType` parâmetro seja uma [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] objeto ou uma cadeia de caracteres que representa um [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] elemento. Para obter mais informações, consulte [Visão geral de origens da associação](~/docs/framework/wpf/data/binding-sources-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de contêineres de itens alternados para os itens filhos.</summary>
        <value>O número de itens alternados contêineres para o próximo nível de itens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> e <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> propriedades permitem que você especificar a aparência de duas ou mais contêineres de itens alternados. Por exemplo, você pode especificar cores de plano de fundo alternadas para cada terceiro item de um <xref:System.Windows.Controls.ItemsControl>.  O <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> é atribuído a cada contêiner do item no <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> começa em 0, incrementos de até que ele seja <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> menos 1 e é reiniciado em 0. Por exemplo, se <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> é 3 e há sete itens no <xref:System.Windows.Controls.ItemsControl>, a seguinte tabela lista o <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> para cada item.  
  
|Posição do Item a <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Quando você define o <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> propriedade, você está indicando que os itens filhos devem obter um <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> nesse intervalo, não o item que possui essa <xref:System.Windows.HierarchicalDataTemplate> aplicada a ele. Por exemplo, se um <xref:System.Windows.Controls.HeaderedItemsControl> chamado `aHeaderedItemsControl` usa um <xref:System.Windows.HierarchicalDataTemplate> com o <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> definido, os contêineres de item dos itens filho de `aHeaderedItemsControl` terá um <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>, não o contêiner do item para `aHeaderedItemsControl`.  
  
 Há vários métodos que você pode usar para especificar aparências diferentes para os contêineres de itens alternados. É um método ligar as propriedades do contêiner de itens para o <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. Você pode usar um <xref:System.Windows.Controls.AlternationConverter> para especificar qual valor deve ser aplicado para o contêiner do item que tenha um determinado <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> valor. Você também pode usar gatilhos para alterar o valor da propriedade de um contêiner item dependendo do valor de seu <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Windows.Controls.TreeView> que está associado a dados que tem três níveis de profundidade, e cada item é exibido em um <xref:System.Windows.Controls.TextBlock>.  O <xref:System.Windows.Controls.TextBlock> objetos no primeiro nível têm os mesmos valores de propriedade, o <xref:System.Windows.Controls.TextBlock> objetos no segundo nível usam valores alternados para o <xref:System.Windows.Controls.TextBlock.FontStyle%2A> propriedade e o <xref:System.Windows.Controls.TextBlock> objetos no terceiro nível usam valores alternados para o <xref:System.Windows.Controls.TextBlock.Background%2A> propriedade.  
  
 Porque o <xref:System.Windows.HierarchicalDataTemplate> para o primeiro nível, `Level1Data`, tem o <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> propriedade definida como 2, o <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> para o <xref:System.Windows.Controls.TreeViewItem> objetos em que o segundo alternativas níveis entre 0 e 1. No <xref:System.Windows.HierarchicalDataTemplate> do segundo nível, `Level2Data`, o <xref:System.Windows.Controls.TextBlock.FontStyle%2A> do <xref:System.Windows.Controls.TextBlock> está associada ao <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> e um <xref:System.Windows.Controls.AlternationConverter> é fornecido para converter o <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> para um alternando <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.  Existe uma relação semelhante entre `Level2Data` e `Level3Data`: O <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> é definido como 3 em `Level2Data`e o <xref:System.Windows.Controls.TextBlock> na `Level3Ddata` tem seu <xref:System.Windows.Controls.TextBlock.Background%2A> propriedade associada para o <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Data.BindingGroup" /> que é copiado para cada item filho.</summary>
        <value>O <see cref="T:System.Windows.Data.BindingGroup" /> que é copiado para cada item filho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando você define o <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> cada contêiner do item de propriedade, obtém um <xref:System.Windows.Data.BindingGroup> que tem o mesmo <xref:System.Windows.Controls.ValidationRule> objetos como o <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, mas as propriedades que descrevem os dados nas associações, como <xref:System.Windows.Data.BindingGroup.Items%2A> e <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, são específicas para os dados para cada item de <xref:System.Windows.Controls.ItemsControl>.  Você deve acessar o contêiner de itens <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> para executar operações, como validar os dados e verifique se há erros em um item.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Style" /> aplicado ao contêiner do item para cada item filho.</summary>
        <value>O <see cref="T:System.Windows.Style" /> aplicado ao contêiner do item para cada item filho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esta propriedade ou o <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> propriedade para definir um estilo para afetar a aparência dos elementos que contêm os itens de dados. Por exemplo, para <xref:System.Windows.Controls.TreeView>, são os contêineres gerados <xref:System.Windows.Controls.TreeViewItem> controla; para <xref:System.Windows.Controls.Menu>, eles são <xref:System.Windows.Controls.MenuItem> controles.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Windows.Controls.TreeView> que usa um estilo de itens em seu primeiro nível e outro estilo para itens em seu segundo nível.  O estilo para o primeiro nível é definido <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> propriedade o <xref:System.Windows.Controls.TreeView>.  O estilo para o segundo nível é definido <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriedade o <xref:System.Windows.HierarchicalDataTemplate>.  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 O exemplo a seguir cria os dados que são usados no exemplo anterior.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a lógica de seleção de estilo personalizada para um estilo que pode ser aplicada a cada contêiner de item.</summary>
        <value>A <see cref="T:System.Windows.Controls.StyleSelector" /> que escolhe qual estilo usar como o <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você usa o <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriedade para definir um estilo para afetar a aparência dos elementos que contêm os itens de dados. Por exemplo, para <xref:System.Windows.Controls.TreeView>, são os contêineres gerados <xref:System.Windows.Controls.TreeViewItem> controla; para <xref:System.Windows.Controls.Menu>, eles são <xref:System.Windows.Controls.MenuItem> controles. Se você tiver mais de um estilo definido e precisa fornecer a lógica para escolher qual deseja aplicar, então você usar o <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> propriedade em vez do <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> propriedade. Observe que essa propriedade será ignorada se o <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> está definida.  
  
   
  
## Examples  
 O exemplo a seguir cria um <xref:System.Windows.Controls.TreeView> que usa o <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> de um <xref:System.Windows.HierarchicalDataTemplate> escolher entre dois estilos de itens no nível do segundo a <xref:System.Windows.Controls.TreeView>.  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 A exemplo a seguir mostra a <xref:System.Windows.Controls.StyleSelector> que é usado no exemplo anterior.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 O exemplo a seguir cria os dados que são usados no exemplo anterior.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a associação desse modelo de dados que indica onde encontrar a coleção que representa o próximo nível na hierarquia de dados.</summary>
        <value>O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isso é aplicado para o <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> propriedade em uma gerada <xref:System.Windows.Controls.HeaderedItemsControl> (como um <xref:System.Windows.Controls.MenuItem> ou um <xref:System.Windows.Controls.TreeViewItem>) para indicar onde encontrar a coleção que representa o próximo nível na hierarquia de dados.  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte o <xref:System.Windows.Data.Binding> tipo.  
  
   
  
## Examples  
 No exemplo a seguir, `ListLeagueList` é uma lista de objetos `League`. Cada objeto `League` tem um `Name` e uma coleção de objetos `Division`. Cada `Division` tem um `Name` e uma coleção de objetos `Team`; cada objeto `Team` tem um `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 O exemplo mostra que, com o uso de <xref:System.Windows.HierarchicalDataTemplate>, você pode facilmente exibir dados de lista que contém outras listas. Segue uma captura de tela do exemplo.  
  
 ![Captura de tela de exemplo de HierarchicalDataTemplate](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate captura de tela de exemplo")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma cadeia de caracteres de composição que especifica como formatar os itens no próximo nível na hierarquia de dados se eles são exibidos como cadeias de caracteres.</summary>
        <value>Uma cadeia de caracteres composta que especifica como formatar os itens no próximo nível da hierarquia de dados se eles são exibidos como cadeias de caracteres.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.DataTemplate" /> a ser aplicado à propriedade <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> em um <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> gerado (como um <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />), para indicar como exibir itens do próximo nível na hierarquia de dados.</summary>
        <value>O <see cref="T:System.Windows.DataTemplate" /> para aplicar ao <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> propriedade em uma gerada <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (como um <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />), para indicar como exibir itens do próximo nível na hierarquia de dados.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o <see cref="T:System.Windows.Controls.DataTemplateSelector" /> a ser aplicado à propriedade <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> em um <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> gerado (como um <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />), para indicar como selecionar um modelo para exibir itens do próximo nível na hierarquia de dados.</summary>
        <value>O <see cref="T:System.Windows.Controls.DataTemplateSelector" /> objeto para aplicar ao <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> propriedade em uma gerada <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (como um <see cref="T:System.Windows.Controls.MenuItem" /> ou <see cref="T:System.Windows.Controls.TreeViewItem" />), para indicar como selecionar um modelo para exibir os itens do próximo nível na hierarquia de dados.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>