<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf7d1387ee03ec7cae439135fbd676179308311f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2872a-101">Descreve a largura, altura e local de um retângulo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2872a-101">Describes the width, height, and location of a rectangle.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2872a-102">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="2872a-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2872a-103">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="2872a-103">XAML Values</span></span>  
 <span data-ttu-id="2872a-104">*x*</span><span class="sxs-lookup"><span data-stu-id="2872a-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="2872a-105">O local da coordenada x do lado esquerdo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="2872a-106">*y*</span><span class="sxs-lookup"><span data-stu-id="2872a-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="2872a-107">O local da coordenada y do canto superior do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="2872a-108">*width*</span><span class="sxs-lookup"><span data-stu-id="2872a-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="2872a-109">Um valor negativo que representa o <xref:System.Windows.Rect.Width%2A> do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="2872a-110">*height*</span><span class="sxs-lookup"><span data-stu-id="2872a-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="2872a-111">Um valor negativo que representa o <xref:System.Windows.Rect.Height%2A> do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-112">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-113">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-114">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-115">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="2872a-116">Uma estrutura <see cref="T:System.Windows.Size" /> que especifica a largura e altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-117">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> que é do tamanho especificado e está localizada em (0,0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-118">O exemplo a seguir mostra como criar um novo <xref:System.Windows.Rect> estrutura usando o <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="2872a-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="2872a-119">O primeiro ponto que o novo retângulo deve conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-119">The first point that the new rectangle must contain.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="2872a-120">O segundo ponto que o novo retângulo deve conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-120">The second point that the new rectangle must contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-121">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> que é exatamente grande o suficiente para conter os dois pontos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-122">O exemplo a seguir mostra como criar um novo <xref:System.Windows.Rect> estrutura usando o <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="2872a-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="2872a-123">Um ponto que especifica o local do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="2872a-124">Uma estrutura <see cref="T:System.Windows.Size" /> que especifica a largura e altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-125">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> que tem o local do canto superior esquerdo especificado e a altura e largura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-126">O exemplo a seguir mostra como criar um novo <xref:System.Windows.Rect> estrutura usando o <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="2872a-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="2872a-127">O primeiro ponto que o retângulo deve conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-127">The first point the rectangle must contain.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="2872a-128">O valor do deslocamento do ponto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-128">The amount to offset the specified point.</span>
          </span>
          <span data-ttu-id="2872a-129">O retângulo resultante terá tamanho suficiente exatamente para conter os dois pontos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-130">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" /> com tamanho suficiente exatamente para conter o ponto especificado e a soma do ponto e do vetor especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-131">O exemplo a seguir mostra como criar um novo <xref:System.Windows.Rect> estrutura usando o <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="2872a-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="2872a-132">A coordenada X do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-132">The x-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="2872a-133">A coordenada y do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-133">The y-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="2872a-134">A largura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-134">The width of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="2872a-135">A altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-135">The height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-136">Inicializa uma nova instância da estrutura <see cref="T:System.Windows.Rect" />, que tem a coordenada X, a coordenada Y, a largura e a altura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-137">O exemplo a seguir mostra como criar um novo <xref:System.Windows.Rect> estrutura usando o <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="2872a-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2872a-138">
            <paramref name="width" /> é um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-138">
              <paramref name="width" /> is a negative value.</span>
          </span>
          <span data-ttu-id="2872a-139">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-139">-or-</span>
          </span>
          <span data-ttu-id="2872a-140">
            <paramref name="height" /> é um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-140">
              <paramref name="height" /> is a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-141">Obtém o valor do eixo y da parte inferior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-141">Gets the y-axis value of the bottom of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-142">O valor do eixo y da parte inferior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-142">The y-axis value of the bottom of the rectangle.</span>
          </span>
          <span data-ttu-id="2872a-143">Se o retângulo estiver vazio, o valor será <see cref="F:System.Double.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-144">O valor do eixo y da parte inferior do retângulo é igual à soma do <xref:System.Windows.Rect.Y%2A> e <xref:System.Windows.Rect.Height%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="2872a-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-145">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-146">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-147">Obtém a posição do canto inferior esquerdo do retângulo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-147">Gets the position of the bottom-left corner of the rectangle</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-148">A posição do canto inferior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-148">The position of the bottom-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-149">A posição do canto inferior esquerdo do retângulo é igual a (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="2872a-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-150">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-151">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-152">Obtém a posição do canto inferior direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-152">Gets the position of the bottom-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-153">A posição do canto inferior direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-153">The position of the bottom-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-154">A posição do canto inferior direito do retângulo é igual a (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="2872a-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-155">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-156">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-157">Indica se o retângulo que contém o ponto ou o retângulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-157">Indicates whether the rectangle contains the specified point or rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="2872a-158">O ponto a verificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-158">The point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-159">Indica se o retângulo que contém o ponto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-159">Indicates whether the rectangle contains the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-160">
            <see langword="true" /> se o retângulo contiver o ponto especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-160">
              <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-161">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> método para determinar se o retângulo contém especificado <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="2872a-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-162">O retângulo a ser verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-162">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-163">Indica se o retângulo contém o retângulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-163">Indicates whether the rectangle contains the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-164">
            <see langword="true" /> se o <paramref name="rect" /> estiver inteiramente contido pelo retângulo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-164">
              <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-165">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> método para determinar se um retângulo está contido por outro retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="2872a-166">A coordenada x do ponto a ser verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-166">The x-coordinate of the point to check.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="2872a-167">A coordenada y do ponto a ser verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-167">The y-coordinate of the point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-168">Indica se o retângulo contém a coordenada x e a coordenada y especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-169">
            <see langword="true" /> se (<paramref name="x" />, <paramref name="y" />) estiver contido pelo retângulo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-169">
              <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-170">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> método para determinar se o retângulo que contém o ponto especificado pela determinado de coordenada de x e y.</span><span class="sxs-lookup"><span data-stu-id="2872a-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-171">Obtém um valor especial que representa um retângulo sem posição ou área.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-171">Gets a special value that represents a rectangle with no position or area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-172">O retângulo vazio, que tem valores de propriedade <see cref="P:System.Windows.Rect.X" /> e <see cref="P:System.Windows.Rect.Y" /> de <see cref="F:System.Double.PositiveInfinity" /> e tem valores de propriedade <see cref="P:System.Windows.Rect.Width" /> e <see cref="P:System.Windows.Rect.Height" /> de <see cref="F:System.Double.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-173">Evite cálculos matemáticos envolvendo retângulos vazios.</span><span class="sxs-lookup"><span data-stu-id="2872a-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="2872a-174">Porque ambos <xref:System.Windows.Rect.X%2A> e <xref:System.Windows.Rect.Y%2A> são valores de infinitos, processador operações são severos prejudicadas por essas operações.</span><span class="sxs-lookup"><span data-stu-id="2872a-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="2872a-175">Comparações que envolvem esses valores não afetará o desempenho do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="2872a-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-176">Indica se os dois retângulos são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-176">Indicates whether two rectangles are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="2872a-177">O objeto a comparar ao retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-177">The object to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-178">indica se o objeto especificado é igual ao retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-178">Indicates whether the specified object is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-179">
            <see langword="true" /> se <paramref name="o" /> for um <see cref="T:System.Windows.Rect" /> e tiver os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> que o retângulo atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-179">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-180">Esta operação testa a igualdade de objetos.</span><span class="sxs-lookup"><span data-stu-id="2872a-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="2872a-181">Nessa comparação, duas instâncias de <xref:System.Double.NaN?displayProperty=nameWithType> são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2872a-182">A posição do retângulo e as dimensões são descritas por <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="2872a-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="2872a-183">Porque <xref:System.Double> valores podem perder precisão quando for operado, uma comparação entre dois valores são iguais logicamente poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="2872a-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-184">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Equals%28System.Object%29> método para determinar se um retângulo é igual ao objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="2872a-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2872a-185">O retângulo a ser comparado ao retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-185">The rectangle to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-186">indica se o retângulo especificado é igual ao retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-186">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-187">
            <see langword="true" /> se o retângulo especificado tiver os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" /> que o retângulo atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-187">
              <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-188">Esta operação testa a igualdade de objetos.</span><span class="sxs-lookup"><span data-stu-id="2872a-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="2872a-189">Nessa comparação, duas instâncias de <xref:System.Double.NaN?displayProperty=nameWithType> são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2872a-190">A posição do retângulo e as dimensões são descritas por <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="2872a-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="2872a-191">Porque <xref:System.Double> valores podem perder precisão quando for operado, uma comparação entre dois valores são iguais logicamente poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="2872a-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-192">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> método para determinar se um retângulo é igual a um retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="2872a-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="2872a-193">O primeiro retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-193">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="2872a-194">O segundo retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-194">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-195">Indica se os retângulos especificados são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-195">Indicates whether the specified rectangles are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-196">
            <see langword="true" /> se os retângulos tiverem os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-196">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-197">Esta operação testa a igualdade de objetos.</span><span class="sxs-lookup"><span data-stu-id="2872a-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="2872a-198">Nessa comparação, duas instâncias de <xref:System.Double.NaN?displayProperty=nameWithType> são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2872a-199">A posição do retângulo e as dimensões são descritas por <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="2872a-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="2872a-200">Porque <xref:System.Double> valores podem perder precisão quando for operado, uma comparação entre dois valores são iguais logicamente poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="2872a-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-201">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> método para determinar se um retângulo é igual a outro.</span><span class="sxs-lookup"><span data-stu-id="2872a-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2872a-202">Cria um código hash para o retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-202">Creates a hash code for the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-203">Um código hash para a estrutura <see cref="T:System.Windows.Rect" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-204">Esse método cria um código hash usando o <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, e <xref:System.Windows.Rect.Height%2A> valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="2872a-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-205">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.GetHashCode%2A> método para obter o código hash de um <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="2872a-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-206">Obtém ou define a altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-206">Gets or sets the height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-207">Um número positivo que representa a altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-207">A positive number that represents the height of the rectangle.</span>
          </span>
          <span data-ttu-id="2872a-208">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-208">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-209">O <xref:System.Windows.Rect.Empty%2A> retângulo possui um <xref:System.Windows.Rect.Height%2A> de <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="2872a-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="2872a-210">O <xref:System.Windows.Rect.Empty%2A> retângulo é somente leitura; seu <xref:System.Windows.Rect.Height%2A> não não pode ser alterado.</span><span class="sxs-lookup"><span data-stu-id="2872a-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-211">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-212">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-213">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2872a-214">
            <see cref="P:System.Windows.Rect.Height" /> é definido como um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-214">
              <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-215">
            <see cref="P:System.Windows.Rect.Height" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-215">
              <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-216">Cria um retângulo que resulta da expansão ou da redução de um retângulo pelo valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="2872a-217">Especifica a quantidade para expandir o retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-217">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="2872a-218">A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Width" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Left" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="2872a-219">A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Height" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Top" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Bottom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-220">Expande o retângulo usando o <see cref="T:System.Windows.Size" /> especificado em todas as direções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-221">O <xref:System.Windows.Rect.Width%2A> do retângulo resultante é aumentado em duas vezes o <xref:System.Windows.Size.Width%2A> especificada <xref:System.Windows.Size> estrutura, porque ambos os lados esquerdo e direito do retângulo são aumentados.</span><span class="sxs-lookup"><span data-stu-id="2872a-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="2872a-222">Da mesma forma, o <xref:System.Windows.Rect.Height%2A> do retângulo resultante é aumentado em duas vezes o <xref:System.Windows.Size.Height%2A> especificada <xref:System.Windows.Size> estrutura.</span><span class="sxs-lookup"><span data-stu-id="2872a-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-223">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> método para aumentar o tamanho de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-224">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="2872a-225">A quantidade pela qual expandir ou reduzir os lados esquerdo e direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="2872a-226">A quantidade pela qual expandir ou reduzir os lados superior e inferior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-227">Aumenta ou diminui o retângulo usando os valores de largura e altura especificados, em todas as direções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-228">O <xref:System.Windows.Rect.Width%2A> do retângulo resultante é aumentado ou diminuído por duas vezes o deslocamento de largura especificada, porque ela é aplicada à esquerda e direita do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="2872a-229">Da mesma forma, o <xref:System.Windows.Rect.Height%2A> do retângulo resultante é aumentado ou diminuído por duas vezes a altura especificada.</span><span class="sxs-lookup"><span data-stu-id="2872a-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="2872a-230">Se a altura ou largura especificada reduzir o retângulo maior do que o atual <xref:System.Windows.Rect.Width%2A> ou <xref:System.Windows.Rect.Height%2A>— fornecendo o retângulo uma área negativa — o retângulo se torna o <xref:System.Windows.Rect.Empty%2A> retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-231">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> método para alterar o tamanho de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-232">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-233">A estrutura <see cref="T:System.Windows.Rect" /> a ser modificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="2872a-234">Especifica a quantidade para expandir o retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-234">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="2872a-235">A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Width" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Left" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="2872a-236">A estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Height" />, especifica o valor para aumentar o <see cref="P:System.Windows.Rect.Top" /> do retângulo e as propriedades <see cref="P:System.Windows.Rect.Bottom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-237">Retorna o retângulo resultante da expansão do retângulo indicado pelo <see cref="T:System.Windows.Size" /> especificado, em todos os sentidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-238">O retângulo resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-238">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-239">O <xref:System.Windows.Rect.Width%2A> do retângulo resultante é aumentado em duas vezes o <xref:System.Windows.Size.Width%2A> especificada <xref:System.Windows.Size> estrutura, porque ambos os lados esquerdo e direito do retângulo são aumentados.</span><span class="sxs-lookup"><span data-stu-id="2872a-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="2872a-240">Da mesma forma, o <xref:System.Windows.Rect.Height%2A> do retângulo resultante é aumentado em duas vezes o <xref:System.Windows.Size.Height%2A> especificada <xref:System.Windows.Size> estrutura.</span><span class="sxs-lookup"><span data-stu-id="2872a-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-241">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> método para alterar o tamanho de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-242">
            <paramref name="rect" /> é um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-242">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-243">A estrutura <see cref="T:System.Windows.Rect" /> a ser modificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="2872a-244">A quantidade pela qual expandir ou reduzir os lados esquerdo e direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="2872a-245">A quantidade pela qual expandir ou reduzir os lados superior e inferior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-246">Cria um retângulo que é o resultado de expandir ou reduzir o retângulo especificado pelos valores especificados de largura e altura em todas as direções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-247">O retângulo resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-247">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-248">O <xref:System.Windows.Rect.Width%2A> do retângulo resultante é aumentado ou diminuído por duas vezes o deslocamento de largura especificada, porque ela é aplicada à esquerda e direita do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="2872a-249">Da mesma forma, o <xref:System.Windows.Rect.Height%2A> do retângulo resultante é aumentado ou diminuído por duas vezes a altura especificada.</span><span class="sxs-lookup"><span data-stu-id="2872a-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="2872a-250">Se a redução os modificadores especificados de largura ou altura do retângulo maior do que o atual <xref:System.Windows.Rect.Width%2A> ou <xref:System.Windows.Rect.Height%2A>— fornecendo o retângulo uma área negativa — esse método retorna <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2872a-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-251">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> método para alterar o tamanho de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-252">
            <paramref name="rect" /> é um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-252">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-253">Localiza a interseção de dois retângulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-253">Finds the intersection of two rectangles.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-254">O retângulo para fazer a interseção com o retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-254">The rectangle to intersect with the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-255">Localiza a interseção do retângulo atual e do retângulo especificado e armazena o resultado como o retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-256">Se nenhuma interseção existir, o retângulo atual se tornará <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2872a-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-257">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> método para localizar a interseção de dois retângulos e armazenar o resultado como um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="2872a-258">O primeiro retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-258">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="2872a-259">O segundo retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-259">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-260">Retorna a interseção dos retângulos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-260">Returns the intersection of the specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-261">A interseção dos dois retângulos ou <see cref="P:System.Windows.Rect.Empty" /> se não existir interseção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-262">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> método para encontrar a interseção de dois retângulos.</span><span class="sxs-lookup"><span data-stu-id="2872a-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-263">O retângulo a ser verificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-263">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-264">Indica se o retângulo especificado faz interseção com o retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-264">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-265">
            <see langword="true" /> se o retângulo especificado fizer interseção com o retângulo atual, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-265">
              <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-266">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.IntersectsWith%2A> método para determinar se dois retângulos se cruzam.</span><span class="sxs-lookup"><span data-stu-id="2872a-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-267">Obtém um valor que indica se o retângulo é o retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-268">
            <see langword="true" /> se o retângulo for o <see cref="P:System.Windows.Rect.Empty" /> retângulo, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-268">
              <see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-269">Não use essa propriedade para testar a área de zero. um retângulo com área de zero não é necessariamente o <xref:System.Windows.Rect.Empty%2A> retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="2872a-270">Para obter mais informações, consulte a propriedade <xref:System.Windows.Rect.Empty%2A>.</span><span class="sxs-lookup"><span data-stu-id="2872a-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-271">Obtém o valor do eixo x do lado esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-271">Gets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-272">O valor do eixo x do lado esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-272">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-273">Essa propriedade é equivalente à obtenção de <xref:System.Windows.Rect.X%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2872a-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-274">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-275">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-276">Obtém ou define a posição do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-276">Gets or sets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-277">A posição do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-277">The position of the top-left corner of the rectangle.</span>
          </span>
          <span data-ttu-id="2872a-278">O padrão é (0, 0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-278">The default is (0, 0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-279">A posição do canto superior esquerdo do retângulo é igual a (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="2872a-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-280">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-281">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-282">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-283">
            <see cref="P:System.Windows.Rect.Location" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-283">
              <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-284">Move um retângulo pela quantidade especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-284">Moves a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector">
          <span data-ttu-id="2872a-285">Um vetor que especifica as quantidades horizontais e verticais para mover o retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-286">Move o retângulo pelo vetor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-286">Moves the rectangle by the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-287">Chamar este método em um retângulo vazio (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) não é permitido.</span><span class="sxs-lookup"><span data-stu-id="2872a-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="2872a-288">Observe que a chamada a <xref:System.Windows.Rect.Offset%2A> método só terá efeito se você pode alterar o <xref:System.Windows.Rect.X%2A> e <xref:System.Windows.Rect.Y%2A> propriedades diretamente.</span><span class="sxs-lookup"><span data-stu-id="2872a-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="2872a-289">Porque <xref:System.Windows.Rect> é um tipo de valor, se você referenciar um <xref:System.Windows.Rect> objeto usando uma propriedade ou indexador, você obtém uma cópia do objeto, não uma referência ao objeto.</span><span class="sxs-lookup"><span data-stu-id="2872a-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="2872a-290">Se você tentar alterar <xref:System.Windows.Rect.X%2A> ou <xref:System.Windows.Rect.Y%2A> em uma referência de propriedade ou indexador, ocorre um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="2872a-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="2872a-291">Da mesma forma, chamar <xref:System.Windows.Rect.Offset%2A> na propriedade ou indexador não alterará o objeto subjacente.</span><span class="sxs-lookup"><span data-stu-id="2872a-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="2872a-292">Se você quiser alterar o valor de um <xref:System.Windows.Rect> que é referenciada como uma propriedade ou indexador, crie um novo <xref:System.Windows.Rect>, modificar seus campos e, em seguida, atribua o <xref:System.Windows.Rect> para a propriedade ou indexador.</span><span class="sxs-lookup"><span data-stu-id="2872a-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-293">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> método para alterar a posição de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-294">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="2872a-295">O valor para mover o retângulo horizontalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-295">The amount to move the rectangle horizontally.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="2872a-296">O valor para mover o retângulo verticalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-296">The amount to move the rectangle vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-297">Move o retângulo pelas quantidades horizontal e vertical especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-297">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-298">Chamar este método em um retângulo vazio (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) não é permitido.</span><span class="sxs-lookup"><span data-stu-id="2872a-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="2872a-299">Observe que a chamada a <xref:System.Windows.Rect.Offset%2A> método só terá efeito se você pode alterar o <xref:System.Windows.Rect.X%2A> e <xref:System.Windows.Rect.Y%2A> propriedades diretamente.</span><span class="sxs-lookup"><span data-stu-id="2872a-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="2872a-300">Porque <xref:System.Windows.Rect> é um tipo de valor, se você referenciar um <xref:System.Windows.Rect> objeto usando uma propriedade ou indexador, você obtém uma cópia do objeto, não uma referência ao objeto.</span><span class="sxs-lookup"><span data-stu-id="2872a-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="2872a-301">Se você tentar alterar <xref:System.Windows.Rect.X%2A> ou <xref:System.Windows.Rect.Y%2A> em uma referência de propriedade ou indexador, ocorre um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="2872a-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="2872a-302">Da mesma forma, chamar <xref:System.Windows.Rect.Offset%2A> na propriedade ou indexador não alterará o objeto subjacente.</span><span class="sxs-lookup"><span data-stu-id="2872a-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="2872a-303">Se você quiser alterar o valor de um <xref:System.Windows.Rect> que é referenciada como uma propriedade ou indexador, crie um novo <xref:System.Windows.Rect>, modificar seus campos e, em seguida, atribua o <xref:System.Windows.Rect> para a propriedade ou indexador.</span><span class="sxs-lookup"><span data-stu-id="2872a-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-304">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> método para alterar a posição de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-305">Esse método é chamado no retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-306">O retângulo original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-306">The original rectangle.</span>
          </span>
        </param>
        <param name="offsetVector">
          <span data-ttu-id="2872a-307">Um vetor que especifica os deslocamentos horizontais e verticais para o novo retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-308">Retorna um retângulo que é deslocado do retângulo especificado usando o vetor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-309">O retângulo resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-309">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-310">Chamar esse método com um retângulo vazio (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) não é permitido.</span><span class="sxs-lookup"><span data-stu-id="2872a-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-311">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> método para alterar a posição de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-312">
            <paramref name="rect" /> é <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-312">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-313">O retângulo a ser movido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-313">The rectangle to move.</span>
          </span>
        </param>
        <param name="offsetX">
          <span data-ttu-id="2872a-314">O deslocamento horizontal para o novo retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-314">The horizontal offset for the new rectangle.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="2872a-315">O deslocamento vertical para o novo retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-315">The vertical offset for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-316">Retorna um retângulo que é deslocado do retângulo especificado usando os valores horizontais e verticais especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-317">O retângulo resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-317">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-318">Chamar esse método com um retângulo vazio (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) não é permitido.</span><span class="sxs-lookup"><span data-stu-id="2872a-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-319">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> método para alterar a posição de um retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-320">
            <paramref name="rect" /> é <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-320">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="2872a-321">O primeiro retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-321">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="2872a-322">O segundo retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-322">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-323">Compara a igualdade exata de dois retângulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-323">Compares two rectangles for exact equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-324">
            <see langword="true" /> se os retângulos tiverem os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-324">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-325">Esta operação testa a igualdade de objetos.</span><span class="sxs-lookup"><span data-stu-id="2872a-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="2872a-326">Nessa comparação, duas instâncias de <xref:System.Double.NaN?displayProperty=nameWithType> são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2872a-327">A posição do retângulo e as dimensões são descritas por <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="2872a-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="2872a-328">Porque <xref:System.Double> valores podem perder precisão quando for operado, uma comparação entre dois valores são iguais logicamente poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="2872a-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="2872a-329">O método equivalente para esse operador é <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2872a-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2872a-330">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.op_Equality%2A> operador para determinar se dois retângulos são exatamente iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="2872a-331">O primeiro retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-331">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="2872a-332">O segundo retângulo a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-332">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-333">Compara dois retângulos quanto à desigualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-333">Compares two rectangles for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-334">
            <see langword="true" /> se os retângulos não tiverem os mesmos valores <see cref="P:System.Windows.Rect.Location" /> e <see cref="P:System.Windows.Rect.Size" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-334">
              <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-335">Esta operação testa a desigualdade de objeto.</span><span class="sxs-lookup"><span data-stu-id="2872a-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="2872a-336">Nessa comparação, duas instâncias de <xref:System.Double.NaN?displayProperty=nameWithType> são considerados iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2872a-337">A posição do retângulo e as dimensões são descritas por <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="2872a-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="2872a-338">Porque <xref:System.Double> valores podem perder precisão quando for operado, uma comparação entre dois valores são iguais logicamente poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="2872a-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="2872a-339">O método equivalente para esse operador é <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2872a-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2872a-340">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.op_Inequality%2A> operador para determinar se dois retângulos são não são exatamente iguais.</span><span class="sxs-lookup"><span data-stu-id="2872a-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2872a-341">A representação de cadeia de caracteres do retângulo, no formato "x, y, largura, altura".</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-341">The string representation of the rectangle, in the form "x, y, width, height".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-342">Cria um novo retângulo da representação da cadeia de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-342">Creates a new rectangle from the specified string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-343">O retângulo resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-343">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-344">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Parse%2A> método para converter uma representação de cadeia de caracteres de um retângulo em uma <xref:System.Windows.Rect> estrutura.</span><span class="sxs-lookup"><span data-stu-id="2872a-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-345">Obtém o valor do eixo x do lado direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-345">Gets the x-axis value of the right side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-346">O valor do eixo x do lado direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-346">The x-axis value of the right side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-347">O valor do eixo x do lado direito do retângulo é igual à soma do <xref:System.Windows.Rect.X%2A> e <xref:System.Windows.Rect.Width%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="2872a-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-348">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-349">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="2872a-350">O fator de escala na direção x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-350">The scale factor in the x-direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="2872a-351">O fator de escala na direção y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-351">The scale factor in the y-direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-352">Multiplica o tamanho do retângulo atual pelos valores de x e y especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-352">Multiplies the size of the current rectangle by the specified x and y values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-353">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Scale%2A> método multiplicar a largura e altura de um retângulo pelo valor especificado.</span><span class="sxs-lookup"><span data-stu-id="2872a-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-354">Obtém ou define a largura e a altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-354">Gets or sets the width and height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-355">Uma estrutura <see cref="T:System.Windows.Size" /> que especifica a largura e altura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-356">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-357">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-358">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-359">
            <see cref="P:System.Windows.Rect.Size" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-359">
              <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="2872a-360">O formato a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-360">The format to use.</span>
          </span>
          <span data-ttu-id="2872a-361">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-361">-or-</span>
          </span>
          <span data-ttu-id="2872a-362">Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar o formato padrão definido para o tipo da implementação <see cref="T:System.IFormattable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="2872a-363">O provedor a ser usado para formatar o valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-363">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="2872a-364">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-364">-or-</span>
          </span>
          <span data-ttu-id="2872a-365">Uma referência nula (<see langword="Nothing" /> no Visual Basic) para obter as informações de formato numérico da configuração de localidade atual do sistema operacional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-366">Formata o valor da instância atual usando o formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-366">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-367">Uma representação de cadeia de caracteres do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-367">A string representation of the rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-368">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="2872a-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2872a-369">Ele só pode ser usado quando a instância de <xref:System.Windows.Rect> é convertida em uma interface de <xref:System.IFormattable>.</span><span class="sxs-lookup"><span data-stu-id="2872a-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-370">Obtém a posição do eixo y da parte superior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-370">Gets the y-axis position of the top of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-371">A posição do eixo y da parte superior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-371">The y-axis position of the top of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-372">Essa propriedade é equivalente à obtenção de <xref:System.Windows.Rect.Y%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2872a-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-373">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-374">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-375">Obtém a posição do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-375">Gets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-376">A posição do canto superior esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-376">The position of the top-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-377">A posição do canto superior esquerdo do retângulo é igual a (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="2872a-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-378">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-379">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-380">Obtém a posição do canto superior direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-380">Gets the position of the top-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-381">A posição do canto superior direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-381">The position of the top-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-382">A posição do canto superior direito do retângulo é igual a (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="2872a-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-383">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-384">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-385">Retorna uma representação de cadeia de caracteres do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-385">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2872a-386">Retorna uma representação de cadeia de caracteres do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-386">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-387">Uma representação de cadeia de caracteres do retângulo atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-387">A string representation of the current rectangle.</span>
          </span>
          <span data-ttu-id="2872a-388">A cadeia de caracteres tem o seguinte formato: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-389">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.ToString> método para obter uma representação de cadeia de caracteres de um <xref:System.Windows.Rect> estrutura.</span><span class="sxs-lookup"><span data-stu-id="2872a-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="2872a-390">Informações de formatação específicas da cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-390">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-391">Retorna uma representação de cadeia de caracteres do retângulo, usando o provedor de formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-391">Returns a string representation of the rectangle by using the specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-392">Uma representação de cadeia de caracteres do retângulo atual que é determinada pelo provedor de formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-392">A string representation of the current rectangle that is determined by the specified format provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-393">Transforma um retângulo usando a matriz especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-393">Transforms a rectangle by using the specified matrix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="2872a-394">Uma matriz que especifica a transformação a ser aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-394">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-395">Transforma o retângulo aplicando a matriz especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-395">Transforms the rectangle by applying the specified matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-396">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> método para transformar uma <xref:System.Windows.Rect> estrutura usando um <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="2872a-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-397">Um retângulo que é a base para a transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-397">A rectangle that is the basis for the transformation.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="2872a-398">Uma matriz que especifica a transformação a ser aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-398">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-399">Retorna o retângulo que resulta da aplicação da matriz especificada ao retângulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-400">O retângulo que resulta da operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-400">The rectangle that results from the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-401">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> método para criar um novo <xref:System.Windows.Rect> estrutura que resulta da aplicação de um <xref:System.Windows.Media.Matrix> a um retângulo existente.</span><span class="sxs-lookup"><span data-stu-id="2872a-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-402">Cria um retângulo que é exatamente grande o suficiente para conter um retângulo determinado e um ponto especificado ou segundo retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="2872a-403">O ponto a ser incluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-403">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-404">Expande o retângulo atual exatamente o suficiente para conter o ponto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-404">Expands the current rectangle exactly enough to contain the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-405">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Union%28System.Windows.Point%29> método para expandir o retângulo atual exatamente o suficiente para conter um determinado <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="2872a-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-406">O retângulo a ser incluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-406">The rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-407">Expande o retângulo atual exatamente o suficiente para conter o retângulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-408">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> método para expandir o retângulo atual exatamente o suficiente para conter o retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="2872a-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2872a-409">O retângulo a ser incluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-409">The rectangle to include.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="2872a-410">O ponto a ser incluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-410">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-411">Cria um retângulo que é exatamente grande o suficiente para incluir o retângulo especificado e o ponto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-412">Um retângulo que é exatamente grande o suficiente para conter o retângulo especificado e o ponto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-413">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> método para criar um retângulo que é exatamente grande o suficiente para conter um retângulo determinado e um determinado <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="2872a-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="2872a-414">O primeiro retângulo a incluir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-414">The first rectangle to include.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="2872a-415">O segundo retângulo a ser incluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-415">The second rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2872a-416">Cria um retângulo que é exatamente grande o suficiente para conter os dois retângulos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2872a-417">O retângulo resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-417">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2872a-418">O exemplo a seguir mostra como usar o <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> método para criar um retângulo que é exatamente grande o suficiente para conter os dois retângulos determinados.</span><span class="sxs-lookup"><span data-stu-id="2872a-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-419">Obtém ou define a largura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-419">Gets or sets the width of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-420">Um número positivo que representa a largura do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-420">A positive number that represents the width of the rectangle.</span>
          </span>
          <span data-ttu-id="2872a-421">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-421">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-422">O <xref:System.Windows.Rect.Empty%2A> retângulo possui um <xref:System.Windows.Rect.Width%2A> de <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="2872a-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="2872a-423">O <xref:System.Windows.Rect.Empty%2A> retângulo é somente leitura; seu <xref:System.Windows.Rect.Width%2A> não não pode ser alterado.</span><span class="sxs-lookup"><span data-stu-id="2872a-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-424">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-425">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-426">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2872a-427">
            <see cref="P:System.Windows.Rect.Width" /> é definido como um valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-427">
              <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-428">
            <see cref="P:System.Windows.Rect.Width" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-428">
              <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-429">Obtém ou define o valor do eixo X do lado esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-429">Gets or sets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-430">O valor do eixo x do lado esquerdo do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-430">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-431">Essa propriedade é equivalente à obtenção de <xref:System.Windows.Rect.Left%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2872a-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-432">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-433">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-434">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-435">
            <see cref="P:System.Windows.Rect.X" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-435">
              <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2872a-436">Obtém ou define o valor do eixo y do lado superior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-436">Gets or sets the y-axis value of the top side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2872a-437">O valor do eixo y do canto superior do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-437">The y-axis value of the top side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2872a-438">Essa propriedade é equivalente à obtenção de <xref:System.Windows.Rect.Top%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2872a-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2872a-439">O exemplo a seguir mostra como usar um <xref:System.Windows.Rect> para especificar o local de um retângulo usando XAML e dimensões.</span><span class="sxs-lookup"><span data-stu-id="2872a-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="2872a-440">O exemplo a seguir mostra como usar código para criar um retângulo e adicioná-lo para a página.</span><span class="sxs-lookup"><span data-stu-id="2872a-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="2872a-441">O exemplo também ilustra como localizar informações sobre o retângulo novo tamanho e coordenadas e processar as informações em um <xref:System.Windows.Controls.TextBox> abaixo do retângulo.</span><span class="sxs-lookup"><span data-stu-id="2872a-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2872a-442">
            <see cref="P:System.Windows.Rect.Y" /> está definido em um retângulo <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2872a-442">
              <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>