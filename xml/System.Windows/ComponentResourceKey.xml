<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2ed30bb35b5407ec7068de830578e9c4f1b96b0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37550460" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b6f2-101">Define ou referencia as chaves de recurso com base em nomes de classe de assemblies externos, bem como um identificador adicional.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b6f2-101">Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6f2-102">Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="8b6f2-102">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="8b6f2-103">Essa classe implementa um tipo de objeto que é útil para a criação de chaves que são baseadas nos tipos em assemblies de mais de um identificador.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-103">This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</span></span> <span data-ttu-id="8b6f2-104">Como definir ou o tipo de referência, você não é necessário solicitar um determinado <xref:System.Windows.ResourceDictionary>, e mais de um conjunto de recursos pode existir no assembly, cada diferenciado pelo tipo de seus <xref:System.Windows.ComponentResourceKey>.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-104">Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="8b6f2-105">Há duas maneiras para definir um <xref:System.Windows.ComponentResourceKey>.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-105">There are two ways to define a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
 <span data-ttu-id="8b6f2-106">Se você quiser uma facilmente acessíveis por chave, você pode definir uma propriedade estática em seu código de classe de controle que retorna um <xref:System.Windows.ComponentResourceKey>, construído com um <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> que existe no assembly do recurso externo e um <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-106">If you want an easily accessible key, you can define a static property on your control class code that returns a <xref:System.Windows.ComponentResourceKey>, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</span></span> <span data-ttu-id="8b6f2-107">A chave pode ser usada para definir estilos padrão alternativo para controles em um assembly, alternando o assembly original do recurso externo para uma personalizada.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-107">The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</span></span> <span data-ttu-id="8b6f2-108">Você também pode definir uma parte do recurso nomeado dentro de um estilo de controle maior ou o modelo para expor um ponto de entrada de personalização.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-108">You can also define a named resource part within a larger control style or template to expose a customization entry point.</span></span> <span data-ttu-id="8b6f2-109">Isso é particularmente útil se você estiver definindo um dicionário de recursos de tema para o seu controle.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-109">This is particularly useful if you are defining a theme resource dictionary for your control.</span></span>  
  
 <span data-ttu-id="8b6f2-110">Você também pode usar o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) na sintaxe detalhada diretamente para criar uma instância flexível da chave.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-110">You can also use the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) in verbose syntax directly to create a loose instance of the key.</span></span> <span data-ttu-id="8b6f2-111">Isso é útil se você quiser declarar recursos privados de outros assemblies que são menos identificáveis personalizar.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-111">This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-112">Inicializa uma nova instância da classe <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-112">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-113">Inicializa uma nova instância da classe <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-113">Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6f2-114">O construtor padrão não é geralmente usado, porque uma <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> valor e <xref:System.Windows.ComponentResourceKey.ResourceId%2A> valor são necessários para a inicialização apropriada.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-114">The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization.</span></span> <span data-ttu-id="8b6f2-115">O construtor padrão existe principalmente para dar suporte a [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) uso XAML na forma de parâmetro nomeado.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-115">The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in named parameter form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">
          <span data-ttu-id="8b6f2-116">O tipo que define a chave do recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-116">The type that defines the resource key.</span>
          </span>
        </param>
        <param name="resourceId">
          <span data-ttu-id="8b6f2-117">Um identificador exclusivo para diferenciar este <see cref="T:System.Windows.ComponentResourceKey" /> de outros associados ao tipo <c>typeInTargetAssembly</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-117">A unique identifier to differentiate this <see cref="T:System.Windows.ComponentResourceKey" /> from others associated with the <c>typeInTargetAssembly</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b6f2-118">Inicializa uma nova instância de um <see cref="T:System.Windows.ComponentResourceKey" />, especificando o <see cref="T:System.Type" /> que define a chave e um objeto a ser usado como um identificador de recurso adicional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-118">Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey" /> , specifying the <see cref="T:System.Type" /> that defines the key, and an object to use as an additional resource identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6f2-119">Esse construtor existe para dois cenários, com o primeiro cenário, sendo o mais importante:</span><span class="sxs-lookup"><span data-stu-id="8b6f2-119">This constructor exist for two scenarios, with the first scenario being the most important:</span></span>  
  
-   <span data-ttu-id="8b6f2-120">Dá suporte à criação de um <xref:System.Windows.ComponentResourceKey> que, em seguida, é exposta como um campo estático público em uma classe de controle personalizado.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-120">Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class.</span></span> <span data-ttu-id="8b6f2-121">Isso simplifica o acesso de um controle para seus próprios recursos definidos no modelo por meio de `{x:Static}` usos para valores de propriedade do modelo.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-121">This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.</span></span>  
  
-   <span data-ttu-id="8b6f2-122">Dá suporte à [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) uso do XAML no formulário parâmetros posicionais, o que é uma técnica disponível para parceiros que fazem referência a um recurso do componente.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-122">Supports [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b6f2-123">O exemplo a seguir cria um <xref:System.Windows.ComponentResourceKey> que, em seguida, é exposta como uma chave estática de um controle para fornecer um ponto de entrada de personalização de estilo.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-123">The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.</span></span>  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-124">Obtém o objeto de assembly que indica em qual dicionário do assembly procurar o valor associado a essa chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-124">Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6f2-125">O assembly recuperadas, como uma classe de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-125">The retrieved assembly, as a reflection class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="8b6f2-126">O objeto a ser comparado ao <see cref="T:System.Windows.ComponentResourceKey" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-126">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b6f2-127">Determina se o objeto fornecido é igual ao <see cref="T:System.Windows.ComponentResourceKey" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-127">Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b6f2-128">
            <see langword="true" /> se os objetos forem iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-128">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6f2-129">Duas chaves são iguais se tiverem os mesmos valores para todas as suas propriedades configuráveis imediatas (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span><span class="sxs-lookup"><span data-stu-id="8b6f2-129">Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-130">Retorna um código hash para este <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-130">Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b6f2-131">Um valor inteiro de 32 bits com sinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-131">A signed 32-bit integer value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-132">Obtém ou define um identificador exclusivo para diferenciar essa chave das outras associadas a esse tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-132">Gets or sets a unique identifier to differentiate this key from others associated with this type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6f2-133">Um identificador exclusivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-133">A unique identifier.</span>
          </span>
          <span data-ttu-id="8b6f2-134">Normalmente, isso é uma cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-134">Typically this is a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6f2-135">Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="8b6f2-135">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="8b6f2-136">Normalmente, a cadeia de caracteres usada para um <xref:System.Windows.ComponentResourceKey.ResourceId%2A> valor está em conformidade com o [gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="8b6f2-136">Typically, the string used for a <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value conforms to the [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
## Examples  
 <span data-ttu-id="8b6f2-137">O exemplo a seguir mostra como usar o <xref:System.Windows.ComponentResourceKey.ResourceId%2A> para diferenciar essa chave das outras associadas a esse tipo.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-137">The following example shows how to use the <xref:System.Windows.ComponentResourceKey.ResourceId%2A> to differentiate this key from others associated with this type.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-138">Obtém a representação da cadeia de caracteres de um <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-138">Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b6f2-139">A representação da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-139">The string representation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b6f2-140">Obtém ou define o <see cref="T:System.Type" /> que define a chave do recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-140">Gets or sets the <see cref="T:System.Type" /> that defines the resource key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b6f2-141">O tipo que define a chave do recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b6f2-141">The type that defines the resource key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6f2-142">Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações, consulte [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="8b6f2-142">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span>  
  
 <span data-ttu-id="8b6f2-143">O <xref:System.Windows.ComponentResourceKey> elemento é usado por componentes personalizados para definir chaves para recursos que são acessados a partir de assemblies externos, com base em um assembly que contém o tipo de direcionamento.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-143">The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</span></span> <span data-ttu-id="8b6f2-144">Componentes personalizados geralmente definem novos tipos que devem ser no assembly em que o recurso está localizado.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-144">Custom components often define new types which must be in the assembly where the resource is located.</span></span> <span data-ttu-id="8b6f2-145">Em geral, esses tipos não têm nenhuma outra implementação, os tipos só existem para satisfazer os requisitos de pesquisa de um <xref:System.Windows.ComponentResourceKey>.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-145">Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.</span></span>  
  
## Examples  
 <span data-ttu-id="8b6f2-146">O exemplo a seguir mostra como definir um <xref:System.Windows.ComponentResourceKey> incluindo <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> e <xref:System.Windows.ComponentResourceKey.ResourceId%2A> usando o [extensão de marcação ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="8b6f2-146">The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).</span></span> <span data-ttu-id="8b6f2-147">Esse recurso pode ser colocado em um assembly externo e acessado pelo uso de chave que solicita o recurso usando um análogo <xref:System.Windows.ComponentResourceKey> na solicitação.</span><span class="sxs-lookup"><span data-stu-id="8b6f2-147">This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.</span></span>  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>