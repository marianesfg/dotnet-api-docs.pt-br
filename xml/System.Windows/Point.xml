<Type Name="Point" FullName="System.Windows.Point">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c279ef12f5819cae2f31f3029df8f0abad7bc93" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55408698" /></Metadata><TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f86bd-101">Representa um par de coordenadas x e y no espaço bidimensional.</span><span class="sxs-lookup"><span data-stu-id="f86bd-101">Represents an x- and y-coordinate pair in two-dimensional space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-102">No XAML, o delimitador entre o <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> valores de um <xref:System.Windows.Point> pode ser uma vírgula ou um espaço.</span><span class="sxs-lookup"><span data-stu-id="f86bd-102">In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="f86bd-103">Algumas culturas podem usar o caractere de vírgula como delimitador em vez do caractere de ponto decimal.</span><span class="sxs-lookup"><span data-stu-id="f86bd-103">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="f86bd-104">XAML de processamento para a cultura invariável padrão é en-US, na maioria das implementações de processador XAML e espera que o período como o delimitador de decimal.</span><span class="sxs-lookup"><span data-stu-id="f86bd-104">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="f86bd-105">Você deve evitar usar o caractere de vírgula como delimitador decimal se especificando um <xref:System.Windows.Point> em XAML, porque que entrarão em conflito com a conversão de tipo de cadeia de caracteres de um <xref:System.Windows.Point> valor no atributo de <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> componentes.</span><span class="sxs-lookup"><span data-stu-id="f86bd-105">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Point> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Point> attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f86bd-106">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="f86bd-106">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="f86bd-107">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="f86bd-107">XAML Values</span></span>  
 <span data-ttu-id="f86bd-108">*x*</span><span class="sxs-lookup"><span data-stu-id="f86bd-108">*x*</span></span>  
 <span data-ttu-id="f86bd-109">A coordenada X deste <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-109">The x-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
 <span data-ttu-id="f86bd-110">*y*</span><span class="sxs-lookup"><span data-stu-id="f86bd-110">*y*</span></span>  
 <span data-ttu-id="f86bd-111">A coordenada Y deste <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-111">The y-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-112">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas não são iguais.</span><span class="sxs-lookup"><span data-stu-id="f86bd-112">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="f86bd-113">Ele também ilustra como atribuir valores a um <xref:System.Windows.Point> estrutura quando a estrutura está sendo declarada e depois que a estrutura foi declarada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-113">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f86bd-114">A coordenada X da nova estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-114">The x-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="f86bd-115">A coordenada y da nova estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-115">The y-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span></span></param>
        <summary><span data-ttu-id="f86bd-116">Cria uma nova estrutura <see cref="T:System.Windows.Point" /> que contém coordenadas especificadas.</span><span class="sxs-lookup"><span data-stu-id="f86bd-116">Creates a new <see cref="T:System.Windows.Point" /> structure that contains the specified coordinates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-117">A estrutura <see cref="T:System.Windows.Point" /> a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-117">The <see cref="T:System.Windows.Point" /> structure to add.</span></span></param>
        <param name="vector"><span data-ttu-id="f86bd-118">A estrutura <see cref="T:System.Windows.Vector" /> a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-118">The <see cref="T:System.Windows.Vector" /> structure to add.</span></span></param>
        <summary><span data-ttu-id="f86bd-119">Adiciona um <see cref="T:System.Windows.Vector" /> em um <see cref="T:System.Windows.Point" /> e retorna o resultado como uma estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-119">Adds a <see cref="T:System.Windows.Vector" /> to a <see cref="T:System.Windows.Point" /> and returns the result as a <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
        <returns><span data-ttu-id="f86bd-120">Retorna a soma de <paramref name="point" /> e <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-120">Returns the sum of <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-121">Adicionando um <xref:System.Windows.Point> estrutura para um <xref:System.Windows.Point> estrutura é proibida.</span><span class="sxs-lookup"><span data-stu-id="f86bd-121">Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-122">Este exemplo adiciona uma <xref:System.Windows.Point> para um <xref:System.Windows.Vector> e retorna o resultado como um <xref:System.Windows.Vector> estrutura.</span><span class="sxs-lookup"><span data-stu-id="f86bd-122">This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86bd-123">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-123">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f86bd-124">O <see cref="T:System.Object" /> de comparação.</span><span class="sxs-lookup"><span data-stu-id="f86bd-124">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="f86bd-125">Determina se o <see cref="T:System.Object" /> especificado é um <see cref="T:System.Windows.Point" /> e se ele contém as mesmas coordenadas que este <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-125">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Point" /> and whether it contains the same coordinates as this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-126"><see langword="true" /> se <paramref name="o" /> for um <see cref="T:System.Windows.Point" /> e contiver os mesmos valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> que este <see cref="T:System.Windows.Point" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-126"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-127"><xref:System.Windows.Point> as coordenadas são descritas usando <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="f86bd-127"><xref:System.Windows.Point> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="f86bd-128">Porque o valor de uma <xref:System.Double> podem perder a precisão quando operada, uma comparação entre dois <xref:System.Windows.Point> valores que são logicamente iguais poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="f86bd-128">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-129">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas são iguais usando o não-estático <xref:System.Windows.Point.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f86bd-129">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f86bd-130">O ponto a ser comparado a essa instância.</span><span class="sxs-lookup"><span data-stu-id="f86bd-130">The point to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="f86bd-131">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-131">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="f86bd-132"><see langword="true" /> se ambas as estruturas <see cref="T:System.Windows.Point" /> contiverem os mesmos valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-132"><see langword="true" /> if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-133"><xref:System.Windows.Point> as coordenadas são expressas usando <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="f86bd-133"><xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values.</span></span> <span data-ttu-id="f86bd-134">Porque o valor de uma <xref:System.Double> podem perder a precisão quando operados em uma comparação entre dois <xref:System.Windows.Point> valores que são logicamente iguais poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="f86bd-134">Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="f86bd-135">O primeiro ponto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-135">The first point to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="f86bd-136">O segundo ponto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-136">The second point to compare.</span></span></param>
        <summary><span data-ttu-id="f86bd-137">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-137">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="f86bd-138"><see langword="true" /> se <paramref name="point1" /> e <paramref name="point2" /> contêm os mesmos valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-138"><see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-139">As coordenadas de ponto são descritas usando <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="f86bd-139">Point coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="f86bd-140">Porque o valor de uma <xref:System.Double> podem perder a precisão quando operada, uma comparação entre dois <xref:System.Windows.Point> valores que são logicamente iguais poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="f86bd-140">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-141">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas são iguais usando estático <xref:System.Windows.Point.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f86bd-141">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86bd-142">Retorna o código hash para este <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-142">Returns the hash code for this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-143">O código hash para esta estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-143">The hash code for this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-144">O exemplo a seguir mostra como obter o código hash de um <xref:System.Windows.Point> estrutura.</span><span class="sxs-lookup"><span data-stu-id="f86bd-144">The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-145">O ponto a ser transformado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-145">The point to transform.</span></span></param>
        <param name="matrix"><span data-ttu-id="f86bd-146">A matriz de transformação.</span><span class="sxs-lookup"><span data-stu-id="f86bd-146">The transformation matrix.</span></span></param>
        <summary><span data-ttu-id="f86bd-147">Transforma a estrutura <see cref="T:System.Windows.Point" /> especificada pela estrutura <see cref="T:System.Windows.Media.Matrix" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-147">Transforms the specified <see cref="T:System.Windows.Point" /> structure by the specified <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="f86bd-148">O ponto transformado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-148">The transformed point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-149">O exemplo a seguir mostra como multiplicar um <xref:System.Windows.Point> estrutura por um <xref:System.Windows.Media.Matrix> estrutura usando o <xref:System.Windows.Point.Multiply%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f86bd-149">The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the <xref:System.Windows.Point.Multiply%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="f86bd-150">O valor de deslocamento da</span><span class="sxs-lookup"><span data-stu-id="f86bd-150">The amount to offset the point's</span></span> 
 <span data-ttu-id="f86bd-151">Coordenada <see cref="P:System.Windows.Point.X" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-151"><see cref="P:System.Windows.Point.X" /> coordinate.</span></span></param>
        <param name="offsetY"><span data-ttu-id="f86bd-152">O valor de deslocamento de</span><span class="sxs-lookup"><span data-stu-id="f86bd-152">The amount to offset the</span></span> 
<span data-ttu-id="f86bd-153">coordenada <see cref="P:System.Windows.Point.Y" /> do ponto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-153">point's <see cref="P:System.Windows.Point.Y" /> coordinate.</span></span></param>
        <summary><span data-ttu-id="f86bd-154">Desloca as coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de um ponto pelas quantidades especificadas.</span><span class="sxs-lookup"><span data-stu-id="f86bd-154">Offsets a point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates by the specified amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-155">Esta operação é equivalente a adicionar um <xref:System.Windows.Point> para um <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-155">This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.</span></span>  
  
 <span data-ttu-id="f86bd-156">Observe que a chamada a <xref:System.Windows.Point.Offset%2A> método terá um efeito apenas se você pode alterar o <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> propriedades diretamente.</span><span class="sxs-lookup"><span data-stu-id="f86bd-156">Note that calling the <xref:System.Windows.Point.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly.</span></span> <span data-ttu-id="f86bd-157">Porque <xref:System.Windows.Point> é um tipo de valor, se você referenciar um <xref:System.Windows.Point> objeto usando uma propriedade ou indexador, você obtém uma cópia do objeto, não uma referência ao objeto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-157">Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="f86bd-158">Se você tentar alterar <xref:System.Windows.Point.X%2A> ou <xref:System.Windows.Point.Y%2A> em uma referência de propriedade ou indexador, ocorre um erro do compilador.</span><span class="sxs-lookup"><span data-stu-id="f86bd-158">If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="f86bd-159">Da mesma forma, chamar <xref:System.Windows.Point.Offset%2A> na propriedade ou indexador não alterará o objeto subjacente.</span><span class="sxs-lookup"><span data-stu-id="f86bd-159">Similarly, calling <xref:System.Windows.Point.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="f86bd-160">Se você quiser alterar o valor de uma <xref:System.Windows.Point> que é referenciada como uma propriedade ou indexador, crie um novo <xref:System.Windows.Point>, modifique seus campos e, em seguida, atribuir o <xref:System.Windows.Point> volta para a propriedade ou o indexador.</span><span class="sxs-lookup"><span data-stu-id="f86bd-160">If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-161">O exemplo a seguir mostra como deslocar o <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> valores de um <xref:System.Windows.Point> estrutura.</span><span class="sxs-lookup"><span data-stu-id="f86bd-161">The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-162">O ponto a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="f86bd-162">The point to translate.</span></span></param>
        <param name="vector"><span data-ttu-id="f86bd-163">O valor pelo qual converter o <paramref name="point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-163">The amount by which to translate <paramref name="point" />.</span></span></param>
        <summary><span data-ttu-id="f86bd-164">Converte o <see cref="T:System.Windows.Point" /> especificado pelo <see cref="T:System.Windows.Vector" /> especificado e retorna o resultado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-164">Translates the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Vector" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="f86bd-165">O resultado da conversão do ponto especificado pelo vetor especificado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-165">The result of translating the specified point by the specified vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-166">O exemplo a seguir mostra como adicionar um <xref:System.Windows.Point> para um <xref:System.Windows.Vector> sobrecarregado (+) usando o operador.</span><span class="sxs-lookup"><span data-stu-id="f86bd-166">The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="f86bd-167">A primeira estrutura <see cref="T:System.Windows.Point" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-167">The first <see cref="T:System.Windows.Point" /> structure to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="f86bd-168">A segunda estrutura <see cref="T:System.Windows.Point" /> a ser comparada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-168">The second <see cref="T:System.Windows.Point" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="f86bd-169">Compara a igualdade de duas estruturas <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-169">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="f86bd-170"><see langword="true" /> se as coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> e <paramref name="point2" /> forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-170"><see langword="true" /> if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-171">As coordenadas de um ponto são descritas usando <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="f86bd-171">A point's coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="f86bd-172">Porque o valor de <xref:System.Double> podem perder a precisão quando operações aritméticas são realizadas neles, uma comparação entre dois <xref:System.Windows.Point> valores que são logicamente iguais poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="f86bd-172">Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-173">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas são iguais usando o operador (= =) sobrecarregado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-173">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86bd-174">Converte um <see cref="T:System.Windows.Point" /> em um <see cref="T:System.Windows.Size" /> ou <see cref="T:System.Windows.Vector" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-174">Converts a <see cref="T:System.Windows.Point" /> into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Vector" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-175">O ponto para converter.</span><span class="sxs-lookup"><span data-stu-id="f86bd-175">The point to convert.</span></span></param>
        <summary><span data-ttu-id="f86bd-176">Cria uma estrutura <see cref="T:System.Windows.Size" /> com um <see cref="P:System.Windows.Size.Width" /> igual ao valor <see cref="P:System.Windows.Point.X" /> desse ponto e um <see cref="P:System.Windows.Size.Height" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> desse ponto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-176">Creates a <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></summary>
        <returns><span data-ttu-id="f86bd-177">Um <see cref="T:System.Windows.Size" /> estrutura com um <see cref="P:System.Windows.Size.Width" /> igual ao valor <see cref="P:System.Windows.Point.X" /> desse ponto e um <see cref="P:System.Windows.Size.Height" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> desse ponto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-177">A <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-178">Como uma <xref:System.Windows.Size> estrutura não pode ser negativa, os valores absolutos do ponto <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> propriedades são usadas.</span><span class="sxs-lookup"><span data-stu-id="f86bd-178">Because a <xref:System.Windows.Size> structure cannot be negative, the absolute values of the point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-179">O exemplo a seguir mostra como converter explicitamente um <xref:System.Windows.Point> em um <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-179">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-180">O ponto para converter.</span><span class="sxs-lookup"><span data-stu-id="f86bd-180">The point to convert.</span></span></param>
        <summary><span data-ttu-id="f86bd-181">Cria uma estrutura <see cref="T:System.Windows.Vector" /> com um valor <see cref="P:System.Windows.Vector.X" /> igual ao valor <see cref="P:System.Windows.Point.X" /> do ponto e um valor <see cref="P:System.Windows.Vector.Y" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> do ponto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-181">Creates a <see cref="T:System.Windows.Vector" /> structure with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></summary>
        <returns><span data-ttu-id="f86bd-182">Um vetor com um valor <see cref="P:System.Windows.Vector.X" /> igual ao valor <see cref="P:System.Windows.Point.X" /> do ponto e um valor <see cref="P:System.Windows.Vector.Y" /> igual ao valor <see cref="P:System.Windows.Point.Y" /> do ponto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-182">A vector with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-183">O exemplo a seguir mostra como converter explicitamente um <xref:System.Windows.Point> em um <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-183">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="f86bd-184">O primeiro ponto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-184">The first point to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="f86bd-185">O segundo ponto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-185">The second point to compare.</span></span></param>
        <summary><span data-ttu-id="f86bd-186">Compara duas estruturas <see cref="T:System.Windows.Point" /> quanto à desigualdade.</span><span class="sxs-lookup"><span data-stu-id="f86bd-186">Compares two <see cref="T:System.Windows.Point" /> structures for inequality.</span></span></summary>
        <returns><span data-ttu-id="f86bd-187"><see langword="true" /> se <paramref name="point1" /> e <paramref name="point2" /> tiverem coordenadas <see cref="P:System.Windows.Point.X" /> ou <see cref="P:System.Windows.Point.Y" /> diferentes; <see langword="false" /> se <paramref name="point1" /> e <paramref name="point2" /> tiverem as mesmas coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-187"><see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> coordinates; <see langword="false" /> if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86bd-188">Um ponto <xref:System.Windows.Point.X%2A> e <xref:System.Windows.Point.Y%2A> coordenadas são descritas usando <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="f86bd-188">A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="f86bd-189">Porque <xref:System.Double> valores podem perder a precisão quando operados em uma comparação entre dois <xref:System.Windows.Point> valores que são logicamente iguais poderá falhar.</span><span class="sxs-lookup"><span data-stu-id="f86bd-189">Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86bd-190">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas não forem iguais, usando o sobrecarregado (! =) operador.</span><span class="sxs-lookup"><span data-stu-id="f86bd-190">The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-191">O ponto a ser transformado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-191">The point to transform.</span></span></param>
        <param name="matrix"><span data-ttu-id="f86bd-192">A matriz de transformação.</span><span class="sxs-lookup"><span data-stu-id="f86bd-192">The transformation matrix.</span></span></param>
        <summary><span data-ttu-id="f86bd-193">Transforma o <see cref="T:System.Windows.Point" /> especificado pelo <see cref="T:System.Windows.Media.Matrix" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-193">Transforms the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-194">O resultado da transformação do ponto especificado usando a matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-194">The result of transforming the specified point using the specified matrix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-195">O exemplo a seguir mostra como multiplicar um <xref:System.Windows.Point> por um <xref:System.Windows.Media.Matrix> usando o operador sobrecarregado (\*).</span><span class="sxs-lookup"><span data-stu-id="f86bd-195">The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (\*) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86bd-196">Subtrai o <see cref="T:System.Windows.Vector" /> ou <see cref="T:System.Windows.Point" /> especificado do <see cref="T:System.Windows.Point" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-196">Subtracts the specified <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="f86bd-197">O ponto do qual <paramref name="point2" /> é subtraído.</span><span class="sxs-lookup"><span data-stu-id="f86bd-197">The point from which <paramref name="point2" /> is subtracted.</span></span></param>
        <param name="point2"><span data-ttu-id="f86bd-198">O ponto do qual subtrair <paramref name="point1" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-198">The point to subtract from <paramref name="point1" />.</span></span></param>
        <summary><span data-ttu-id="f86bd-199">Subtrai o <see cref="T:System.Windows.Point" /> especificado de outro <see cref="T:System.Windows.Point" /> especificado e retorna a diferença como um <see cref="T:System.Windows.Vector" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-199">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-200">A diferença entre <paramref name="point1" /> e <paramref name="point2" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-200">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-201">O exemplo a seguir mostra como subtrair um <xref:System.Windows.Point> de outro <xref:System.Windows.Point> e retornar um <xref:System.Windows.Vector> usando o operador sobrecarregado (-).</span><span class="sxs-lookup"><span data-stu-id="f86bd-201">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-202">O ponto do qual <paramref name="vector" /> é subtraído.</span><span class="sxs-lookup"><span data-stu-id="f86bd-202">The point from which <paramref name="vector" /> is subtracted.</span></span></param>
        <param name="vector"><span data-ttu-id="f86bd-203">O vetor a ser subtraído de <paramref name="point1" /></span><span class="sxs-lookup"><span data-stu-id="f86bd-203">The vector to subtract from <paramref name="point1" /></span></span></param>
        <summary><span data-ttu-id="f86bd-204">Subtrai o <see cref="T:System.Windows.Vector" /> especificado do <see cref="T:System.Windows.Point" /> especificado e retorna o <see cref="T:System.Windows.Point" /> resultante.</span><span class="sxs-lookup"><span data-stu-id="f86bd-204">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-205">A diferença entre <paramref name="point" /> e <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-205">The difference between <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-206">O exemplo a seguir mostra como subtrair um <xref:System.Windows.Vector> de um <xref:System.Windows.Point> usando o operador sobrecarregado (-).</span><span class="sxs-lookup"><span data-stu-id="f86bd-206">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f86bd-207">Uma representação da cadeia de caracteres de um ponto.</span><span class="sxs-lookup"><span data-stu-id="f86bd-207">A string representation of a point.</span></span></param>
        <summary><span data-ttu-id="f86bd-208">Constrói um <see cref="T:System.Windows.Point" /> do <see cref="T:System.String" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-208">Constructs a <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-209">A estrutura <see cref="T:System.Windows.Point" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="f86bd-209">The equivalent <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-210">O exemplo a seguir mostra como usar o <xref:System.Windows.Point.Parse%2A> método para converter um <xref:System.String> representação de um ponto em um <xref:System.Windows.Point> estrutura.</span><span class="sxs-lookup"><span data-stu-id="f86bd-210">The following example shows how to use the <xref:System.Windows.Point.Parse%2A> method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="f86bd-211"><paramref name="source" /> não é composto por dois valores duplos delimitados por vírgula ou espaço.</span><span class="sxs-lookup"><span data-stu-id="f86bd-211"><paramref name="source" /> is not composed of two comma- or space-delimited double values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f86bd-212"><paramref name="source" /> não contém dois números.</span><span class="sxs-lookup"><span data-stu-id="f86bd-212"><paramref name="source" /> does not contain two numbers.</span></span>  
  
<span data-ttu-id="f86bd-213">- ou -</span><span class="sxs-lookup"><span data-stu-id="f86bd-213">-or-</span></span> 
 <span data-ttu-id="f86bd-214"><paramref name="source" /> contém muitos delimitadores.</span><span class="sxs-lookup"><span data-stu-id="f86bd-214"><paramref name="source" /> contains too many delimiters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86bd-215">Subtrai o <see cref="T:System.Windows.Point" /> ou <see cref="T:System.Windows.Vector" /> especificado do <see cref="T:System.Windows.Point" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-215">Subtracts the specified <see cref="T:System.Windows.Point" /> or <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="f86bd-216">O ponto do qual <paramref name="point2" /> é subtraído.</span><span class="sxs-lookup"><span data-stu-id="f86bd-216">The point from which <paramref name="point2" /> is subtracted.</span></span></param>
        <param name="point2"><span data-ttu-id="f86bd-217">O ponto do qual subtrair <paramref name="point1" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-217">The point to subtract from <paramref name="point1" />.</span></span></param>
        <summary><span data-ttu-id="f86bd-218">Subtrai o <see cref="T:System.Windows.Point" /> especificado de outro <see cref="T:System.Windows.Point" /> especificado e retorna a diferença como um <see cref="T:System.Windows.Vector" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-218">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-219">A diferença entre <paramref name="point1" /> e <paramref name="point2" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-219">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-220">O exemplo a seguir mostra como subtrair um <xref:System.Windows.Point> de outro <xref:System.Windows.Point> usando o estático <xref:System.Windows.Point.Subtract%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f86bd-220">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="f86bd-221">O ponto do qual <paramref name="vector" /> é subtraído.</span><span class="sxs-lookup"><span data-stu-id="f86bd-221">The point from which <paramref name="vector" /> is subtracted.</span></span></param>
        <param name="vector"><span data-ttu-id="f86bd-222">O <paramref name="vector" /> a ser subtraído de <paramref name="point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-222">The <paramref name="vector" /> to subtract from <paramref name="point" />.</span></span></param>
        <summary><span data-ttu-id="f86bd-223">Subtrai o <see cref="T:System.Windows.Vector" /> especificado do <see cref="T:System.Windows.Point" /> especificado e retorna o <see cref="T:System.Windows.Point" /> resultante.</span><span class="sxs-lookup"><span data-stu-id="f86bd-223">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-224">A diferença entre <paramref name="point" /> e <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-224">The difference between <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-225">O exemplo a seguir mostra como subtrair um <xref:System.Windows.Vector> de um <xref:System.Windows.Point> usando o estático <xref:System.Windows.Point.Subtract%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f86bd-225">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="f86bd-226">A cadeia de caracteres que especifica o formato a ser usado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-226">The string specifying the format to use.</span></span>  
  
<span data-ttu-id="f86bd-227">- ou -</span><span class="sxs-lookup"><span data-stu-id="f86bd-227">-or-</span></span> 
 <span data-ttu-id="f86bd-228"><see langword="null" /> para usar o formato padrão definido para o tipo da implementação <see cref="T:System.IFormattable" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-228"><see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="f86bd-229">O <see langword="IFormatProvider" /> a ser usado para formatar o valor.</span><span class="sxs-lookup"><span data-stu-id="f86bd-229">The <see langword="IFormatProvider" /> to use to format the value.</span></span>  
  
<span data-ttu-id="f86bd-230">- ou -</span><span class="sxs-lookup"><span data-stu-id="f86bd-230">-or-</span></span> 
 <span data-ttu-id="f86bd-231"><see langword="null" /> para obter as informações de formato numérico da configuração de localidade atual do sistema operacional.</span><span class="sxs-lookup"><span data-stu-id="f86bd-231"><see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="f86bd-232">Este membro dá suporte à infraestrutura [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] e não se destina a ser usado diretamente do código.</span><span class="sxs-lookup"><span data-stu-id="f86bd-232">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="f86bd-233">Para obter uma descrição desse membro, consulte <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-233">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-234">Uma cadeia de caracteres que contém o valor da instância atual no formato especificado.</span><span class="sxs-lookup"><span data-stu-id="f86bd-234">A string containing the value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86bd-235">Cria uma representação <see cref="T:System.String" /> desta estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-235">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86bd-236">Cria uma representação de <see cref="T:System.String" /> deste <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-236">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-237">Uma <see cref="T:System.String" /> que contém os valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> desse estrutura de <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-237">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-238">O exemplo a seguir mostra como usar o <xref:System.Windows.Point.ToString%2A> método para obter uma <xref:System.String> representação de um <xref:System.Windows.Point> estrutura.</span><span class="sxs-lookup"><span data-stu-id="f86bd-238">The following example shows how to use the <xref:System.Windows.Point.ToString%2A> method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="f86bd-239">Informações de formatação específicas da cultura.</span><span class="sxs-lookup"><span data-stu-id="f86bd-239">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="f86bd-240">Cria uma representação de <see cref="T:System.String" /> deste <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-240">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="f86bd-241">Uma <see cref="T:System.String" /> que contém os valores <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> desse estrutura de <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-241">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86bd-242">Obtém ou define o valor da coordenada <see cref="P:System.Windows.Point.X" /> desta estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-242">Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
        <value><span data-ttu-id="f86bd-243">O valor da coordenada <see cref="P:System.Windows.Point.X" /> desta estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-243">The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span>  <span data-ttu-id="f86bd-244">O valor padrão é <c>0</c>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-244">The default value is <c>0</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-245">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas não são iguais.</span><span class="sxs-lookup"><span data-stu-id="f86bd-245">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="f86bd-246">Ele também ilustra como atribuir valores a um <xref:System.Windows.Point> estrutura quando a estrutura está sendo declarada e depois que a estrutura foi declarada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-246">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86bd-247">Obtém ou define o valor da coordenada <see cref="P:System.Windows.Point.Y" /> deste <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-247">Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <value><span data-ttu-id="f86bd-248">O valor da coordenada <see cref="P:System.Windows.Point.Y" /> desta estrutura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="f86bd-248">The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span>  <span data-ttu-id="f86bd-249">O valor padrão é <c>0</c>.</span><span class="sxs-lookup"><span data-stu-id="f86bd-249">The default value is <c>0</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f86bd-250">O exemplo a seguir mostra como verificar se dois <xref:System.Windows.Point> estruturas não são iguais.</span><span class="sxs-lookup"><span data-stu-id="f86bd-250">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="f86bd-251">Ele também ilustra como atribuir valores a um <xref:System.Windows.Point> estrutura quando a estrutura está sendo declarada e depois que a estrutura foi declarada.</span><span class="sxs-lookup"><span data-stu-id="f86bd-251">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>