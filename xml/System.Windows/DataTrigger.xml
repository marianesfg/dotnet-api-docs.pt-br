<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21fe456db341e92462a55b79faf2d31fbeb141e5" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39808129" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um gatilho que aplica valores de propriedade ou executa ações quando os dados associados atendem a uma condição especificada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, e <xref:System.Windows.DataTemplate> todas têm uma coleção de triggers. Um <xref:System.Windows.DataTrigger> permite que você defina valores de propriedade quando o valor da propriedade do objeto de dados corresponde a um especificado <xref:System.Windows.Condition.Value%2A>. Por exemplo, se você estiver exibindo uma lista dos `Employee` objetos, convém a cor de primeiro plano seja diferente com base em cada `Employee's` participação atual. (Por exemplo, `Employees` que estão atualmente em férias são exibidos com um primeiro plano roxo.) Em alguns cenários talvez seja mais adequado para criar um conversor de ou para usar um <xref:System.Windows.Controls.DataTemplateSelector>. Para obter mais informações, consulte o [visão geral de modelagem de dados](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Observe que você deve especificar ambos os <xref:System.Windows.DataTrigger.Binding%2A> e <xref:System.Windows.DataTrigger.Value%2A> propriedades em um <xref:System.Windows.DataTrigger> para o gatilho de dados ser significativo. Se uma ou ambas as propriedades não forem especificadas, uma exceção é lançada.  
  
 O <xref:System.Windows.DataTrigger.Setters%2A> propriedade de um <xref:System.Windows.DataTrigger> objeto pode conter apenas <xref:System.Windows.Setter> objetos. Adicionando um <xref:System.Windows.Setter> filho para uma <xref:System.Windows.DataTrigger> objeto adiciona implicitamente, para o <xref:System.Windows.SetterBaseCollection> para o <xref:System.Windows.DataTrigger> objeto. <xref:System.Windows.EventSetter> Não há suporte para objetos; somente <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> dá suporte a <xref:System.Windows.EventSetter> objetos.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> do <xref:System.Windows.Controls.ListBox> está associado a *casas*, um <xref:System.Collections.ObjectModel.ObservableCollection%601> de *lugar* objetos. *Coloque* objetos têm propriedades *nome* e *estado*.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> do <xref:System.Windows.Controls.ListBox> exibe uma *lugar* objeto. O <xref:System.Windows.Style> no exemplo é aplicada a cada <xref:System.Windows.Controls.ListBoxItem>.  
  
 O <xref:System.Windows.DataTrigger> for especificado, de modo que se o *estado* da *lugar* item de dados é "WA" e em seguida, o primeiro plano do correspondente <xref:System.Windows.Controls.ListBoxItem> é definido como vermelho.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 O exemplo a seguir mostra como usar um <xref:System.Windows.DataTrigger>, um <xref:System.Windows.Media.Animation.BeginStoryboard> ação e um <xref:System.Windows.Media.Animation.Storyboard> para animar uma propriedade quando os dados associados atendem a uma condição especificada. O exemplo exibe informações de inventário em um <xref:System.Windows.Controls.ListBox> controle. Ele usa um <xref:System.Windows.DataTrigger> animar o <xref:System.Windows.UIElement.Opacity%2A> de cada <xref:System.Windows.Controls.ListBoxItem> que contém um catálogo de indisponibilidade de estoque.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o vínculo que produz o valor da propriedade do objeto de dados.</summary>
        <value>O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O valor da propriedade produzido por essa associação é comparado com o valor especificado pela <xref:System.Windows.DataTrigger.Value%2A> propriedade. Se o valor é primeiro convertido para o tipo do valor da associação (se possível) e, em seguida, os dois valores são comparados usando o `Object.Equals` método. Se os dois valores forem iguais, as ações associadas ou setters são aplicadas.  
  
 Criar uma associação e usar o <xref:System.Windows.Data.Binding.Path%2A> propriedade à qual associar a uma propriedade de um determinado objeto (o objeto de origem da associação). Por exemplo, você pode ligar para o *prioridade* propriedade de uma *tarefa*. Para obter mais informações, consulte [Visão geral de vinculação de dados](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Observe que você deve especificar ambos os <xref:System.Windows.DataTrigger.Binding%2A> e <xref:System.Windows.DataTrigger.Value%2A> propriedades em um <xref:System.Windows.DataTrigger> para o gatilho de dados ser significativo. Se uma ou ambas as propriedades não forem definidas, uma exceção é lançada.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Uso do Atributo XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Uso do elemento propriedade XAML  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *declaration*  
 Zero ou mais cláusulas de atribuições de atributo separadas por vírgulas (,). Ver [extensão de marcação Binding](~/docs/framework/wpf/advanced/binding-markup-extension.md) para obter mais informações.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.DataTrigger> define o <xref:System.Windows.Controls.Border.BorderBrush%2A> do elemento denominado `border` à `Yellow` se o `TaskType` é de propriedade `TaskType.Home`.  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 Para obter uma discussão detalhada sobre este exemplo, consulte [visão geral de modelagem de dados](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">O objeto em que a extensão de marcação define o valor.</param>
        <param name="eventArgs">Dados que são relevantes para o processamento da extensão de marcação.</param>
        <summary>Lida com casos em que uma extensão de marcação fornece um valor para uma propriedade de um objeto <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse é o método referenciado por um aplicado <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> atributo no nível de classe, o que significa que este método processa todas as tentativas de definir valores de <xref:System.Windows.DataTrigger> com uma extensão de marcação. Você não geralmente chamar este método diretamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de objetos <see cref="T:System.Windows.Setter" />, que descrevem os valores de propriedade a aplicar quando o item de dados atender a condição especificada.</summary>
        <value>O valor padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Uso do elemento propriedade XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *ZeroOrMoreSetters*  
 Zero ou mais <xref:System.Windows.Setter> objetos.  
  
 Um <xref:System.Windows.DataTrigger> permite que você deseja iniciar ações ou usar <xref:System.Windows.Setter>s para aplicar a propriedade valores quando o item de dados atende a uma condição especificada.  
  
 Se houver mais de um setter, configurando a mesma propriedade no mesmo conjunto de setter, o setter que é declarado pela última vez é usado.  
  
 O <xref:System.Windows.DataTrigger.Setters%2A> propriedade de um <xref:System.Windows.DataTrigger> objeto pode conter apenas <xref:System.Windows.Setter> objetos. Adicionando um <xref:System.Windows.Setter> filho para uma <xref:System.Windows.DataTrigger> objeto adiciona implicitamente, para o <xref:System.Windows.SetterBaseCollection> para o <xref:System.Windows.DataTrigger> objeto. <xref:System.Windows.EventSetter> Não há suporte para objetos; somente <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> dá suporte a <xref:System.Windows.EventSetter> objetos.  
  
   
  
## Examples  
 O exemplo a seguir mostra duas <xref:System.Windows.DataTrigger> objetos que são definidos em um <xref:System.Windows.DataTemplate>. O <xref:System.Windows.DataTemplate> é aplicada ao *AuctionItem* objetos de dados (não mostrados neste exemplo), que tem a propriedade *SpecialFeatures*.  
  
 A primeira <xref:System.Windows.DataTrigger> for especificado, de modo que se o objeto de dados tem um *SpecialFeatures* valor de *cor*, em seguida, o item é exibido com um `DodgerBlue` em segundo plano com títulos azul-marinho. Se o objeto de dados tem um *SpecialFeatures* valor de *realçar*, em seguida, o segundo <xref:System.Windows.DataTrigger> estará ativa, fazendo com que o item a ser exibido com uma borda laranja com uma estrela.  
  
 Para o exemplo completo, consulte [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">O objeto filho a ser adicionado.</param>
        <summary>Adiciona um objeto filho.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataTrigger> é convertida em uma interface de <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">O texto a ser adicionado ao objeto.</param>
        <summary>Adiciona o conteúdo do texto de um nó ao objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Windows.DataTrigger> é convertida em uma interface de <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor a ser comparado com o valor da propriedade do objeto de dados.</summary>
        <value>O valor padrão é <see langword="null" />. Consulte também a seção Exceções.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Uso do elemento propriedade XAML  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 Esse valor é comparado com o valor da propriedade produzido pelo <xref:System.Windows.DataTrigger.Binding%2A> propriedade do <xref:System.Windows.DataTrigger>. A comparação é uma verificação de igualdade de referência. Se os dois valores forem iguais, as ações associadas ou setters são aplicadas.  
  
 Observe que você deve especificar ambos os <xref:System.Windows.DataTrigger.Binding%2A> e <xref:System.Windows.DataTrigger.Value%2A> propriedades em um <xref:System.Windows.DataTrigger> para o gatilho de dados ser significativo. Se uma ou ambas as propriedades não forem definidas, uma exceção será lançada.  
  
   
  
## Examples  
 No exemplo a seguir, o <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> do <xref:System.Windows.Controls.ListBox> está associado a *casas*, um <xref:System.Collections.ObjectModel.ObservableCollection%601> de *lugar* objetos. *Coloque* objetos têm propriedades *nome* e *estado*.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> do <xref:System.Windows.Controls.ListBox> exibe uma *lugar* objeto. O <xref:System.Windows.Style> no exemplo é aplicada a cada <xref:System.Windows.Controls.ListBoxItem>.  
  
 O <xref:System.Windows.DataTrigger> for especificado, de modo que se o *estado* da *lugar* item de dados é "WA" e em seguida, o primeiro plano do correspondente <xref:System.Windows.Controls.ListBoxItem> é definido como vermelho.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 O exemplo a seguir mostra duas <xref:System.Windows.DataTrigger>s que são definidos em um <xref:System.Windows.DataTemplate>. O <xref:System.Windows.DataTemplate> é aplicada ao *AuctionItem* objetos de dados (não mostrados neste exemplo), que tem a propriedade *SpecialFeatures*. Ver [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703) para um exemplo completo.  
  
 A primeira <xref:System.Windows.DataTrigger> for especificado, de modo que se o objeto de dados tem um *SpecialFeatures* valor de *cor*, em seguida, o item é exibido com um plano de fundo DodgerBlue com títulos azul-marinho. Se o objeto de dados tem um *SpecialFeatures* valor de *realçar*, em seguida, o segundo <xref:System.Windows.DataTrigger> estará ativa, fazendo com que o item a ser exibido com uma borda laranja com uma estrela.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Não há suporte para expressões. Não há suporte para associações.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>