<Type Name="FrameworkElementFactory" FullName="System.Windows.FrameworkElementFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebbe6dafca635c25841b3400261b18fa7bc06220" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549417" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FrameworkElementFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FrameworkElementFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkElementFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementFactory" />
  <TypeSignature Language="F#" Value="type FrameworkElementFactory = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dá suporte à criação de modelos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é uma maneira preterida para criar programaticamente os modelos, que são subclasses da <xref:System.Windows.FrameworkTemplate> , como <xref:System.Windows.Controls.ControlTemplate> ou <xref:System.Windows.DataTemplate>; nem todas as do modelo de funcionalidade está disponível quando você cria um modelo de uso dessa classe. A maneira recomendada para criar um modelo de forma programática é carregar [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] de uma cadeia de caracteres ou um fluxo de memória usando o <xref:System.Windows.Markup.XamlReader.Load%2A> método o <xref:System.Windows.Markup.XamlReader> classe.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.FrameworkElementFactory" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.FrameworkElementFactory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.FrameworkElementFactory : string -&gt; System.Windows.FrameworkElementFactory" Usage="new System.Windows.FrameworkElementFactory text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres de texto a ser produzida.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.FrameworkElementFactory" /> com o texto especificado a ser produzido.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.FrameworkElementFactory : Type -&gt; System.Windows.FrameworkElementFactory" Usage="new System.Windows.FrameworkElementFactory type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo de instância a ser criada.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.FrameworkElementFactory" /> com o <see cref="T:System.Type" /> especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.FrameworkElementFactory : Type * string -&gt; System.Windows.FrameworkElementFactory" Usage="new System.Windows.FrameworkElementFactory (type, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">O tipo de instância a ser criada.</param>
        <param name="name">O identificador de estilo.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.FrameworkElementFactory" /> com o <see cref="T:System.Type" /> e o nome especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um manipulador de eventos para o evento roteado fornecido para as instâncias criadas por essa fábrica.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="frameworkElementFactory.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">O objeto identificador para o evento roteado sendo manipulado.</param>
        <param name="handler">Uma referência à implementação do manipulador.</param>
        <summary>Adiciona um manipulador de eventos para o evento roteado fornecido para as instâncias criadas por essa fábrica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="frameworkElementFactory.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">O objeto identificador para o evento roteado sendo manipulado.</param>
        <param name="handler">Uma referência à implementação do manipulador.</param>
        <param name="handledEventsToo">Se deve-se ou não invocar o manipulador em casos nos quais o evento roteado já foi marcado como manipulado no respectivo objeto de argumentos. <see langword="true" /> para invocar o manipulador mesmo quando o evento roteado estiver marcado como manipulado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />. Não é comum pedir para manipular eventos roteados já manipulados.</param>
        <summary>Adiciona um manipulador de eventos para o evento roteado fornecido para as instâncias criadas por esta fábrica, com a opção de configurar o manipulador fornecido para ser invocado até mesmo em casos de eventos roteados que já foram marcados como manipulados por outro elemento na rota.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (System.Windows.FrameworkElementFactory child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class System.Windows.FrameworkElementFactory child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As FrameworkElementFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(System::Windows::FrameworkElementFactory ^ child);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : System.Windows.FrameworkElementFactory -&gt; unit" Usage="frameworkElementFactory.AppendChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.FrameworkElementFactory" />
      </Parameters>
      <Docs>
        <param name="child">O objeto <see cref="T:System.Windows.FrameworkElementFactory" /> a ser adicionado como um filho.</param>
        <summary>Adiciona uma fábrica filho a esta fábrica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ FirstChild { System::Windows::FrameworkElementFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Windows.FrameworkElementFactory" Usage="System.Windows.FrameworkElementFactory.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a primeira fábrica filho.</summary>
        <value>Um <see cref="T:System.Windows.FrameworkElementFactory" /> a primeira fábrica filho.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.FrameworkElementFactory.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se este objeto está em um estado imutável.</summary>
        <value>
          <see langword="true" /> Se esse objeto está em um estado imutável; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.FrameworkElementFactory.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome de um item de modelo.</summary>
        <value>Uma cadeia de caracteres que é o identificador do modelo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ NextSibling { System::Windows::FrameworkElementFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Windows.FrameworkElementFactory" Usage="System.Windows.FrameworkElementFactory.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a próxima fábrica irmã.</summary>
        <value>Um <see cref="T:System.Windows.FrameworkElementFactory" /> que é a próxima fábrica irmã.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ Parent { System::Windows::FrameworkElementFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.FrameworkElementFactory" Usage="System.Windows.FrameworkElementFactory.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o pai <see cref="T:System.Windows.FrameworkElementFactory" />.</summary>
        <value>Um <see cref="T:System.Windows.FrameworkElementFactory" /> que é a fábrica do pai.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="member this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="frameworkElementFactory.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">O objeto identificador para o evento roteado.</param>
        <param name="handler">O manipulador a ser removido.</param>
        <summary>Remove um manipulador de eventos do evento roteado fornecido. Isso se aplica às instâncias criadas por essa fábrica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public void SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBinding(class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBinding (dp As DependencyProperty, binding As BindingBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBinding(System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; unit" Usage="frameworkElementFactory.SetBinding (dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="dp">Identifica a propriedade em que a associação deve ser estabelecida.</param>
        <param name="binding">A descrição da associação.</param>
        <summary>Configura a associação de dados em uma propriedade.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceReference">
      <MemberSignature Language="C#" Value="public void SetResourceReference (System.Windows.DependencyProperty dp, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceReference(class System.Windows.DependencyProperty dp, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceReference (dp As DependencyProperty, name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceReference(System::Windows::DependencyProperty ^ dp, System::Object ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetResourceReference : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkElementFactory.SetResourceReference (dp, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">A propriedade à qual o recurso está associado.</param>
        <param name="name">O nome do recurso.</param>
        <summary>Configure uma referência de recurso dinâmico em uma propriedade filho.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkElementFactory.SetValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">O identificador da propriedade de dependência a ser definida.</param>
        <param name="value">O novo valor.</param>
        <summary>Define o valor da propriedade de dependência.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.FrameworkElementFactory.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cadeia de caracteres de texto a ser produzida.</summary>
        <value>A cadeia de caracteres de texto a ser produzida.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Windows.FrameworkElementFactory.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo dos objetos que esta fábrica produz.</summary>
        <value>O tipo dos objetos que esta fábrica produz.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>